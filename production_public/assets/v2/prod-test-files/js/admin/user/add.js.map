{"version":3,"file":"../../production_public/assets/v2/prod-test-files/js/admin/user/add.js","mappings":"cAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,GAC1B,CATD,CASGK,MAAM,K,0+BCQF,IAAMC,EAAN,cAAkC,KACvCC,cAAgBC,QAGR,KAAAC,gBAA0C,KAG1C,KAAAC,aAAwB,EAGxB,KAAAC,YAAuB,EAGvB,KAAAC,WAAqB,CAZJ,CAcnBC,oB,2HACJ,EAAMA,kBAAiB,YACvB,SAAWC,MAAK,IAAMC,KAAKH,WAAY,IACvC,MAAMI,GAAiB,UACvBD,KAAKN,gBAAsC,OAAnBO,EAA2B,KAAO,CAACA,GAE3DD,KAAKL,cAAe,UAAyBO,KAAKC,SAE5CH,KAAKI,qBACb,G,CAEAC,uBAAyB,CAOzBC,S,MACE,GAAIN,KAAKH,UAAW,CAClB,GAAiC,QAA7B,mBAA6B,eAAEU,gBAAgBC,QACjD,OAAO,IAAI,0DAEb,KAAK,OAA2B,CAACC,OAAQ,WAAkBC,SAAU,SAAS,GAC5E,OAAO,IAAI,qD,CAGf,OAAO,IAAI;mDACoCV,KAAKJ;KAEtD,CAEAe,eAAiB,CAEHP,sB,yCACZ,MAAMQ,QAAyB,OAAyC,KAAM,4BAA8BZ,KAAKL,cACjH,GAAyB,OAArBiB,GACEA,EAAiBC,SAASC,QAAS,CACrC,MAAMC,EAAQH,EAAiBC,SAASG,KACpCC,MAAMC,QAAQH,IAChBA,EAAMI,SAASH,IACbA,GAAO,OAAmBA,GAC1BI,QAAQC,IAAI,CAACL,SAETA,EAAKM,KAAKnB,KAAO,aAGnBH,KAAKJ,YAAa,E,IAM9B,G,CAEA2B,mBACE,OAAOvB,IACT,GA7CO,EAAAwB,OAAS,CACd,IAAG;;KAzBL,IAAC,QAAS,CAAEC,KAAMR,Q,8DAGlB,IAAC,QAAS,CAAEQ,KAAMC,S,4DAGlB,IAAC,QAAS,CAAED,KAAME,U,2DAGlB,IAAC,QAAS,CAAEF,KAAME,U,0DAZPpC,EAAmB,IAD/B,QAAc,2B,2BACFA,E","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/view/admin/user/add.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport './form';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from './page__id';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { ClientUserAccess_I, ClientUserAccess_S } from '@@addons/interfaces/clients/users/access';\r\nimport { GET_ClientUserAccess } from '@@addons/network/clients/users/access';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\n\r\n\r\n@customElement(\"pdb-admin-user-add-form\")\r\nexport class PdbAdminUserAddForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private loggedUserId?: number = 0;\r\n\r\n  @property({ type: Boolean })\r\n  private editAccess?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    \r\n    this.loggedUserId = getUserLoginInfoCookie().user.id;\r\n\r\n    await this.getLoggedUserAccess();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.create, viewType: \"Both\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <pdb-admin-user-form class=\"\" ?editAccess=\"${this.editAccess}\"></pdb-admin-user-form>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getLoggedUserAccess() {\r\n    const _networkResponse = await GET_ClientUserAccess<ClientUserAccess_I>(null, \"?logged_user_this&userId=\" + this.loggedUserId);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success) {\r\n        const datas = _networkResponse.response.data;\r\n        if (Array.isArray(datas)) {\r\n          datas.forEach((data: ClientUserAccess_I) => {\r\n            data = ClientUserAccess_S(data);\r\n            console.log({data});\r\n            \r\n            if (data.page.id === PAGE__IDS.create) {\r\n              // \"id\": 14,\r\n              // \"page\": \"Account Users\"\r\n              this.editAccess = true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","PdbAdminUserAddForm","constructor","super","_activeBranchId","loggedUserId","editAccess","_hasSetup","connectedCallback","then","this","activeBranchId","user","id","getLoggedUserAccess","disconnectedCallback","render","expiration_date","expired","pageId","viewType","firstUpdated","_networkResponse","response","success","datas","data","Array","isArray","forEach","console","log","page","createRenderRoot","styles","type","Number","Boolean"],"sourceRoot":""}