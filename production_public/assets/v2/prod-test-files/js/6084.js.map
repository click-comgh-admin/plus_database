{"version":3,"file":"../../production_public/assets/v2/prod-test-files/js/6084.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/clients/account_category/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/select.ts"],"sourcesContent":["// To parse this data:\n//\n//   import { Convert, ClientAccountCategoryModel } from \"./file\";\n//\n//   const clientAccountCategoryModel = Convert.toClientAccountCategoryModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientAccountCategoryModel {\n  id?: number;\n  clientID?: number;\n  category?: string;\n  createdBy?: number;\n  updatedBy?: number;\n  updateDate?: Date;\n  date?: Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  public static toClientAccountCategoryModel(json: string): ClientAccountCategoryModel {\n    return cast(JSON.parse(json), r(\"ClientAccountCategoryModel\"));\n  }\n\n  public static clientAccountCategoryModelToJson(value: ClientAccountCategoryModel): string {\n    return JSON.stringify(uncast(value, r(\"ClientAccountCategoryModel\")), null, 2);\n  }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n  if (key) {\n    // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n  }\n  // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`,);\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val, key);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) { }\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map(el => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n    return d;\n  }\n\n  function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach(key => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n    });\n    Object.getOwnPropertyNames(val).forEach(key => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps, key);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n  }\n  if (typ === false) return;\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\") ? transformArray(typ.arrayItems, val)\n        : typ.hasOwnProperty(\"props\") ? transformObject(getProps(typ), typ.additional, val)\n          : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\nfunction m(additional: any) {\n  // @ts-ignore\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nexport const typeMap: any = {\n  \"ClientAccountCategoryModel\": o([\n    { json: \"id\", js: \"id\", typ: u(null, 0) },\n    { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n    { json: \"category\", js: \"category\", typ: u(null, \"\") },\n    { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n    { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n    { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n    { json: \"date\", js: \"date\", typ: u(null, Date) },\n  ], false),\n};\n","import { SelectInputOptions_I, SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport * as $ from 'jquery'\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport 'select2';\r\nimport { ProcessedResult, QueryOptions, DataParams, Event } from 'select2';\r\nimport '../../../../assets/styles/views/widget/select_input/select_input.scss';\r\n\r\n\r\n@customElement('select-input')\r\nexport class SelectInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  public value: SelectInputOptions_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private randomID: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: String })\r\n  public input_id?: string = this.id + \"_\" + this.randomID;\r\n\r\n  @property({ type: Array })\r\n  public options?: { id: number, name: string, isSelected?: \"true\" | \"false\", selected: boolean }[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public required?: boolean;\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchToken?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchUrl?: string = null;\r\n\r\n  @property({attribute: false})\r\n  public currentValue: any | any[];\r\n\r\n  // @property({ type: Object })\r\n  // public ajaxHeader: object = {};\r\n\r\n  private _ajaxHeader: any = null;\r\n\r\n  public set ajaxHeader(value: any) {\r\n    this._ajaxHeader = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get ajaxHeader(): any {\r\n    return this._ajaxHeader;\r\n  }\r\n\r\n  @property({ type: Object })\r\n  public ajaxFetchProcessResponse?: (data: any, params: QueryOptions) => SelectInputProcessedAjaxResponse_I = null;\r\n\r\n  @property({ type: Array })\r\n  public ajaxFetchUrlParams?: SelectInputProcessedAjaxUrlParam_I[] = [];\r\n  \r\n  @property({ type: Number })\r\n  public startSearchPage?: number = 0\r\n\r\n  @property({ type: Boolean })\r\n  /** For multiple image selection */\r\n  public multiple?: boolean;\r\n\r\n  private selectSelector: NodeListOf<HTMLSelectElement>;\r\n  private $selectSelector: JQuery<HTMLSelectElement>;\r\n\r\n  @property({ type: Number })\r\n  public startNumber: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public rowsPerPage: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public totalShowing: number = 10;\r\n\r\n  @property({ type: Boolean })\r\n  private showSelectorLoaded?: boolean = false;\r\n\r\n  static styles = [\r\n    css`\r\n      .select2-container {\r\n        pointer-events: auto !important;\r\n      }\r\n    `\r\n  ];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();  \r\n    this.value = Array.isArray(this.value) ? this.value : [];\r\n\r\n    setInterval(() => {\r\n      if (this.selectSelector === undefined) {\r\n        // console.log({ \"this.selectSelector\": this.selectSelector });\r\n        // console.log({ \"this.input_id\": this.input_id, \"'select-input>select[input_id='+ this.input_id +']\": 'select-input>select[input_id='+ this.input_id +']' });\r\n        this.selectSelector = document.querySelectorAll('select-input>select[input_id='+ this.input_id +']');\r\n        // console.log({\"this.selectSelector\": this.selectSelector});\r\n        \r\n        this.$selectSelector = $(this.selectSelector)\r\n        // console.log({\"this.$selectSelector\": this.$selectSelector});\r\n      } else {\r\n        this.showDropdownAlt();\r\n      }\r\n    });\r\n\r\n    this.options = this.options.map((option) => {\r\n      const optionId = option.id;\r\n      let isSelected = false;\r\n\r\n      // console.log({\"this.value\": this.value});\r\n\r\n      this.value.forEach((val) => {\r\n        const valId = val.id;\r\n\r\n        isSelected = optionId === valId;\r\n      });\r\n      option.selected = isSelected;\r\n      return option;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log({\"this.options\": this.options});\r\n    \r\n    if (this.multiple) {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple required>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    } else {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\" required>\r\n            ${this.options.map(option => {\r\n              \r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                // console.log(\"option_option-option_option - \" + this.label + \" :\", {option});\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\">\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    // this.showDropdown();\r\n  }\r\n\r\n  formatRepo(repo: { loading: boolean; text: string; id: string; }) {\r\n    // console.log({ \"smbfl-repo\": repo });\r\n    if (repo.loading) {\r\n      return repo.text;\r\n    }\r\n\r\n    // console.log({ \"this.value\": this.value });\r\n    var $container = $(\r\n      this.value.map((val) => {\r\n        const _selected = Number(repo.id) === val.id,\r\n          selected = _selected ? \"selected='true'\" : \"\";\r\n        // console.log({ _selected, selected });\r\n\r\n        return '<option value=\"' + repo.id + '\" ' + selected + '>' + repo.text + '</option>'\r\n      })\r\n    );\r\n    return $container;\r\n  }\r\n\r\n  formatRepoSelection(repo: { full_name: string; text: string; }) {\r\n    return repo.full_name || repo.text;\r\n  }\r\n\r\n  _start(params: any, totalShowing: number) {\r\n    const _this = this;\r\n    // console.log({ _this });\r\n\r\n    // _this.totalShowing = 10;\r\n\r\n    this.startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n    this.startSearchPage = this.startSearchPage === 0 ? this.startSearchPage : this.startSearchPage * totalShowing;\r\n    $('.select2-search__field').on('keyup', function ($this) {\r\n      $(_this.selectSelector).empty();\r\n      _this.startSearchPage = 0\r\n      // _this.totalShowing = 10;\r\n      // console.log({ _this });\r\n    });\r\n\r\n    return _this.startSearchPage;\r\n  }\r\n\r\n  private showDropdownAlt() {\r\n    const _this = this;\r\n    let totalShowing = this.totalShowing,\r\n      startSearchPage = this.startSearchPage;\r\n\r\n      function _start(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n        startSearchPage = startSearchPage === 0 ? startSearchPage : startSearchPage * totalShowing;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n      function _page(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        let startSearchPage = isNaN(params.page) ? 1 : params.page + 1;\r\n        startSearchPage = startSearchPage === 0? 1 : startSearchPage;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n    if (this.showSelectorLoaded === false) {\r\n      this.showSelectorLoaded = true;\r\n      if (this.ajaxFetchUrl === null) {\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-1\": selectSelector})\r\n          $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            // @ts-ignore\r\n            placeholder: this.label,\r\n          });\r\n          $(selectSelector).on('select2:select', (e) => {\r\n            this.changeAction(e)\r\n          })\r\n        });\r\n      } else {\r\n        let _headers = {\r\n          \"Access-Control-Allow-Origin\": \"*/*\",\r\n          \"Accept\": \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        };\r\n        // console.log({\"this.ajaxHeader\": this.ajaxHeader})\r\n        \r\n        for (const header in this.ajaxHeader) {\r\n          // console.log({header})\r\n          // @ts-ignore\r\n          _headers[header] = this.ajaxHeader[header];\r\n        }\r\n\r\n        // console.log({ _headers });\r\n        // console.log({\"this.selectSelector\": this.selectSelector})\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-2\": selectSelector})\r\n          const S2: JQuery<HTMLSelectElement> = $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            ajax: {\r\n              url: _this.ajaxFetchUrl,\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params: { term: any; }) {\r\n                const start = _start(params, S2);\r\n                const page = _page(params, S2);\r\n                // let page = start / 10;\r\n                // page = page === 0 ? 1 : page;\r\n                let finalParams: any = {\r\n                  \"search\": params.term, // search term\r\n                  \"start\": start,\r\n                  \"page\": page,\r\n                };\r\n\r\n                _this.ajaxFetchUrlParams.forEach((param) => {\r\n                  finalParams[param.param] = param.value;\r\n                });\r\n                // console.log({finalParams});\r\n                return finalParams;\r\n              },\r\n              headers: _headers,\r\n              processResults: (data: any, params: any) => {\r\n                // return _this.ajaxFetchProcessResponse(data, params);\r\n                const processedResponse = this.ajaxFetchProcessResponse === null\r\n                  ? this._processResults(data, params)\r\n                  : this.ajaxFetchProcessResponse(data, params);\r\n\r\n                // console.log({ \"totalShowing-1\": totalShowing });\r\n                totalShowing += processedResponse.results.length;\r\n                // console.log({ \"totalShowing-2\": totalShowing });\r\n\r\n                return {\r\n                  results: processedResponse.results,\r\n                  pagination: {\r\n                    // @ts-ignore\r\n                    more: totalShowing < processedResponse.total\r\n                  }\r\n                };\r\n              },\r\n              cache: true\r\n            },\r\n            placeholder: this.label,\r\n          });\r\n          S2.on('select2:opening', (e) => {\r\n            // console.log({ e });\r\n            startSearchPage = 0\r\n            totalShowing = 0;\r\n          });\r\n        });\r\n      }\r\n\r\n      const SELECT2s = this.querySelectorAll('.select2-container');\r\n      // console.log({SELECT2s})\r\n      SELECT2s.forEach(SELECT2 => {\r\n        SELECT2.setAttribute('style', 'width: 100% !important; pointer-events: auto !important;');\r\n      });\r\n    }\r\n  }\r\n\r\n  private _processResults(data: any, params: any): SelectInputProcessedAjaxResponse_I {\r\n    const response = data;\r\n    params.page = params.page || 0;\r\n    // console.log({ \"smbfl-response\": response, \"check\": response.error === false });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (response.error === false) {\r\n      var _data = response['data'];\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['fullName'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n          // $($select).append($('<option>', { fullName: id }).text(fullName));\r\n        }\r\n      }\r\n    }\r\n    this.totalShowing += processedData.length;\r\n    return {\r\n      results: processedData,\r\n      total: response.total,\r\n      totalShowing: this.totalShowing\r\n    };\r\n  }\r\n\r\n  // @ts-ignore\r\n  private changeAction(changeActionEvent: Event<HTMLSelectElement, DataParams>) {\r\n    // // console.log({ changeActionEvent });\r\n    // // @ts-ignore\r\n    // const selectedOptions = changeActionEvent.target.selectedOptions;\r\n    // let currentValue: number[] = [];\r\n    // for (const iterator of selectedOptions) {\r\n    //   let selectedOption: HTMLOptionElement = iterator;\r\n    //   // console.log({ iterator, selectedOption });\r\n    //   const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n    //   if (!currentValue.includes(value)) {\r\n    //     currentValue.push(value);\r\n    //   }\r\n    // }\r\n    // this.currentValue = currentValue;\r\n    // // console.log({'this.querySelector(`[input_id=\"${this.input_id}\"]`)': this.querySelector(`[input_id=\"${this.input_id}\"]`)})\r\n    // @ts-ignore\r\n    const selectedOptions2 = this.querySelector(`[input_id=\"${this.input_id}\"]`).selectedOptions;\r\n    let currentValue2: number[] = [];\r\n    for (const iterator of selectedOptions2) {\r\n      let selectedOption: HTMLOptionElement = iterator;\r\n      // console.log({ iterator, selectedOption });\r\n      const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n      if (!currentValue2.includes(value)) {\r\n        currentValue2.push(value);\r\n      }\r\n    }\r\n    // console.log({ currentValue, currentValue2 });\r\n    this.currentValue = currentValue2;\r\n    // @ts-ignore\r\n    this.querySelector(`[input_id=\"${this.input_id}\"]`).setAttribute(\"currentValue\", currentValue2)\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","typ","undefined","jsonToJS","map","props","forEach","p","key","js","jsToJSON","val","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","SelectInput","label","randomID","Math","floor","random","input_id","this","id","options","ajaxFetchToken","ajaxFetchUrl","_ajaxHeader","ajaxFetchProcessResponse","ajaxFetchUrlParams","startSearchPage","startNumber","rowsPerPage","totalShowing","showSelectorLoaded","ajaxHeader","requestUpdate","connectedCallback","super","setInterval","selectSelector","document","querySelectorAll","$selectSelector","showDropdownAlt","option","optionId","isSelected","valId","selected","render","multiple","required","firstUpdated","formatRepo","repo","loading","text","Number","formatRepoSelection","full_name","_start","params","_this","page","on","$this","empty","select2","closeOnSelect","placeholder","e","changeAction","_headers","header","ajax","url","dataType","delay","data","start","S2","_page","finalParams","term","param","headers","processResults","processedResponse","_processResults","results","pagination","more","total","cache","SELECT2","setAttribute","response","processedData","error","_data","item","_new","includes","push","changeActionEvent","selectedOptions2","querySelector","selectedOptions","currentValue2","iterator","selectedOption","currentValue","createRenderRoot","styles","type","String","Boolean","attribute"],"sourceRoot":""}