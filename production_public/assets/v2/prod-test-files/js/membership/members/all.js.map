{"version":3,"file":"../../production_public/assets/v2/prod-test-files/js/membership/members/all.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/delete.ts","webpack://webpackNumbers/./src/addons/network/members/status/education/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/marital/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/occupation/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/profession/index.ts","webpack://webpackNumbers/./src/addons/widgets/accordion/item.ts","webpack://webpackNumbers/./src/addons/widgets/accordion/main.ts","webpack://webpackNumbers/./src/view/membership/members/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/download.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/delete_bulk.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_MembershipUsers(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Member?',\r\n    text: \"Member will be permanently deleted from your member list!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_EducationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/education'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MaritalStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/marital'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_OccupationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/occupation'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ProfessionStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/profession'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"app-accordion-item\")\r\nexport class AppAccordionItem extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public accordion_class_name: string = \"-\";\r\n\r\n  @property({ type: String })\r\n  public buttonHtml = html``;\r\n  \r\n  @property({ type: String })\r\n  public contentHtml = html``;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"this.buttonHtml\": this.buttonHtml});\r\n    // console.log({\"this.contentHtml\": this.contentHtml});\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <button type=\"button\" class=\"app-accordion app-accordion-button app-accordion-${this.accordion_class_name}\">\r\n        <div class=\"flex justify-between\">${this.buttonHtml} <span style=\"transform: rotate(180deg);\">^</span></div>\r\n      </button>\r\n      <div class=\"app-accordion-panel\">${this.contentHtml}</div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/tailwind-output/accordion.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport './item';\r\n// import { AppAccordionItem } from './item';\r\n\r\n\r\n@customElement(\"app-accordion\")\r\nexport class Appaccordion extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public accordionName: string = \"app-accordion\";\r\n\r\n  @property({ type: Array })\r\n  public contents: Array<TemplateResult> = [];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    \r\n    // console.log({\"this.contents\": this.contents});\r\n    \r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`<div class=\"my-2 w-100\">\r\n      ${this.contents.map((content) => {\r\n        // console.log({\"content.content\": content})\r\n        return html`${content}`;\r\n      })}\r\n    </div>`;\r\n  }\r\n\r\n  firstUpdated() {\r\n    setTimeout(() => {\r\n      if (document.readyState == \"complete\") this.toggler();\r\n    }, 3000);\r\n  }\r\n\r\n  toggler() {\r\n    // console.log({\"`app-accordion-${this.accordionName}`\": `app-accordion-${this.accordionName}`});\r\n    \r\n    var acc = document.getElementsByClassName(`app-accordion-${this.accordionName}`);\r\n    // console.log({acc});\r\n    \r\n    var i;\r\n\r\n    for (i = 0; i < acc.length; i++) {\r\n      acc[i].addEventListener(\"click\", function () {        \r\n        this.classList.toggle(\"app-accordion-active\");\r\n        var panel = this.nextElementSibling;\r\n        console.log({\"this.classList\": this.classList, panel});\r\n        if (panel.style.maxHeight) {\r\n          panel.style.maxHeight = null;\r\n        } else {\r\n          // panel.style.maxHeight = panel.scrollHeight + \"px\";\r\n          panel.style.maxHeight = \"100%\";\r\n        }\r\n        // if (panel.style.display === \"block\") {\r\n        //   panel.style.display = \"none\";\r\n        // } else {\r\n        //   panel.style.display = \"block\";\r\n        // }\r\n      });\r\n    }\r\n  }\r\n\r\n  get items() {\r\n    \r\n    return html``;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/branch/main.scss';\r\nimport \"@@assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/select';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallPaginResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport './select-member-type';\r\nimport '../../no_access/account_expired';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport '../../no_access/no_page_entry';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from './page__id';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { GroupModel, Convert as gmConvert } from '@@addons/interfaces/members/groupings/group/models';\r\nimport { SubGroupModel, Convert as sgmConvert } from '@@addons/interfaces/members/groupings/subgroup/models';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport { EducationStatusModel, Convert as esmConvert } from '@@addons/interfaces/members/user/status/education_status';\r\nimport { MaritalStatusModel, Convert as msmConvert } from '@@addons/interfaces/members/user/status/marital_status';\r\nimport { OccupationStatusModel, Convert as osmConvert } from '@@addons/interfaces/members/user/status/occupation_status';\r\nimport { ProfessionStatusModel, Convert as psmConvert } from '@@addons/interfaces/members/user/status/profession_status';\r\nimport { GET_EducationStatus } from '@@addons/network/members/status/education';\r\nimport { GET_MaritalStatus } from '@@addons/network/members/status/marital';\r\nimport { GET_OccupationStatus } from '@@addons/network/members/status/occupation';\r\nimport { GET_ProfessionStatus } from '@@addons/network/members/status/profession';\r\nimport { GET_MembershipUserDownload } from '@@addons/network/members/membership/users/download';\r\nimport \"@@addons/widgets/accordion/main\";\r\nimport \"@@addons/widgets/accordion/component/item\";\r\nimport \"@@addons/widgets/accordion/component/main\";\r\nimport { LocationCountryModel, Convert as lcmConvert } from \"@@addons/interfaces/location/country_model\";\r\nimport { LocationRegionModel, Convert as lrmConvert } from \"@@addons/interfaces/location/region_model\";\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from \"@@addons/interfaces/location/constituency_model\";\r\nimport { LocationDistrictModel, Convert as ldmConvert } from \"@@addons/interfaces/location/district_model\";\r\nimport { GET_LocationCountry } from \"@@addons/network/location/country\";\r\nimport { GET_LocationRegion } from \"@@addons/network/location/region\";\r\nimport { GET_LocationDistrictFilter } from \"@@addons/network/location/district/filter\";\r\nimport { GET_LocationConstituencyFilter } from \"@@addons/network/location/constituency/filter\";\r\nimport { DELETE_MembershipUsersBulk } from '@@addons/network/members/membership/users/delete_bulk';\r\nimport { DELETE_MembershipUsers } from '@@addons/network/members/membership/users/delete';\r\n\r\n\r\ntype filterSelectType = { id: number|\"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-members\")\r\nexport class PdbMembershipMembers extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  // @property({ type: String })\r\n  // private memberProfileEditBaseUrl: string = \"/member/update-profile?edit=\";\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: SubGroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public maritalStatusInfo: MaritalStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public occupationStatusInfo: OccupationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public professionStatusInfo: ProfessionStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public educationStatusInfo: EducationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private _constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private _districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n  @property({ type: Boolean })\r\n  private downloadingFile: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  private __members: NetworkCallPaginResponse_I<MembershipMixedUserModel> = null;\r\n\r\n  public set _members(value: NetworkCallPaginResponse_I<MembershipMixedUserModel>) {\r\n    this.__members = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _members(): NetworkCallPaginResponse_I<MembershipMixedUserModel> {\r\n    return this.__members;\r\n  }\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => {\r\n      if (this._hasSetup !== null) {\r\n        return this._hasSetup = true;\r\n      }\r\n    });\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getGenders();\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n    await this.getMaritalStatus();\r\n    await this.getEducationStatus();\r\n    await this.getOccupationStatus();\r\n    await this.getProfessionStatus();\r\n    await this.getLocationCountry();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.view, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    \r\n    \r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        ${this.downloadBtns}\r\n        ${this.table_header}\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get table_header() {\r\n    return html`\r\n      <div class=\"flex-col p-2 mb-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4 pb-5\">\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <label class=\"flex justify-between items-center\">\r\n            <b>CHECK ALL: </b>\r\n            <input id=\"member_deletion_info_all\" name=\"member_deletion_info_all\" type=\"checkbox\"\r\n              class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n              @change=\"${this.check_all_member_deletion}\" />\r\n          </label>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"danger\" raised member_deletion_info_all=\"delete\"\r\n            @click=\"${this.deleteMultipleMemberAction}\">Delete All Selected</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n    document.onreadystatechange = (event)=> {\r\n      // console.log({ \"document.readyState\": document.readyState })\r\n      if (document.readyState == \"complete\") this.countryChanged(event);\r\n      if (document.readyState == \"complete\") this.regionChanged(event);\r\n      if (document.readyState == \"complete\") this.districtChanged(event);\r\n      if (document.readyState == \"complete\") this.constituencyChanged(event);\r\n    }  \r\n  }\r\n\r\n  private get downloadBtns() {\r\n    return html`\r\n      <div class=\"flex mb-4\">\r\n        <mwc-button icon=\"download\" class=\"success mr-2\" \r\n          label=\"Download Excel File\" raised @click=\"${this.downloadMemberExcel}\">\r\n        </mwc-button> \r\n        ${this.downloadingFile? html`<mwc-circular-progress indeterminate></mwc-circular-progress>`: nothing}\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\",\r\n      filterNameId_maritalStatus = \"maritalStatus\",\r\n      filterNameId_occupationalStatus = \"occupationalStatus\",\r\n      filterNameId_educationalStatus = \"educationalStatus\",\r\n      filterNameId_professionStatus = \"professionStatus\",\r\n      filterNameId_filter_from_age = \"fromAge\",\r\n      filterNameId_filter_to_age = \"toAge\",\r\n      filterNameId_country = \"filter_country\",\r\n      filterNameId_region = \"filter_region\",\r\n      filterNameId_district = \"filter_district\",\r\n      filterNameId_constituency = \"filter_constituency\";\r\n\r\n    let filterNameId_filter_genderVal: string = null,\r\n      filterNameId_filter_nameVal:string = null,\r\n      filterNameId_filter_identityVal: string = null,\r\n      filterNameId_memberTypeVal: string = null,\r\n      filterNameId_groupIdVal: string = null,\r\n      filterNameId_subgroupIdVal: string = null,\r\n      filterNameId_maritalStatusVal: string = null,\r\n      filterNameId_occupationalStatusVal: string = null,\r\n      filterNameId_educationalStatusVal: string = null,\r\n      filterNameId_professionStatusVal: string = null,\r\n      filterNameId_filter_from_ageVal: number = null,\r\n      filterNameId_filter_to_ageVal: number = null,\r\n      filterNameId_countryVal: number = null,\r\n      filterNameId_regionVal: number = null,\r\n      filterNameId_districtVal: number = null,\r\n      filterNameId_constituencyVal: number = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_filter_gender) {\r\n          filterNameId_filter_genderVal = value;\r\n        }\r\n        if (key === filterNameId_filter_name) {\r\n          filterNameId_filter_nameVal = value;\r\n        }\r\n        if (key === filterNameId_filter_identity) {\r\n          filterNameId_filter_identityVal = value;\r\n        }\r\n        if (key === filterNameId_memberType) {\r\n          filterNameId_memberTypeVal = value;\r\n        }\r\n        if (key === filterNameId_groupId) {\r\n          filterNameId_groupIdVal = value;\r\n        }\r\n        if (key === filterNameId_subgroupId) {\r\n          filterNameId_subgroupIdVal = value;\r\n        }\r\n        if (key === filterNameId_maritalStatus) {\r\n          filterNameId_maritalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_occupationalStatus) {\r\n          filterNameId_occupationalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_educationalStatus) {\r\n          filterNameId_educationalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_professionStatus) {\r\n          filterNameId_professionStatusVal = value;\r\n        }\r\n        if (key === filterNameId_filter_from_age) {\r\n          filterNameId_filter_from_ageVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_to_age) {\r\n          filterNameId_filter_to_ageVal = Number(value);\r\n        }\r\n        if (key === filterNameId_country) {\r\n          filterNameId_countryVal = Number(value);\r\n        }\r\n        if (key === filterNameId_region) {\r\n          filterNameId_regionVal = Number(value);\r\n        }\r\n        if (key === filterNameId_district) {\r\n          filterNameId_districtVal = Number(value);\r\n        }\r\n        if (key === filterNameId_constituency) {\r\n          filterNameId_constituencyVal = Number(value);\r\n        }\r\n      }\r\n    \r\n    const nameField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Name</h4>\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_name}\" id=\"${filterNameId_filter_name}\" label=\"Search By Name\" \r\n            value=\"${filterNameId_filter_nameVal === null ? \"\" : filterNameId_filter_nameVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const genderField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n          <mwc-select name=\"${filterNameId_filter_gender}\" id=\"${filterNameId_filter_gender}\" label=\"Select Gender\" outlined required>\r\n            ${this._genders.map((item) => {\r\n              // console.log({item});\r\n              if (filterNameId_filter_genderVal === null) {\r\n                return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_genderVal) === item.id) {\r\n                  return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const ageField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Filter Age In Years</h4>\r\n          <div class=\"flex\">\r\n            <mwc-textfield type=\"number\" min=\"0\" name=\"${filterNameId_filter_from_age}\" id=\"${filterNameId_filter_from_age}\" label=\"Pick From Age\" \r\n              value=\"${filterNameId_filter_from_ageVal === null ? \"\" : filterNameId_filter_from_ageVal}\" class=\"mr-1\" outlined required>\r\n            </mwc-textfield>\r\n            <mwc-textfield type=\"number\" min=\"0\" name=\"${filterNameId_filter_to_age}\" id=\"${filterNameId_filter_to_age}\" label=\"Pick To Age\" \r\n              value=\"${filterNameId_filter_to_ageVal === null ? \"\" : filterNameId_filter_to_ageVal}\" class=\"ml-1\" outlined required>\r\n            </mwc-textfield>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const identifyField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Member ID</h4>\r\n          <mwc-textfield name=\"${filterNameId_filter_identity}\" id=\"${filterNameId_filter_identity}\" label=\"Search By Member ID\"\r\n            value=\"${filterNameId_filter_identityVal === null ? \"\" : filterNameId_filter_identityVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_memberTypeVal}\" \r\n            name=\"${filterNameId_memberType}\" id=\"${filterNameId_memberType}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n\r\n    const selectedGroupID = Number.isNaN(filterNameId_groupIdVal) ? 0 : Number(filterNameId_groupIdVal),\r\n      selectedSubGroupID = Number.isNaN(filterNameId_subgroupIdVal) ? 0 : Number(filterNameId_subgroupIdVal);\r\n    const groupsSubgroups = this.groupsSubgroups(selectedGroupID, selectedSubGroupID);\r\n    // console.log({groupsSubgroups});\r\n    \r\n    \r\n    const groupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <select-input name=\"groupId\" class=\"w-full\" id=\"groupId\" label=\"Select Group\"\r\n            .options=\"${groupsSubgroups.groups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const subGroupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Group</h4>\r\n          <select-input name=\"subgroupId\" class=\"w-full\" id=\"subgroupId\" label=\"Select Sub-Group\"\r\n            .options=\"${groupsSubgroups.subgroups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const selectedMaritalStatusID = Number.isNaN(filterNameId_maritalStatusVal) ? 0 : Number(filterNameId_maritalStatusVal),\r\n      selectedOccupationalStatusID = Number.isNaN(filterNameId_occupationalStatusVal) ? 0 : Number(filterNameId_occupationalStatusVal),\r\n      selectedEducationalStatusID = Number.isNaN(filterNameId_educationalStatusVal) ? 0 : Number(filterNameId_educationalStatusVal),\r\n      selectedProfessionStatusID = Number.isNaN(filterNameId_professionStatusVal) ? 0 : Number(filterNameId_professionStatusVal);\r\n    \r\n    const MOPES = this.maritalOccupationalProfessionEducationalStatus(\r\n      selectedMaritalStatusID, selectedOccupationalStatusID, selectedEducationalStatusID, selectedProfessionStatusID\r\n    );\r\n    // console.log({MOPES});\r\n    \r\n    \r\n    const maritalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Marital Status</h4>\r\n          <select-input name=\"maritalStatus\" class=\"w-full\" id=\"maritalStatus\" label=\"Select Marital Status\"\r\n            .options=\"${MOPES.maritalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const occupationalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Occupational Status</h4>\r\n          <select-input name=\"occupationalStatus\" class=\"w-full\" id=\"occupationalStatus\" label=\"Select Occupational Status\"\r\n            .options=\"${MOPES.occupationalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const educationalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Educational Status</h4>\r\n          <select-input name=\"educationalStatus\" class=\"w-full\" id=\"educationalStatus\" label=\"Select Educational Status\"\r\n            .options=\"${MOPES.educationalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const professionField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Profession Status</h4>\r\n          <select-input name=\"professionStatus\" class=\"w-full\" id=\"professionStatus\" label=\"Select Profession Status\"\r\n            .options=\"${MOPES.professionStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    \r\n    const countries: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._countries.map((country) => {\r\n      return {\r\n        id: country.id, name: country.name,\r\n        isSelected: filterNameId_countryVal == country.id ? \"true\" : \"false\",\r\n        selected: filterNameId_countryVal == country.id,\r\n      }\r\n    });\r\n    const regions: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._regions.map((region) => {\r\n      return {\r\n        id: region.id, name: region.location,\r\n        isSelected: filterNameId_regionVal == region.id ? \"true\" : \"false\",\r\n        selected: filterNameId_regionVal == region.id,\r\n      }\r\n    });\r\n    const districts: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._districts.map((district) => {\r\n      return {\r\n        id: district.id, name: district.location,\r\n        isSelected: filterNameId_districtVal == district.id ? \"true\" : \"false\",\r\n        selected: filterNameId_districtVal == district.id,\r\n      }\r\n    });\r\n    const constituencies: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._constituencies.map((constituency) => {\r\n      return {\r\n        id: constituency.id, name: constituency.location,\r\n        isSelected: filterNameId_constituencyVal == constituency.id ? \"true\" : \"false\",\r\n        selected: filterNameId_constituencyVal == constituency.id,\r\n      }\r\n    });\r\n\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${nameField} ${identifyField} ${genderField} ${ageField} ${memberCategoryField}\r\n              <div class=\"col-xl-12 col-md-10\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"container\">\r\n            <accordion-component class=\"my-2\">\r\n              <accordion-item title=\"Location Filter\">\r\n                <div class=\"mt-1 mb-2 row\">\r\n                  <div class=\"col-xl-6 col-md-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n                    <select-input name=\"${filterNameId_country}\" id=\"${filterNameId_country}\" label=\"Select Country\" .options=\"${countries}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-xl-6 col-md-6\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n                    <select-input name=\"${filterNameId_region}\" id=\"${filterNameId_region}\" label=\"Select Region\" .options=\"${regions}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-xl-6 col-md-6\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select District</h4>\r\n                    <select-input name=\"${filterNameId_district}\" id=\"${filterNameId_district}\" label=\"Select District\" .options=\"${districts}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-xl-6 col-md-6\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n                    <select-input name=\"${filterNameId_constituency}\" id=\"${filterNameId_constituency}\" label=\"Select Constituency\" .options=\"${constituencies}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                </div>\r\n              </accordion-item>\r\n              <accordion-item title=\"Group Filter\">\r\n                <div class=\"mt-1 mb-2 row\">\r\n                  ${groupField} ${subGroupField}\r\n                </div>\r\n              </accordion-item>\r\n              <accordion-item title=\"Status Filter\">\r\n                <div class=\"mt-1 mb-2 row\">\r\n                  ${maritalStatusField} ${occupationalStatusField} ${educationalStatusField} ${professionField}\r\n                </div>\r\n              </accordion-item>\r\n            </accordion-component>\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private groupsSubgroups(selectedGroupID: number, selectedSubGroupID: number) {\r\n    type returnType = { groups: filterSelectType[], subgroups: filterSelectType[] };\r\n    let groups: filterSelectType[] = [{id: 0, name: \"Select Group Status\", isSelected: \"false\", selected: false}];\r\n    let subgroups: filterSelectType[] = [{id: 0, name: \"Select Sub-Group Status\", isSelected: \"false\", selected: false}];\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    \r\n\r\n    this._groups.forEach(_group => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedGroupID === _group.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const group: filterSelectType = {\r\n        id: _group.id, name: _group.group, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!groups.includes(group)) {\r\n        groups.push(group);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._subgroups\": this._subgroups})\r\n    this._subgroups.forEach(_subgroup => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedSubGroupID === _subgroup.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const subgroup: filterSelectType = {\r\n        id: _subgroup.id, name: `${_subgroup.groupID.group} => ${_subgroup.subgroup}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!subgroups.includes(subgroup)) {\r\n        subgroups.push(subgroup);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    // console.log({\"groups-groups\": groups, \"subgroups-subgroups\": subgroups});\r\n\r\n    const _returnType: returnType = {\r\n      groups: groups, subgroups: subgroups,\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private maritalOccupationalProfessionEducationalStatus(selectedMaritalStatusID: number, selectedOccupationalStatusID: number, selectedEducationalStatusID: number, selectedProfessionStatusID: number, ) {\r\n    type returnType = { maritalStatuses: filterSelectType[], occupationalStatuses: filterSelectType[], educationalStatuses: filterSelectType[], professionStatuses: filterSelectType[] };\r\n    let maritalStatuses: filterSelectType[] = [{id: 0, name: \"Select Marital Status\", isSelected: \"false\", selected: false}];\r\n    let professionStatuses: filterSelectType[] = [{id: 0, name: \"Select Profession Status\", isSelected: \"false\", selected: false}];\r\n    let educationalStatuses: filterSelectType[] = [{id: 0, name: \"Select Education Status\", isSelected: \"false\", selected: false}];\r\n    let occupationalStatuses: filterSelectType[] = [{id: 0, name: \"Select Occupation Status\", isSelected: \"false\", selected: false}];    \r\n\r\n    this.maritalStatusInfo.forEach(_maritalStatus => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedMaritalStatusID === _maritalStatus.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const maritalStatus: filterSelectType = {\r\n        id: _maritalStatus.id, name: _maritalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!maritalStatuses.includes(maritalStatus)) {\r\n        maritalStatuses.push(maritalStatus);\r\n      }\r\n    });\r\n\r\n    this.professionStatusInfo.forEach(_professionStatus => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedProfessionStatusID === _professionStatus.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const professionStatus: filterSelectType = {\r\n        id: _professionStatus.id, name: _professionStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n  \r\n      if (!professionStatuses.includes(professionStatus)) {\r\n        professionStatuses.push(professionStatus);\r\n      }\r\n    });\r\n\r\n    this.educationStatusInfo.forEach(_educationalStatus => {\r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (selectedEducationalStatusID === _educationalStatus.id) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const educationalStatus: filterSelectType = {\r\n        id: _educationalStatus.id, name: _educationalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n    \r\n      if (!educationalStatuses.includes(educationalStatus)) {\r\n        educationalStatuses.push(educationalStatus);\r\n      }\r\n    });\r\n\r\n    this.occupationStatusInfo.forEach(_occupationalStatus => {\r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (selectedOccupationalStatusID === _occupationalStatus.id) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const occupationalStatus: filterSelectType = {\r\n        id: _occupationalStatus.id, name: _occupationalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n      \r\n      if (!occupationalStatuses.includes(occupationalStatus)) {\r\n        occupationalStatuses.push(occupationalStatus);\r\n      }\r\n    });\r\n\r\n    const _returnType: returnType = {\r\n      maritalStatuses: maritalStatuses, occupationalStatuses: occupationalStatuses,\r\n      educationalStatuses: educationalStatuses, professionStatuses: professionStatuses\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    // const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    // let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user?branchId=\" + branchId + \"&memberType=\" + memberType + \"&order__by=firstname&datatable_plugin\";\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user?branchId=\" + branchId + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\",\r\n      filterNameId_maritalStatus = \"maritalStatus\",\r\n      filterNameId_occupationalStatus = \"occupationalStatus\",\r\n      filterNameId_educationalStatus = \"educationalStatus\",\r\n      filterNameId_professionStatus = \"professionStatus\",\r\n      filterNameId_filter_from_age = \"fromAge\",\r\n      filterNameId_filter_to_age = \"toAge\",\r\n      filterNameId_country = \"filter_country\",\r\n      filterNameId_region = \"filter_region\",\r\n      filterNameId_district = \"filter_district\",\r\n      filterNameId_constituency = \"filter_constituency\";\r\n\r\n    let newObject:any = {};\r\n    // for (const key in _urlQueryParams) {\r\n    //   let value = Number(_urlQueryParams[key]);\r\n    //   if (!Number.isNaN(value) && (value !== 0)) {\r\n    //     // console.log({value, });\r\n        \r\n    //     newObject[key] = value;\r\n    //   }\r\n    // }\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_gender) || (key === filterNameId_filter_name)\r\n        || (key === filterNameId_filter_identity) || (key === filterNameId_memberType)\r\n        || (key === filterNameId_groupId) || (key === filterNameId_subgroupId)\r\n        || (key === filterNameId_maritalStatus) || (key === filterNameId_occupationalStatus)\r\n        || (key === filterNameId_educationalStatus) || (key === filterNameId_professionStatus)\r\n        || (key === filterNameId_filter_from_age) || (key === filterNameId_filter_to_age)\r\n        || (key === filterNameId_country) || (key === filterNameId_region)\r\n        || (key === filterNameId_district) || (key === filterNameId_constituency)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n\r\n        if ((key === filterNameId_filter_from_age) || (key === filterNameId_filter_to_age)) {\r\n          if (value <= \"0\" ) {\r\n            delete newObject[key];\r\n          }\r\n        }\r\n\r\n        if ((key === filterNameId_groupId) || (key === filterNameId_subgroupId)\r\n          || (key === filterNameId_maritalStatus) || (key === filterNameId_occupationalStatus)\r\n          || (key === filterNameId_educationalStatus) || (key === filterNameId_professionStatus)) {\r\n          // console.log({value, });\r\n          if (value === \"0\") {\r\n            newObject[key] = \"\";\r\n          }\r\n        }\r\n\r\n        if ((key === filterNameId_country) || (key === filterNameId_region)\r\n          || (key === filterNameId_district) || (key === filterNameId_constituency)) {\r\n          // console.log({value, });\r\n          if (value === \"0\") {\r\n            newObject[key] = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!(filterNameId_memberType in newObject)) {\r\n      newObject[filterNameId_memberType] = \"1\";\r\n    }\r\n\r\n    if ((filterNameId_filter_from_age in newObject) && (filterNameId_filter_to_age in newObject)) {\r\n    } else {\r\n      delete newObject[filterNameId_filter_from_age];\r\n      delete newObject[filterNameId_filter_to_age];\r\n    }\r\n\r\n    // console.log({\"newObject-newObject\": newObject});\r\n    \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<any>();\r\n    let __groups: GroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // console.log({\"_networkResponse.response.data\": _networkResponse.response.data});\r\n\r\n        const DATA: GroupModel[] = _networkResponse.response.data.map((group: any) => gmConvert.toGroupModel(JSON.stringify(group)));\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupModel> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n  }\r\n\r\n  private async getSubGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<any>();\r\n    let __subgroups: SubGroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: SubGroupModel[] = _networkResponse.response.data.map((subgroup: any) => sgmConvert.toSubGroupModel(JSON.stringify(subgroup)));\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<SubGroupModel> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n  }\r\n  \r\n  private async getMaritalStatus() {\r\n    const _networkResponse = await GET_MaritalStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _maritalStatusInfo: MaritalStatusModel[] = [\r\n      {name: \"Select Marital Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _maritalStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: MaritalStatusModel[] = data.map(value => {\r\n          return msmConvert.toMaritalStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _maritalStatusInfo = [..._maritalStatusInfo, ...DATA];\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<MaritalStatusModel> = [];\r\n    new_data.push(...this.maritalStatusInfo, ..._maritalStatusInfo);\r\n    this.maritalStatusInfo = new_data;\r\n  }\r\n\r\n  private async getOccupationStatus() {\r\n    const _networkResponse = await GET_OccupationStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _occupationStatusInfo: OccupationStatusModel[] = [\r\n      {name: \"Select Occupation Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _occupationStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: OccupationStatusModel[] = data.map(value => {\r\n          return osmConvert.toOccupationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _occupationStatusInfo = [..._occupationStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<OccupationStatusModel> = [];\r\n    new_data.push(...this.occupationStatusInfo, ..._occupationStatusInfo);\r\n    this.occupationStatusInfo = new_data;\r\n  }\r\n\r\n  private async getProfessionStatus() {\r\n    const _networkResponse = await GET_ProfessionStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _professionStatusInfo: ProfessionStatusModel[] = [\r\n      {name: \"Select Profession Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _professionStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ProfessionStatusModel[] = data.map(value => {\r\n          return psmConvert.toProfessionStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _professionStatusInfo = [..._professionStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ProfessionStatusModel> = [];\r\n    new_data.push(...this.professionStatusInfo, ..._professionStatusInfo);\r\n    this.professionStatusInfo = new_data;\r\n  }\r\n\r\n  private async getEducationStatus() {\r\n    const _networkResponse = await GET_EducationStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _educationStatusInfo: EducationStatusModel[] = [\r\n      {name: \"Select Education Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _educationStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: EducationStatusModel[] = data.map(value => {\r\n          return esmConvert.toEducationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _educationStatusInfo = [..._educationStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<EducationStatusModel> = [];\r\n    new_data.push(...this.educationStatusInfo, ..._educationStatusInfo);\r\n    this.educationStatusInfo = new_data;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            // console.log({ data, type, member });\r\n            const ID = base64Encode(String(member.id), true);\r\n            return `<div class=\"flex items-center whitespace-normal mb-0\">\r\n              <input id=\"member_deletion_info\" name=\"member_deletion_info\" type=\"checkbox\" value=\"${member.id}\"\r\n              class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 mr-3\" />\r\n              <div class=\"flex items-center whitespace-normal mb-0\">\r\n                <user-profile-photo class=\"w-16 h-16 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${__this.memberProfileBaseUrl}${ID}\" type=\"member\"\r\n                  url=\"${member.profilePicture}\" size=\"16\"></user-profile-photo>\r\n                <p class=\"ml-1 mb-0\">${member.firstname} ${member.middlename} ${member.surname}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"whitespace-normal shadow p-1\">\r\n              <i class=\"ml-1\"><b>ID: </b> ${member.identification}</i>\r\n            </div>`;\r\n          },\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'firstname',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            const ID = base64Encode(String(member.id), true);\r\n            // return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n            //   <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n            //     href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            //   <!-- <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n            //     href=\"${__this.memberProfileEditBaseUrl}${ID}\" label=\"Edit\"></link-button> -->\r\n            // </div>`;\r\n            return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n              <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n                href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            </div>\r\n            <div class=\"flex flex-col md:flex-row whitespace-normal\">\r\n              <p class=\"ml-1 mb-2\">\r\n                <mwc-button class=\"danger\" raised delete-member=\"${member.id}\">Delete</mwc-button>\r\n              </p>\r\n            </div>`;\r\n          },\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteMemberBtns();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async downloadMemberExcel() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n\r\n    let URL = \"?branchId=\" + branchId + \"&order__by=firstname\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    this.downloadingFile = true;\r\n    await GET_MembershipUserDownload<any>(URL);\r\n    this.downloadingFile = false;\r\n  }\r\n\r\n  private countryChanged(e: any) {\r\n    console.log(e)\r\n    const countryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"filter_country\"]');\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_country = \"filter_country\",\r\n      filterNameId_region = \"filter_region\",\r\n      filterNameId_district = \"filter_district\",\r\n      filterNameId_constituency = \"filter_constituency\";\r\n    \r\n    let filterNameId_countryVal: number = null,\r\n      filterNameId_regionVal: number = null,\r\n      filterNameId_districtVal: number = null,\r\n      filterNameId_constituencyVal: number = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n  \r\n        if (key === filterNameId_country) {\r\n          filterNameId_countryVal = Number(value);\r\n        }\r\n        if (key === filterNameId_region) {\r\n          filterNameId_regionVal = Number(value);\r\n        }\r\n        if (key === filterNameId_district) {\r\n          filterNameId_districtVal = Number(value);\r\n        }\r\n        if (key === filterNameId_constituency) {\r\n          filterNameId_constituencyVal = Number(value);\r\n        }\r\n    }\r\n    if (String(filterNameId_countryVal) === \"76\") {\r\n      // console.log({\"getLocationRegion\": \"getLocationRegion\"})\r\n      this.getLocationRegion();\r\n\r\n      if (filterNameId_regionVal !== null) {\r\n        this.getLocationDistrict(filterNameId_regionVal);\r\n        if (filterNameId_districtVal !== null) {\r\n          this.getLocationConstituency(filterNameId_regionVal, filterNameId_districtVal);\r\n        }\r\n      }\r\n    }\r\n    countryNodes.forEach(countryNode => {\r\n      // console.log({ \"countryNode\": countryNode })\r\n      // console.log({ \"countryNode.currentValue\": countryNode.getAttribute(\"currentValue\") })\r\n      countryNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": countryNode, \"counrtyValue.value\": countryNode.value, })\r\n        const show_ghana_locations = this.querySelectorAll('[show_ghana_locations]'),\r\n          show_hide_class = \"hidden\";\r\n        if (countryNode.value === \"76\") {\r\n          if (this.regionCalled === false) await this.getLocationRegion();\r\n          this.regionCalled = true;\r\n          show_ghana_locations.forEach(node => {\r\n            // node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          this._regions = [];\r\n          this._districts = [];\r\n          this._constituencies = [];\r\n          this.regionCalled = false;\r\n          show_ghana_locations.forEach(node => {\r\n            // node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    const regionNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"filter_region\"]');\r\n    regionNodes.forEach(regionNode => {\r\n      // console.log({ \"regionNode\": regionNode })\r\n      // console.log({ \"regionNode.currentValue\": regionNode.getAttribute(\"currentValue\") })\r\n      regionNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": regionNode, \"counrtyValue.value\": regionNode.value, })\r\n        const regionID = regionNode.value;\r\n        this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n        // console.log({regionID, \"this.selectedRegion\": this.selectedRegion})\r\n        this.getLocationDistrict(this.selectedRegion);\r\n      };\r\n    });\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    const districtNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"filter_district\"]');\r\n    districtNodes.forEach(districtNode => {\r\n      // console.log({ \"districtNode\": districtNode })\r\n      // console.log({ \"districtNode.currentValue\": districtNode.getAttribute(\"currentValue\") })\r\n      districtNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": districtNode, \"counrtyValue.value\": districtNode.value, })\r\n        const districtID = districtNode.value;\r\n        this.selectedDistrict = Number.isNaN(districtID)? 0: Number(districtID);\r\n        this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n      };\r\n    });\r\n  }\r\n\r\n  private constituencyChanged(e: Event) {\r\n    // this.selectedRegion, this.selectedDistrict\r\n    // filter_constituency\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationCountryModel> = [];\r\n    new_data.push(...this._countries, ...__countries);\r\n    this._countries = new_data;\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        console.log({DATA});\r\n        __regions = [...__regions, ...DATA];\r\n      }\r\n    }\r\n    const new_data: Array<LocationRegionModel> = [];\r\n    new_data.push(...this._regions, ...__regions);\r\n    this._regions = new_data;\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this._districts = [];\r\n    const identity = String(regionID),\r\n      _districtsMemo = this._districtsMemo;\r\n    // console.log({identity, _districtsMemo,})\r\n    if (identity in _districtsMemo) { // implementing memoization\r\n      // console.log({ \"_districtsMemo[identity]\": _districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationDistrictModel> = [];\r\n        new_data.push(...this._districts, ..._districtsMemo[identity]);\r\n        this._districts = new_data;\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __districts = [...__districts, ...DATA];\r\n          this._districtsMemo[identity] = __districts;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationDistrictModel> = [];\r\n      new_data.push(...this._districts, ...__districts);\r\n      this._districts = new_data;\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this._constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      _constituenciesMemo = this._constituenciesMemo;\r\n    if (identity in _constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationConstituencyModel> = [];\r\n        new_data.push(...this._constituencies, ..._constituenciesMemo[identity]);\r\n        this._constituencies = new_data;\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __constituencies = [...__constituencies, ...DATA];\r\n          this._constituenciesMemo[identity] = __constituencies;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationConstituencyModel> = [];\r\n      new_data.push(...this._constituencies, ...__constituencies);\r\n      this._constituencies = new_data;\r\n    }\r\n  }\r\n\r\n  private async check_all_member_deletion(e: any) {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('[id=\"member_deletion_info_all\"][name=\"member_deletion_info_all\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        document.querySelectorAll('[id=\"member_deletion_info\"][name=\"member_deletion_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = true;\r\n        })\r\n      } else {\r\n        document.querySelectorAll('[id=\"member_deletion_info\"][name=\"member_deletion_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private deleteMemberBtns() {\r\n    const selectorString = 'delete-member';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(delete_member => {\r\n      delete_member.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.deleteMemberAction(delete_member, selectorString, e);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  private async deleteMemberAction(element: Element, selectorString: string, e: any) {\r\n    e.preventDefault();\r\n\r\n    const memberID = element.getAttribute(selectorString);\r\n\r\n    if (!Number.isNaN(memberID) && Number(memberID) !== 0) {\r\n      await DELETE_MembershipUsers(Number(memberID));\r\n    }\r\n  }\r\n\r\n  private async deleteMultipleMemberAction(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"member_deletion_info\"][name=\"member_deletion_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    await DELETE_MembershipUsersBulk(ids);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http_download } from \"@@addons/functions/https/download\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipUserDownload<Type>(url_params: string = \"\",) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/download-excel' + (url_params),\r\n    HTTP = await http_download(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return HTTP;\r\n    // return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    // console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_MembershipUsersBulk(memberIds: Array<Number>,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/delete-bulk',\r\n  formData = {\"memberIds\": memberIds};\r\n\r\n  return Swal.fire({\r\n    title: 'Delete Members?',\r\n    // text: \"Education status may already be assigned. Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          // console.log({\"_RESPONSE_RESPONSE\": _RESPONSE})\r\n          if ((_RESPONSE !== null) && ('nameError' in _RESPONSE) && ('unknownError' in _RESPONSE)) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","GenericGenderInfo_S","data","id","Number","name","GET_GenericGender","type","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","DELETE_MembershipUsers","ID","formData","title","text","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","JSON","stringify","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","push","res","postForm","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","GET_EducationStatus","url_params","GET_MaritalStatus","GET_OccupationStatus","GET_ProfessionStatus","AppAccordionItem","constructor","super","accordion_class_name","buttonHtml","contentHtml","connectedCallback","disconnectedCallback","render","this","firstUpdated","createRenderRoot","styles","Appaccordion","accordionName","contents","map","content","document","readyState","toggler","i","acc","getElementsByClassName","addEventListener","classList","toggle","panel","nextElementSibling","log","style","maxHeight","items","Array","PdbMembershipMembers","memberProfileBaseUrl","_genders","_groups","_subgroups","maritalStatusInfo","occupationStatusInfo","professionStatusInfo","educationStatusInfo","_activeBranchId","regionCalled","selectedRegion","selectedDistrict","_countries","_regions","_districts","_constituencies","_constituenciesMemo","_districtsMemo","downloadingFile","_memberType","_hasSetup","__members","_members","requestUpdate","activeBranchId","filterBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGenders","getGroups","getSubGroups","getMaritalStatus","getEducationStatus","getOccupationStatus","getProfessionStatus","getLocationCountry","expiration_date","expired","pageId","viewType","toggleFilterFields","filterForm","downloadBtns","table_header","table","check_all_member_deletion","deleteMultipleMemberAction","onreadystatechange","event","countryChanged","regionChanged","districtChanged","constituencyChanged","downloadMemberExcel","returnHtml","_urlQueryParams","filterNameId_filter_gender","filterNameId_filter_name","filterNameId_filter_identity","filterNameId_memberType","filterNameId_filter_from_age","filterNameId_filter_to_age","filterNameId_country","filterNameId_region","filterNameId_district","filterNameId_constituency","filterNameId_filter_genderVal","filterNameId_filter_nameVal","filterNameId_filter_identityVal","filterNameId_memberTypeVal","filterNameId_groupIdVal","filterNameId_subgroupIdVal","filterNameId_maritalStatusVal","filterNameId_occupationalStatusVal","filterNameId_educationalStatusVal","filterNameId_professionStatusVal","filterNameId_filter_from_ageVal","filterNameId_filter_to_ageVal","filterNameId_countryVal","filterNameId_regionVal","filterNameId_districtVal","filterNameId_constituencyVal","key","nameField","genderField","item","ageField","identifyField","memberCategoryField","selectedGroupID","isNaN","selectedSubGroupID","groupsSubgroups","groupField","groups","subGroupField","subgroups","selectedMaritalStatusID","selectedOccupationalStatusID","selectedEducationalStatusID","selectedProfessionStatusID","MOPES","maritalOccupationalProfessionEducationalStatus","maritalStatusField","maritalStatuses","occupationalStatusField","occupationalStatuses","educationalStatusField","educationalStatuses","professionField","professionStatuses","countries","country","isSelected","selected","regions","region","districts","district","constituencies","constituency","clear_filter","submit","_group","isSelectedAlt","group","includes","_subgroup","subgroup","groupID","_maritalStatus","maritalStatus","_professionStatus","professionStatus","_educationalStatus","educationalStatus","_occupationalStatus","occupationalStatus","__tableHeaders","__tableBody","__tableFoot","branchId","URL","urlQueryString","__dataTable","ajaxHeader","filterNameId_groupId","filterNameId_subgroupId","filterNameId_maritalStatus","filterNameId_occupationalStatus","filterNameId_educationalStatus","filterNameId_professionStatus","newObject","_urlQueryParamsJoin","_networkResponse","__genders","new_data","__groups","date","Date","DATA","__subgroups","_maritalStatusInfo","_occupationStatusInfo","_professionStatusInfo","_educationStatusInfo","__this","dataSrc","apiType","member","base64","profilePicture","firstname","middlename","surname","identification","orderable","targets","className","checkboxes","selectRow","aoData","deleteMemberBtns","buttons","select","GET_MembershipUserDownload","countryNodes","querySelectorAll","getLocationRegion","getLocationDistrict","getLocationConstituency","countryNode","onchange","show_ghana_locations","node","regionNode","regionID","districtNode","districtID","__countries","code","short","__regions","identity","__districts","regionId","__constituencies","preventDefault","input","checked","_input_","selectorString","delete_member","deleteMemberAction","element","memberID","getAttribute","ids","memberIds","http","https_swal_error_format","DELETE_MembershipUsersBulk","Element","HTMLFormElement","Boolean"],"sourceRoot":""}