{"version":3,"file":"../../production_public/assets/v2/prod-test-files/js/membership/groupings/group_subgroup/groups/edit.js","mappings":";cAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,GAC1B,CATD,CASGK,MAAM,wHCTF,MAKMC,EAA0B,CAACC,EAAYC,GAAW,KAE7D,GAAIC,MAAMC,QAAQH,GAAQ,CAExB,IAAII,GADUH,EARS,yOAQgB,IAChB,OAavB,OAZ0BD,EAGpBK,SAASC,IAGXF,GADkB,iBAATE,EACG,OAAOA,WAEP,OAAOA,EAAKN,kBAIrBI,GAAsB,QAE7B,MAAM,IAAIG,MAAM,+FCxBb,MAAMC,EAAiB,KAC5B,MAAMC,EAAkB,IAAIC,gBAAgBC,OAAOC,SAASC,QAG5D,OAFeC,OAAOC,YAAYN,EAAgBO,UAErC,EAEFC,EAAqBC,IAChC,MAAMT,EAAkB,IAAIC,gBAAgBC,OAAOC,SAASC,QACtDM,EAASL,OAAOC,YAAYN,EAAgBO,WAClD,IAAII,EAAgB,KACpB,IAAK,MAAMC,KAAOF,EACZE,IAAQH,IACVE,EAAQD,EAAOE,IAGnB,OAAOD,CAAK,EAEDE,EAAwBJ,GACX,IAAIR,gBAAgBC,OAAOC,SAASC,QAC7BU,OAAOL,GAI3BM,EAAsBC,IAGjC,IAAIC,EAAiB,GACjBC,EAAQ,EACZ,IAAK,MAAMN,KAAOI,EAChBE,GAAS,EACTD,GAAU,GAAIC,EAAQ,EAAK,IAAK,KAAKN,KAAOI,EAAOJ,KAErD,OAAOK,CAAM,iBCvBR,SAASE,EAA4BtB,GAa1C,MAViE,CAC/DuB,GAAmB,iBAARvB,EAAmBA,EAAMwB,OAAOxB,EAAS,IACpDyB,SAAUD,OAAOxB,EAAe,UAChC0B,SAAUC,OAAO3B,EAAe,UAChC4B,UAAWJ,OAAOxB,EAAgB,WAClC6B,UAAWL,OAAOxB,EAAgB,WAClC8B,KAAM,IAAIC,KAAK/B,EAAW,MAC1BgC,WAAY,IAAID,KAAK/B,EAAiB,YAI1C,6FClBO,SAAeiC,EAAyBC,EAAe,2CAE5D,MAAMC,GAAc,UACdC,EAAM,8BAAsC,kBACpC,OAATF,EAAgB,GAAK,IAAMA,GAC9BG,QAAa,OAAKD,EAAK,CACrBE,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GACL,IACE,OAAO,IAAI,IAA2B,MAAOJ,GAC7C,MAAO3C,GACPgD,QAAQhD,MAAM,CAAEA,UAChB,IAAIiD,EAAYN,EAEhB,OADAM,EAAiB,MAAIjD,EACd,IAAI,IAA2B,MAAOiD,GAAW,GAE5D,6WCnBO,SAAeC,EAAgCV,EAAe,KAAMW,EAAqB,yCAE9F,MAAMV,GAAc,UAGdC,EAAM,8BAAsC,2BACpC,OAATF,EAAgB,GAAK,IAAMA,GAAQ,EACtCG,QAAa,OAAKD,EAAK,CACrBE,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GACL,IACE,OAAO,IAAI,IAA2B,MAAOJ,GAC7C,MAAO3C,GACPgD,QAAQhD,MAAM,CAAEA,UAChB,IAAIiD,EAAYN,EAEhB,OADAM,EAAiB,MAAIjD,EACd,IAAI,IAA2B,MAAOiD,GAAW,GAE5D,+nDCIO,IAAMG,EAAN,cAAwD,KAC7DC,cAAgBC,QAGR,KAAAC,gBAA0B,EAG1B,KAAAC,YAAsB,EAGtB,KAAAC,eAAyB,EAGzB,KAAAC,QAAmB,EAGnB,KAAAC,WAAsB,KAGtB,KAAAC,eAAqC,KAGrC,KAAAC,gBAA0C,KAG1C,KAAAC,kBAAmD,GAGnD,KAAAC,UAAgC,GAGhC,KAAAC,QAA8B,GAG9B,KAAAC,WAAqB,CAjCJ,CAmCnBC,+IACJ,EAAMA,kBAAiB,YACvB,SAAWC,MAAK,IAAMC,KAAKH,WAAY,IAEvC,MAAMI,GAAiB,UACvBD,KAAKP,gBAAsC,OAAnBQ,EAA2B,KAAO,CAACA,GAC3DD,KAAKR,eAAiB,EAAC,WAEK,OAAxBQ,KAAKR,gBACHQ,KAAKR,eAAeU,OAAS,IAC/BF,KAAKZ,YAAc,EACnBY,KAAKX,eAAiBW,KAAKR,eAAe,GAAGW,KAAKC,SAElDC,YAAW,KACTL,KAAKZ,YAAc,CAAC,GAEnB,MAMPY,KAAKM,aACLN,KAAKO,SAASP,KAAKV,eACbU,KAAKQ,oBACLR,KAAKS,2BACb,IAEAC,uBAAyB,CAOzBC,eACE,GAAIX,KAAKH,UAAW,CAClB,GAAiC,QAA7B,mBAA6B,eAAEe,gBAAgBC,QACjD,OAAO,IAAI,0DAEb,KAAK,OAA2B,CAACC,OAAQ,aAAoBC,SAAU,SAAS,GAC9E,OAAO,IAAI,sDAIf,GAAIf,KAAKJ,QAAQM,OAAS,EACxB,OAAO,IAAI;;;;;;QAQb,GAAqB,OAAjBF,KAAKJ,QACP,OAAO,IAAI;;;;;;;QAUb,MAAMoB,EAAQhB,KAAKJ,QAAQ,GAI3B,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;0BAoBWI,KAAKL,UAAUsB,KAAKjE,IACpB,GAAIA,EAAMS,KAAOuD,EAAMZ,SACrB,OAAO,IAAI,yBAAyBpD,EAAMS,gBAAgBT,EAAMkE;;;;;yEAOnBrD,OAAOmD,EAAMG,iBAAiB1D;;;;;;;;mDAQpDuD,EAAMI;;;;;;+EAMsBpB,KAAKqB;;;;;;;;;;;;;;;;;KAkBlF,CAEAC,eAAiB,CAEThB,aACN,IAAIhB,GAAU,QAAkB,cAE5BiC,EAAuB,OAAZjC,GAAmB,EAAAkC,EAAA,GAAalC,GAAW,KAC1DU,KAAKV,QAAU5B,OAAO+D,MAAMF,GAAY,KAAO7D,OAAO6D,GAEtDvB,KAAKT,YAAa,EAAAiC,EAAA,GAAa3D,OAAOmC,KAAKV,UAAU,EACvD,CAEciB,SAASmB,4CACrB,MAAMC,QAAyB,OAA4CD,GCpMxE,IAA0BxF,EDqMJ,OAArByF,GACEA,EAAiBC,SAASC,SAAW,UAAWF,EAAiBC,SAAS1F,KAC5E8D,KAAKJ,QAAU,ECvMU1D,EDuMQyF,EAAiBC,SAAS1F,KCpMtB,CACzCuB,GAAIC,OAAOxB,EAAS,IACpByB,SAAUD,OAAOxB,EAAe,UAChCkF,MAAOvD,OAAO3B,EAAY,OAC1BkE,SAAU1C,OAAOxB,EAAe,UAChCiF,kBAAkB,OAA4BjF,EAAuB,kBACrE4B,UAAWJ,OAAOxB,EAAgB,WAClC6B,UAAWL,OAAOxB,EAAgB,WAClC8B,KAAM,IAAIC,KAAK/B,EAAW,MAC1BgC,WAAY,IAAID,KAAK/B,EAAiB,eD+LtC8D,KAAKJ,QAAU,IACjB,IAEcY,uDACZ,MAAMmB,QAAyB,SAC/B,IAAIG,EAAiC,GAEZ,OAArBH,EACFG,EAAWC,KAAK,CAAEtE,GAAI,EAAGyD,KAAM,mBAEY,IAAtCS,EAAiBC,SAASC,SAAsB,WAAYF,EAAiBC,SAAS1F,OAGzF4F,EAFiCH,EAAiBC,SAAS1F,MAK/D,MAAM8F,EAAoC,GAC1CA,EAASD,QAAQ/B,KAAKL,aAAcmC,GACpC9B,KAAKL,UAAYqC,CACnB,IAEcvB,qEACZ,MAAMkB,QAAyB,SAC/B,IAAIM,EAAoD,GAE/B,OAArBN,EACFM,EAAmBF,KAAK,CAAEtE,GAAI,EAAGG,SAAU,mBAEA,IAAtC+D,EAAiBC,SAASC,SAAsB,WAAYF,EAAiBC,SAAS1F,OAGzF+F,EAF4CN,EAAiBC,SAAS1F,MAK1E,MAAM8F,EAA+C,GACrDA,EAASD,QAAQ/B,KAAKN,qBAAsBuC,GAC5CjC,KAAKN,kBAAoBsC,CAC3B,IAEMX,WAAWa,4CACfA,EAAEC,uBExPC,SAAoCT,4CAEzC,MAAMrD,GAAc,UAGdC,EAAM,8BAAsC,2BAA6BoD,EAC7EU,EAAiCC,SAASC,cAAc,kDACxDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAO,gBAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,EAAAC,EAAA,GAAKhF,EAAK,CACrBE,OAAQ,QACR+E,KAAMhB,EACN9D,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GAAOoB,MAAMxB,IAGd,MAAMiF,EAAiB,IAAI,IAAqB,OAAQjF,GAAM,EAAO6D,GAC/DqB,EAAYD,EAAe5B,SAEjC,GAAI,cAAe6B,GAAa,iBAAkBA,GAC5CA,EAAUC,aAAaxD,OAAS,EAAG,CAGrC,IAAIyD,EAAmC,GACvCF,EAAUC,aAAazH,SAAQiG,IACbA,EAAEyB,OACV1H,SAAQ2H,IACd,IAAIC,EAAW,CAAEjI,MAAOsG,EAAEzE,GAAK,KAAOmG,GACzB,qBAAT1B,EAAEzE,KACJoG,EAAW,CAAEjI,MAAOgI,IAGtBD,EAAO5B,KAAK8B,EAAS,GACrB,IAGJ,MAAMC,GAAM,EAAAnI,EAAA,GAAwBgI,GACpC,0BACE,GAAGG,KAIT,OAAON,CAAc,IACpBO,OAAMnI,IACP,0BACE,GAAGiC,OAAOjC,KACX,GAEL,IACAoI,kBAAmB,KAAO,kBACzBjE,MAAMkE,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOjH,MACtB,GAAIqH,aAAkB3H,OAAQ,CAC5B,MAAM4H,EAAwCD,EAAOzC,SACrDuC,EAAatG,OAAOyG,EAAMC,SAE1BH,EAAYC,EAAOzC,SAASC,QAE9BuC,GAAY,SAAU,CACpB3B,MAAO0B,EACPzB,KAAM0B,EAAY,UAAY,QAC9BzB,UAAWyB,EAAY,UAAY,UACnCrB,mBAAoB,YAEtBqB,GAAY/D,YAAW,KACrB9D,OAAOC,SAASgI,QAAQ,GACvB,QAGT,IFiKUC,CAAqBzE,KAAKV,QAClC,IAEAoF,mBACE,OAAO1E,IACT,GAzKO,EAAA2E,OAAS,CACd,IAAG;;KA/DL,IAAC,QAAS,CAAEvG,KAAMV,wEAGlB,IAAC,QAAS,CAAEU,KAAMV,oEAGlB,IAAC,QAAS,CAAEU,KAAMV,uEAGlB,IAAC,QAAS,CAAEU,KAAMV,gEAGlB,IAAC,QAAS,CAAEU,KAAMP,mEAGlB,IAAC,QAAS,CAAEO,KAAMtC,qEAGlB,IAAC,QAAS,CAAEsC,KAAMtC,sEAGlB,IAAC,QAAS,CAAEsC,KAAMtC,wEAGlB,IAAC,QAAS,CAAEsC,KAAMtC,gEAGlB,IAAC,QAAS,CAAEsC,KAAMtC,8DAGlB,IAAC,QAAS,CAAEsC,KAAMwG,oEAjCP5F,EAAyC,IADrD,QAAc,6EACFA,oCG9BN,MAAM6F,EAAY,CACvB,SAAY,GACZ,WAAc,sECGb,MAAMC,EAAEC,GAAG,KAAEC,EAAEC,GAAG,OAAOA,GAAG,iBAAiBA,GAAG,mBAAmBA,EAAuM/C,EAAE+C,QAAG,IAASA,EAAEC,QAA6eC,EAAE,CAAC,EAAEC,EAAE,CAACH,EAAEF,EAAEI,IAAIF,EAAEI,KAAKN,8ICA9xB,MAAMA,GAAE,QAAE,cAAc,KAAE9F,YAAYqG,GAAG,GAAGpG,MAAMoG,GAAGA,EAAElH,OAAO,eAAYkH,EAAElH,OAAO,gBAAakH,EAAElH,OAAO,uBAAoB,MAAMjC,MAAM,kEAAkE,KAAI,QAAEmJ,GAAG,MAAMnJ,MAAM,uDAAuD,CAACwE,OAAO2E,GAAG,OAAOA,CAAC,CAACC,OAAOC,GAAGR,IAAI,GAAGA,IAAI,MAAGA,IAAI,KAAE,OAAOA,EAAE,MAAMC,EAAEO,EAAEC,QAAQV,EAAES,EAAEtE,KAAK,GAAGsE,EAAEpH,OAAO,eAAY,GAAG4G,IAAIC,EAAEF,GAAG,OAAO,UAAO,GAAGS,EAAEpH,OAAO,wBAAqB,KAAK4G,IAAIC,EAAES,aAAaX,GAAG,OAAO,UAAO,GAAGS,EAAEpH,OAAO,gBAAa6G,EAAEU,aAAaZ,KAAKC,EAAE,GAAG,OAAO,KAAE,OAAO,QAAEQ,GAAGR,CAAC","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/view/membership/groupings/group_subgroup/groups/edit.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/group/patch.ts","webpack://webpackNumbers/./src/view/membership/groupings/page__id.ts","webpack://webpackNumbers/./node_modules/lit-html/directive-helpers.js","webpack://webpackNumbers/./node_modules/lit-html/directives/live.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\nexport const urlQueryParamsGetAll = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = urlSearchParams.getAll(query);\r\n  return params;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","export interface GroupingsMemberCategories_I {\r\n  id: number,\r\n  category: string,\r\n  clientId?: number,\r\n  createdBy?: number,\r\n  date?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\nexport function GroupingsMemberCategories_S(data: any): GroupingsMemberCategories_I {\r\n  // console.log({data});\r\n\r\n  const groupingsMemberCategories_S: GroupingsMemberCategories_I = {\r\n    id: typeof data == \"number\" ? data: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    category: String(data['category']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsMemberCategories_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GroupingsMemberCategories_I } from \"@@addons/interfaces/members/groupings/member_categories\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { GET_MemberGroupingsMemberCategories } from \"@@addons/network/members/groupings/member_categories\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { urlQueryParamsGet } from \"@@addons/functions/url_query_params\";\r\nimport { GroupingsGroup_I, GroupingsGroup_S } from \"@@addons/interfaces/members/groupings/group\";\r\nimport { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { PATCH_GroupingsGroup } from \"@@addons/network/members/groupings/group/group/patch\";\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from \"@@addons/functions/app_settings\";\r\nimport { getAppSettingsExtraSettings } from \"@@addons/functions/app_settings/extra_settings\";\r\nimport { AppSettingsExtraUserAccess } from \"@@addons/functions/app_settings/extra_settings/user_access\";\r\nimport { PAGE__IDS } from \"../../page__id\";\r\n\r\n\r\n@customElement(\"membership-groupings-group_subgroup-group-edit\")\r\nexport class MembershipGroupingsGroupSubgroupGroupEdit extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private groupId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private groupIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    this.getGroupId();\r\n    this.getGroup(this.groupId);\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.grouping, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n\r\n    if (this._groups.length < 1) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._groups === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Group </span>: Not Found</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const GROUP = this._groups[0];\r\n    // console.log({GROUP});\r\n    \r\n    \r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Change Group</h1>\r\n                    <h3 class=\"h3\">Update Group!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"members-groupings-group\" enctype=\"multipart/form-data\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                        name=\"_branchId_\" id=\"_branchId_\"  outlined required>\r\n                        <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                        ${this._branches.map((value) => {\r\n                          if (value.id === GROUP.branchId) {\r\n                            return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                          }\r\n                        })}\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n                      <pdb-membership-select-member-type defaultValue=\"${String(GROUP.memberCategoryId.id)}\" \r\n                        name=\"_memberCategoryId_\" id=\"_memberCategoryId_\"\r\n                        label=\"Select Member Category\" outlined required>\r\n                      </pdb-membership-select-member-type>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Group</h4>\r\n                      <mwc-textfield name=\"group\" id=\"group\" label=\"Enter Group\"\r\n                        outlined required value=\"${GROUP.group}\">\r\n                      </mwc-textfield>\r\n                    </div>\r\n                  </div>\r\n        \r\n                  <div class=\"form-input-container\">\r\n                    <mwc-button label=\"Update\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                    </mwc-button>\r\n                  </div>\r\n                \r\n                  <div class=\"flex form-input-container items-center text-center\">\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                      ...\r\n                    </label>\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getGroupId() {\r\n    let groupId = urlQueryParamsGet('view-group');\r\n    // console.log({ groupId });\r\n    let _groupId = groupId !== null ? base64Decode(groupId) : null;\r\n    this.groupId = Number.isNaN(_groupId) ? null : Number(_groupId);\r\n    // console.log({ \"this.groupId\": this.groupId });\r\n    this.groupIdEnc = base64Encode(String(this.groupId), true);\r\n  }\r\n\r\n  private async getGroup(ID: number) {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n        this._groups = [GroupingsGroup_S(_networkResponse.response.data)];\r\n        return;\r\n      }\r\n    }\r\n    this._groups = null;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await PATCH_GroupingsGroup(this.groupId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  group?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsGroup_S(data: any): GroupingsGroup_I {\r\n  // console.log({data});\r\n  \r\n  const groupingsGroup_S: GroupingsGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    group: String(data['group']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsGroup_S;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_GroupingsGroup(ID: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-groupings-group\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Group?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","export const PAGE__IDS = {\r\n  \"grouping\": 33,\r\n  \"assignment\": 34,\r\n};","import{_$LH as o}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{I:l}=o,t=o=>null===o||\"object\"!=typeof o&&\"function\"!=typeof o,i={HTML:1,SVG:2},n=(o,l)=>void 0===l?void 0!==(null==o?void 0:o._$litType$):(null==o?void 0:o._$litType$)===l,d=o=>void 0!==(null==o?void 0:o._$litDirective$),v=o=>null==o?void 0:o._$litDirective$,e=o=>void 0===o.strings,c=()=>document.createComment(\"\"),r=(o,t,i)=>{var n;const d=o._$AA.parentNode,v=void 0===t?o._$AB:t._$AA;if(void 0===i){const t=d.insertBefore(c(),v),n=d.insertBefore(c(),v);i=new l(t,n,o,o.options)}else{const l=i._$AB.nextSibling,t=i._$AM,e=t!==o;if(e){let l;null===(n=i._$AQ)||void 0===n||n.call(i,o),i._$AM=o,void 0!==i._$AP&&(l=o._$AU)!==t._$AU&&i._$AP(l)}if(l!==v||e){let o=i._$AA;for(;o!==l;){const l=o.nextSibling;d.insertBefore(o,v),o=l}}}return i},u=(o,l,t=o)=>(o._$AI(l,t),o),f={},s=(o,l=f)=>o._$AH=l,m=o=>o._$AH,p=o=>{var l;null===(l=o._$AP)||void 0===l||l.call(o,!1,!0);let t=o._$AA;const i=o._$AB.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},a=o=>{o._$AR()};export{i as TemplateResultType,a as clearPart,m as getCommittedValue,v as getDirectiveClass,r as insertPart,d as isDirectiveResult,t as isPrimitive,e as isSingleExpression,n as isTemplateResult,p as removePart,u as setChildPartValue,s as setCommittedValue};\n//# sourceMappingURL=directive-helpers.js.map\n","import{noChange as r,nothing as e}from\"../lit-html.js\";import{directive as i,Directive as t,PartType as n}from\"../directive.js\";import{isSingleExpression as o,setCommittedValue as s}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=i(class extends t{constructor(r){if(super(r),r.type!==n.PROPERTY&&r.type!==n.ATTRIBUTE&&r.type!==n.BOOLEAN_ATTRIBUTE)throw Error(\"The `live` directive is not allowed on child or event bindings\");if(!o(r))throw Error(\"`live` bindings can only contain a single expression\")}render(r){return r}update(i,[t]){if(t===r||t===e)return t;const o=i.element,l=i.name;if(i.type===n.PROPERTY){if(t===o[l])return r}else if(i.type===n.BOOLEAN_ATTRIBUTE){if(!!t===o.hasAttribute(l))return r}else if(i.type===n.ATTRIBUTE&&o.getAttribute(l)===t+\"\")return r;return s(i),t}});export{l as live};\n//# sourceMappingURL=live.js.map\n"],"names":["root","factory","exports","module","define","amd","self","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsGetAll","getAll","urlQueryParamsJoin","object","urlStr","index","GroupingsMemberCategories_S","id","Number","clientId","category","String","createdBy","updatedBy","date","Date","updateDate","GET_ClientBranches","type","_get_cookie","url","HTTP","method","headers","Authorization","token","console","errorHttp","GET_MemberGroupingsGroups","url_params","MembershipGroupingsGroupSubgroupGroupEdit","constructor","super","startSearchPage","accountType","selectedBranch","groupId","groupIdEnc","_userLoginInfo","_activeBranchId","_memberCategories","_branches","_groups","_hasSetup","connectedCallback","then","this","activeBranchId","length","user","branchId","setTimeout","getGroupId","getGroup","getBranches","getClientMemberCategories","disconnectedCallback","render","expiration_date","expired","pageId","viewType","GROUP","map","name","memberCategoryId","group","submitForm","firstUpdated","_groupId","base64","isNaN","ID","_networkResponse","response","success","__branches","push","new_data","__memberCategories","e","preventDefault","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","reload","PATCH_GroupingsGroup","createRenderRoot","styles","Boolean","PAGE__IDS","I","l","t","o","strings","f","s","_$AH","r","update","i","element","hasAttribute","getAttribute"],"sourceRoot":""}