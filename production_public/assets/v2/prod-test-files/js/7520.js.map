{"version":3,"file":"../../production_public/assets/v2/prod-test-files/js/7520.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/subgroup/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/select.ts","webpack://webpackNumbers/./src/view/admin/user/form/group_subgroup.ts","webpack://webpackNumbers/./src/addons/network/clients/users/group_subgroup_update.ts","webpack://webpackNumbers/./src/addons/network/clients/users/group_subgroup_add.ts","webpack://webpackNumbers/./node_modules/lit-html/directive-helpers.js","webpack://webpackNumbers/./node_modules/lit-html/directives/live.js"],"sourcesContent":["import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsSubGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/sub-group'\r\n  + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { SelectInputOptions_I, SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport * as $ from 'jquery'\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport 'select2';\r\nimport { ProcessedResult, QueryOptions, DataParams, Event } from 'select2';\r\nimport '../../../../assets/styles/views/widget/select_input/select_input.scss';\r\n\r\n\r\n@customElement('select-input')\r\nexport class SelectInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  public value: SelectInputOptions_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private randomID: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: String })\r\n  public input_id?: string = this.id + \"_\" + this.randomID;\r\n\r\n  @property({ type: Array })\r\n  public options?: { id: number, name: string, isSelected?: \"true\" | \"false\", selected: boolean }[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public required?: boolean;\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchToken?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchUrl?: string = null;\r\n\r\n  @property({attribute: false})\r\n  public currentValue: any | any[];\r\n\r\n  // @property({ type: Object })\r\n  // public ajaxHeader: object = {};\r\n\r\n  private _ajaxHeader: any = null;\r\n\r\n  public set ajaxHeader(value: any) {\r\n    this._ajaxHeader = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get ajaxHeader(): any {\r\n    return this._ajaxHeader;\r\n  }\r\n\r\n  @property({ type: Object })\r\n  public ajaxFetchProcessResponse?: (data: any, params: QueryOptions) => SelectInputProcessedAjaxResponse_I = null;\r\n\r\n  @property({ type: Array })\r\n  public ajaxFetchUrlParams?: SelectInputProcessedAjaxUrlParam_I[] = [];\r\n  \r\n  @property({ type: Number })\r\n  public startSearchPage?: number = 0\r\n\r\n  @property({ type: Boolean })\r\n  /** For multiple image selection */\r\n  public multiple?: boolean;\r\n\r\n  private selectSelector: NodeListOf<HTMLSelectElement>;\r\n  private $selectSelector: JQuery<HTMLSelectElement>;\r\n\r\n  @property({ type: Number })\r\n  public startNumber: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public rowsPerPage: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public totalShowing: number = 10;\r\n\r\n  @property({ type: Boolean })\r\n  private showSelectorLoaded?: boolean = false;\r\n\r\n  static styles = [\r\n    css`\r\n      .select2-container {\r\n        pointer-events: auto !important;\r\n      }\r\n    `\r\n  ];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();  \r\n    this.value = Array.isArray(this.value) ? this.value : [];\r\n\r\n    setInterval(() => {\r\n      if (this.selectSelector === undefined) {\r\n        // console.log({ \"this.selectSelector\": this.selectSelector });\r\n        // console.log({ \"this.input_id\": this.input_id, \"'select-input>select[input_id='+ this.input_id +']\": 'select-input>select[input_id='+ this.input_id +']' });\r\n        this.selectSelector = document.querySelectorAll('select-input>select[input_id='+ this.input_id +']');\r\n        // console.log({\"this.selectSelector\": this.selectSelector});\r\n        \r\n        this.$selectSelector = $(this.selectSelector)\r\n        // console.log({\"this.$selectSelector\": this.$selectSelector});\r\n      } else {\r\n        this.showDropdownAlt();\r\n      }\r\n    });\r\n\r\n    this.options = this.options.map((option) => {\r\n      const optionId = option.id;\r\n      let isSelected = false;\r\n\r\n      // console.log({\"this.value\": this.value});\r\n\r\n      this.value.forEach((val) => {\r\n        const valId = val.id;\r\n\r\n        isSelected = optionId === valId;\r\n      });\r\n      option.selected = isSelected;\r\n      return option;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log({\"this.options\": this.options});\r\n    \r\n    if (this.multiple) {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple required>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    } else {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\" required>\r\n            ${this.options.map(option => {\r\n              \r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                // console.log(\"option_option-option_option - \" + this.label + \" :\", {option});\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\">\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    // this.showDropdown();\r\n  }\r\n\r\n  formatRepo(repo: { loading: boolean; text: string; id: string; }) {\r\n    // console.log({ \"smbfl-repo\": repo });\r\n    if (repo.loading) {\r\n      return repo.text;\r\n    }\r\n\r\n    // console.log({ \"this.value\": this.value });\r\n    var $container = $(\r\n      this.value.map((val) => {\r\n        const _selected = Number(repo.id) === val.id,\r\n          selected = _selected ? \"selected='true'\" : \"\";\r\n        // console.log({ _selected, selected });\r\n\r\n        return '<option value=\"' + repo.id + '\" ' + selected + '>' + repo.text + '</option>'\r\n      })\r\n    );\r\n    return $container;\r\n  }\r\n\r\n  formatRepoSelection(repo: { full_name: string; text: string; }) {\r\n    return repo.full_name || repo.text;\r\n  }\r\n\r\n  _start(params: any, totalShowing: number) {\r\n    const _this = this;\r\n    // console.log({ _this });\r\n\r\n    // _this.totalShowing = 10;\r\n\r\n    this.startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n    this.startSearchPage = this.startSearchPage === 0 ? this.startSearchPage : this.startSearchPage * totalShowing;\r\n    $('.select2-search__field').on('keyup', function ($this) {\r\n      $(_this.selectSelector).empty();\r\n      _this.startSearchPage = 0\r\n      // _this.totalShowing = 10;\r\n      // console.log({ _this });\r\n    });\r\n\r\n    return _this.startSearchPage;\r\n  }\r\n\r\n  private showDropdownAlt() {\r\n    const _this = this;\r\n    let totalShowing = this.totalShowing,\r\n      startSearchPage = this.startSearchPage;\r\n\r\n      function _start(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n        startSearchPage = startSearchPage === 0 ? startSearchPage : startSearchPage * totalShowing;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n      function _page(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        let startSearchPage = isNaN(params.page) ? 1 : params.page + 1;\r\n        startSearchPage = startSearchPage === 0? 1 : startSearchPage;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n    if (this.showSelectorLoaded === false) {\r\n      this.showSelectorLoaded = true;\r\n      if (this.ajaxFetchUrl === null) {\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-1\": selectSelector})\r\n          $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            // @ts-ignore\r\n            placeholder: this.label,\r\n          });\r\n          $(selectSelector).on('select2:select', (e) => {\r\n            this.changeAction(e)\r\n          })\r\n        });\r\n      } else {\r\n        let _headers = {\r\n          \"Access-Control-Allow-Origin\": \"*/*\",\r\n          \"Accept\": \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        };\r\n        // console.log({\"this.ajaxHeader\": this.ajaxHeader})\r\n        \r\n        for (const header in this.ajaxHeader) {\r\n          // console.log({header})\r\n          // @ts-ignore\r\n          _headers[header] = this.ajaxHeader[header];\r\n        }\r\n\r\n        // console.log({ _headers });\r\n        // console.log({\"this.selectSelector\": this.selectSelector})\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-2\": selectSelector})\r\n          const S2: JQuery<HTMLSelectElement> = $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            ajax: {\r\n              url: _this.ajaxFetchUrl,\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params: { term: any; }) {\r\n                const start = _start(params, S2);\r\n                const page = _page(params, S2);\r\n                // let page = start / 10;\r\n                // page = page === 0 ? 1 : page;\r\n                let finalParams: any = {\r\n                  \"search\": params.term, // search term\r\n                  \"start\": start,\r\n                  \"page\": page,\r\n                };\r\n\r\n                _this.ajaxFetchUrlParams.forEach((param) => {\r\n                  finalParams[param.param] = param.value;\r\n                });\r\n                // console.log({finalParams});\r\n                return finalParams;\r\n              },\r\n              headers: _headers,\r\n              processResults: (data: any, params: any) => {\r\n                // return _this.ajaxFetchProcessResponse(data, params);\r\n                const processedResponse = this.ajaxFetchProcessResponse === null\r\n                  ? this._processResults(data, params)\r\n                  : this.ajaxFetchProcessResponse(data, params);\r\n\r\n                // console.log({ \"totalShowing-1\": totalShowing });\r\n                totalShowing += processedResponse.results.length;\r\n                // console.log({ \"totalShowing-2\": totalShowing });\r\n\r\n                return {\r\n                  results: processedResponse.results,\r\n                  pagination: {\r\n                    // @ts-ignore\r\n                    more: totalShowing < processedResponse.total\r\n                  }\r\n                };\r\n              },\r\n              cache: true\r\n            },\r\n            placeholder: this.label,\r\n          });\r\n          S2.on('select2:opening', (e) => {\r\n            // console.log({ e });\r\n            startSearchPage = 0\r\n            totalShowing = 0;\r\n          });\r\n        });\r\n      }\r\n\r\n      const SELECT2s = this.querySelectorAll('.select2-container');\r\n      // console.log({SELECT2s})\r\n      SELECT2s.forEach(SELECT2 => {\r\n        SELECT2.setAttribute('style', 'width: 100% !important; pointer-events: auto !important;');\r\n      });\r\n    }\r\n  }\r\n\r\n  private _processResults(data: any, params: any): SelectInputProcessedAjaxResponse_I {\r\n    const response = data;\r\n    params.page = params.page || 0;\r\n    // console.log({ \"smbfl-response\": response, \"check\": response.error === false });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (response.error === false) {\r\n      var _data = response['data'];\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['fullName'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n          // $($select).append($('<option>', { fullName: id }).text(fullName));\r\n        }\r\n      }\r\n    }\r\n    this.totalShowing += processedData.length;\r\n    return {\r\n      results: processedData,\r\n      total: response.total,\r\n      totalShowing: this.totalShowing\r\n    };\r\n  }\r\n\r\n  // @ts-ignore\r\n  private changeAction(changeActionEvent: Event<HTMLSelectElement, DataParams>) {\r\n    // // console.log({ changeActionEvent });\r\n    // // @ts-ignore\r\n    // const selectedOptions = changeActionEvent.target.selectedOptions;\r\n    // let currentValue: number[] = [];\r\n    // for (const iterator of selectedOptions) {\r\n    //   let selectedOption: HTMLOptionElement = iterator;\r\n    //   // console.log({ iterator, selectedOption });\r\n    //   const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n    //   if (!currentValue.includes(value)) {\r\n    //     currentValue.push(value);\r\n    //   }\r\n    // }\r\n    // this.currentValue = currentValue;\r\n    // // console.log({'this.querySelector(`[input_id=\"${this.input_id}\"]`)': this.querySelector(`[input_id=\"${this.input_id}\"]`)})\r\n    // @ts-ignore\r\n    const selectedOptions2 = this.querySelector(`[input_id=\"${this.input_id}\"]`).selectedOptions;\r\n    let currentValue2: number[] = [];\r\n    for (const iterator of selectedOptions2) {\r\n      let selectedOption: HTMLOptionElement = iterator;\r\n      // console.log({ iterator, selectedOption });\r\n      const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n      if (!currentValue2.includes(value)) {\r\n        currentValue2.push(value);\r\n      }\r\n    }\r\n    // console.log({ currentValue, currentValue2 });\r\n    this.currentValue = currentValue2;\r\n    // @ts-ignore\r\n    this.querySelector(`[input_id=\"${this.input_id}\"]`).setAttribute(\"currentValue\", currentValue2)\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/admin/user/form.scss';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-tab';\r\nimport '@material/mwc-tab-bar';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { ClientUsers_I } from '@@addons/interfaces/clients/users';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport { POST_ClientUserGroupSubgroup } from '@@addons/network/clients/users/group_subgroup_add';\r\nimport { PUT_ClientUserGroupSubgroup } from '@@addons/network/clients/users/group_subgroup_update';\r\nimport { GroupModel, Convert as gmConvert } from '@@addons/interfaces/members/groupings/group/models';\r\nimport { SubGroupModel, Convert as sgmConvert } from '@@addons/interfaces/members/groupings/subgroup/models';\r\nimport { ClientUserGroupSubgroupModel } from '@@addons/interfaces/clients/users/model/group_subgroup';\r\n\r\n\r\ntype groupSubgroupType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-admin-user-group-subgroup-form\")\r\nexport class PdbAdminUserGroupSubgroupForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public userId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  public edit: \"true\" | \"false\" = \"false\";\r\n\r\n  @property({ type: Boolean })\r\n  public editAccess?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public isEditable?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public page_type: \"mine\" | \"not-mine\" = \"mine\";\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: SubGroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  private get _clientUserDefault(): NetworkCallResponse_I<ClientUsers_I> {\r\n    const user: ClientUsers_I = {};\r\n    return { data: user, message: \"\", success: false }\r\n  }\r\n\r\n  private _clientUser: NetworkCallResponse_I<ClientUsers_I> = this._clientUserDefault;\r\n\r\n  public set clientUser(value: NetworkCallResponse_I<ClientUsers_I>) {\r\n    this._clientUser = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUser(): NetworkCallResponse_I<ClientUsers_I> {\r\n    return this._clientUser;\r\n  }\r\n\r\n  private get _clientUserGroupSubgroupDefault(): NetworkCallResponse_I<ClientUserGroupSubgroupModel> {\r\n    const groupSubgroup: ClientUserGroupSubgroupModel = {};\r\n    return { data: groupSubgroup, message: \"\", success: false }\r\n  }\r\n\r\n  private _clientUserGroupSubgroup: NetworkCallResponse_I<ClientUserGroupSubgroupModel> = this._clientUserGroupSubgroupDefault;\r\n\r\n  public set clientUserGroupSubgroup(value: NetworkCallResponse_I<ClientUserGroupSubgroupModel>) {\r\n    this._clientUserGroupSubgroup = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUserGroupSubgroup(): NetworkCallResponse_I<ClientUserGroupSubgroupModel> {\r\n    return this._clientUserGroupSubgroup;\r\n  }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    await this.getBranches();\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n\r\n    // console.log({\"clientUser\": this.clientUser});\r\n    // console.log({\"clientUserGroupSubgroup\": this.clientUserGroupSubgroup});\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.edit === \"true\") {\r\n      if (this.page_type === \"mine\") {\r\n        this.isEditable = true;\r\n      } else {\r\n        if (this.editAccess) {\r\n          this.isEditable = true;\r\n        } else {\r\n          this.isEditable = false;\r\n        }\r\n      }\r\n      return html`\r\n        ${this.groupSubgroup}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.form}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get groupSubgroup() {\r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User Group(s)/ Sub-Group(s)</h1>\r\n                  <h3 class=\"h3\">Update Admin User Group(s)/ Sub-Group(s)!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user-group-subgroup\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.accessFieldSelectBox}\r\n                  <div class=\"col-md-12 col-lg-8\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\" />\r\n                    <input type=\"hidden\" name=\"userId\" id=\"userId\" value=\"${this.userId}\" />\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Update Group(s)/ Subgroup(s)\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n      \r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get form() {\r\n\r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User Group(s)/ Sub-Group(s)</h1>\r\n                  <h3 class=\"h3\">Add Admin User Group(s)/ Sub-Group(s)!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user-group-subgroup\"\r\n                enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n      \r\n                  ${this.accessFieldSelectBox}\r\n                  <div class=\"col-md-12 col-lg-8\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\" />\r\n                    <input type=\"hidden\" name=\"userId\" id=\"userId\" value=\"${this.userId}\" />\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Add Group(s)/ Sub-Group(s)\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n      \r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get groupsSubgroups() {\r\n    type returnType = { groups: groupSubgroupType[], subgroups: groupSubgroupType[] };\r\n    let groups: groupSubgroupType[] = [];\r\n    let subgroups: groupSubgroupType[] = [];\r\n\r\n    const clientUserGroupSubgroup = this.clientUserGroupSubgroup,\r\n      _data = clientUserGroupSubgroup.data,\r\n      DATA = Array.isArray(_data) ? _data[0] : _data,\r\n      SUCCESS = clientUserGroupSubgroup.success;\r\n\r\n    this._groups.forEach(_group => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (SUCCESS) {\r\n        DATA?.group.forEach(group => {\r\n          if (group.id === _group.id) {\r\n            isSelected = true;\r\n            isSelectedAlt = \"true\";\r\n          }\r\n        });\r\n      }\r\n      const group: groupSubgroupType = {\r\n        id: _group.id, name: _group.group, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!groups.includes(group)) {\r\n        groups.push(group);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._subgroups\": this._subgroups})\r\n    this._subgroups.forEach(_subgroup => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (SUCCESS) {\r\n        DATA?.subgroup.forEach(subgroup => {\r\n          if (subgroup.id === _subgroup.id) {\r\n            isSelected = true;\r\n            isSelectedAlt = \"true\";\r\n          }\r\n        });\r\n      }\r\n      const subgroup: groupSubgroupType = {\r\n        id: _subgroup.id, name: `${_subgroup.groupID.group} => ${_subgroup.subgroup}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!subgroups.includes(subgroup)) {\r\n        subgroups.push(subgroup);\r\n      }\r\n    });\r\n\r\n    const _returnType: returnType = {\r\n      groups: groups, subgroups: subgroups,\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private get accessFieldSelectBox() {\r\n    const groupsSubgroups = this.groupsSubgroups,\r\n      groups = groupsSubgroups.groups,\r\n      subgroups = groupsSubgroups.subgroups;\r\n\r\n    return html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select User Group(s)</h4>\r\n        <select-input name=\"group\" multiple class=\"w-full\" id=\"group\" label=\"Select User Group(s)\" .options=\"${groups}\"\r\n          outlined required>\r\n        </select-input>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select User Sub-Group(s)</h4>\r\n        <select-input name=\"subgroup\" multiple class=\"w-full\" id=\"subgroup\" label=\"Select User Sub-Group(s)\"\r\n          .options=\"${subgroups}\" outlined required>\r\n        </select-input>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<any>();\r\n    let __groups: GroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // console.log({\"_networkResponse.response.data\": _networkResponse.response.data});\r\n\r\n        const DATA: GroupModel[] = _networkResponse.response.data.map((group: any) => gmConvert.toGroupModel(JSON.stringify(group)));\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<GroupModel> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n  }\r\n\r\n  private async getSubGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<any>();\r\n    let __subgroups: SubGroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: SubGroupModel[] = _networkResponse.response.data.map((subgroup: any) => sgmConvert.toSubGroupModel(JSON.stringify(subgroup)));\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<SubGroupModel> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n\r\n    if (this.edit === \"true\") {\r\n      if (this.isEditable) {\r\n        const clientUserGroupSubgroup = this.clientUserGroupSubgroup,\r\n          _data = clientUserGroupSubgroup.data,\r\n          DATA = Array.isArray(_data) ? _data[0] : _data,\r\n          SUCCESS = clientUserGroupSubgroup.success;\r\n        if (SUCCESS) {\r\n          try {\r\n          await PUT_ClientUserGroupSubgroup(DATA.id);\r\n            \r\n          } catch (error) {\r\n            await POST_ClientUserGroupSubgroup();\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientUserGroupSubgroup(ID: Number): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user-group-subgroup/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user-group-subgroup\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update user group(s)/ subgroup(s)?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_ClientUserGroupSubgroup(): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user-group-subgroup',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user-group-subgroup\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add group(s)/ subgroup(s)?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import{_$LH as o}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{I:l}=o,t=o=>null===o||\"object\"!=typeof o&&\"function\"!=typeof o,i={HTML:1,SVG:2},n=(o,l)=>void 0===l?void 0!==(null==o?void 0:o._$litType$):(null==o?void 0:o._$litType$)===l,d=o=>void 0!==(null==o?void 0:o._$litDirective$),v=o=>null==o?void 0:o._$litDirective$,e=o=>void 0===o.strings,c=()=>document.createComment(\"\"),r=(o,t,i)=>{var n;const d=o._$AA.parentNode,v=void 0===t?o._$AB:t._$AA;if(void 0===i){const t=d.insertBefore(c(),v),n=d.insertBefore(c(),v);i=new l(t,n,o,o.options)}else{const l=i._$AB.nextSibling,t=i._$AM,e=t!==o;if(e){let l;null===(n=i._$AQ)||void 0===n||n.call(i,o),i._$AM=o,void 0!==i._$AP&&(l=o._$AU)!==t._$AU&&i._$AP(l)}if(l!==v||e){let o=i._$AA;for(;o!==l;){const l=o.nextSibling;d.insertBefore(o,v),o=l}}}return i},u=(o,l,t=o)=>(o._$AI(l,t),o),f={},s=(o,l=f)=>o._$AH=l,m=o=>o._$AH,p=o=>{var l;null===(l=o._$AP)||void 0===l||l.call(o,!1,!0);let t=o._$AA;const i=o._$AB.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},a=o=>{o._$AR()};export{i as TemplateResultType,a as clearPart,m as getCommittedValue,v as getDirectiveClass,r as insertPart,d as isDirectiveResult,t as isPrimitive,e as isSingleExpression,n as isTemplateResult,p as removePart,u as setChildPartValue,s as setCommittedValue};\n//# sourceMappingURL=directive-helpers.js.map\n","import{noChange as r,nothing as e}from\"../lit-html.js\";import{directive as i,Directive as t,PartType as n}from\"../directive.js\";import{isSingleExpression as o,setCommittedValue as s}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=i(class extends t{constructor(r){if(super(r),r.type!==n.PROPERTY&&r.type!==n.ATTRIBUTE&&r.type!==n.BOOLEAN_ATTRIBUTE)throw Error(\"The `live` directive is not allowed on child or event bindings\");if(!o(r))throw Error(\"`live` bindings can only contain a single expression\")}render(r){return r}update(i,[t]){if(t===r||t===e)return t;const o=i.element,l=i.name;if(i.type===n.PROPERTY){if(t===o[l])return r}else if(i.type===n.BOOLEAN_ATTRIBUTE){if(!!t===o.hasAttribute(l))return r}else if(i.type===n.ATTRIBUTE&&o.getAttribute(l)===t+\"\")return r;return s(i),t}});export{l as live};\n//# sourceMappingURL=live.js.map\n"],"names":["GET_ClientBranches","type","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","GET_MemberGroupingsGroups","url_params","GET_MemberGroupingsSubGroups","SelectInput","name","label","value","randomID","Math","floor","random","input_id","this","id","options","ajaxFetchToken","ajaxFetchUrl","_ajaxHeader","ajaxFetchProcessResponse","ajaxFetchUrlParams","startSearchPage","startNumber","rowsPerPage","totalShowing","showSelectorLoaded","ajaxHeader","requestUpdate","connectedCallback","super","Array","isArray","setInterval","undefined","selectSelector","document","querySelectorAll","$selectSelector","showDropdownAlt","map","option","optionId","isSelected","forEach","val","valId","selected","render","multiple","required","firstUpdated","formatRepo","repo","loading","text","Number","formatRepoSelection","full_name","_start","params","_this","isNaN","page","on","$this","empty","select2","closeOnSelect","placeholder","e","changeAction","_headers","header","ajax","dataType","delay","data","start","S2","_page","finalParams","term","param","processResults","processedResponse","_processResults","results","length","pagination","more","total","cache","SELECT2","setAttribute","response","processedData","_data","i","item","_new","includes","push","changeActionEvent","selectedOptions2","querySelector","selectedOptions","currentValue2","iterator","selectedOption","currentValue","createRenderRoot","styles","String","Boolean","attribute","Object","PdbAdminUserGroupSubgroupForm","constructor","userId","edit","editAccess","isEditable","page_type","_branches","_groups","_subgroups","_activeBranchId","_userLoginInfo","_clientUser","_clientUserDefault","_clientUserGroupSubgroup","_clientUserGroupSubgroupDefault","message","success","clientUser","clientUserGroupSubgroup","activeBranchId","getBranches","getGroups","getSubGroups","disconnectedCallback","groupSubgroup","form","clientId","accountId","accessFieldSelectBox","submitForm","groupsSubgroups","groups","subgroups","DATA","SUCCESS","_group","isSelectedAlt","group","_subgroup","subgroup","groupID","_networkResponse","__branches","new_data","__groups","date","Date","JSON","stringify","__subgroups","preventDefault","ID","formContainer","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","setTimeout","window","location","reload","PUT_ClientUserGroupSubgroup","POST_ClientUserGroupSubgroup","I","l","t","o","strings","f","s","_$AH","r","Error","update","element","hasAttribute","getAttribute"],"sourceRoot":""}