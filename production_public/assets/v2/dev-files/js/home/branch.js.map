{"version":3,"file":"../../production_public/assets/v2/dev-files/js/home/branch.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/widgets/alert/index.ts","webpack://webpackNumbers/./src/addons/widgets/buttons/link-buttons/link-button.ts","webpack://webpackNumbers/./src/view/home/branch/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/tailwind-output/loading_placeholder.scss';\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '../../../assets/styles/views/widget/alert/alert.scss';\r\n\r\n\r\n@customElement('alert-card')\r\nexport class AlertCard extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  public loading?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public success?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public info?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public warning?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public danger?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public default?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public primary?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public extra_class?: string = \"\";\r\n\r\n  public header?: TemplateResult<1> = null;\r\n\r\n  public content?: TemplateResult<1> = null;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.loading) {\r\n      return html`\r\n        <div class=\"bg-white alert-box p-0 pr-2 mb-2\">\r\n          <div class=\"flex flex-row items-center\">\r\n            <div class=\"flex-shrink pr-4 placeholder--load-wrapper\">\r\n              <div class=\"p-3 placeholder--activity\">\r\n                <i class=\"p-2\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"ml-2 flex-1 placeholder--load-wrapper\">\r\n              <div class=\"placeholder--activity p-2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"alert-box\">\r\n          <div class=\"alert-container ${this.getClass} ${this.extra_class}\">\r\n            <aside class=\"${this.getClass}\">\r\n              <div class=\"padded\">\r\n                ${this.getIcon}\r\n              </div>\r\n            </aside>\r\n            <div class=\"content\">\r\n              ${this.header !== null? html`<header class=\"header\">${this.header}</header>`: nothing}\r\n              ${this.content !== null? html`<main class=\"main\">${this.content}</main>`: nothing}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get getClass() {\r\n    if (this.success) {\r\n      return \"success\";\r\n    }\r\n    if (this.info) {\r\n      return \"info\";\r\n    }\r\n    if (this.warning) {\r\n      return \"warning\";\r\n    }\r\n    if (this.danger) {\r\n      return \"danger\";\r\n    }\r\n    if (this.default) {\r\n      return html`<mwc-icon></mwc-icon>`;\r\n    }\r\n    if (this.primary) {\r\n      return \"primary\";\r\n    }\r\n  }\r\n\r\n  private get getIcon() {\r\n    if (this.success) {\r\n      return html`<mwc-icon>check_circle_outline</mwc-icon>`;\r\n    }\r\n    if (this.info) {\r\n      return html`<mwc-icon>notification_important</mwc-icon>`;\r\n    }\r\n    if (this.warning) {\r\n      return html`<mwc-icon>warning</mwc-icon>`;\r\n    }\r\n    if (this.danger) {\r\n      return html`<mwc-icon>error_outline</mwc-icon>`;\r\n    }\r\n    if (this.default) {\r\n      return html`<mwc-icon>priority_high</mwc-icon>`;\r\n    }\r\n    if (this.primary) {\r\n      return html`<mwc-icon>star_outline</mwc-icon>`;\r\n    }\r\n\r\n    return html`<mwc-icon>emoji_objects</mwc-icon>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n@customElement('link-button')\r\nexport class LinkButton extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public aClass?: string;\r\n\r\n  @property({ type: String })\r\n  public bClass?: string;\r\n\r\n  @property({ type: String })\r\n  public icon?: string;\r\n\r\n  @property({ type: String })\r\n  public href?: string;\r\n\r\n  @property({ type: String })\r\n  public label?: string;\r\n\r\n  @property({ type: String })\r\n  public isBlockContent?: \"true\" | \"false\" = \"true\";\r\n\r\n  @property({ type: Boolean })\r\n  public raised?: boolean = false;\r\n  \r\n  render() {\r\n    const _aClass = this.thisIsBlockContent('mdc-deprecated-list-item');\r\n    const _bClass = this.thisIsBlockContent('mdc-deprecated-list-item__ripple');\r\n    if (this.raised === true) {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass} no-underline hover:no-underline\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" raised icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass}\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    }\r\n  }\r\n\r\n  thisIsBlockContent(value: string) {\r\n    return this.isBlockContent === \"true\" ? value : \"\";\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport '@material/mwc-select';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { getActiveBranchIdCookie, setActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport '@@addons/widgets/alert';\r\n\r\n@customElement(\"pdb-branch-element\")\r\nexport class PdbBranchElement extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private _myBranchId: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    \r\n    await this.getBranches();\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null)? null: [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"mb-4\">\r\n        <div class=\"col-md-12 col-lg-12 my-2\">\r\n          ${this.activeBranch}\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-12 my-2\">\r\n          ${this.myBranch}\r\n        </div>\r\n        ${this.branchSelector}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get activeBranch() {\r\n    let activeBranch = 0;\r\n    // console.log({\"this._activeBranchId\": this._activeBranchId});\r\n    \r\n    if (this._activeBranchId !== null) {\r\n      if (this._activeBranchId.length > 0) {\r\n        activeBranch = this._activeBranchId[0].id;\r\n      }\r\n    }\r\n\r\n    let _branch: ClientBranches_I = null;  \r\n    this._branches.forEach((branch) => {\r\n      // console.log({\"activeBranch\": activeBranch});\r\n      // console.log({\"branch.id\": branch.id});\r\n      if (branch.id === activeBranch) {\r\n        _branch = branch;\r\n      }\r\n    });\r\n    if (_branch !== null) {\r\n      const header = html`<h4 class=\"text-white\">Active Branch</h4>`;\r\n      const content = html`<div>\r\n        <h1 class=\"text-white mb-2 text-xl\">${_branch.name}</h1>\r\n      </div>`;\r\n      return html`<alert-card success .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    }\r\n    return html``;\r\n  }\r\n\r\n  private get myBranch() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n\r\n    let _branch: ClientBranches_I = null;  \r\n    this._branches.forEach((branch) => {\r\n      // console.log({\"userBranch\": userBranch});\r\n      // console.log({\"branch.id\": branch.id});\r\n      \r\n      if (branch.id === userBranch) {\r\n        _branch = branch;\r\n        this._myBranchId = branch.id;\r\n      }\r\n    });\r\n\r\n    if (_branch === null) {\r\n      const header = html`<h4 class=\"text-white\">No Branch Found</h4>`;\r\n      const content = html`<div>\r\n        <p class=\"text-white\">User Branch Not Found!</p>\r\n      </div>`;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n      const header = html`<h4 class=\"text-primary\">${_branch.name}</h4>`;\r\n      const content = html`<div>\r\n        <p class=\"text-black mb-2\">Click on the button below to set as active branch</p>\r\n        <mwc-button label=\"Set Active\" id=\"${_branch.id}\" name=\"${_branch.name}\"\r\n          accountId=\"${_branch.accountId}\" raised class=\"primary\"\r\n          setMyBranchAsActive @click=\"${this.setMyBranchAsActive}\"></mwc-button>\r\n      </div>`;\r\n      return html`<alert-card info .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    }\r\n  }\r\n\r\n  private get branchSelector() {\r\n    if (this._myBranchId === 1) {\r\n      return html`\r\n        <div class=\"col-md-8 col-lg-6 my-2\">\r\n          <h3 class=\"font-semibold my-2\">Select Branch</h3>\r\n          <mwc-select name=\"branchId\" setSelectedBranchAsActiveList class=\"w-full\" id=\"branchId\" label=\"Select Branch\" outlined required>\r\n            <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n            ${this._branches.map((value) => {\r\n              // console.log({ \"schedule.type\": schedule.type, \"value.id\": value.id });\r\n              return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n            })}\r\n          </mwc-select>\r\n          <mwc-button label=\"Set Active\" raised class=\"flex mt-2\"\r\n            setSelectedBranchAsActive @click=\"${this.setSelectedBranchAsActive}\"></mwc-button>\r\n        </div>\r\n      `;\r\n    }\r\n    return nothing;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private setMyBranchAsActive(event: any) {\r\n    event.preventDefault();\r\n    this.querySelectorAll('mwc-button[setMyBranchAsActive]').forEach(btn => {\r\n      const _ID_ = btn.getAttribute('id');\r\n      const ID = Number(_ID_);\r\n      const _NAME_ = btn.getAttribute('name');\r\n      // @ts-ignore\r\n      const NAME = String(_NAME_);\r\n      const _ACCOUNT_ID_ = btn.getAttribute('accountId');\r\n      // @ts-ignore\r\n      const ACCOUNT_ID = Number(_ACCOUNT_ID_);\r\n      // console.log({_ID_, _NAME_, _ACCOUNT_ID_});\r\n      // console.log({btn, ID, NAME, ACCOUNT_ID});\r\n      \r\n      setActiveBranchIdCookie({id: ID, name: NAME, accountId: ACCOUNT_ID});\r\n      window.location.reload();\r\n    });\r\n  }\r\n\r\n  private setSelectedBranchAsActive(event: any) {\r\n    event.preventDefault();\r\n    this.querySelectorAll('mwc-select[setSelectedBranchAsActiveList]').forEach(item => {\r\n      // @ts-ignore\r\n      const ID = Number(item.value);\r\n\r\n      let _branch: ClientBranches_I = null;  \r\n      this._branches.forEach((branch) => {\r\n        // console.log({\"ID\": ID});\r\n        // console.log({\"branch.id\": branch.id});\r\n        if (branch.id === ID) {\r\n          _branch = branch;\r\n        }\r\n      });\r\n      \r\n      if (_branch !== null) {\r\n        setActiveBranchIdCookie(_branch);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","userLoginInfo","setActiveBranchIdCookie","data","stringData","JSON","stringify","set_cookies","base64Encode","removeActiveBranchIdCookie","getActiveBranchIdCookie","get_cookie","_cookie","base64Decode","cookie","parse","clientBranchInfo_S","ClientBranch_S","id","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","GET_ClientBranches","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","AlertCard","LitElement","constructor","super","loading","success","info","warning","danger","default","primary","extra_class","header","content","connectedCallback","disconnectedCallback","render","this","html","getClass","getIcon","nothing","firstUpdated","createRenderRoot","styles","css","property","Boolean","customElement","LinkButton","isBlockContent","raised","_aClass","thisIsBlockContent","_bClass","aClass","href","bClass","icon","label","value","PdbBranchElement","_myBranchId","_branches","_activeBranchId","_userLoginInfo","getBranches","activeBranchId","activeBranch","myBranch","branchSelector","length","_branch","forEach","branch","userBranch","user","branchId","setMyBranchAsActive","map","setSelectedBranchAsActive","event","preventDefault","querySelectorAll","btn","_ID_","getAttribute","ID","_NAME_","NAME","_ACCOUNT_ID_","ACCOUNT_ID","window","location","reload","item","_networkResponse","__branches","push","response","new_data","Array"],"sourceRoot":""}