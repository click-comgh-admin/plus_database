{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_home_branch_button_ts.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/https/network_status.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/login/verify_token.ts","webpack://webpackNumbers/./src/addons/widgets/buttons/link-buttons/link-button.ts","webpack://webpackNumbers/./src/view/home/branch/button.ts"],"sourcesContent":["export const GetNetworkStatus = (\r\n  online: (status: string) => void,\r\n  offline: (status: string) => void) => {\r\n  if (navigator.onLine === true) {\r\n    return online(\"online\");\r\n  } else {\r\n    return offline(\"offline\");\r\n  }\r\n}\r\n\r\nexport const GetNetworkStatusEvent = (self: { dispatchEvent: (arg0: CustomEvent<{ onlineStatus: boolean; }>) => void; }) => {\r\n  let newMessage = new CustomEvent('get-online-status', {\r\n    cancelable: true,\r\n    detail: { onlineStatus: navigator.onLine }\r\n  });\r\n\r\n  // dispatchEvent(newMessage);\r\n  self.dispatchEvent(newMessage);\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { GetNetworkStatus } from \"@@addons/functions/https/network_status\";\r\nimport { getUserLoginInfoCookie, LogUserOut} from \"@@addons/functions/login\";\r\n\r\nexport async function POST_VerifyToken(verify_token: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/verify-token',\r\n    formData = { \"token\": verify_token === null? _get_cookie.token: verify_token };\r\n\r\n  GetNetworkStatus(async online => {\r\n    // console.log({ \"networkStatus\": online });\r\n    // console.log({ \"networkStatus\": \"we are online\" });\r\n    return await http(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData),\r\n    }, true).then((HTTP) => {\r\n\r\n      // console.log({ HTTP });\r\n      const response = HTTP.jsonData;\r\n      if ((\"expiry\" in response) && (\"token\" in response) && (\"user\" in response)) {\r\n      } else {\r\n        // console.log({ 'HTTP-HTTP-HTTP': HTTP });\r\n        LogUserOut();\r\n        window.location.href = \"/login\";\r\n      }\r\n\r\n    })\r\n  }, offline => { null; });\r\n}","import { LitElement, html } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n@customElement('link-button')\r\nexport class LinkButton extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public aClass?: string;\r\n\r\n  @property({ type: String })\r\n  public bClass?: string;\r\n\r\n  @property({ type: String })\r\n  public icon?: string;\r\n\r\n  @property({ type: String })\r\n  public href?: string;\r\n\r\n  @property({ type: String })\r\n  public label?: string;\r\n\r\n  @property({ type: String })\r\n  public isBlockContent?: \"true\" | \"false\" = \"true\";\r\n\r\n  @property({ type: Boolean })\r\n  public raised?: boolean = false;\r\n  \r\n  render() {\r\n    const _aClass = this.thisIsBlockContent('mdc-deprecated-list-item');\r\n    const _bClass = this.thisIsBlockContent('mdc-deprecated-list-item__ripple');\r\n    if (this.raised === true) {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass} no-underline hover:no-underline\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" raised icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass}\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    }\r\n  }\r\n\r\n  thisIsBlockContent(value: string) {\r\n    return this.isBlockContent === \"true\" ? value : \"\";\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/branch/main.scss';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { POST_VerifyToken } from '@@addons/network/login/verify_token';\r\n\r\n@customElement(\"pdb-branch-button\")\r\nexport class PdbBranchButton extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private URL = '/account/settings/branch';\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    const getActiveBranchId = getActiveBranchIdCookie();\r\n    // console.log({ getActiveBranchId });\r\n\r\n    if (getActiveBranchId === null) {\r\n      this.redirect();\r\n    } else {\r\n      if (getActiveBranchId.id === 0) {\r\n        this.redirect();\r\n      }\r\n      await POST_VerifyToken();\r\n    }\r\n  }\r\n\r\n  private redirect() {\r\n    if (!window.location.href.includes(this.URL)) {\r\n      window.location.href = this.URL;\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <link-button isblockcontent=\"true\" aClass=\"\" raised bClass=\"button info w-full\" href=\"${this.URL}\" icon=\"call_split\"\r\n        label=\"Change Branch\"></link-button>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["GetNetworkStatus","online","offline","navigator","onLine","GetNetworkStatusEvent","self","newMessage","CustomEvent","cancelable","detail","onlineStatus","dispatchEvent","userLoginInfo","setActiveBranchIdCookie","data","stringData","JSON","stringify","set_cookies","base64Encode","removeActiveBranchIdCookie","getActiveBranchIdCookie","get_cookie","_cookie","base64Decode","cookie","parse","clientBranchInfo_S","ClientBranch_S","id","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","POST_VerifyToken","verify_token","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","token","http","method","body","then","HTTP","response","jsonData","LogUserOut","window","location","href","LinkButton","LitElement","isBlockContent","raised","render","_aClass","this","thisIsBlockContent","_bClass","html","aClass","bClass","icon","label","value","createRenderRoot","property","type","Boolean","customElement","PdbBranchButton","constructor","super","URL","connectedCallback","getActiveBranchId","redirect","includes","disconnectedCallback","firstUpdated","styles","css"],"sourceRoot":""}