{"version":3,"file":"../../production_public/assets/v2/dev-files/js/additional-registration/creator/view.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/network/additional_registration/delete.ts","webpack://webpackNumbers/./src/view/additional-registration/creator/form/edit.ts","webpack://webpackNumbers/./src/view/additional-registration/creator/view.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_AdditionalRegistrationQuestion(questionId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/additonal-registration/questions/' + questionId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Question?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-dialog';\r\nimport '@material/mwc-button'\r\nimport '@material/mwc-icon';\r\nimport \"../edit\";\r\nimport {base64Decode} from '@@addons/functions/base64';\r\nimport { AdditionalRegistrationModel, Convert as armConvert, AdditionalRegistrationQuestionTypeModel } from '@@addons/interfaces/additional_registration';\r\n\r\n\r\n@customElement(\"question-edit-btn-component\")\r\nexport class QuestionEditBtnComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public questionData: string = \"{}\";\r\n\r\n  @property({ type: Number })\r\n  public clientId: number = 0;\r\n\r\n  @property({ type: Number })\r\n  public meetingEventId: number = 0;\r\n\r\n  @property({ type: String })\r\n  public arQuestionTypeData: string = \"[]\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    // console.log({\"this.questionData--_1--this.questionData\": base64Decode(this.questionData)})\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const question: AdditionalRegistrationModel = armConvert.toAdditionalRegistrationModel(String(base64Decode(this.questionData)));\r\n    const questionType = JSON.parse(base64Decode(this.arQuestionTypeData));\r\n\r\n    // console.log({\"this.questionData--_2--this.questionData\": question})\r\n    return html`\r\n      <div class=\"whitespace-nowrap px-1\">\r\n        <mwc-button class=\"warning w-full mx-1\" icon=\"edit\" @click=\"${this.showDialog}\"\r\n            raised open-dialog-btn=\"multiple-additional-registration--questions---${question.id}\">\r\n        </mwc-button>\r\n        <additional-registration-creator-edit multiple-additional-registration=\"questions---${question.id}\" clientId=\"${this.clientId}\"\r\n          .questionData=\"${[question]}\" .arQuestionTypeData=\"${questionType}\" meetingEventId=\"${this.meetingEventId}\">\r\n        </additional-registration-creator-edit>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private showDialog(event: any) {\r\n    event.preventDefault();\r\n    // console.log({event})\r\n\r\n    const dialogId: number = (event.currentTarget.getAttribute('open-dialog-btn'));\r\n    const dialog = this.querySelector('[open-this-dialog=\"' + dialogId + '\"]');\r\n    dialog.setAttribute('open', \"true\");\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport '@@views/no_access/account_expired';\r\nimport '@material/mwc-tab';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-tab-bar';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { tokenLogin } from \"@@addons/functions/login/main\";\r\nimport '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { DELETE_AdditionalRegistrationQuestion } from '@@addons/network/additional_registration/delete';\r\nimport { GET_AdditionalRegistrationQuestionType } from '@@addons/network/additional_registration/types';\r\nimport './form/edit';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { AdditionalRegistrationModel, Convert as armConvert, AdditionalRegistrationQuestionTypeModel } from '@@addons/interfaces/additional_registration';\r\n\r\n\r\n@customElement(\"additional-registration-creator-view\")\r\nexport class AdditionalRegistrationCreatorView extends LitElement {\r\n    constructor() {\r\n        super();\r\n        \r\n    }\r\n\r\n    @property({ type: Number })\r\n    public CLIENT_ID: number = 0;\r\n\r\n    @property({ type: Array })\r\n    public _data?: Array<string> = [];\r\n\r\n    @property({ type: Array })\r\n    public _arQuestionType: Array<AdditionalRegistrationQuestionTypeModel> = [];\r\n\r\n    @property({ type: Object })\r\n    private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n    async connectedCallback() {\r\n        super.connectedCallback();\r\n        this.urlQueryParams = urlQueryParams();\r\n\r\n        await this.getAdditionalRegistrationQuestionType();\r\n    }\r\n\r\n    disconnectedCallback() { }\r\n    static styles = [\r\n        css`\r\n   :host { display: block; }\r\n  `\r\n    ];\r\n\r\n    render() {\r\n        return html`<div class=\"shadow bg-white p-2 my-2\">${this.schedule}</div>`;\r\n    }\r\n\r\n    private get schedule() {\r\n        return html`${this.table}`;\r\n    }\r\n\r\n    firstUpdated() {\r\n\r\n    }\r\n\r\n    private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n        return [\r\n            { title: 'Question', },\r\n            { title: 'Action', },\r\n        ];\r\n    }\r\n\r\n    private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n        return [];\r\n    }\r\n\r\n    private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n        return [\r\n            { title: 'Question', },\r\n            { title: 'Action', },\r\n        ];\r\n    }\r\n\r\n    private get table(): TemplateResult {\r\n        const __dataTable = this.__dataTable();\r\n        let ajaxHeader: { Authorization?: string } = {};\r\n        const _get_cookie = getUserLoginInfoCookie();\r\n        ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n        return html`\r\n            <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\"  .dt_body=\"${this.__tableBody}\"\r\n                .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n        `;\r\n    }\r\n\r\n    private __dataTable(): DataTables_Settings_I {\r\n        const __this = this,\r\n            url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/additonal-registration/questions/?datatable_plugin';\r\n\r\n        // console.log({ \"projects\": this._questionnaireResponses });\r\n        let dataTable: DataTables_Settings_I = {\r\n            'order': [[0, 'desc']],\r\n            'processing': true,\r\n            'serverSide': true,\r\n            'ajax': {\r\n                // @ts-ignore\r\n                url: url,\r\n                dataSrc: 'data',\r\n                apiType: \"akwaabaApp\",\r\n            },\r\n            \"columns\": [\r\n                {\r\n                    data: 'id',\r\n                    render: (data: any, type: any, row: any) => __this.renderRow1Info(data, type, row),\r\n                    orderable: true,\r\n                },\r\n                {\r\n                    data: 'clientId',\r\n                    render: (data: any, type: any, row: any) => __this.renderRow2Info(data, type, row),\r\n                    orderable: true\r\n                },\r\n\r\n            ],\r\n            'columnDefs': [\r\n                {\r\n                    targets: ['_all'],\r\n                    className: 'mdc-data-table__cell',\r\n                    // @ts-ignore\r\n                    checkboxes: {\r\n                        selectRow: true\r\n                    },\r\n                }\r\n            ],\r\n            'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n            \"drawCallback\": async function (e) {\r\n                const aoData = e.aoData;\r\n                __this.removeQuestionBtns();\r\n            },\r\n            \"responsive\": true,\r\n            \"dom\": 'Blfrtip',\r\n            buttons: [\r\n                'selected',\r\n                'selectedSingle',\r\n                'selectAll',\r\n                'selectNone',\r\n                'selectRows',\r\n                'selectColumns',\r\n                'selectCells',\r\n                'pdf',\r\n                'excel',\r\n                'copy',\r\n                'csv',\r\n            ],\r\n            select: true,\r\n            // \"select\": {\r\n            //   \"style\": \"multi\"\r\n            // },\r\n        };\r\n        return dataTable;\r\n    }\r\n\r\n    renderRow1Info(data: any, type: any, row: any): any {\r\n        console.log({ \"row-row\": row });\r\n        // console.log({ \"JSON.stringify(row)-JSON.stringify(row)\": JSON.stringify(row) });\r\n\r\n        // const question: MeetingEventQuestionModel = metConvert.toMeetingEventQuestionModel(JSON.stringify(row));\r\n        // console.log({ \"question-question\": question });\r\n\r\n        return `\r\n            <div class=\"flex align-middle items-center whitespace-nowrap px-1\">\r\n                <b class=\"text-1xl font-bold\">Question:</b> \r\n                <small class=\"px-1\">${row.question}</small>\r\n            </div>\r\n            <div class=\"flex align-middle items-center whitespace-nowrap px-1\">\r\n                <b class=\"text-1xl font-bold\">Placeholder:</b> \r\n                <small class=\"px-1\">${row.placeholderInstruction}</small>\r\n            </div>\r\n            <div class=\"flex align-middle items-center whitespace-nowrap px-1\">\r\n                <b class=\"text-1xl font-bold\">Type:</b> \r\n                <small class=\"px-1\">${row.typeInfo.name}</small>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    renderRow2Info(data: any, type: any, row: any): any {\r\n\r\n        const question: AdditionalRegistrationModel = armConvert.toAdditionalRegistrationModel(JSON.stringify(row));\r\n        console.log({ \"question-question\": question });\r\n\r\n        return `\r\n          <div class=\"flex align-middle items-center\">\r\n            <question-edit-btn-component questionData=${base64Encode(JSON.stringify(question))} arQuestionType=\"${base64Encode(JSON.stringify(this._arQuestionType))}\"></question-edit-btn-component>\r\n            <div><a href=\"${CONSTANTS.URLS.PDB_CLIENT}additional-registration/creator/creator-edit?question=${base64Encode(JSON.stringify(question.id))}\" target=\"_blank\"><mwc-button class=\"ml-1 warning\" raised edit-this-item=\"${question.id}\" >\r\n            <mwc-icon class=\"mr-1\">edit</mwc-icon>\r\n            </mwc-button></a><mwc-button class=\"ml-1 danger\" raised delete-this-item=\"${question.id}\" >\r\n            <mwc-icon class=\"mr-1\">delete_forever</mwc-icon>\r\n            </mwc-button></div>\r\n          </div>\r\n        `;\r\n    }\r\n\r\n    private removeQuestionBtns() {\r\n        const selectorString = 'delete-this-item';\r\n        document.querySelectorAll('[' + selectorString + ']').forEach(verify_member => {\r\n            verify_member.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                this.removeQuestionAction(verify_member, selectorString, e);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    private async removeQuestionAction(element: Element, selectorString: string, e: any) {\r\n        e.preventDefault();\r\n\r\n        const memberID = element.getAttribute(selectorString);\r\n\r\n        if (!Number.isNaN(memberID) && Number(memberID) !== 0) {\r\n            await DELETE_AdditionalRegistrationQuestion(Number(memberID));\r\n        }\r\n    }\r\n\r\n    private async getAdditionalRegistrationQuestionType() {\r\n      const _networkResponse = await GET_AdditionalRegistrationQuestionType<AdditionalRegistrationQuestionTypeModel>();\r\n      let __arQuestionType: AdditionalRegistrationQuestionTypeModel[] = [];\r\n  \r\n      if (_networkResponse === null) {\r\n        __arQuestionType.push({ id: 0, name: \"**NOT FOUND**\" });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const DATA: AdditionalRegistrationQuestionTypeModel[] = _networkResponse.response.data;\r\n          // console.log({DATA});\r\n          __arQuestionType = DATA;\r\n        }\r\n      }\r\n      const new_data: Array<AdditionalRegistrationQuestionTypeModel> = [];\r\n      new_data.push(...this._arQuestionType, ...__arQuestionType);\r\n      this._arQuestionType = new_data;\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","DELETE_AdditionalRegistrationQuestion","questionId","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","forEach","e","err","push","error","res","https_swal_error_format","console","errorHttp","postForm","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","QuestionEditBtnComponent","LitElement","constructor","super","questionData","clientId","meetingEventId","arQuestionTypeData","connectedCallback","disconnectedCallback","render","question","base64Decode","this","questionType","parse","html","showDialog","id","firstUpdated","event","preventDefault","dialogId","currentTarget","getAttribute","querySelector","setAttribute","createRenderRoot","styles","css","property","type","Number","customElement","AdditionalRegistrationCreatorView","CLIENT_ID","_data","_arQuestionType","urlQueryParams","undefined","getAdditionalRegistrationQuestionType","schedule","table","__tableHeaders","__tableBody","__tableFoot","__dataTable","ajaxHeader","__this","dataSrc","apiType","data","row","renderRow1Info","orderable","renderRow2Info","targets","className","checkboxes","selectRow","aoData","removeQuestionBtns","buttons","select","log","placeholderInstruction","typeInfo","name","base64Encode","selectorString","document","querySelectorAll","verify_member","addEventListener","removeQuestionAction","element","memberID","isNaN","_networkResponse","GET_AdditionalRegistrationQuestionType","__arQuestionType","new_data","Array"],"sourceRoot":""}