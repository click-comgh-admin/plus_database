{"version":3,"file":"../../production_public/assets/v2/dev-files/js/additional-registration/creator/form.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/additional_registration/assign_multiple.ts","webpack://webpackNumbers/./src/view/additional-registration/creator/form.ts","webpack://webpackNumbers/./src/view/additional-registration/creator/form/multiple.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { AdditionalRegistrationOnlyModel } from \"@@addons/interfaces/additional_registration\";\r\n\r\n\r\nexport async function POST_AdditionalRegistrationQuestion(questionData: Array<AdditionalRegistrationOnlyModel>,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  console.log({ questionData });\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/additonal-registration/questions/bulk',\r\n    formData = questionData;\r\n\r\n  return Swal.fire({\r\n    title: 'Add Question(s)?',\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false);\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport '@@assets/styles/views/attendance/setup/form.scss';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport '@@addons/widgets/form/new/select';\r\nimport './form/multiple';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { POST_AdditionalRegistrationQuestion } from '@@addons/network/additional_registration/assign_multiple';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport { GET_AdditionalRegistrationQuestionType } from '@@addons/network/additional_registration/types';\r\nimport { AdditionalRegistrationQuestionTypeModel } from '@@addons/interfaces/additional_registration'; \r\n\r\n\r\n@customElement(\"additional-registration-creator-form\")\r\nexport class AdditionalRegistrationCreatorForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  @property({ type: Object })\r\n  private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranchId: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private userBranch?: number;\r\n\r\n  @property({ type: Array })\r\n  public _arQuestionType: Array<AdditionalRegistrationQuestionTypeModel> = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    this.urlQueryParams = urlQueryParams();\r\n    await this.getBranches();\r\n    await this.getMemberCategories();\r\n    await this.getAdditionalRegistrationQuestionType();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    this.userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 my-2\">\r\n        ${this.form}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get form() {\r\n    // <mwc-icon-button icon=\"library_add\" class=\"success -mt-1 mr-2\" @click=\"${this.addDayField}\">\r\n    // </mwc-icon-button>\r\n    return html`\r\n      <div class=\"form-container\">\r\n        <div class=\" !px-0\">\r\n          <div class=\"-row !px-0\">\r\n            <div class=\"-col-md-12\">\r\n              <header class=\"header warning -col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">New Additional Registration Question(s)</h1>\r\n                  <h3 class=\"h3\">Create New Additional Registration Question(s)!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"add-schedule-member-day\">\r\n                <div class=\"p-0 m-0\" show-dayField=\"all\">\r\n                  <question-multiple-inputs-component .branches=\"${this._branches}\" .memberCategories=\"${this._memberCategories}\" \r\n                    userBranch=\"${this.userBranch}\" .arQuestionType=\"${this._arQuestionType}\">\r\n                  </question-multiple-inputs-component>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Add Additional Registration Question(s)\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    // if (this._memberDays.count > 0) {\r\n    //   await PUT_AttendanceUpdateScheduleDayMultiple(this.meetingMemberId);\r\n    // } else {\r\n    //   await POST_AttendanceAddScheduleDayMultiple();\r\n    // }\r\n    // await POST_AttendanceAddScheduleDayMultiple();\r\n    document.querySelectorAll(\"question-multiple-inputs-component\").forEach(async selector => {\r\n      console.log({ \"selector--selector\": selector });\r\n\r\n      // @ts-ignore\r\n      const multipleQuestionObjects = selector.multipleQuestionObjects[0].items;\r\n      console.log({ \"selector--multipleQuestionObjects\": multipleQuestionObjects });\r\n      await POST_AdditionalRegistrationQuestion(multipleQuestionObjects);\r\n\r\n    });\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n    private async getAdditionalRegistrationQuestionType() {\r\n      const _networkResponse = await GET_AdditionalRegistrationQuestionType<AdditionalRegistrationQuestionTypeModel>();\r\n      let __arQuestionType: AdditionalRegistrationQuestionTypeModel[] = [];\r\n  \r\n      if (_networkResponse === null) {\r\n        __arQuestionType.push({ id: 0, name: \"**NOT FOUND**\" });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const DATA: AdditionalRegistrationQuestionTypeModel[] = _networkResponse.response.data;\r\n          // console.log({DATA});\r\n          __arQuestionType = DATA;\r\n        }\r\n      }\r\n      const new_data: Array<AdditionalRegistrationQuestionTypeModel> = [];\r\n      new_data.push(...this._arQuestionType, ...__arQuestionType);\r\n      this._arQuestionType = new_data;\r\n    }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css, nothing, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\nimport './inputs';\r\nimport { QuestionInputsComponent } from './inputs';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-circular-progress';\r\nimport { ClientBranches_I } from '@@addons/interfaces/clients/branches';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { AdditionalRegistrationFormModel, AdditionalRegistrationOnlyModel } from '@@addons/interfaces/additional_registration';\r\nimport { AdditionalRegistrationQuestionTypeModel } from '@@addons/interfaces/additional_registration'; \r\n\r\n@customElement(\"question-multiple-inputs-component\")\r\nexport class QuestionMultipleInputsComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public meetingEventId: number;\r\n\r\n  @property({ type: Number })\r\n  public currentObjectCount: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public multipleQuestionObjects: AdditionalRegistrationFormModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private removedInputIndex: number[] = [];\r\n\r\n  @property({ type: Array })\r\n  private addedInputIndex: number[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private loading: boolean = true;\r\n\r\n  @property({ type: Array })\r\n  public branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  public userBranch?: number;\r\n\r\n  @property({ type: Array })\r\n  public memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  private _inputs: Array<TemplateResult> = [];\r\n\r\n  @property({ type: Array })\r\n  public arQuestionType: Array<AdditionalRegistrationQuestionTypeModel> = []; \r\n\r\n  private set inputs(value: Array<TemplateResult>) {\r\n    this._inputs = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private get inputs(): Array<TemplateResult> {\r\n    return this._inputs;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    console.log({\"this.branches\": this.branches, \"this.memberCategories\": this.memberCategories});\r\n    \r\n\r\n    // document.onreadystatechange = (event) => {\r\n    //   console.log({\"event-event\": event});\r\n\r\n    //   this.addInput(new Event('click'));\r\n    // //   if (document.readyState == \"complete\") this.addInput(new Event('click'));\r\n    // }\r\n\r\n\r\n    setInterval(() => {\r\n      this.loading = false;\r\n    }, 1);\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  addInput(event: Event) {\r\n    this.currentObjectCount = this.currentObjectCount + 1;\r\n    let newInput = html`<question-inputs-component question-inputs-component--object=\"${this.currentObjectCount}\" \r\n      .branches=\"${this.branches}\" .memberCategories=\"${this.memberCategories}\" userBranch=\"${this.userBranch}\" .arQuestionType=\"${this.arQuestionType}\">\r\n    </question-inputs-component>`;\r\n    // console.log({ \"newInput-newInput\": newInput });\r\n\r\n    let inputs = this.inputs;\r\n    inputs.push(newInput);\r\n\r\n    let addedInputIndex = this.addedInputIndex;\r\n    addedInputIndex.push(this.currentObjectCount - 1);\r\n\r\n    setTimeout(() => {\r\n      this.inputs = inputs;\r\n      this.addedInputIndex = addedInputIndex;\r\n      this.multipleInputsHaveChanged(new Event(\"change\"))\r\n    }, 10);\r\n    // console.log({ \"newInput-this.inputs\": this.inputs });\r\n  }\r\n\r\n  removeInput(index: number) {\r\n    // console.log({ \"this.inputs\": this.inputs });\r\n\r\n\r\n    if (this.currentInputList.length - 1 > 0) {\r\n      let inputs = this.inputs;\r\n\r\n      this.removedInputIndex.push(index);\r\n\r\n      delete inputs[index];\r\n      // inputs.splice(index, 1);\r\n\r\n      setTimeout(() => {\r\n        this.inputs = inputs;\r\n\r\n        this.multipleInputsHaveChanged(new Event(\"change\"))\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  get currentInputList() {\r\n    let currentList: Array<any> = [];\r\n\r\n    const inputs = this.inputs;\r\n\r\n    inputs.join(\"-\").split(\"-\").forEach(_ => _.length == 0 ? null : currentList.push(_));\r\n\r\n    return currentList;\r\n  }\r\n\r\n  render() {\r\n    // console.log({ \"inputs-inputs.inputs\": this.inputs });\r\n    return this.loading ? html`<div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>` : html`\r\n      <div @change=\"${this.multipleInputsHaveChanged}\">\r\n          ${this.inputs.map((input, index) => html`\r\n              <div class=\"border rounded-md mb-1\">\r\n                <h3 class=\"shadow p-3 font-bold\">Question ${index + 1} Info</h3>\r\n                <!-- ${\"\" /** input.render()  */} -->\r\n                ${input}\r\n                ${(this.currentInputList.length - 1 > 0) ? html`<div class=\"flex justify-end\">\r\n                  <mwc-button @click=${() => this.removeInput(index)} type=\"button\" class=\"button danger text-right m-1\" raised>Remove</mwc-button>\r\n                  </div>` : nothing}\r\n              </div>\r\n            `,)}\r\n        <div class=\"flex justify-end\">\r\n          <mwc-button @click=${this.addInput} type=\"button\" class=\"button warning text-right m-1\" raised>Add Question</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  multipleInputsHaveChanged(event: Event) {\r\n\r\n    this.addedInputIndex\r\n\r\n    const inputComponents = Array.from(document.querySelectorAll('[question-inputs-component--object]'));\r\n    // console.log({ inputComponents, \"this.removedInputIndex\": this.removedInputIndex });\r\n\r\n    const notRemovedComponents: Array<any> = [];\r\n\r\n    this.addedInputIndex.forEach((inputIndex) => {\r\n\r\n      if (!this.removedInputIndex.includes(inputIndex)) {\r\n\r\n        if (!notRemovedComponents.includes(inputIndex)) {\r\n          notRemovedComponents.push(inputIndex);\r\n        }\r\n      }\r\n    });\r\n\r\n    // console.log({notRemovedComponents});\r\n\r\n    const __this = this;\r\n\r\n    this.multipleQuestionObjects[0] = {\r\n      items: notRemovedComponents.map((input) => {\r\n        const inputComponent = Array.from(document.querySelectorAll('[question-inputs-component--object=\"' + (input + 1) + '\"]'));\r\n        // console.log({ \"inputComponent---inputComponent\": inputComponent, input });\r\n\r\n        return inputComponent.map(inputElement => {\r\n          // console.log({ \"inputElement---inputElement\": inputElement });\r\n          let newObject: AdditionalRegistrationOnlyModel = {\r\n            // @ts-ignore\r\n            type: inputElement.typeValue,\r\n            // @ts-ignore\r\n            question: inputElement.questionValue,\r\n            // @ts-ignore\r\n            branchId: inputElement.branchIdValue,\r\n            // @ts-ignore\r\n            memberCategoryId: inputElement.memberCategoryIdValue,\r\n            // @ts-ignore\r\n            placeholderInstruction: inputElement.placeholderInstructionValue,\r\n          }\r\n          return newObject;\r\n        })[0];\r\n      }),\r\n    };\r\n\r\n    // console.log({ \"multiple_question_objects\": this.multipleQuestionObjects, \"__this.meetingEventId\": __this.meetingEventId });\r\n\r\n  }\r\n\r\n  firstUpdated() {\r\n\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","userLoginInfo","setActiveBranchIdCookie","data","stringData","JSON","stringify","set_cookies","base64Encode","removeActiveBranchIdCookie","getActiveBranchIdCookie","get_cookie","_cookie","base64Decode","cookie","parse","clientBranchInfo_S","ClientBranch_S","id","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","POST_AdditionalRegistrationQuestion","questionData","_get_cookie","getUserLoginInfoCookie","console","log","url","CONSTANTS","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","NetWorkCallResponses","error","errorHttp","networkCallRes","postForm","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","response","message","success","setTimeout","window","location","reload","AdditionalRegistrationCreatorForm","LitElement","constructor","super","CLIENT_ID","_data","urlQueryParams","undefined","_userLoginInfo","selectedBranchId","_branches","_activeBranchId","_memberCategories","_arQuestionType","connectedCallback","activeBranchId","this","getBranches","getMemberCategories","getAdditionalRegistrationQuestionType","disconnectedCallback","render","userBranch","length","user","branchId","html","form","submitForm","firstUpdated","e","preventDefault","document","querySelectorAll","forEach","selector","multipleQuestionObjects","items","_networkResponse","GET_ClientBranches","__branches","push","new_data","GET_MemberGroupingsMemberCategories","__memberCategories","category","GET_AdditionalRegistrationQuestionType","__arQuestionType","createRenderRoot","styles","css","property","type","Array","customElement","QuestionMultipleInputsComponent","currentObjectCount","removedInputIndex","addedInputIndex","loading","branches","memberCategories","_inputs","arQuestionType","inputs","requestUpdate","setInterval","addInput","event","newInput","multipleInputsHaveChanged","Event","removeInput","index","currentInputList","currentList","join","split","_","map","input","nothing","from","notRemovedComponents","inputIndex","includes","inputElement","typeValue","question","questionValue","branchIdValue","memberCategoryId","memberCategoryIdValue","placeholderInstruction","placeholderInstructionValue","Boolean"],"sourceRoot":""}