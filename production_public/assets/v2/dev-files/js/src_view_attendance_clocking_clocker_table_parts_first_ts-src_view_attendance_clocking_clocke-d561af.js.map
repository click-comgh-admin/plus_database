{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_attendance_clocking_clocker_table_parts_first_ts-src_view_attendance_clocking_clocke-d561af.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/schedules/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index_full.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/index.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/date.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/time.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/cancel-clocking.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-out.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/end-break.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__individual.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__organization.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/third.ts"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { Boolean_I } from \"@@addons/interfaces/boolean\"\r\nimport { ClientInfo_I, ClientInfo_S } from \"@@addons/interfaces/clients\"\r\nimport { ClientBranches_I, ClientBranch_S } from \"@@addons/interfaces/clients/branches\"\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\"\r\nimport { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"@@addons/interfaces/members/groupings/member_categories\"\r\n\r\nexport interface MeetingEventSchedule_I {\r\n  id?: number,\r\n  type?: number,\r\n  memberType?: number,\r\n  name?: string,\r\n  clientId?: ClientInfo_I,\r\n  branchId?: ClientBranches_I,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  meetingSpan?: number,\r\n  startTime?: Date,\r\n  closeTime?: Date,\r\n  latenessTime?: Date,\r\n  isRecuring?: boolean,\r\n  hasBreakTime?: boolean,\r\n  hasDuty?: boolean,\r\n  hasOvertime?: boolean,\r\n  agenda?: string,\r\n  agendaFile?: string,\r\n  virtualMeetingLink?: string,\r\n  virtualMeetingType?: number\r\n  meetingLocation?: number\r\n  expectedMonthlyAttendance?: number\r\n  activeMonthlyAttendance?: number\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\n\r\nexport function MeetingEventSchedule_S(data: any): MeetingEventSchedule_I {\r\n  // console.log({data});\r\n  \r\n  const meetingEventSchedule_S: MeetingEventSchedule_I = {\r\n    id: Number(data['id']),\r\n    type: Number(data['type']),\r\n    memberType: Number(data['memberType']),\r\n    name: String(data['name']),\r\n    clientId: ClientInfo_S(data['clientId']),\r\n    branchId: ClientBranch_S(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    meetingSpan: Number(data['meetingSpan']),\r\n    startTime: Time_I(data['startTime']),\r\n    closeTime: Time_I(data['closeTime']),\r\n    latenessTime: Time_I(data['latenessTime']),\r\n    isRecuring: Boolean_I(data['isRecuring']),\r\n    hasBreakTime: Boolean_I(data['hasBreakTime']),\r\n    hasDuty: Boolean_I(data['hasDuty']),\r\n    hasOvertime: Boolean_I(data['hasOvertime']),\r\n    agenda: String(data['agenda']),\r\n    agendaFile: String(data['agendaFile']),\r\n    virtualMeetingLink: String(data['virtualMeetingLink']),\r\n    virtualMeetingType: Number(data['virtualMeetingType']),\r\n    meetingLocation: Number(data['meetingLocation']),\r\n    expectedMonthlyAttendance: Number(data['expectedMonthlyAttendance']),\r\n    activeMonthlyAttendance: Number(data['activeMonthlyAttendance']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return meetingEventSchedule_S;\r\n}\r\n","import { Boolean_I } from \"@@addons/interfaces/boolean\";\r\nimport { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MeetingEventSchedule_I, MeetingEventSchedule_S } from \"../meeting_event/schedules\";\r\n\r\nexport interface MemberClockingInfo_I {\r\n  id?: number,\r\n  meetingEventId?: MeetingEventSchedule_I,\r\n  memberId?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  accountType?: number,\r\n  inOrOut?: boolean,\r\n  inTime?: Date,\r\n  outTime?: Date,\r\n  startBreak?: Date,\r\n  endBreak?: Date,\r\n  clockedBy?: number,\r\n  clockingMethod?: number,\r\n  clockingMethodName?: string,\r\n  date?: Date\r\n}\r\n\r\nexport function MemberClockingInfo_S(data: any): MemberClockingInfo_I {\r\n  // console.log({\"MemberClockingInfo_S-data\":data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (data['memberId']['accountType'] === 1) {\r\n    memberInfo = MembershipUser_S(data['memberId']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberId']))\r\n  }\r\n  \r\n  const memberClockingInfo_S: MemberClockingInfo_I = {\r\n    id: Number(data['id']),\r\n    meetingEventId: MeetingEventSchedule_S(data['meetingEventId']),\r\n    memberId: memberInfo,\r\n    accountType: Number(data['accountType']),\r\n    inOrOut: Boolean_I(data['inOrOut']),\r\n    // inTime: Time_I(data['inTime']),\r\n    // outTime: Time_I(data['outTime']),\r\n    // startBreak: Time_I(data['startBreak']),\r\n    // endBreak: Time_I(data['endBreak']),\r\n    inTime: Date_I(data['inTime']),\r\n    outTime: Date_I(data['outTime']),\r\n    startBreak: Date_I(data['startBreak']),\r\n    endBreak: Date_I(data['endBreak']),\r\n    clockedBy: Number(data['clockedBy']),\r\n    clockingMethod: Number(data['clockingMethod']),\r\n    clockingMethodName: String(data['clockingMethodName']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return memberClockingInfo_S;\r\n}","import { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \".\";\r\n\r\nexport interface MemberClockingInfoFull_I {\r\n  attendance?: MemberClockingInfo_I,\r\n  additionalInfo?: MemberClockingAdditionalInfo_I,\r\n  lastSeen?: Date,\r\n  status?: String,\r\n}\r\nexport interface MemberClockingAdditionalInfo_I {\r\n  id?: number,\r\n  memberId?: number,\r\n  memberInfo?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  phone?: string,\r\n  email?: string,\r\n  placeOfWork?: string,\r\n  whatsapp?: string,\r\n  facebook?: string,\r\n  twitter?: string,\r\n  instagram?: string,\r\n  businessHashtag?: string,\r\n  businessDescription?: string,\r\n  profession?: string,\r\n  dateJoined?: Date,\r\n  date?: Date\r\n}\r\n\r\nexport const InstanceOfOrganizationMember = (data: any) => {\r\n  return \"organizationName\" in data && \"organizationType\" in data && \"businessRegistered\" in data && \"organizationPhone\" in data && \"dateOfIncorporation\" in data;\r\n}\r\n\r\nexport function MemberClockingAdditionalInfo_S(data: any, accountType?: number): MemberClockingAdditionalInfo_I {\r\n  // console.log({data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (accountType === 1) {\r\n    memberInfo = MembershipUser_S(data['memberInfo']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberInfo']))\r\n  }\r\n  \r\n  const MemberClockingAdditionalInfo_S: MemberClockingAdditionalInfo_I = {\r\n    id: Number(data['id']),\r\n    memberId: Number(data['memberId']),\r\n    memberInfo: memberInfo,\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    facebook: String(data['facebook']),\r\n    instagram: String(data['instagram']),\r\n    placeOfWork: String(data['placeOfWork']),\r\n    profession: String(data['profession']),\r\n    twitter: String(data['twitter']),\r\n    whatsapp: String(data['whatsapp']),\r\n    businessHashtag: String(data['businessHashtag']),\r\n    businessDescription: String(data['businessDescription']),\r\n    dateJoined: Date_I(data['dateJoined']),\r\n    date: Date_I(data['date']),\r\n  };\r\n\r\n  return MemberClockingAdditionalInfo_S;\r\n}\r\n\r\nexport function MemberClockingInfoFull_S(data: any): MemberClockingInfoFull_I {\r\n  // console.log({data});\r\n  const ATTENDANCE = MemberClockingInfo_S(data['attendance']);\r\n  \r\n  const MemberClockingInfoFull_S: MemberClockingInfoFull_I = {\r\n    attendance: ATTENDANCE,\r\n    additionalInfo: MemberClockingAdditionalInfo_S(data['additionalInfo'], ATTENDANCE.accountType),\r\n    lastSeen: Date_I(data['lastSeen']),\r\n    status: String(data['status']),\r\n  };\r\n\r\n  return MemberClockingInfoFull_S;\r\n}","import { Constituency_I, Constituency_S, _Constituency_D } from \"../location/constituency\";\r\nimport { Country_I, Country_S, _Country_D } from \"../location/country\";\r\nimport { District_I, District_S, _District_D } from \"../location/district\";\r\nimport { Region_I, Region_S, _Region_D } from \"../location/region\";\r\n\r\nexport interface ClientInfo_I {\r\n  id?: number,\r\n  name?: string,\r\n  accountType?: number,\r\n  country?: string,\r\n  stateProvince?: string,\r\n  applicantFirstname?: string,\r\n  applicantSurname?: string,\r\n  applicantGender?: number,\r\n  applicantPhone?: string,\r\n  applicantEmail?: string,\r\n  applicantDesignationRole?: number,\r\n  region?: number,\r\n  district?: number,\r\n  constituency?: number,\r\n  community?: string,\r\n  subscriptionDuration?: number,\r\n  subscriptionDate?: Date,\r\n  subscriptionFee?: string,\r\n  logo?: string,\r\n  status?: number,\r\n  archive?: number,\r\n  accountCategory?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  countryInfo?: Country_I,\r\n  regionInfo?: Region_I,\r\n  districtInfo?: District_I,\r\n  constituencyInfo?: Constituency_I,\r\n};\r\n\r\n\r\nexport function ClientInfo_S(data: any): ClientInfo_I {\r\n  // console.log({data});\r\n  \r\n  const clientInfo_S: ClientInfo_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountType: Number(data['accountType']),\r\n    country: String(data['country']),\r\n    stateProvince: String(data['stateProvince']),\r\n    applicantFirstname: String(data['applicantFirstname']),\r\n    applicantSurname: String(data['applicantSurname']),\r\n    applicantGender: Number(data['applicantGender']),\r\n    applicantPhone: String(data['applicantPhone']),\r\n    applicantEmail: String(data['applicantEmail']),\r\n    applicantDesignationRole: Number(data['applicantDesignationRole']),\r\n    region: Number(data['region']),\r\n    district: Number(data['district']),\r\n    constituency: Number(data['constituency']),\r\n    community: String(data['community']),\r\n    subscriptionDuration: Number(data['subscriptionDuration']),\r\n    subscriptionDate: new Date(data['updateDate']),\r\n    subscriptionFee: String(data['subscriptionFee']),\r\n    logo: String(data['logo']),\r\n    status: Number(data['status']),\r\n    archive: Number(data['archive']),\r\n    accountCategory: Number(data['accountCategory']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    countryInfo: ('countryInfo' in data) ? Country_S(data['countryInfo']) : _Country_D(),\r\n    regionInfo: ('regionInfo' in data) ? Region_S(data['regionInfo']) : _Region_D(),\r\n    districtInfo: ('districtInfo' in data) ? District_S(data['districtInfo']) : _District_D(),\r\n    constituencyInfo: ('constituencyInfo' in data) ? Constituency_S(data['constituencyInfo']) : _Constituency_D(),\r\n  };\r\n\r\n  return clientInfo_S;\r\n}\r\n","export function Date_I(dateTime: string): Date {\r\n\r\n  if (dateTime === 'null' || dateTime === null) {\r\n    return null;\r\n  }\r\n\r\n  let date = new Date(dateTime);\r\n  \r\n  // console.log({ date })\r\n  return date;\r\n}","export function Time_I(dateTime: string): Date {\r\n  const __dT: string = \"00:00:00\",\r\n    _dT_ = String(dateTime).toLocaleLowerCase().split(\"T\");\r\n  let _dT: string = __dT;\r\n  if (_dT_.length > 1) {\r\n    _dT = _dT_[1];\r\n    // _dT = _dT_[1].split('.')[0];\r\n  } else if (_dT_.length === 1) {\r\n    _dT = _dT_[0];\r\n  }\r\n\r\n  if (_dT === 'null') {\r\n    return null;\r\n  }\r\n\r\n  let today = new Date();\r\n  const newTime = _dT.split(':');\r\n  // console.log({ today, newTime })\r\n  if (newTime[0] !== undefined) {\r\n    today.setHours(Number(newTime[0]));\r\n  }\r\n  if (newTime[1] !== undefined) {\r\n    today.setMinutes(Number(newTime[1]));\r\n  }\r\n  if (newTime[2] !== undefined) {\r\n    today.setSeconds(Number(newTime[2]));\r\n  }\r\n  // console.log({ today })\r\n  return today;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceCancelClocking(clockId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/cancel-clocking/' + clockId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Cancel Clocking?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockOut(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-out/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock Out?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingEndBreak(clockId: Number, time: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/end-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'End Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\nimport './first__individual';\r\nimport './first__organization';\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"this.clocking_info\": this.clocking_info });\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n  \r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n  \r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() { \r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      // console.log({ \"clockingInfo\": clockingInfo });\r\n      // console.log({ \"clockingInfoFull\": clockingInfoFull });\r\n      const clockingMethodName = fullInfo ? clockingInfoFull.attendance.clockingMethodName : clockingInfo.clockingMethodName;\r\n      if (fullInfo ? InstanceOfOrganizationMember(clockingInfoFull.additionalInfo.memberInfo): InstanceOfOrganizationMember(clockingInfo.memberId)) {\r\n        return html`<clocker-table-parts-first-organization clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-organization>`;\r\n      } else {\r\n        return html`<clocker-table-parts-first-individual clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-individual>`;\r\n      }\r\n      \r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-individual\")\r\nexport class ClockerTablePartsFirstIndividual extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  private _memberData: MembershipUser_I = null;\r\n\r\n  public set memberData(value: MembershipUser_I) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipUser_I {\r\n    return this._memberData;\r\n  }\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true);\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n            click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n            url=\"${this._memberData.profilePicture}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.firstname} ${this._memberData.middlename} ${this._memberData.surname}\r\n          </span>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MembershipOrganizationUserModel } from '@@addons/interfaces/members/user/organization_model';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-organization\")\r\nexport class ClockerTablePartsFirstOrganization extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  private _memberData: MembershipOrganizationUserModel = null;\r\n\r\n  public set memberData(value: MembershipOrganizationUserModel) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipOrganizationUserModel {\r\n    return this._memberData;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true);\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded type=\"member\"\r\n            url=\"${this._memberData.logo}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.organizationName}\r\n          </span>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport '@material/mwc-icon-button';\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    if ('clockingTime' in CTI) return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public pageButtonAccess: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    console.log({\"this.pageButtonAccess\": this.pageButtonAccess});\r\n    \r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const inTime = fullInfo ? clockingInfoFull.attendance.inTime : clockingInfo.inTime;\r\n      // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const startBreak = fullInfo ? clockingInfoFull.attendance.startBreak : clockingInfo.startBreak;\r\n      // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const TODAY = new Date();\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n      const IS_TODAY = (fullInfo ? clockingInfoFull.attendance.date.toDateString() : clockingInfo.date.toDateString()) === TODAY.toDateString();\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\"\r\n              id=\"member_check_in_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n          ${CLOCKED ? html`\r\n          <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n          <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n          `}\r\n        </div>\r\n        `: html`\r\n          <div class=\"text-center flex justify-evenly whitespace-nowrap\">\r\n            <a href=\"tel://${clockingInfoFull.additionalInfo.phone}\">\r\n              <mwc-icon-button class=\"bg-sunny-morning text-white\" icon=\"call\"></mwc-icon-button>\r\n            </a>\r\n            <a href=\"https://api.whatsapp.com/send?phone=+${clockingInfoFull.additionalInfo.whatsapp}&amp;text=\">\r\n              <mwc-icon-button class=\"bg-grow-early text-white\" icon=\"whatsapp\"></mwc-icon-button>\r\n            </a>\r\n          </div>\r\n        `}\r\n        ${CLOCKED && (inTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock in Time</b>: ${atInTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n          ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n              icon=\"check\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n          }\r\n        `: nothing}\r\n        ${(startBreak !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break Start Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    // console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e,element,CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceCancelClocking } from '@@addons/network/attendance/clocking/cancel-clocking';\r\nimport { PATCH_AttendanceClockingClockOut } from '@@addons/network/attendance/clocking/clock-out';\r\nimport { PATCH_AttendanceClockingEndBreak } from '@@addons/network/attendance/clocking/end-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport { getClockingTimeInfo } from './second';\r\n\r\n\r\n@customElement(\"clocker-table-parts-third\")\r\nexport class ClockerTablePartsThird extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private excuseBaseUrl: string = \"/clocking/excuse?clocking-id=\";\r\n\r\n  @property({ type: String })\r\n  private followUpBaseUrl: string = \"/clocking/follow-up?clocking-id=\";\r\n\r\n  @property({ type: Boolean })\r\n  public pageButtonAccess: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const outTime = fullInfo ? clockingInfoFull.attendance.outTime : clockingInfo.outTime;\r\n      // const atOutTime = outTime !== null ? getLocalTime(outTime, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atOutTime = outTime !== null ? getDateTime(outTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atOutTime, \"clockingInfo.outTime\": clockingInfo.outTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const endBreak = fullInfo ? clockingInfoFull.attendance.endBreak : clockingInfo.endBreak;\r\n      // const atBreakTime = endBreak !== null ? getLocalTime(endBreak, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atBreakTime = endBreak !== null ? getDateTime(endBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      const CLOCK_ID_ENC = base64Encode(String(CLOCK_ID), true);\r\n      // console.log({ HAS_BREAKTIME, clockingInfo });\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-out=\"${CLOCK_ID}\" name=\"member_check_out_${CLOCK_ID}\"\r\n              id=\"member_check_out_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_out_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" clock-user=\"out\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\"\r\n            cancel-user-clock=\"true\">\r\n            <span class=\"pe-7s-close-circle bg-love-kiss fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-warning\">'X' to Cancel Attendance</span>\r\n        </div>\r\n        `: nothing}\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <a href=\"${this.excuseBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-info btn-sm\" target=\"_blank\" type=\"button\">Enter/ View\r\n            Excuse</a>\r\n          <a href=\"${this.followUpBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-primary btn-sm\" target=\"_blank\" type=\"button\">Follow-Up</a>\r\n        </div>\r\n        ${CLOCKED && (outTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock out Time</b>: ${atOutTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n        <hr class=\"whitespace-nowrap\">\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <mwc-button raised class=\"shadow-sm info button\" label=\"End Break\" clock-id=\"${CLOCK_ID}\" user-break=\"end\"\r\n            icon=\"close\">\r\n          </mwc-button>\r\n        </div>\r\n        `: ''\r\n        }\r\n        `: nothing}\r\n        ${(endBreak !== null) ? html`\r\n        <div class=\"text-center\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break End Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n    this.cancelClocking();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private cancelClocking() {\r\n    const selectorString = 'cancel-user-clock=\"true\"';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(cancelClock => {\r\n      cancelClock.addEventListener('click', async (e) => {\r\n        e.preventDefault();\r\n        if (this.pageButtonAccess) {\r\n          const CLOCK_ID = Number(cancelClock.getAttribute('clock-id'));\r\n          await PATCH_AttendanceCancelClocking(CLOCK_ID);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"out\") {\r\n        // console.log({ \"clock out\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockOutUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async clockOutUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingClockOut(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingClockOut(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"end\") {\r\n        // console.log({ \"end break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.endUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async endUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingEndBreak(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingEndBreak(CLOCK_ID);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["dateTime","date","now","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","getTime","__string__","__code__","getDateTime","options","toLocaleString","MeetingEventSchedule_S","data","id","Number","type","memberType","name","String","clientId","ClientInfo_S","branchId","ClientBranch_S","memberCategoryId","GroupingsMemberCategories_S","meetingSpan","startTime","Time_I","closeTime","latenessTime","isRecuring","Boolean_I","hasBreakTime","hasDuty","hasOvertime","agenda","agendaFile","virtualMeetingLink","virtualMeetingType","meetingLocation","expectedMonthlyAttendance","activeMonthlyAttendance","updatedBy","updateDate","MemberClockingInfo_S","memberInfo","MembershipUser_S","JSON","stringify","meetingEventId","memberId","accountType","inOrOut","inTime","Date_I","outTime","startBreak","endBreak","clockedBy","clockingMethod","clockingMethodName","InstanceOfOrganizationMember","MemberClockingAdditionalInfo_S","phone","email","facebook","instagram","placeOfWork","profession","twitter","whatsapp","businessHashtag","businessDescription","dateJoined","MemberClockingInfoFull_S","ATTENDANCE","attendance","additionalInfo","lastSeen","status","country","stateProvince","applicantFirstname","applicantSurname","applicantGender","applicantPhone","applicantEmail","applicantDesignationRole","region","district","constituency","community","subscriptionDuration","subscriptionDate","subscriptionFee","logo","archive","accountCategory","creationDate","countryInfo","Country_S","_Country_D","regionInfo","Region_S","_Region_D","districtInfo","District_S","_District_D","constituencyInfo","Constituency_S","_Constituency_D","_dT_","toLocaleLowerCase","split","_dT","length","today","newTime","undefined","setHours","setMinutes","setSeconds","PATCH_AttendanceCancelClocking","clockId","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","errors","forEach","e","err","errormsg","error","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","value","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingClockIn","time","PATCH_AttendanceClockingClockOut","PATCH_AttendanceClockingEndBreak","PATCH_AttendanceClockingStartBreak","ClockerTablePartsFirst","LitElement","constructor","super","_data","_type","clockingInfo","fullInfo","clocking_info","memberProfileBaseUrl","this","requestUpdate","connectedCallback","_clockingInfo","parse","disconnectedCallback","getClockingInfo","getClockingInfoFull","render","clockingInfoFull","html","firstUpdated","createRenderRoot","styles","css","property","Boolean","customElement","ClockerTablePartsFirstIndividual","_memberData","memberData","MEMBER_ID","base64Encode","profilePicture","firstname","middlename","surname","ClockerTablePartsFirstOrganization","organizationName","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","pageButtonAccess","console","log","atDate","dateStyle","timeStyle","atInTime","CLOCK_ID","CLOCKED","atBreakTime","TODAY","HAS_BREAKTIME","IS_TODAY","toDateString","nothing","clockUser","userBreak","setInterval","selectorString","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","startUserBreak","ClockerTablePartsThird","excuseBaseUrl","followUpBaseUrl","atOutTime","CLOCK_ID_ENC","cancelClocking","cancelClock","clockOutUser","endUserBreak"],"sourceRoot":""}