{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_assets_styles_views_attendance_setup_form_scss-src_assets_styles_views_widget_simple-tabl-3feccd.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/login/main.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/widgets/accordion/item.ts","webpack://webpackNumbers/./src/addons/widgets/accordion/main.ts","webpack://webpackNumbers/./src/view/membership/registration/excel/form/location.ts","webpack://webpackNumbers/./src/view/membership/registration/page__id.ts"],"sourcesContent":["import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { get_cookie, set_cookies, set_cookies_minutes } from \"@@addons/functions/cookies\";\r\nimport { LoginTokenType_I, } from '@@addons/interfaces/network_calls/login/login_token';\r\n\r\nconst get_differences = (date: Date) => {\r\n  const now = new Date();\r\n  const msBetweenDates = Math.abs(date.getTime() - now.getTime());\r\n  const hoursBetweenDated = msBetweenDates / (60 * 60 * 1000);\r\n  // console.log({ msBetweenDates, hoursBetweenDated, });\r\n  if (hoursBetweenDated < 24) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport const verifyToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/verify-token',\r\n    cookieName = type,\r\n    token = get_cookie(cookieName),\r\n    userInfo = JSON.stringify({ \"token\": base64Decode(token) }),\r\n    formData = userInfo;\r\n  const cookieDate = new Date(get_cookie(cookieName + \"_date\"));\r\n  // console.log({ \"force_check, now\": get_differences(cookieDate) });\r\n  const force_check = get_differences(cookieDate);\r\n\r\n  if (!force_check) {\r\n    await http(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }, true).then(async (response) => {\r\n      // console.log({ response: response });\r\n      if (response.jsonData.token & response.jsonData.user & response.jsonData.expiry) {\r\n        // console.log({\"valid token\": true, \"response.jsonData.token\": response.jsonData.token})\r\n        const token = base64Encode(String(response.jsonData.token));\r\n        set_cookies(cookieName, token, 10);\r\n        set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n        // console.log({ \"response.token\": response.token });\r\n      } else {\r\n        // console.log({\"valid token\": false, \"response.jsonData.token\": response.jsonData.token})\r\n        await generateNewToken(email, _id_, type);\r\n      }\r\n    });\r\n  } else {\r\n    return token;\r\n  }\r\n}\r\n\r\nconst generateNewToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/login-id',\r\n    cookieName = type,\r\n    userInfo = JSON.stringify({ \"email\": email, \"id\": _id_ }),\r\n    formData = userInfo;\r\n\r\n  await http(url, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  }, true).then((response) => {\r\n    // console.log({ response: response });\r\n    if (response.jsonData.token) {\r\n      const token = base64Encode(String(response.jsonData.token));\r\n      set_cookies(cookieName, token, 10);\r\n      set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n      // console.log({ \"response.token\": response.token });\r\n    }\r\n\r\n  });\r\n}\r\nexport const tokenLogin = async (email: string, id: Number, type: LoginTokenType_I) => {\r\n  const _id_ = base64Encode(String(id)),\r\n    cookieName = type;\r\n  // console.log({\"_id__id__id_\": _id_});\r\n  // console.log({ email, id });\r\n  // @ts-ignore\r\n  window['supersecret'] = { unknowable: { ops: { email: email, id: _id_, cookieName: cookieName } } };\r\n  const _get_cookie = get_cookie(cookieName);\r\n  // console.log({ _get_cookie });\r\n\r\n  if (_get_cookie == '') {\r\n    await generateNewToken(email, _id_, type);\r\n  } else {\r\n    await verifyToken(email, _id_, type);\r\n  }\r\n};","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\nexport const urlQueryParamsGetAll = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = urlSearchParams.getAll(query);\r\n  return params;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"app-accordion-item\")\r\nexport class AppAccordionItem extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public accordion_class_name: string = \"-\";\r\n\r\n  @property({ type: String })\r\n  public buttonHtml = html``;\r\n  \r\n  @property({ type: String })\r\n  public contentHtml = html``;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"this.buttonHtml\": this.buttonHtml});\r\n    // console.log({\"this.contentHtml\": this.contentHtml});\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <button type=\"button\" class=\"app-accordion app-accordion-button app-accordion-${this.accordion_class_name}\">\r\n        <div class=\"flex justify-between\">${this.buttonHtml} <span style=\"transform: rotate(180deg);\">^</span></div>\r\n      </button>\r\n      <div class=\"app-accordion-panel\">${this.contentHtml}</div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/tailwind-output/accordion.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport './item';\r\nimport { AppAccordionItem } from './item';\r\n\r\n\r\n@customElement(\"app-accordion\")\r\nexport class Appaccordion extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public accordionName: string = \"app-accordion\";\r\n\r\n  @property({ type: Array })\r\n  public contents: Array<TemplateResult> = [];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    \r\n    // console.log({\"this.contents\": this.contents});\r\n    \r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`<div class=\"my-2 w-100\">\r\n      ${this.contents.map((content) => {\r\n        // console.log({\"content.content\": content})\r\n        return html`${content}`;\r\n      })}\r\n    </div>`;\r\n  }\r\n\r\n  firstUpdated() {\r\n    setTimeout(() => {\r\n      if (document.readyState == \"complete\") this.toggler();\r\n    }, 1000);\r\n  }\r\n\r\n  toggler() {\r\n    // console.log({\"`app-accordion-${this.accordionName}`\": `app-accordion-${this.accordionName}`});\r\n    \r\n    var acc = document.getElementsByClassName(`app-accordion-${this.accordionName}`);\r\n    console.log({acc});\r\n    \r\n    var i;\r\n\r\n    for (i = 0; i < acc.length; i++) {\r\n      acc[i].addEventListener(\"click\", function () {        \r\n        this.classList.toggle(\"app-accordion-active\");\r\n        var panel = this.nextElementSibling;\r\n        console.log({\"this.classList\": this.classList, panel});\r\n        if (panel.style.maxHeight) {\r\n          panel.style.maxHeight = null;\r\n        } else {\r\n          panel.style.maxHeight = panel.scrollHeight + \"px\";\r\n          // panel.style.maxHeight = \"100%\";\r\n        }\r\n        // if (panel.style.display === \"block\") {\r\n        //   panel.style.display = \"none\";\r\n        // } else {\r\n        //   panel.style.display = \"block\";\r\n        // }\r\n      });\r\n    }\r\n  }\r\n\r\n  get items() {\r\n    \r\n    return html``;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { LocationCountryModel, Convert as lcmConvert } from \"@@addons/interfaces/location/country_model\";\r\nimport { LocationRegionModel, Convert as lrmConvert } from \"@@addons/interfaces/location/region_model\";\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from \"@@addons/interfaces/location/constituency_model\";\r\nimport { LocationDistrictModel, Convert as ldmConvert } from \"@@addons/interfaces/location/district_model\";\r\nimport { GET_LocationCountry } from \"@@addons/network/location/country\";\r\nimport { GET_LocationRegion } from \"@@addons/network/location/region\";\r\nimport { GET_LocationDistrictFilter } from \"@@addons/network/location/district/filter\";\r\nimport { GET_LocationConstituencyFilter } from \"@@addons/network/location/constituency/filter\";\r\n\r\n@customElement('membership-registration-excel-location')\r\nexport class MembershipRegistrationExcelLocation extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private _constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private _districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await this.getLocationCountry();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n    :host { display: block; }\r\n    input[type=\"text\"], input[type=\"password\"], \r\n    input[type=\"email\"], input[type=\"phone\"], \r\n    select, span.select2.select2-container, \r\n    span.select2-selection.select2-selection--single.form-control.p-0, \r\n    textarea {\r\n      background: none!important;\r\n      padding: unset!important;\r\n    }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const countries: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._countries.map((country) => {\r\n      return {\r\n        id: country.id, name: country.name,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const regions: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._regions.map((region) => {\r\n      return {\r\n        id: region.id, name: region.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const districts: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._districts.map((district) => {\r\n      return {\r\n        id: district.id, name: district.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    const constituencies: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._constituencies.map((constituency) => {\r\n      return {\r\n        id: constituency.id, name: constituency.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    return html`\r\n      <div class=\"form-container flex\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label my-1\">\r\n                  <h1 class=\"h1 !text-red-400\">Filter Location Details</h1>\r\n                  <h3 class=\"h3\">\r\n                    <span class=\"!text-red-400\">For reference only. </span>\r\n                    <span class=\"!text-red-400\"> Does not affect registration.</span>\r\n                  </h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form !my-1\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3 col-lg-3\">\r\n                    <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n                    <select-input name=\"country\" id=\"country\" label=\"Select Country\" .options=\"${countries}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_state_province>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n                    <select-input name=\"region\" id=\"region\" label=\"Select Region\" .options=\"${regions}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select District</h4>\r\n                    <select-input name=\"district\" id=\"district\" label=\"Select District\" .options=\"${districts}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n                    <select-input name=\"constituency\" id=\"constituency\" label=\"Select Constituency\" .options=\"${constituencies}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center !my-1\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    document.onreadystatechange = (event)=> {\r\n      // console.log({ \"document.readyState\": document.readyState })\r\n      if (document.readyState == \"complete\") this.countryChanged(event);\r\n      if (document.readyState == \"complete\") this.regionChanged(event);\r\n      if (document.readyState == \"complete\") this.districtChanged(event);\r\n      if (document.readyState == \"complete\") this.constituencyChanged(event);\r\n    }  \r\n  }\r\n\r\n  private countryChanged(e: any) {\r\n    // console.log(e)\r\n    const countryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"country\"]');\r\n    countryNodes.forEach(countryNode => {\r\n      // console.log({ \"countryNode\": countryNode })\r\n      // console.log({ \"countryNode.currentValue\": countryNode.getAttribute(\"currentValue\") })\r\n      countryNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": countryNode, \"counrtyValue.value\": countryNode.value, })\r\n        const show_ghana_locations = this.querySelectorAll('[show_ghana_locations]'),\r\n          show_state_province = this.querySelectorAll('[show_state_province]'),\r\n          show_hide_class = \"hidden\";\r\n        if (countryNode.value === \"76\") {\r\n          if (this.regionCalled === false) await this.getLocationRegion();\r\n          this.regionCalled = true;\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        } else {\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    const regionNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"region\"]');\r\n    regionNodes.forEach(regionNode => {\r\n      // console.log({ \"regionNode\": regionNode })\r\n      // console.log({ \"regionNode.currentValue\": regionNode.getAttribute(\"currentValue\") })\r\n      regionNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": regionNode, \"counrtyValue.value\": regionNode.value, })\r\n        const regionID = regionNode.value;\r\n        this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n        // console.log({regionID, \"this.selectedRegion\": this.selectedRegion})\r\n        this.getLocationDistrict(this.selectedRegion);\r\n      };\r\n    });\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    const districtNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"district\"]');\r\n    districtNodes.forEach(districtNode => {\r\n      // console.log({ \"districtNode\": districtNode })\r\n      // console.log({ \"districtNode.currentValue\": districtNode.getAttribute(\"currentValue\") })\r\n      districtNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": districtNode, \"counrtyValue.value\": districtNode.value, })\r\n        const districtID = districtNode.value;\r\n        this.selectedDistrict = Number.isNaN(districtID)? 0: Number(districtID);\r\n        this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n      };\r\n    });\r\n  }\r\n\r\n  private constituencyChanged(e: Event) {\r\n    // this.selectedRegion, this.selectedDistrict\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationCountryModel> = [];\r\n    new_data.push(...this._countries, ...__countries);\r\n    this._countries = new_data;\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __regions = [...__regions, ...DATA];\r\n      }\r\n    }\r\n    const new_data: Array<LocationRegionModel> = [];\r\n    new_data.push(...this._regions, ...__regions);\r\n    this._regions = new_data;\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this._districts = [];\r\n    const identity = String(regionID),\r\n      _districtsMemo = this._districtsMemo;\r\n    // console.log({identity, _districtsMemo,})\r\n    if (identity in _districtsMemo) { // implementing memoization\r\n      // console.log({ \"_districtsMemo[identity]\": _districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationDistrictModel> = [];\r\n        new_data.push(...this._districts, ..._districtsMemo[identity]);\r\n        this._districts = new_data;\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __districts = [...__districts, ...DATA];\r\n          this._districtsMemo[identity] = __districts;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationDistrictModel> = [];\r\n      new_data.push(...this._districts, ...__districts);\r\n      this._districts = new_data;\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this._constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      _constituenciesMemo = this._constituenciesMemo;\r\n    if (identity in _constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationConstituencyModel> = [];\r\n        new_data.push(...this._constituencies, ..._constituenciesMemo[identity]);\r\n        this._constituencies = new_data;\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __constituencies = [...__constituencies, ...DATA];\r\n          this._constituenciesMemo[identity] = __constituencies;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationConstituencyModel> = [];\r\n      new_data.push(...this._constituencies, ...__constituencies);\r\n      this._constituencies = new_data;\r\n    }\r\n  }\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"create\": 23,\r\n};"],"names":["verifyToken","email","_id_","type","url","CONSTANTS","cookieName","token","get_cookie","formData","JSON","stringify","base64Decode","date","now","Date","Math","abs","getTime","get_differences","http","method","body","then","response","jsonData","user","expiry","base64Encode","String","set_cookies","set_cookies_minutes","toUTCString","generateNewToken","tokenLogin","id","window","unknowable","ops","urlQueryParams","urlSearchParams","URLSearchParams","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsGetAll","getAll","urlQueryParamsJoin","object","urlStr","index","AppAccordionItem","LitElement","constructor","super","accordion_class_name","buttonHtml","html","contentHtml","connectedCallback","disconnectedCallback","render","this","firstUpdated","createRenderRoot","styles","css","property","customElement","Appaccordion","accordionName","contents","map","content","setTimeout","document","readyState","toggler","i","acc","getElementsByClassName","console","log","length","addEventListener","classList","toggle","panel","nextElementSibling","style","maxHeight","scrollHeight","items","Array","MembershipRegistrationExcelLocation","regionCalled","selectedRegion","selectedDistrict","_countries","_regions","_districts","_constituencies","_constituenciesMemo","_districtsMemo","getLocationCountry","countries","country","name","isSelected","selected","regions","region","districts","district","constituencies","constituency","onreadystatechange","event","countryChanged","regionChanged","districtChanged","constituencyChanged","e","querySelectorAll","forEach","countryNode","onchange","show_ghana_locations","show_state_province","show_hide_class","getLocationRegion","node","remove","add","regionNode","regionID","Number","isNaN","getLocationDistrict","districtNode","districtID","getLocationConstituency","_networkResponse","GET_LocationCountry","__countries","code","short","push","success","data","DATA","new_data","GET_LocationRegion","__regions","identity","GET_LocationDistrictFilter","__districts","regionId","GET_LocationConstituencyFilter","__constituencies","Boolean","PAGE__IDS"],"sourceRoot":""}