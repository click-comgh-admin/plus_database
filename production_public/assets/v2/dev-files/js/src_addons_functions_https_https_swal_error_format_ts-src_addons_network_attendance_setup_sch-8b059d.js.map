{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_functions_https_https_swal_error_format_ts-src_addons_network_attendance_setup_sch-8b059d.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/login/main.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/schedule/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/index.ts"],"sourcesContent":["export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { get_cookie, set_cookies, set_cookies_minutes } from \"@@addons/functions/cookies\";\r\nimport { LoginTokenType_I, } from '@@addons/interfaces/network_calls/login/login_token';\r\n\r\nconst get_differences = (date: Date) => {\r\n  const now = new Date();\r\n  const msBetweenDates = Math.abs(date.getTime() - now.getTime());\r\n  const hoursBetweenDated = msBetweenDates / (60 * 60 * 1000);\r\n  // console.log({ msBetweenDates, hoursBetweenDated, });\r\n  if (hoursBetweenDated < 24) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport const verifyToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/verify-token',\r\n    cookieName = type,\r\n    token = get_cookie(cookieName),\r\n    userInfo = JSON.stringify({ \"token\": base64Decode(token) }),\r\n    formData = userInfo;\r\n  const cookieDate = new Date(get_cookie(cookieName + \"_date\"));\r\n  // console.log({ \"force_check, now\": get_differences(cookieDate) });\r\n  const force_check = get_differences(cookieDate);\r\n\r\n  if (!force_check) {\r\n    await http(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }, true).then(async (response) => {\r\n      // console.log({ response: response });\r\n      if (response.jsonData.token & response.jsonData.user & response.jsonData.expiry) {\r\n        // console.log({\"valid token\": true, \"response.jsonData.token\": response.jsonData.token})\r\n        const token = base64Encode(String(response.jsonData.token));\r\n        set_cookies(cookieName, token, 10);\r\n        set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n        // console.log({ \"response.token\": response.token });\r\n      } else {\r\n        // console.log({\"valid token\": false, \"response.jsonData.token\": response.jsonData.token})\r\n        await generateNewToken(email, _id_, type);\r\n      }\r\n    });\r\n  } else {\r\n    return token;\r\n  }\r\n}\r\n\r\nconst generateNewToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/login-id',\r\n    cookieName = type,\r\n    userInfo = JSON.stringify({ \"email\": email, \"id\": _id_ }),\r\n    formData = userInfo;\r\n\r\n  await http(url, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  }, true).then((response) => {\r\n    // console.log({ response: response });\r\n    if (response.jsonData.token) {\r\n      const token = base64Encode(String(response.jsonData.token));\r\n      set_cookies(cookieName, token, 10);\r\n      set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n      // console.log({ \"response.token\": response.token });\r\n    }\r\n\r\n  });\r\n}\r\nexport const tokenLogin = async (email: string, id: Number, type: LoginTokenType_I) => {\r\n  const _id_ = base64Encode(String(id)),\r\n    cookieName = type;\r\n  // console.log({\"_id__id__id_\": _id_});\r\n  // console.log({ email, id });\r\n  // @ts-ignore\r\n  window['supersecret'] = { unknowable: { ops: { email: email, id: _id_, cookieName: cookieName } } };\r\n  const _get_cookie = get_cookie(cookieName);\r\n  // console.log({ _get_cookie });\r\n\r\n  if (_get_cookie == '') {\r\n    await generateNewToken(email, _id_, type);\r\n  } else {\r\n    await verifyToken(email, _id_, type);\r\n  }\r\n};","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceSchedule<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/schedule'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { tokenLogin } from \"@@addons/functions/login/main\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport './forms/schedule';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { PageButtonUserAccess, AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '@@views/attendance/page__id';\r\n\r\n\r\n@customElement(\"attendance-setup-form\")\r\nexport class AttendanceSetupForm extends LitElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  //  @query(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  //  @queryAll(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  @property({ type: String }) \r\n  public email?: string;\r\n\r\n  @property({ type: Number })\r\n  public mId?: number;\r\n\r\n  @property({ type: Number })\r\n  public clientId?: number;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _pageButtonAccess: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n    await tokenLogin(this.email, this.mId, \"client_tokenLogin\");\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      this._pageButtonAccess = PageButtonUserAccess(PAGE__IDS.schedule_meeting_event);\r\n      \r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.schedule_meeting_event, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 my-2\">\r\n        <attendance-setup-form-schedule CLIENT_ID=\"${this.clientId}\"></attendance-setup-form-schedule>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n"],"names":["__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","verifyToken","email","_id_","type","url","CONSTANTS","cookieName","token","get_cookie","formData","JSON","stringify","base64Decode","date","now","Date","Math","abs","getTime","get_differences","http","method","body","then","response","jsonData","user","expiry","base64Encode","String","set_cookies","set_cookies_minutes","toUTCString","generateNewToken","tokenLogin","id","window","unknowable","ops","GET_AttendanceSchedule","ID","url_params","_get_cookie","getUserLoginInfoCookie","HTTP","headers","Authorization","NetWorkCallResponses","console","errorHttp","SwitchInput","LitElement","name","label","selected","value","isSelected","this","render","html","switch","switchAction","switchActionEvent","target","querySelectorAll","input","createRenderRoot","styles","css","property","Boolean","customElement","AttendanceSetupForm","constructor","super","_hasSetup","_pageButtonAccess","connectedCallback","AppSetup","mId","disconnectedCallback","getAppSettingsExtraSettings","expiration_date","expired","PageButtonUserAccess","PAGE__IDS","AppSettingsExtraUserAccess","pageId","viewType","clientId","firstUpdated","Number"],"sourceRoot":""}