{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_functions_https_https_swal_error_format_ts-src_addons_interfaces_members_groupings-ef9f4e.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/group/models/member/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/subgroup/models/member/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/group_member/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/subgroup/subgroup_member/index.ts"],"sourcesContent":["export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","// To parse this data:\n//\n//   import { Convert, GroupMemberModel } from \"./file\";\n//\n//   const groupMemberModel = Convert.toGroupMemberModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nimport { MembershipMixedUserModel, typeMap as mmumTypeMap } from \"@@addons/interfaces/members/user/mixed\";\nimport { GroupModel, typeMap as gmTypeMap } from \"..\";\n\nexport interface GroupMemberModel {\n    id?:         number;\n    groupId?:    GroupModel;\n    memberId?:   number;\n    date?:       Date;\n    memberInfo?: MembershipMixedUserModel;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toGroupMemberModel(json: string): GroupMemberModel {\n        return cast(JSON.parse(json), r(\"GroupMemberModel\"));\n    }\n\n    public static groupMemberModelToJson(value: GroupMemberModel): string {\n        return JSON.stringify(uncast(value, r(\"GroupMemberModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"GroupMemberModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"groupId\", js: \"groupId\", typ: u(null, r(\"GroupModel\")) },\n        { json: \"memberId\", js: \"memberId\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"memberInfo\", js: \"memberInfo\", typ: u(null, r(\"MembershipMixedUserModel\")) },\n    ], false),\n    \"GroupModel\": gmTypeMap['GroupModel'],\n    \"MembershipMixedUserModel\": mmumTypeMap['MembershipMixedUserModel'],\n    \"GroupingsMemberCategoryModel\": mmumTypeMap['GroupingsMemberCategoryModel'],\n    \"BranchInfo\": mmumTypeMap['BranchInfo'],\n    \"GroupingsOrganizationTypeModel\": mmumTypeMap['GroupingsOrganizationTypeModel'],\n    \"Certificate\": mmumTypeMap['Certificate'],\n    \"Attachment\": mmumTypeMap['Attachment'],\n    \"FolderID\": mmumTypeMap['FolderID'],\n    \"RegionInfo\": mmumTypeMap['RegionInfo'],\n    \"CountryInfo\": mmumTypeMap['CountryInfo'],\n    \"DistrictConstituencyElectoralAreaInfo\": mmumTypeMap['DistrictConstituencyElectoralAreaInfo'],\n};","// To parse this data:\n//\n//   import { Convert, SubGroupMemberModel } from \"./file\";\n//\n//   const subGroupMemberModel = Convert.toSubGroupMemberModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nimport { SubGroupModel, typeMap as sgmTypeMap } from \"..\";\nimport { typeMap as gmTypeMap } from \"../../../group/models\";\nimport { MembershipMixedUserModel, typeMap as mmumTypeMap } from \"@@addons/interfaces/members/user/mixed\";\n\nexport interface SubGroupMemberModel {\n    id?:         number;\n    subgroupId?: SubGroupModel;\n    memberId?:   number;\n    date?:       Date;\n    memberInfo?: MembershipMixedUserModel;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toSubGroupMemberModel(json: string): SubGroupMemberModel {\n        return cast(JSON.parse(json), r(\"SubGroupMemberModel\"));\n    }\n\n    public static subGroupMemberModelToJson(value: SubGroupMemberModel): string {\n        return JSON.stringify(uncast(value, r(\"SubGroupMemberModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"SubGroupMemberModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"subgroupId\", js: \"subgroupId\", typ: u(null, r(\"SubGroupModel\")) },\n        { json: \"memberId\", js: \"memberId\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"memberInfo\", js: \"memberInfo\", typ: u(null, r(\"MembershipMixedUserModel\")) },\n    ], false),\n    \"GroupModel\": gmTypeMap['GroupModel'],\n    \"SubGroupModel\": sgmTypeMap['SubGroupModel'],\n    \"MembershipMixedUserModel\": mmumTypeMap['MembershipMixedUserModel'],\n    \"GroupingsMemberCategoryModel\": mmumTypeMap['GroupingsMemberCategoryModel'],\n    \"BranchInfo\": mmumTypeMap['BranchInfo'],\n    \"GroupingsOrganizationTypeModel\": mmumTypeMap['GroupingsOrganizationTypeModel'],\n    \"Certificate\": mmumTypeMap['Certificate'],\n    \"Attachment\": mmumTypeMap['Attachment'],\n    \"FolderID\": mmumTypeMap['FolderID'],\n    \"RegionInfo\": mmumTypeMap['RegionInfo'],\n    \"CountryInfo\": mmumTypeMap['CountryInfo'],\n    \"DistrictConstituencyElectoralAreaInfo\": mmumTypeMap['DistrictConstituencyElectoralAreaInfo'],\n};\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GroupingsGroupMembers<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group-member'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GroupingsSubGroupMembers<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/sub-group-member'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}"],"names":["__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","typ","undefined","jsonToJS","map","props","p","key","js","jsToJSON","val","getProps","ref","typeMap","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","GET_GroupingsGroupMembers","type","url_params","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","console","errorHttp","GET_GroupingsSubGroupMembers"],"sourceRoot":""}