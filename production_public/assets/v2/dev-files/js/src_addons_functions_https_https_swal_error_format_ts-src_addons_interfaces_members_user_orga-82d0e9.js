"use strict";(self.webpackChunkwebpackNumbers=self.webpackChunkwebpackNumbers||[]).push([["src_addons_functions_https_https_swal_error_format_ts-src_addons_interfaces_members_user_orga-82d0e9"],{8967:(t,n,e)=>{e.r(n),e.d(n,{__swalStyle:()=>s,https_swal_error_format:()=>o});const s="<style>#swal2-validation-message{\n  display: flex !important;\n  justify-content: flex-start !important;\n  font-weight: 600 !important;\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>",o=(t,n=!0)=>{if(Array.isArray(t)){let e=(n?s:"")+"<ul>";return t.forEach((t=>{e+="string"==typeof t?`<li>${t}</li>\n`:`<li>${t.error}</li>\n`})),e+="</ul>"}throw new Error("Unknown error response format")}},8530:(t,n,e)=>{e.r(n),e.d(n,{Convert:()=>s,typeMap:()=>u});class s{static toMembershipOrganizationUserModel(t){return a(JSON.parse(t),j("MembershipOrganizationUserModel"),r)}static membershipOrganizationUserModelToJson(t){return JSON.stringify(a(t,j("MembershipOrganizationUserModel"),l),null,2)}}function o(t,n,e=""){e&&console.log(`Invalid value for key "${e}". Expected type ${JSON.stringify(t)} but got ${JSON.stringify(n)}`),console.log(`Invalid value ${JSON.stringify(n)} for type ${JSON.stringify(t)}`)}function r(t){if(void 0===t.jsonToJS){const n={};t.props.forEach((t=>n[t.json]={key:t.js,typ:t.typ})),t.jsonToJS=n}return t.jsonToJS}function l(t){if(void 0===t.jsToJSON){const n={};t.props.forEach((t=>n[t.js]={key:t.json,typ:t.typ})),t.jsToJSON=n}return t.jsToJSON}function a(t,n,e,s=""){if("any"===n)return t;if(null===n&&null===t)return t;if(!1!==n){for(;"object"==typeof n&&void 0!==n.ref;)n=u[n.ref];return Array.isArray(n)?function(t,n){return-1!==t.indexOf(n)?n:o(t,n)}(n,t):"object"==typeof n?n.hasOwnProperty("unionMembers")?function(t,n){const s=t.length;for(let o=0;o<s;o++){const s=t[o];try{return a(n,s,e)}catch(t){}}return o(t,n)}(n.unionMembers,t):n.hasOwnProperty("arrayItems")?function(t,n){return Array.isArray(n)?n.map((n=>a(n,t,e))):o("array",n)}(n.arrayItems,t):n.hasOwnProperty("props")?function(t,n,s){if(null===s||"object"!=typeof s||Array.isArray(s))return o("object",s);const r={};return Object.getOwnPropertyNames(t).forEach((n=>{const o=t[n],l=Object.prototype.hasOwnProperty.call(s,n)?s[n]:void 0;r[o.key]=a(l,o.typ,e,o.key)})),Object.getOwnPropertyNames(s).forEach((o=>{Object.prototype.hasOwnProperty.call(t,o)||(r[o]=a(s[o],n,e,o))})),r}(e(n),n.additional,t):o(n,t):n===Date&&"number"!=typeof t?function(t){if(null===t)return null;const n=new Date(t);return isNaN(n.valueOf())?o("Date",t):n}(t):function(t,n){return typeof t==typeof n?n:o(t,n,s)}(n,t)}}function i(...t){return{unionMembers:t}}function p(t,n){return{props:t,additional:n}}function j(t){return{ref:t}}const u={MembershipOrganizationUserModel:p([{json:"id",js:"id",typ:i(null,0)},{json:"clientId",js:"clientID",typ:i(null,0)},{json:"organizationName",js:"organizationName",typ:i(null,"")},{json:"contactPersonName",js:"contactPersonName",typ:i(null,"")},{json:"organizationType",js:"organizationType",typ:i(null,j("OrganizationType"))},{json:"businessRegistered",js:"businessRegistered",typ:i(null,!0)},{json:"organizationPhone",js:"organizationPhone",typ:i(null,"")},{json:"organizationEmail",js:"organizationEmail",typ:i(null,"")},{json:"contactPersonGender",js:"contactPersonGender",typ:i(null,0)},{json:"contactPersonPhoto",js:"contactPersonPhoto",typ:i(null,"")},{json:"dateOfIncorporation",js:"dateOfIncorporation",typ:i(null,Date)},{json:"logo",js:"logo",typ:i(null,"")},{json:"contactPersonPhone",js:"contactPersonPhone",typ:i(null,"")},{json:"contactPersonEmail",js:"contactPersonEmail",typ:i(null,"")},{json:"countryOfBusiness",js:"countryOfBusiness",typ:i(null,"")},{json:"stateProvince",js:"stateProvince",typ:i(null,"")},{json:"region",js:"region",typ:i(null,0)},{json:"district",js:"district",typ:i(null,0)},{json:"constituency",js:"constituency",typ:i(null,0)},{json:"electoralArea",js:"electoralArea",typ:i(null,0)},{json:"community",js:"community",typ:i(null,"")},{json:"digitalAddress",js:"digitalAddress",typ:i(null,"")},{json:"level",js:"level",typ:i(null,0)},{json:"status",js:"status",typ:i(null,0)},{json:"accountType",js:"accountType",typ:i(null,0)},{json:"memberType",js:"memberType",typ:i(null,0)},{json:"date",js:"date",typ:i(null,Date)},{json:"last_login",js:"lastLogin",typ:i(null,Date)},{json:"referenceId",js:"referenceID",typ:i(null,"")},{json:"branchId",js:"branchID",typ:i(null,0)},{json:"certificates",js:"certificates",typ:i(null,(y=j("Certificate"),{arrayItems:y}))}],!1),Certificate:p([{json:"id",js:"id",typ:i(null,0)},{json:"memberId",js:"memberID",typ:i(null,0)},{json:"attachment",js:"attachment",typ:i(null,j("Attachment"))},{json:"date",js:"date",typ:i(null,Date)}],!1),Attachment:p([{json:"id",js:"id",typ:i(null,0)},{json:"clientId",js:"clientID",typ:i(null,0)},{json:"attachment",js:"attachment",typ:i(null,"")},{json:"filename",js:"filename",typ:i(null,"")},{json:"source",js:"source",typ:i(null,"")},{json:"size",js:"size",typ:i(null,"")},{json:"folderId",js:"folderID",typ:i(null,j("FolderID"))},{json:"fileDescription",js:"fileDescription",typ:i(null,"")},{json:"createdBy",js:"createdBy",typ:i(null,0)},{json:"updatedBy",js:"updatedBy",typ:i(null,0)},{json:"updateDate",js:"updateDate",typ:i(null,Date)},{json:"archived",js:"archived",typ:i(null,!0)},{json:"archivedBy",js:"archivedBy",typ:i(null,0)},{json:"archivedDate",js:"archivedDate",typ:i(null,Date)},{json:"date",js:"date",typ:i(null,Date)}],!1),FolderID:p([{json:"id",js:"id",typ:i(null,0)},{json:"parentFolder",js:"parentFolder",typ:i(null,0)},{json:"clientId",js:"clientID",typ:i(null,0)},{json:"branchId",js:"branchID",typ:i(null,0)},{json:"folder",js:"folder",typ:i(null,"")},{json:"folderType",js:"folderType",typ:i(null,0)},{json:"createdBy",js:"createdBy",typ:i(null,0)},{json:"updatedBy",js:"updatedBy",typ:i(null,0)},{json:"updateDate",js:"updateDate",typ:i(null,Date)},{json:"date",js:"date",typ:i(null,Date)}],!1),OrganizationType:p([{json:"id",js:"id",typ:i(null,0)},{json:"memberId",js:"memberID",typ:i(null,0)},{json:"clientId",js:"clientID",typ:i(null,0)},{json:"type",js:"type",typ:i(null,"")},{json:"createdBy",js:"createdBy",typ:i(null,0)},{json:"updatedBy",js:"updatedBy",typ:i(null,0)},{json:"updateDate",js:"updateDate",typ:i(null,Date)},{json:"date",js:"date",typ:i(null,Date)}],!1)};var y}}]);
//# sourceMappingURL=src_addons_functions_https_https_swal_error_format_ts-src_addons_interfaces_members_user_orga-82d0e9.js.map