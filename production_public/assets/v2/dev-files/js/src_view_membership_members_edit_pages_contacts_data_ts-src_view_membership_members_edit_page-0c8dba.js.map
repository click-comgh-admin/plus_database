{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_membership_members_edit_pages_contacts_data_ts-src_view_membership_members_edit_page-0c8dba.js","mappings":"mnBASO,SAAeA,EAAsBC,G,yCAC1C,MAAMC,GAAc,IAAAC,0BAEdC,EAAM,EAAAC,UAAA,0BAAsC,6BAA+BJ,EAC/EK,EAAiCC,SAASC,cAAc,oDACxDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAO,4BAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,IAAAC,MAAKpB,EAAK,CACrBqB,OAAQ,QACRC,KAAMjB,EACNkB,QAAS,CACTC,cAAe,SAAW1B,EAAY2B,SAErC,GAAOC,MAAMC,IAGd,MAAMC,EAAiB,IAAI,EAAAC,qBAAqB,OAAQF,GAAM,EAAOzB,GAC/D4B,EAAYF,EAAeG,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAEI,GAAK,KAAOH,GACzB,qBAATD,EAAEI,KACJF,EAAW,CAAEC,MAAOF,IAGtBH,EAAOO,KAAKH,EAAS,GACrB,IAGJ,MAAMI,GAAM,IAAAC,yBAAwBT,GACpC,0BACE,GAAGQ,I,CAIT,OAAOd,CAAc,IACpBgB,OAAML,IACP,0BACE,GAAGM,OAAON,KACX,GAEL,IACAO,kBAAmB,KAAO,kBACzBpB,MAAMqB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOpB,SACrDkB,EAAaJ,OAAOS,EAAMC,SAE1BL,EAAYC,EAAOpB,SAASyB,O,CAE9BN,GAAY,SAAU,CACpB3C,MAAO0C,EACPzC,KAAM0C,EAAY,UAAY,QAC9BzC,UAAWyC,EAAY,UAAY,UACnCrC,mBAAoB,YAEtBqC,GAAYO,YAAW,KACrBC,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,kbCvFO,SAAeC,I,yCAEpB,MAAM/D,GAAc,IAAAC,0BAGdC,EAAM,EAAAC,UAAA,0BAAsC,4BAChDC,EAAiCC,SAASC,cAAc,oDACxDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAO,yBAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,IAAAC,MAAKpB,EAAK,CACrBqB,OAAQ,OACRC,KAAMjB,EACNkB,QAAS,CACPC,cAAe,SAAW1B,EAAY2B,SAEvC,GAAOC,MAAMC,IAGd,MAAMC,EAAiB,IAAI,EAAAC,qBAAqB,OAAQF,GAAM,EAAOzB,GAC/D4B,EAAYF,EAAeG,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAEI,GAAK,KAAOH,GACzB,qBAATD,EAAEI,KACJF,EAAW,CAAEC,MAAOF,IAGtBH,EAAOO,KAAKH,EAAS,GACrB,IAGJ,MAAMI,GAAM,IAAAC,yBAAwBT,GACpC,0BACE,GAAGQ,I,CAIT,OAAOd,CAAc,IACpBgB,OAAML,IACP,0BACE,GAAGM,OAAON,KACX,GAEL,IACAO,kBAAmB,KAAO,kBACzBpB,MAAMqB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOpB,SACrDkB,EAAaJ,OAAOS,EAAMC,SAE1BL,EAAYC,EAAOpB,SAASyB,O,CAE9BN,GAAY,SAAU,CACpB3C,MAAO0C,EACPzC,KAAM0C,EAAY,UAAY,QAC9BzC,UAAWyC,EAAY,UAAY,UACnCrC,mBAAoB,YAEtBqC,GAAYO,YAAW,KACrBC,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,qbCzFO,SAAeE,EAAyBjE,G,yCAC7C,MAAMC,GAAc,IAAAC,0BAEdC,EAAM,EAAAC,UAAA,0BAAsC,qCAAuCJ,EACvFK,EAAiCC,SAASC,cAAc,4DACxDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAO,+BAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,IAAAC,MAAKpB,EAAK,CACrBqB,OAAQ,QACRC,KAAMjB,EACNkB,QAAS,CACTC,cAAe,SAAW1B,EAAY2B,SAErC,GAAOC,MAAMC,IAGd,MAAMC,EAAiB,IAAI,EAAAC,qBAAqB,OAAQF,GAAM,EAAOzB,GAC/D4B,EAAYF,EAAeG,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAEI,GAAK,KAAOH,GACzB,qBAATD,EAAEI,KACJF,EAAW,CAAEC,MAAOF,IAGtBH,EAAOO,KAAKH,EAAS,GACrB,IAGJ,MAAMI,GAAM,IAAAC,yBAAwBT,GACpC,0BACE,GAAGQ,I,CAIT,OAAOd,CAAc,IACpBgB,OAAML,IACP,0BACE,GAAGM,OAAON,KACX,GAEL,IACAO,kBAAmB,KAAO,kBACzBpB,MAAMqB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOpB,SACrDkB,EAAaJ,OAAOS,EAAMC,SAE1BL,EAAYC,EAAOpB,SAASyB,O,CAE9BN,GAAY,SAAU,CACpB3C,MAAO0C,EACPzC,KAAM0C,EAAY,UAAY,QAC9BzC,UAAWyC,EAAY,UAAY,UACnCrC,mBAAoB,YAEtBqC,GAAYO,YAAW,KACrBC,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,qbCvFO,SAAeG,I,yCAEpB,MAAMjE,GAAc,IAAAC,0BAGdC,EAAM,EAAAC,UAAA,0BAAsC,oCAChDC,EAAiCC,SAASC,cAAc,4DACxDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAO,4BAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,IAAAC,MAAKpB,EAAK,CACrBqB,OAAQ,OACRC,KAAMjB,EACNkB,QAAS,CACPC,cAAe,SAAW1B,EAAY2B,SAEvC,GAAOC,MAAMC,IAGd,MAAMC,EAAiB,IAAI,EAAAC,qBAAqB,OAAQF,GAAM,EAAOzB,GAC/D4B,EAAYF,EAAeG,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAEI,GAAK,KAAOH,GACzB,qBAATD,EAAEI,KACJF,EAAW,CAAEC,MAAOF,IAGtBH,EAAOO,KAAKH,EAAS,GACrB,IAGJ,MAAMI,GAAM,IAAAC,yBAAwBT,GACpC,0BACE,GAAGQ,I,CAIT,OAAOd,CAAc,IACpBgB,OAAML,IACP,0BACE,GAAGM,OAAON,KACX,GAEL,IACAO,kBAAmB,KAAO,kBACzBpB,MAAMqB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOpB,SACrDkB,EAAaJ,OAAOS,EAAMC,SAE1BL,EAAYC,EAAOpB,SAASyB,O,CAE9BN,GAAY,SAAU,CACpB3C,MAAO0C,EACPzC,KAAM0C,EAAY,UAAY,QAC9BzC,UAAWyC,EAAY,UAAY,UACnCrC,mBAAoB,YAEtBqC,GAAYO,YAAW,KACrBC,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,gmBCrFO,IAAMI,EAAN,cAAiD,EAAAC,WACtDC,cAAgBC,QAMR,KAAAC,kBAAwC,IANvB,CAQzBC,oBACEF,MAAME,mBACR,CAEAC,uBAAyB,CAOzBC,SAEE,OAA+B,OAA3BC,KAAKJ,kBAAmCI,KAAKC,aAC7CD,KAAKJ,kBAAkBnC,OAAS,GAAGuC,KAAKJ,kBAAkB3B,KAAK,MAC5D+B,KAAKJ,kBAAkBM,KAAIC,IAChC,IAAIC,EAAa,GACjB,MACEC,EADkB,IAAIC,KAAKH,aAAO,EAAPA,EAASC,YACZG,mBAAmB,QAAS,CAClDC,IAAK,UAAWC,MAAO,UAAWC,KAAM,UAAWC,cAAe,aAEjEC,MAAM,KAEX,OADER,EAAa,CAACC,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAAIQ,KAAK,KACxD,EAAAC,IAAI;;;;;;;4HAO2GX,aAAO,EAAPA,EAASY;;;;;gHAKrBZ,aAAO,EAAPA,EAASa;;;;;2HAKEb,aAAO,EAAPA,EAASc;;;;;qIAKCd,aAAO,EAAPA,EAASe;;;;;uHAKvBf,aAAO,EAAPA,EAASgB;;;;;oHAKZhB,aAAO,EAAPA,EAASiB;;;;;0HAKHjB,aAAO,EAAPA,EAASkB;;;;;oHAKflB,aAAO,EAAPA,EAASmB;;;;;gIAKGnB,aAAO,EAAPA,EAASoB;;;;;mIAKNpB,aAAO,EAAPA,EAASqB;;;;;;;;yDAQnFrB,aAAO,EAAPA,EAASsB;;;;;;kEAMAtB,aAAO,EAAPA,EAASuB;;;;;;+DAMZvB,aAAO,EAAPA,EAASwB;;;;;;yDAMfvB;;;wEAGeJ,KAAK4B;;;;;oFAKO5B,KAAK6B;;;;MAInF,IAEJ,CAEY5B,kBACV,OAAO,EAAAa,IAAI;;;;;;IAOb,CAYAgB,eAAiB,CAEXD,WAAWjE,G,qCACf,IAAImE,EAAgBC,EAEhBhC,KAAKJ,kBAAkBnC,OAAS,GAGA,OAA9BuC,KAAKJ,kBAAkB,GAF3BmC,GAAQ,GAKNA,GAAQ,EACRC,EAAWhC,KAAKJ,kBAAkB,GAAG5B,IAIrC+D,QACI,IAAA1C,8BAEA,IAAAjE,uBAAsB4G,EAEhC,E,+RAEAC,mBACE,OAAOjC,IACT,GA7JO,EAAAkC,OAAS,CACd,EAAAC,GAAG;;KAZL,IAAC,IAAAC,UAAS,CAAEC,KAAMC,S,wDAGlB,IAAC,IAAAF,UAAS,CAAEC,KAAME,Q,gEANP/C,EAAkC,IAD9C,IAAAgD,eAAc,2C,2BACFhD,E,ulBCDN,IAAMiD,EAAN,cAAoD,EAAAhD,WACzDC,cAAgBC,QAMR,KAAA+C,qBAAkD,IANjC,CAQzB7C,oBACEF,MAAME,mBACR,CAEAC,uBAAyB,CAOzBC,SAEE,OAAkC,OAA9BC,KAAK0C,qBAAsC1C,KAAKC,aAChDD,KAAK0C,qBAAqBjF,OAAS,GAAGuC,KAAK0C,qBAAqBzE,KAAK,MAClE+B,KAAK0C,qBAAqBxC,KAAIC,GAC5B,EAAAW,IAAI;;;;;;;gFAO+DX,aAAO,EAAPA,EAASY;;;;;;gFAMTZ,aAAO,EAAPA,EAASa;;;;;;4FAMGb,aAAO,EAAPA,EAASc;;;;;;sFAMfd,aAAO,EAAPA,EAASe;;;;;;sFAMTf,aAAO,EAAPA,EAASgB;;;;;;oFAMXhB,aAAO,EAAPA,EAASiB;;;;;;wFAMLjB,aAAO,EAAPA,EAASkB;;;;;;oFAMblB,aAAO,EAAPA,EAASmB;;;;;;gGAMGnB,aAAO,EAAPA,EAASoB;;;;;;kGAMPpB,aAAO,EAAPA,EAASqB;;;;;;0FAMjBrB,aAAO,EAAPA,EAASsB;;;;;;4GAMStB,aAAO,EAAPA,EAASuB;;;;;;oGAMjBvB,aAAO,EAAPA,EAASwB;;;;wEAIrC3B,KAAK4B;;;;;oFAKO5B,KAAK6B;;;;SAMvF,CAEY5B,kBACV,OAAO,EAAAa,IAAI;;;;;;IAOb,CAYAgB,eAAiB,CAEXD,WAAWjE,G,qCACf,IAAImE,EAAgBC,EAEhBhC,KAAK0C,qBAAqBjF,OAAS,GAGA,OAAjCuC,KAAK0C,qBAAqB,GAF9BX,GAAQ,GAKNA,GAAQ,EACRC,EAAWhC,KAAK0C,qBAAqB,GAAG1E,IAIxC+D,QACI,IAAAxC,iCAEA,IAAAD,0BAAyB0C,EAEnC,E,+RAEAC,mBACE,OAAOjC,IACT,GAxJO,EAAAkC,OAAS,CACd,EAAAC,GAAG;;KAZL,IAAC,IAAAC,UAAS,CAAEC,KAAMC,S,wDAGlB,IAAC,IAAAF,UAAS,CAAEC,KAAME,Q,mEANPE,EAAqC,IADjD,IAAAD,eAAc,8C,2BACFC,E","sources":["webpack://webpackNumbers/./src/addons/network/members/contact/data/patch.ts","webpack://webpackNumbers/./src/addons/network/members/contact/data/post.ts","webpack://webpackNumbers/./src/addons/network/members/contact/privacy/patch.ts","webpack://webpackNumbers/./src/addons/network/members/contact/privacy/post.ts","webpack://webpackNumbers/./src/view/membership/members/edit/pages/contacts/data.ts","webpack://webpackNumbers/./src/view/membership/members/edit/pages/contacts/privacy.ts"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_UserContactData(ID: Number,): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-contact-info/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-contact-info\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update User Contact Data?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_UserContactData(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-contact-info',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-contact-info\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add User Contact Data?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_UserContactPrivacy(ID: Number,): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-contact-info-privacy/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-contact-info-privacy\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update User Contact Privacy?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_UserContactPrivacy(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-contact-info-privacy',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-contact-info-privacy\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add User Contact Privacy?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@material/mwc-circular-progress';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-textarea';\r\nimport { UserContactModel } from '@@addons/interfaces/members/user/contact';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@@addons/widgets/alert';\r\nimport { PATCH_UserContactData } from '@@addons/network/members/contact/data/patch';\r\nimport { POST_UserContactData } from '@@addons/network/members/contact/data/post';\r\n\r\n\r\n@customElement(\"pdb-membership-update-view-contact-data\")\r\nexport class PdbMembershipUpdateViewContactData extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public memberId?: number;\r\n\r\n  @property({ type: Array })\r\n  private memberContactInfo: UserContactModel[] = null;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this.memberContactInfo === null) return this.pageLoading;\r\n    if (this.memberContactInfo.length < 1) this.memberContactInfo.push(null);\r\n    return this.memberContactInfo.map(contact => {   \r\n      let dateJoined = \"\";\r\n      const _dateJoined = new Date(contact?.dateJoined),\r\n        __TO_DATE = _dateJoined.toLocaleDateString('en-US', {\r\n          day: '2-digit', month: '2-digit', year: 'numeric', formatMatcher: 'best fit',\r\n          // @ts-ignore\r\n        }).split(\"/\");\r\n        dateJoined = [__TO_DATE[2], __TO_DATE[0], __TO_DATE[1]].join('-');\r\n      return html`\r\n      <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-contact-info\" enctype=\"multipart/form-data\">\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mt-1 mb-2\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4\">\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Phone Number</h4>\r\n              <mwc-textfield name=\"phone\" id=\"phone\" label=\"Enter Phone Number\" outlined type=\"tel\" maxLength=\"13\" value=\"${contact?.phone}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Email Address</h4>\r\n              <mwc-textfield name=\"email\" id=\"email\" label=\"Enter Email Address\" outlined type=\"email\" value=\"${contact?.email}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Place of Work</h4>\r\n              <mwc-textfield name=\"placeOfWork\" id=\"placeOfWork\" label=\"Enter Place of Work\" outlined type=\"text\" value=\"${contact?.placeOfWork}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Whatsapp Number</h4>\r\n              <mwc-textfield name=\"whatsapp\" id=\"whatsapp\" label=\"Enter Whatsapp Number\" outlined type=\"tel\" maxLength=\"13\" value=\"${contact?.whatsapp}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Facebook Handle</h4>\r\n              <mwc-textfield name=\"facebook\" id=\"facebook\" label=\"Enter Facebook Handle\" outlined type=\"text\" value=\"${contact?.facebook}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Twitter Handle</h4>\r\n              <mwc-textfield name=\"twitter\" id=\"twitter\" label=\"Enter Twitter Handle\" outlined type=\"text\" value=\"${contact?.twitter}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Instagram Handle</h4>\r\n              <mwc-textfield name=\"instagram\" id=\"instagram\" label=\"Enter Instagram Handle\" outlined type=\"text\" value=\"${contact?.instagram}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Website Address</h4>\r\n              <mwc-textfield name=\"website\" id=\"website\" label=\"Enter Website Address\" outlined type=\"url\" value=\"${contact?.website}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Postal Address</h4>\r\n              <mwc-textfield name=\"postalAddress\" id=\"postalAddress\" label=\"Enter Postal Address\" outlined type=\"text\" value=\"${contact?.postalAddress}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Digital Address</h4>\r\n              <mwc-textfield name=\"digitalAddress\" id=\"digitalAddress\" label=\"Enter Digital Address\" outlined type=\"text\" value=\"${contact?.digitalAddress}\">\r\n              </mwc-textfield>\r\n            </div>\r\n            <div></div>\r\n            <div></div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Account Bio</h4>\r\n              <mwc-textarea class=\"h-48\" outlined name=\"accountBio\" id=\"accountBio\" label=\"Enter Account Bio\"\r\n                placeholder=\"Enter Account Bio\" value=\"${contact?.accountBio}\">\r\n              </mwc-textarea>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Business Description</h4>\r\n              <mwc-textarea class=\"h-48\" outlined name=\"businessDescription\" id=\"businessDescription\" label=\"Enter Business Description\"\r\n                placeholder=\"Enter Business Description\" value=\"${contact?.businessDescription}\">\r\n              </mwc-textarea>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter Business Hashtags <span class=\"text-yellow-400\">Seperate with comma[xyx,abc] or with new lines.</span></h4>\r\n              <mwc-textarea class=\"h-48\" outlined name=\"businessHashtag\" id=\"businessHashtag\" label=\"Enter Business Hashtags\"\r\n                placeholder=\"Enter Business Hashtags\" value=\"${contact?.businessHashtag}\">\r\n              </mwc-textarea>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Date Joined</h4>\r\n              <mwc-textfield name=\"dateJoined\" type=\"date\" class=\"w-full\" id=\"dateJoined\"\r\n                label=\"Select Date Date Joined\" value=\"${dateJoined}\" outlined required>\r\n              </mwc-textfield>\r\n            </div>\r\n            <input type=\"hidden\" name=\"memberId\" id=\"memberId\" value=\"${this.memberId}\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-1\">\r\n          <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" @click=\"${this.submitForm}\">\r\n          </mwc-button>\r\n        </div>\r\n      </form>\r\n     `;\r\n    });\r\n  }\r\n\r\n  private get pageLoading() {\r\n    return html`\r\n    <div class=\"main-container\">\r\n      <div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>\r\n    </div>\r\n   `;\r\n  }\r\n\r\n  // private get pageError() {\r\n  //   const header = html`<h4 class=\"text-gray-600\">No Data Found!</h4>`,\r\n  //     content = nothing;\r\n  //   return html`\r\n  //   <div class=\"col-md-12\">\r\n  //     <alert-card info .header=\"${header}\" .content=\"${content}\" extra_class=\"!max-w-full\"></alert-card>\r\n  //   </div>\r\n  //  `;\r\n  // }\r\n\r\n  firstUpdated() { }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    let isNew: boolean, updateId: number;\r\n\r\n    if (this.memberContactInfo.length < 1) {\r\n      isNew = true;\r\n    } else {\r\n      if (this.memberContactInfo[0] === null) {\r\n        isNew = true;\r\n      } else {\r\n        isNew = false;\r\n        updateId = this.memberContactInfo[0].id;\r\n      }\r\n    }\r\n\r\n    if (isNew) {\r\n      await POST_UserContactData();\r\n    } else {\r\n      await PATCH_UserContactData(updateId);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@material/mwc-circular-progress';\r\nimport '@material/mwc-button';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport { UserContactPrivacyModel } from '@@addons/interfaces/members/user/contact/privacy';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@@addons/widgets/alert';\r\nimport { PATCH_UserContactPrivacy } from '@@addons/network/members/contact/privacy/patch';\r\nimport { POST_UserContactPrivacy } from '@@addons/network/members/contact/privacy/post';\r\n\r\n\r\n@customElement(\"pdb-membership-update-view-contact-privacy\")\r\nexport class PdbMembershipUpdateViewContactPrivacy extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public memberId?: number;\r\n\r\n  @property({ type: Array })\r\n  private memberContactPrivacy: UserContactPrivacyModel[] = null;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this.memberContactPrivacy === null) return this.pageLoading;\r\n    if (this.memberContactPrivacy.length < 1) this.memberContactPrivacy.push(null);\r\n    return this.memberContactPrivacy.map(contact => {   \r\n      return html`\r\n      <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-contact-info-privacy\" enctype=\"multipart/form-data\">\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mt-1 mb-2\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4\">\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Phone Number</h4>\r\n              <switch-input name=\"phone\" class=\"w-full\" id=\"phone\" ?selected=\"${contact?.phone}\"\r\n                label=\"Hide Account Phone Number?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Email Address</h4>\r\n              <switch-input name=\"email\" class=\"w-full\" id=\"email\" ?selected=\"${contact?.email}\"\r\n                label=\"Hide Account Email Address?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Place of Work</h4>\r\n              <switch-input name=\"placeOfWork\" class=\"w-full\" id=\"placeOfWork\" ?selected=\"${contact?.placeOfWork}\"\r\n                label=\"Hide Place of Work?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Whatsapp Number</h4>\r\n              <switch-input name=\"whatsapp\" class=\"w-full\" id=\"whatsapp\" ?selected=\"${contact?.whatsapp}\"\r\n                label=\"Hide Account Whatsapp Number?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Facebook Handle</h4>\r\n              <switch-input name=\"facebook\" class=\"w-full\" id=\"facebook\" ?selected=\"${contact?.facebook}\"\r\n                label=\"Hide Account Facebook Handle?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Twitter Handle</h4>\r\n              <switch-input name=\"twitter\" class=\"w-full\" id=\"twitter\" ?selected=\"${contact?.twitter}\"\r\n                label=\"Hide Account Twitter Handle?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Instagram Handle</h4>\r\n              <switch-input name=\"instagram\" class=\"w-full\" id=\"instagram\" ?selected=\"${contact?.instagram}\"\r\n                label=\"Hide Account Instagram Handle?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Website Address</h4>\r\n              <switch-input name=\"website\" class=\"w-full\" id=\"website\" ?selected=\"${contact?.website}\"\r\n                label=\"Hide Account Website Address?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Postal Address</h4>\r\n              <switch-input name=\"postalAddress\" class=\"w-full\" id=\"postalAddress\" ?selected=\"${contact?.postalAddress}\"\r\n                label=\"Hide Account Postal Address?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Digital Address</h4>\r\n              <switch-input name=\"digitalAddress\" class=\"w-full\" id=\"digitalAddress\" ?selected=\"${contact?.digitalAddress}\"\r\n                label=\"Hide Account Digital Address?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Account Bio</h4>\r\n              <switch-input name=\"accountBio\" class=\"w-full\" id=\"accountBio\" ?selected=\"${contact?.accountBio}\"\r\n                label=\"Hide Account Bio?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Business Description</h4>\r\n              <switch-input name=\"businessDescription\" class=\"w-full\" id=\"businessDescription\" ?selected=\"${contact?.businessDescription}\"\r\n                label=\"Hide Business Description?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Hide Business Hashtags</h4>\r\n              <switch-input name=\"businessHashtag\" class=\"w-full\" id=\"businessHashtag\" ?selected=\"${contact?.businessHashtag}\"\r\n                label=\"Hide Business Hashtags?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <input type=\"hidden\" name=\"memberId\" id=\"memberId\" value=\"${this.memberId}\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-1\">\r\n          <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" @click=\"${this.submitForm}\">\r\n          </mwc-button>\r\n        </div>\r\n      </form>\r\n     `;\r\n    });\r\n  }\r\n\r\n  private get pageLoading() {\r\n    return html`\r\n    <div class=\"main-container\">\r\n      <div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>\r\n    </div>\r\n   `;\r\n  }\r\n\r\n  // private get pageError() {\r\n  //   const header = html`<h4 class=\"text-gray-600\">No Data Found!</h4>`,\r\n  //     content = nothing;\r\n  //   return html`\r\n  //   <div class=\"col-md-12\">\r\n  //     <alert-card info .header=\"${header}\" .content=\"${content}\" extra_class=\"!max-w-full\"></alert-card>\r\n  //   </div>\r\n  //  `;\r\n  // }\r\n\r\n  firstUpdated() { }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    let isNew: boolean, updateId: number;\r\n\r\n    if (this.memberContactPrivacy.length < 1) {\r\n      isNew = true;\r\n    } else {\r\n      if (this.memberContactPrivacy[0] === null) {\r\n        isNew = true;\r\n      } else {\r\n        isNew = false;\r\n        updateId = this.memberContactPrivacy[0].id;\r\n      }\r\n    }\r\n\r\n    if (isNew) {\r\n      await POST_UserContactPrivacy();\r\n    } else {\r\n      await PATCH_UserContactPrivacy(updateId);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["PATCH_UserContactData","ID","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","error","id","push","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","POST_UserContactData","PATCH_UserContactPrivacy","POST_UserContactPrivacy","PdbMembershipUpdateViewContactData","LitElement","constructor","super","memberContactInfo","connectedCallback","disconnectedCallback","render","this","pageLoading","map","contact","dateJoined","__TO_DATE","Date","toLocaleDateString","day","month","year","formatMatcher","split","join","html","phone","email","placeOfWork","whatsapp","facebook","twitter","instagram","website","postalAddress","digitalAddress","accountBio","businessDescription","businessHashtag","memberId","submitForm","firstUpdated","isNew","updateId","createRenderRoot","styles","css","property","type","Number","Array","customElement","PdbMembershipUpdateViewContactPrivacy","memberContactPrivacy"],"sourceRoot":""}