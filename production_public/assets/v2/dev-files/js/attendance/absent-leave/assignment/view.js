"use strict";!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.webpackNumbers=t():e.webpackNumbers=t()}(self,(()=>(self.webpackChunkwebpackNumbers=self.webpackChunkwebpackNumbers||[]).push([["attendance/absent-leave/assignment/view"],{4947:(e,t,n)=>{n.r(t),n.d(t,{getDate:()=>s});const s=(e,t)=>(new Date,new Date(`${e}`).toLocaleDateString("en-US",t))},6951:(e,t,n)=>{n.r(t),n.d(t,{dateTime:()=>s,getDateTime:()=>o});const s=(e="")=>{let t=new Date,n=t.getFullYear(),s=t.getMonth()+1,o=t.getDate(),i=t.getHours(),r=t.getMinutes(),l=t.getSeconds(),a=n+"-"+s+"-"+o,c=i+":"+r+":"+l;return{dateTime:new Date(n,s,o,i,r,l),__string__:a+" "+c,__code__:n+s+o+i+r+l}},o=(e,t)=>(new Date,new Date(`${e}`).toLocaleString("en-US",t))},2892:(e,t,n)=>{n.r(t),n.d(t,{GET_MemberGroupingsGroups:()=>l});var s=n(8485),o=n(7270),i=n(4492),r=n(3600);function l(e=null,t=""){return n=this,l=void 0,c=function*(){const n=(0,r.getUserLoginInfoCookie)(),l=s.CONSTANTS.URLS.AKWAABA_API_BASE_URL+"members/groupings/group"+(null===e?"":"/"+e)+t,a=yield(0,o.http)(l,{method:"GET",headers:{Authorization:"Token "+n.token}},!0);try{return new i.NetWorkCallResponses("get",a)}catch(e){console.error({error:e});let t=a;return t.error=e,new i.NetWorkCallResponses("get",t,!0)}},new((a=void 0)||(a=Promise))((function(e,t){function s(e){try{i(c.next(e))}catch(e){t(e)}}function o(e){try{i(c.throw(e))}catch(e){t(e)}}function i(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(s,o)}i((c=c.apply(n,l||[])).next())}));var n,l,a,c}},9605:(e,t,n)=>{n.r(t),n.d(t,{GET_MemberGroupingsSubGroups:()=>l});var s=n(8485),o=n(7270),i=n(4492),r=n(3600);function l(e=null,t=""){return n=this,l=void 0,c=function*(){const n=(0,r.getUserLoginInfoCookie)(),l=s.CONSTANTS.URLS.AKWAABA_API_BASE_URL+"members/groupings/sub-group"+(null===e?"":"/"+e)+t,a=yield(0,o.http)(l,{method:"GET",headers:{Authorization:"Token "+n.token}},!0);try{return new i.NetWorkCallResponses("get",a)}catch(e){console.error({error:e});let t=a;return t.error=e,new i.NetWorkCallResponses("get",t,!0)}},new((a=void 0)||(a=Promise))((function(e,t){function s(e){try{i(c.next(e))}catch(e){t(e)}}function o(e){try{i(c.throw(e))}catch(e){t(e)}}function i(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(s,o)}i((c=c.apply(n,l||[])).next())}));var n,l,a,c}},3245:(e,t,n)=>{n.r(t),n.d(t,{AttendanceAbsentLeaveAssignmentView:()=>N});var s,o,i,r=n(4947),l=(n(3794),n(5862)),a=n(9662),c=n(7052),d=n(3283),u=(n(3590),n(789),n(3313),n(6883),n(367),n(8281),n(6948),n(8485)),p=n(3600),m=n(7725),h=n(4672),f=n(2368),b=n(6224),g=n(602),_=(n(2715),n(7445)),v=n(6951),w=n(2892),y=n(9605),x=(n(3683),n(4657),n(7712)),$=n(1354),S=n(1302),A=n(7108),k=function(e,t,n,s){var o,i=arguments.length,r=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,s);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(r=(i<3?o(r):i>3?o(t,n,r):o(t,n))||r);return i>3&&r&&Object.defineProperty(t,n,r),r},I=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},C=function(e,t,n,s){return new(n||(n=Promise))((function(o,i){function r(e){try{a(s.next(e))}catch(e){i(e)}}function l(e){try{a(s.throw(e))}catch(e){i(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,l)}a((s=s.apply(e,t||[])).next())}))};let B={},D={},N=class extends l.LitElement{constructor(){super(),this.memberProfileBaseUrl="/member/member-profile?view=",this._memberCategories=[],this._activeBranchId=null,this.selectedBranch=1,this._memberType=1,this._branches=[],this._groups=[],this._subgroups=[],this._userLoginInfo=null,this.selectedGroup=0,this.datatablePathUrl="attendance/absent-leave/assignment",this.filterBoxStarted=!1,this._hasSetup=!1,this._pageButtonAccess=!1}connectedCallback(){const e=Object.create(null,{connectedCallback:{get:()=>super.connectedCallback}});return C(this,void 0,void 0,(function*(){e.connectedCallback.call(this),(0,x.AppSetup)().then((()=>this._hasSetup=!0));const t=(0,m.getActiveBranchIdCookie)();this._activeBranchId=null===t?null:[t],this._userLoginInfo=[(0,p.getUserLoginInfoCookie)()],this.filterBox=new f.FilterFieldBox({selectors:{container:this.filterSectionContextContainer,form:this.filterSectionContextForm,filterSectionContextBtn:this.filterSectionContextBtn}}),yield this.getGroups(),yield this.getSubGroups(),yield this.getBranches()}))}disconnectedCallback(){}render(){var e;if(this._hasSetup){if(null===(e=(0,$.getAppSettingsExtraSettings)())||void 0===e?void 0:e.expiration_date.expired)return l.html`<account-expired-component></account-expired-component>`;if(this._pageButtonAccess=(0,S.PageButtonUserAccess)(A.PAGE__IDS.absent_leave_assignment),!(0,S.AppSettingsExtraUserAccess)({pageId:A.PAGE__IDS.absent_leave_assignment,viewType:"View"},!1))return l.html`<no-page-entry-component></no-page-entry-component>`}return l.html`
      <div class="shadow bg-white p-2">
        <span class="flex flex-row md:flex-col w-100"></span>
        <div class="block my-1">
          <mwc-button icon="open_with" label="Filters" raised class="primary mt-1"
            filter-section-context="btn" @click="${this.filterBox.toggleFilterFields}">
          </mwc-button>
        </div>
        <div class="block my-1">
          ${this.filterForm}<br />
        </div>
        <div class="block my-1">
          ${this.table}
        </div>
      </div>
    `}renderColOne(e,t,n){const s=_.Convert.toAttendanceAbsentLeaveAssignmentModel(JSON.stringify(n)),o=(0,c.base64Encode)(String(s.memberID),!0);return 1===s.memberInfo.accountType?`<div class="flex flex-col whitespace-normal justify-between content-between">\n          <div class="flex m-1 justify-evenly">\n            <user-profile-photo class="w-32 h-32 mr-1" rounded 'click-to-open'=""\n              click-to-open="${this.memberProfileBaseUrl}${o}" type="member"\n              url="${s.memberInfo.profilePicture}" size="32"></user-profile-photo>\n          </div>\n          <div class="block m-1">\n            <span class="shadow p-1 block bg-white rounded text-dark">\n              <b>Name</b>: ${s.memberInfo.firstname} ${s.memberInfo.middlename} ${s.memberInfo.surname}\n            </span>\n          </div>\n        </div>`:`<div class="flex flex-col whitespace-normal justify-between content-between">\n          <div class="flex m-1 justify-evenly">\n            <user-profile-photo class="w-32 h-32 mr-1" rounded type="member"\n              url="${s.memberInfo.logo}" size="32"></user-profile-photo>\n          </div>\n          <div class="block m-1">\n            <span class="shadow p-1 block bg-white rounded text-dark">\n              <b>Name</b>: ${s.memberInfo.organizationName}\n            </span>\n          </div>\n        </div>`}renderColThree(e,t,n){const s=_.Convert.toAttendanceAbsentLeaveAssignmentModel(JSON.stringify(n)),o=s.id;return`<div class="flex flex-col whitespace-normal justify-between content-between">\n      <div class="block m-1 shadow p-1 bg-white rounded text-dark">\n        <h6 class="whitespace-nowrap text-base font-bold mr-1">Leave Type</h6>\n        <p class="text-sm ml-1">On ${s.statusID.status} for ${this.get_days(s.totalDays)}</p>\n      </div>\n      <div class="block m-1 shadow p-1 bg-white rounded text-dark">\n        <h6 class="whitespace-nowrap text-base font-bold mr-1">Period:</h6>\n        <p class="text-sm ml-1">From: ${(0,r.getDate)(s.fromDate)} To: ${(0,r.getDate)(s.toDate)}</p>\n      </div>\n      <div class="whitespace-nowrap my-1">\n        ${this.view_assignment_details(s)}\n        <mwc-button class="w-full button info" outlined open-dialog-btn="assignment-details-${o}">\n          <mwc-icon class="mr-1">info</mwc-icon> Details\n        </mwc-button>\n      </div>\n      ${null===s.reason?"":`<div class="whitespace-nowrap my-1">\n        ${this.view_assignment_reason(s)}\n        <mwc-button class="w-full button warning" outlined open-dialog-btn="assignment-reason-${o}">\n          <mwc-icon class="mr-1">note</mwc-icon> Reason\n        </mwc-button>\n      </div>`}\n    </div>`}renderColTwo(e,t,n){const s=_.Convert.toAttendanceAbsentLeaveAssignmentModel(JSON.stringify(n)).id,o=(0,c.base64Encode)(String(s),!0);return`\n      <div class="flex flex-col whitespace-normal justify-between content-between">\n        ${this._pageButtonAccess?`<mwc-button class="w-full button danger" outlined delete-this-item="${s}" onclick="${e=>console.log({e})}">\n      <mwc-icon class="mr-1">delete_forever</mwc-icon> Delete\n    </mwc-button>`:""}\n        <link-button isblockcontent="false" aClass="" raised bClass="w-full button warning mr-2" href="${u.CONSTANTS.URLS.PDB_CLIENT}absent-leave/edit-al-assignment?view-assignment=${o}"\n          label="Update">\n        </link-button>\n      </div>\n    `}get urlQueryString(){const e=(0,h.urlQueryParams)(),t="branchId",n="groupId",s="subgroupId",o="search",i="from_date",r="to_date";let l={};for(const a in e){let c=String(e[a]);a!==t&&a!==n&&a!==s&&a!==o&&a!==i&&a!==r||(l[a]=c)}if(!(t in l)){let e=0;null!==this._userLoginInfo&&this._userLoginInfo.length>0&&(e=this._userLoginInfo[0].user.branchId),l[t]=e}n in l?(l[n].length<1||0===l[n])&&delete l[n]:this._groups.length>0&&(l[n]=this._groups[0].id),s in l?(l[s].length<1||0===l[s])&&delete l[s]:this._subgroups.length>0&&(l[s]=this._subgroups[0].id),o in l&&(l[o].length<1||""===l[o])&&delete l[o],i in l&&r in l&&((l[i].length<1||""===l[i])&&(delete l[i],delete l[r]),(l[r].length<1||""===l[r])&&(delete l[i],delete l[r]));let a=(0,h.urlQueryParamsJoin)(l);return 0===a.length?a:"&"+a}get filterForm(){let e=0;null!==this._userLoginInfo&&this._userLoginInfo.length>0&&(e=this._userLoginInfo[0].user.branchId);let t=l.html``;const n=(0,h.urlQueryParams)(),s="branchId",o="groupId",i="subgroupId",r="search",a="from_date",c="to_date";let d=e,u=null,p=null,m=null,f=null,b=null;for(const e in n){let t=String(n[e]);t=""===t?null:t,e===s&&(d=Number(t)),e===o&&(u=Number(t)),e===i&&(p=Number(t)),e===r&&(m=String(t),"null"===m&&(m="")),e===a&&(console.log({"filterNameId_fromDate-value":t}),f=new Date(t)),e===c&&(console.log({"filterNameId_toDate-value":t}),b=new Date(t))}const g=l.html`
      <div class="col-xl-4 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Select Branch</h4>
          <mwc-select class="w-full" setSelectedBranchId label="Select Branch"
            name="${s}" id="${s}"
            outlined required @change="${this.branchChange}">
            ${1===e?l.html`
              <mwc-list-item value="0">Select Branch</mwc-list-item>
              ${this._branches.map((e=>d===e.id?l.html`<mwc-list-item value="${e.id}" selected>${e.name}</mwc-list-item>`:l.html`<mwc-list-item value="${e.id}">${e.name}</mwc-list-item>`))}
            `:l.html`
              ${this._branches.map((t=>{if(t.id===e)return l.html`<mwc-list-item value="${t.id}" selected>${t.name}</mwc-list-item>`}))}
            `}
          </mwc-select>
        </div>
      </div>`,_=l.html`
      <div class="col-xl-4 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Select Group</h4>
          <mwc-select class="w-full" setSelectedGroupId label="Select Group"
            name="${o}" id="${o}"
            outlined required @change="${this.groupChange}" value="${u}">
            <mwc-list-item value="">Select Group</mwc-list-item>
            ${this._groups.map((e=>u===e.id?l.html`<mwc-list-item value="${e.id}" selected>${e.group}</mwc-list-item>`:l.html`<mwc-list-item value="${e.id}">${e.group}</mwc-list-item>`))}
          </mwc-select>
        </div>
      </div>`,v=l.html`
      <div class="col-xl-4 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Select Sub-Group</h4>
          <mwc-select class="w-full" label="Select Sub-Group"
            name="${i}" id="${i}"
            outlined required value="${p}">
            <mwc-list-item value="">Select Sub-Group</mwc-list-item>
            ${this._subgroups.map((e=>p===e.id?l.html`<mwc-list-item value="${e.id}" selected>${e.subgroup}</mwc-list-item>`:l.html`<mwc-list-item value="${e.id}">${e.subgroup}</mwc-list-item>`))}
          </mwc-select>
        </div>
      </div>`,w=l.html`
      <div class="col-xl-4 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Search <span class="text-yellow-400 uppercase">[name/ ref-id/ id/ phone/ email]</span></h4>
          <mwc-textfield name="${r}" id="${r}" label="Enter Search Term"
            outlined required value="${null===m?"":m}">
          </mwc-textfield>
        </div>
      </div>`,y=l.html`
      <div class="col-xl-4 col-md-6">
        <div class="row">
          <div class="col-md-6">
            <div class="form-input-container !block">
              <h4 class="font-semibold my-2">From <span class="text-yellow-500 uppercase">Pick Date</span></h4>
              <mwc-textfield type="date" name="${a}" id="${a}"
                value="${this.getDate(f)}" outlined required></mwc-textfield>
            </div>
          </div>
          <div class="col-md-6">
            <div class="form-input-container !block">
              <h4 class="font-semibold my-2">To <span class="text-yellow-500 uppercase">Pick Date</span></h4>
              <mwc-textfield type="date" name="${c}" id="${c}"
                value="${this.getDate(b)}" outlined required></mwc-textfield>
            </div>
          </div>
        </div>
      </div>`;return t=l.html`<form method="get" class="form" make-general-posts="submit_filter_form" filter-section-context="container" hidden>
          <div class="container">
            <div class="row">
              ${g} ${_} ${v} ${w} ${y}
              <div class="col-xl-12 col-md-10">
                <div class="form-input-container mt-1">
                  <mwc-button label="Clear" @click="${this.filterBox.clear_filter}"></mwc-button>
                  <mwc-button label="Filter" raised @click="${this.filterBox.submit}"></mwc-button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>`,t}branchChange(e){return C(this,void 0,void 0,(function*(){const t=Number.isNaN(e.currentTarget.value)?0:Number(e.currentTarget.value);this.selectedBranch=t,yield this.getGroups("?branchId="+t,t)}))}groupChange(e){return C(this,void 0,void 0,(function*(){const t=Number.isNaN(e.currentTarget.value)?0:Number(e.currentTarget.value);yield this.getSubGroups("?groupId="+t+"&branchId="+this.selectedBranch,t)}))}get __tableHeaders(){return[{title:"Member"},{title:"Info"},{title:"Action"}]}get __tableBody(){return[]}get __tableFoot(){return[{title:"Member"},{title:"Info"},{title:"Action"}]}get table(){let e=u.CONSTANTS.URLS.AKWAABA_API_BASE_URL+""+this.datatablePathUrl+"?datatable_plugin";e+=this.urlQueryString;const t=this.__dataTable(e);let n={};const s=(0,p.getUserLoginInfoCookie)();return n.Authorization="Token "+s.token,l.html`
      <datatables-new .datatable="${t}" .ajaxHeader="${n}" .dt_body="${this.__tableBody}"
        .dt_foot="${this.__tableFoot}" .dt_head="${this.__tableHeaders}"></datatables-new>
    `}firstUpdated(){setInterval((()=>{null!==this.filterSectionContextContainer&&(this.filterBoxStarted||(this.filterBox=new f.FilterFieldBox({selectors:{container:this.filterSectionContextContainer,form:this.filterSectionContextForm,filterSectionContextBtn:this.filterSectionContextBtn},unmutableInputNames:[]}),this.filterBoxStarted=!0,this.dialog(),this.deleteMemberFx()))}))}__dataTable(e){const t=this;return{order:[[0,"desc"]],processing:!0,serverSide:!0,ajax:{url:e,dataSrc:"data",apiType:"akwaabaApp"},columns:[{data:"id",render:(e,n,s)=>t.renderColOne(e,n,s),orderable:!0},{data:"memberId",render:(e,n,s)=>t.renderColThree(e,n,s),orderable:!0},{data:"statusId",render:(e,n,s)=>t.renderColTwo(e,n,s),orderable:!0}],columnDefs:[{targets:["_all"],className:"mdc-data-table__cell",checkboxes:{selectRow:!0}}],lengthMenu:[10,25,50,100,500,1e3],drawCallback:function(e){return C(this,void 0,void 0,(function*(){e.aoData,t.deleteMemberFx(),t.dialog()}))},responsive:!1,dom:"Blfrtip",buttons:["selected","selectedSingle","selectAll","selectNone","selectRows","selectColumns","selectCells"],select:!0}}deleteMemberFx(){document.querySelectorAll("[delete-this-item]").forEach((e=>{e.addEventListener("click",(e=>{this.deleteItemFromList(e)}))}))}view_assignment_details(e){var t,n;let s=null===(t=e.memberAdditionalInfo)||void 0===t?void 0:t.phone,o=null===(n=e.memberAdditionalInfo)||void 0===n?void 0:n.whatsapp;return`\n      <mwc-dialog open-this-dialog="assignment-details-${e.id}" heading="Assignment Details">\n        <div class="flex flex-col m-1 justify-evenly whitespace-normal">\n          <div class="flex flex-col m-1 justify-evenly">\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Leave Type</h6>\n              <p class="text-sm ml-1">On ${e.statusID.status} for ${this.get_days(e.totalDays)}</p>\n              <hr/ >\n            </div>\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Period:</h6>\n              <p class="text-sm ml-1">From: ${(0,r.getDate)(e.fromDate)} To: ${(0,r.getDate)(e.toDate)}</p>\n              <hr/ >\n            </div>\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Days Left:</h6>\n              <p class="text-sm ml-1">${this.get_days(e.totalDaysLeft)}</p>\n              <hr/ >\n            </div>\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Branch:</h6>\n              <p class="text-sm ml-1">${this.get_branch(e.statusID.branchID)}</p>\n              <hr/ >\n            </div>\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Group:</h6>\n              <p class="text-sm ml-1">${this.get_group}</p>\n              <hr/ >\n            </div>\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Contact:</h6>\n              <p class="text-sm ml-1">\n                <a class="text-yellow-600" href="tel://${s}">Call</a>/\n                <a class="text-green-600" href="https://api.whatsapp.com/send?phone=+${o}&amp;text=">Whatsapp</a>\n              </p>\n              <hr/ >\n            </div>\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Last Update:</h6>\n              <p class="text-sm ml-1">\n                ${null===e.updatedByInfo?"-":`${e.updatedByInfo.firstname} ${e.updatedByInfo.surname}`}</p>\n              <p class="text-sm ml-1">By: ${(0,v.getDateTime)(e.updateDate)}</p>\n            </div>\n          </div>\n        </div>\n        <mwc-button\n          slot="secondaryAction"\n          dialogAction="close">\n          Cancel\n        </mwc-button>\n      </mwc-dialog>\n    `}view_assignment_reason(e){return`\n      <mwc-dialog open-this-dialog="assignment-reason-${e.id}" heading="Assignment Reason">\n        <div class="flex flex-col m-1 justify-evenly whitespace-normal">\n          <div class="flex flex-col m-1 justify-evenly">\n            <div class="flex flex-col justify-between content-between">\n              <h6 class="whitespace-nowrap text-base font-bold mr-1">Reason</h6>\n              <p class="text-sm ml-1 whitespace-pre-line">${e.reason}</p>\n            </div>\n          </div>\n        </div>\n        <mwc-button\n          slot="secondaryAction"\n          dialogAction="close">\n          Cancel\n        </mwc-button>\n      </mwc-dialog>\n    `}get_branch(e){let t="";return this._branches.forEach((n=>{n.id===e&&(t=n.name)})),t}get get_group(){let e="";for(const t in B)B[t].forEach((t=>{t.id===this.selectedGroup&&(e=t.group)}));return e}getDate(e){return console.log({date_date_date:e}),null===e?"":e.toLocaleString("default",{year:"numeric"})+"-"+e.toLocaleString("default",{month:"2-digit"})+"-"+e.toLocaleString("default",{day:"2-digit"})}get_days(e){return null===e?"0 days":1===e?"1 day":`${e} days`}deleteItemFromList(e){return C(this,void 0,void 0,(function*(){e.preventDefault();const t=e.currentTarget.getAttribute("delete-this-item"),n=Number.isNaN(t)?0:Number(t);yield(0,g.DELETE_GroupingsGroup)(n)}))}dialog(){document.querySelectorAll("[open-dialog-btn]").forEach((e=>{e.addEventListener("click",(e=>{this.showDialog(e)}))}))}showDialog(e){const t=e.currentTarget.getAttribute("open-dialog-btn");this.querySelector('[open-this-dialog="'+t+'"]').setAttribute("open","true")}getBranches(){return C(this,void 0,void 0,(function*(){const e=yield(0,b.GET_ClientBranches)();let t=[];null===e?t.push({id:0,name:"**NOT FOUND**"}):!0===e.response.success&&"length"in e.response.data&&(t=e.response.data);const n=[];n.push(...this._branches,...t),this._branches=n}))}getGroups(e="",t=null){return C(this,void 0,void 0,(function*(){const n=null===t||t<1?"__":String(t);if(this._groups=[],n in B)return void setTimeout((()=>{this._groups=B[n]}),500);const s=yield(0,w.GET_MemberGroupingsGroups)(null,e);let o=[];null===s?o.push({id:0,group:"**NOT FOUND**",date:new Date}):!0===s.response.success&&"length"in s.response.data&&(o=s.response.data);const i=[];i.push(...this._groups,...o),this._groups=i,B[n]=this._groups}))}getSubGroups(e="",t=null){return C(this,void 0,void 0,(function*(){const n=null===t||t<1?"__":String(t);if(console.log({_branchSubGroups:D}),this._subgroups=[],n in D)return void setTimeout((()=>{this._subgroups=D[n]}),500);const s=yield(0,y.GET_MemberGroupingsSubGroups)(null,e);let o=[];null===s?o.push({id:0,subgroup:"**NOT FOUND**",date:new Date}):!0===s.response.success&&"length"in s.response.data&&(o=s.response.data);const i=[];i.push(...this._subgroups,...o),this._subgroups=i,D[n]=this._subgroups}))}createRenderRoot(){return this}};N.styles=[l.css`
   :host { display: block; }
  `],k([(0,a.query)('[filter-section-context="btn"]'),I("design:type","function"==typeof(s=void 0!==d.Button&&d.Button)?s:Object)],N.prototype,"filterSectionContextBtn",void 0),k([(0,a.query)('[filter-section-context="container"]'),I("design:type","function"==typeof(o="undefined"!=typeof Element&&Element)?o:Object)],N.prototype,"filterSectionContextContainer",void 0),k([(0,a.query)('[make-general-posts="submit_filter_form"]'),I("design:type","function"==typeof(i="undefined"!=typeof HTMLFormElement&&HTMLFormElement)?i:Object)],N.prototype,"filterSectionContextForm",void 0),k([(0,a.property)({type:String}),I("design:type",String)],N.prototype,"memberProfileBaseUrl",void 0),k([(0,a.property)({type:Array}),I("design:type",Array)],N.prototype,"_memberCategories",void 0),k([(0,a.property)({type:Array}),I("design:type",Array)],N.prototype,"_activeBranchId",void 0),k([(0,a.property)({type:Number}),I("design:type",Number)],N.prototype,"selectedBranch",void 0),k([(0,a.property)({type:Number}),I("design:type",Number)],N.prototype,"_memberType",void 0),k([(0,a.property)({type:Array}),I("design:type",Array)],N.prototype,"_branches",void 0),k([(0,a.property)({type:Array}),I("design:type",Array)],N.prototype,"_groups",void 0),k([(0,a.property)({type:Array}),I("design:type",Array)],N.prototype,"_subgroups",void 0),k([(0,a.property)({type:Array}),I("design:type",Array)],N.prototype,"_userLoginInfo",void 0),k([(0,a.property)({type:Number}),I("design:type",Number)],N.prototype,"selectedGroup",void 0),k([(0,a.property)({type:String}),I("design:type",String)],N.prototype,"datatablePathUrl",void 0),k([(0,a.property)({type:Boolean}),I("design:type",Boolean)],N.prototype,"filterBoxStarted",void 0),k([(0,a.property)({type:Boolean}),I("design:type",Boolean)],N.prototype,"_hasSetup",void 0),k([(0,a.property)({type:Boolean}),I("design:type",Boolean)],N.prototype,"_pageButtonAccess",void 0),N=k([(0,a.customElement)("attendance-absent-leave-assignment-view"),I("design:paramtypes",[])],N)}},e=>(e.O(0,["vendors.material","vendors.lit-html","vendors.lit","vendors.buffer","vendors.tslib","vendors.sweetalert2","vendors.wicg-inert","vendors.blocking-elements","vendors-node_modules_base64-js_index_js-node_modules_ieee754_index_js-node_modules_lit-elemen-70ae82","src_addons_constants_index_ts-src_addons_functions_https_http_ts-src_addons_functions_login_i-05f8f4","src_addons_classes_network_calls_response_ts","src_view_home_branch_button_ts","src_addons_functions_app_settings_extra_settings_user_access_ts-src_addons_functions_app_sett-730152","src_addons_widgets_datatables_index_ts-src_addons_widgets_profile_photo_index_ts","src_assets_styles_views_attendance_clocking_main_scss","src_addons_functions_https_https_swal_error_format_ts-src_addons_functions_url_query_params_i-f0e733","src_addons_interfaces_attendance_absent_leave_assignment_index_ts-src_addons_network_clients_-f0049c","src_assets_styles_views_attendance_clocking_main_scss-src_addons_classes_filter_field_box_ind-a1afef","shared"],(()=>(3245,e(e.s=3245)))),e.O())])));
//# sourceMappingURL=view.js.map