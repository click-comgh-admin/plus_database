{"version":3,"file":"../../production_public/assets/v2/dev-files/js/attendance/absent-leave/status/add.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/status/post.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/view/attendance/absent_leave/status/add.ts","webpack://webpackNumbers/./src/view/attendance/page__id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\n\r\n\r\nexport async function POST_AttendanceAbsentLeaveStatus(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/status',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"attendance-absent-leave-status\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Create Status?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { POST_AttendanceAbsentLeaveStatus } from \"@@addons/network/attendance/absent_leave/status/post\";\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from \"@@addons/functions/app_settings\";\r\nimport { getAppSettingsExtraSettings } from \"@@addons/functions/app_settings/extra_settings\";\r\nimport { AppSettingsExtraUserAccess } from \"@@addons/functions/app_settings/extra_settings/user_access\";\r\nimport { PAGE__IDS } from \"@@views/attendance/page__id\";\r\n\r\n\r\n@customElement(\"attendance-absent-leave-status-add\")\r\nexport class AttendanceAbsentLeaveStatusAdd extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    await this.getBranches();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.absent_leave_status, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">New Status</h1>\r\n                    <h3 class=\"h3\">Create Status!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"attendance-absent-leave-status\" enctype=\"multipart/form-data\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                        name=\"branchId\" id=\"branchId\" @change=\"${this.branchChange}\" outlined required>\r\n                        ${userBranch === 1 ? html`\r\n                          <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                          ${this._branches.map((value) => {\r\n                              if (userBranch === value.id) {\r\n                                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                              } else {\r\n                                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                              }\r\n                          })}\r\n                        `: html`\r\n                          ${this._branches.map((value) => {\r\n                            if (value.id === userBranch) {\r\n                              return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                            }\r\n                          })}\r\n                        `}\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Status</h4>\r\n                      <mwc-textfield name=\"status\" id=\"status\" label=\"Enter Status\"\r\n                        outlined required>\r\n                      </mwc-textfield>\r\n                    </div>\r\n                  </div>\r\n        \r\n                  <div class=\"form-input-container\">\r\n                    <mwc-button label=\"Create\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                    </mwc-button>\r\n                  </div>\r\n                \r\n                  <div class=\"flex form-input-container items-center text-center\">\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                      ...\r\n                    </label>\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  branchChange(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_AttendanceAbsentLeaveStatus();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"schedule_meeting_event\": 40,\r\n  \"clocking\": 41,\r\n  \"attendance_history\": 42,\r\n  \"attendees\": 43,\r\n  \"absentees\": 44,\r\n  \"device_request_approval\": 45,\r\n  \"absent_leave_status\": 58,\r\n  \"absent_leave_assignment\": 59,\r\n};\r\n"],"names":["root","factory","exports","module","define","amd","self","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","POST_AttendanceAbsentLeaveStatus","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","e","err","errormsg","id","push","res","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","GET_ClientBranches","type","console","errorHttp","AttendanceAbsentLeaveStatusAdd","LitElement","constructor","super","accountType","selectedBranch","_userLoginInfo","_activeBranchId","_branches","_hasSetup","connectedCallback","AppSetup","this","activeBranchId","getActiveBranchIdCookie","user","branchId","getBranches","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","userBranch","branchChange","map","name","submitForm","Number","isNaN","currentTarget","firstUpdated","_networkResponse","__branches","new_data","preventDefault","createRenderRoot","styles","css","property","Boolean","customElement"],"sourceRoot":""}