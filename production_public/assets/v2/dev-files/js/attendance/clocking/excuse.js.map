{"version":3,"file":"../../production_public/assets/v2/dev-files/js/attendance/clocking/excuse.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/excuse/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/excuse/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/excuse/post.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/excuse/put.ts","webpack://webpackNumbers/./src/view/attendance/excuse/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { MemberClockingInfo_I, MemberClockingInfo_S } from \"..\";\r\n\r\nexport interface MemberClockingExcuse_I {\r\n  id?: number,\r\n  clockingId?: MemberClockingInfo_I,\r\n  excuse?: string,\r\n  enteredBy?: number,\r\n  date?: Date\r\n}\r\n\r\nexport function MemberClockingExcuse_S(data: any): MemberClockingExcuse_I {\r\n  // console.log({data});\r\n\r\n  const memberClockingExcuse_S: MemberClockingExcuse_I = {\r\n    id: Number(data['id']),\r\n    clockingId: MemberClockingInfo_S(data['clockingId']),\r\n    excuse: String(data['excuse']),\r\n    enteredBy: Number(data['enteredBy']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return memberClockingExcuse_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceClockingExcuse<Type>(clockingId: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-excuse'\r\n    + (clockingId === null ? \"\" : \"/\" + clockingId) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceClockingExcuse(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-excuse',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-excuse\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Enter Excuse?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          console.log({\"VALUE.data\": VALUE.data});\r\n          \r\n          window.location.reload();\r\n        } else {\r\n          window.location.reload();\r\n        }\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_AttendanceClockingExcuse(excuseId: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-excuse/' + excuseId,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-excuse\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Excuse?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport '@@addons/widgets/alert';\r\nimport '@material/mwc-textarea';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { MemberClockingExcuse_I, MemberClockingExcuse_S } from '@@addons/interfaces/attendance/member_clocking_info/excuse';\r\nimport { GET_AttendanceClockingExcuse } from '@@addons/network/attendance/clocking/excuse';\r\nimport { POST_AttendanceClockingExcuse } from '@@addons/network/attendance/clocking/excuse/post';\r\nimport { PUT_AttendanceClockingExcuse } from '@@addons/network/attendance/clocking/excuse/put';\r\nimport { MemberClockingInfo_I } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { GET_AttendanceClocking } from '@@addons/network/attendance/clocking';\r\n\r\n\r\n@customElement(\"pdb-attendance-clocking-excuse\")\r\nexport class PdbAttendanceClockingExcuse extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private __memberClockingInfo: NetworkCallResponse_I<MemberClockingInfo_I> = null;\r\n\r\n  public set _memberClockingInfo(value: NetworkCallResponse_I<MemberClockingInfo_I>) {\r\n    this.__memberClockingInfo = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _memberClockingInfo(): NetworkCallResponse_I<MemberClockingInfo_I> {\r\n    return this.__memberClockingInfo;\r\n  }\r\n\r\n  @property({ type: Number })\r\n  private clockingId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private clockingIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _clockingExcuse: MemberClockingExcuse_I[] = null;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.getMeetingEventId();\r\n    await this.getAttendanceClocking();\r\n    await this.getAttendanceClockingExcuse();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if ((this.clockingId === 0) || (this.clockingId === null) || (Number.isNaN(this.clockingId))) {\r\n      const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">Clocking ID Not Found!</p>\r\n        </div>\r\n      `;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n      let memberClockingInfo: MemberClockingInfo_I = null;\r\n      // console.log({\"this._memberClockingInfo\": this._memberClockingInfo})\r\n      if (this._memberClockingInfo !== null) {\r\n        if (this._memberClockingInfo.data !== undefined) {\r\n          if (Array.isArray(this._memberClockingInfo.data)) {\r\n            memberClockingInfo = this._memberClockingInfo.data.length > 0 ? this._memberClockingInfo.data[0] : {};\r\n          } else {\r\n            memberClockingInfo = this._memberClockingInfo.data;\r\n          }\r\n        } else {\r\n          memberClockingInfo = null;\r\n        }\r\n      } else {\r\n        memberClockingInfo = null;\r\n      }\r\n      // console.log({memberClockingInfo});\r\n      \r\n      if (memberClockingInfo === undefined) {\r\n        const header = html`<h4 class=\"text-white\">Empty</h4>`;\r\n        const content = html`\r\n          <div>\r\n            <p class=\"text-black mb-2\">Attendance Clocking Not Found!</p>\r\n            <p class=\"text-black mb-2\"><small>Try again later.</small></p>\r\n          </div>\r\n        `;\r\n        return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n      } else if (memberClockingInfo === null) {\r\n        if (this._clockingExcuse === null) {\r\n          return html`\r\n            <div class=\"main-container\">\r\n              <div class=\"flex justify-center\">\r\n                <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n              </div>\r\n            </div>\r\n          `;\r\n        }\r\n      } else {\r\n        if (this._clockingExcuse === null) {\r\n          return html`\r\n            <div class=\"main-container\">\r\n              <div class=\"flex justify-center\">\r\n                <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n              </div>\r\n            </div>\r\n          `;\r\n        } else {          \r\n          const clockingId = memberClockingInfo.id === undefined ? 0 : memberClockingInfo.id;\r\n          const meetingEventId = memberClockingInfo.id === undefined ? 0 : memberClockingInfo.meetingEventId.id;\r\n\r\n          const submitBTN = meetingEventId === 0 ? html`\r\n            <mwc-button label=\"Save Excuse\" raised class=\"button\" @click=\"${this.submitForm}\" disabled>\r\n            </mwc-button>`: html`\r\n            <mwc-button label=\"Save Excuse\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n            </mwc-button>\r\n          `;\r\n          return html`\r\n            <div class=\"shadow bg-white p-2\">\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"add-excuse\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-10 col-lg-10\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Excuse</h4>\r\n                    ${this.excuse}\r\n                  </div>\r\n                  <div class=\"col-md-10 col-lg-10 my-2\">\r\n                    <div class=\"form-input-container\">\r\n                      ${submitBTN}\r\n                    </div>\r\n              \r\n                    <div class=\"flex form-input-container items-center text-center my-2\">\r\n                      <input type=\"hidden\" name=\"meetingEventId\" value=\"${meetingEventId}\" />\r\n                      <input type=\"hidden\" name=\"clockingId\" value=\"${clockingId}\" />\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          `;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private get excuse() {\r\n    // console.log({ \"this._clockingExcuse\": this._clockingExcuse });\r\n    if (this._clockingExcuse.length > 0) {\r\n      const clockingExcuse = this._clockingExcuse[0];\r\n      return html`<mwc-textarea class=\"h-96\" value=\"${clockingExcuse.excuse}\" outlined name=\"excuse\" id=\"excuse\"></mwc-textarea>`;\r\n    } else {\r\n      return html`<mwc-textarea class=\"h-96\" outlined name=\"excuse\" id=\"excuse\"></mwc-textarea>`;\r\n    }\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getMeetingEventId() {\r\n    let clockingId = urlQueryParamsGet('clocking-id');\r\n    // console.log({ userId });\r\n    let _clockingId = clockingId !== null ? base64Decode(clockingId) : null;\r\n    this.clockingId = Number.isNaN(_clockingId) ? null : Number(_clockingId);\r\n    // console.log({ \"this.clockingId\": this.clockingId });\r\n    this.clockingIdEnc = base64Encode(String(this.clockingId), true);\r\n  }\r\n\r\n  private async getAttendanceClockingExcuse() {\r\n    const _networkResponse = await GET_AttendanceClockingExcuse<MemberClockingExcuse_I>(\r\n      null, \"?clockingId=\" + this.clockingId\r\n    );\r\n    // console.log({ _networkResponse });\r\n\r\n    if (_networkResponse !== null) {\r\n      const _clockingExcuse = _networkResponse.paginResponse,\r\n        _clockingExcuseError = _networkResponse.response;\r\n      // console.log({ _clockingExcuseError });\r\n      if (_clockingExcuse !== null) {\r\n        const results = _clockingExcuse.results.map(excuse => {\r\n          return MemberClockingExcuse_S(excuse);\r\n        });\r\n        this._clockingExcuse = results;\r\n      } else {\r\n        this._clockingExcuse = [];\r\n      }\r\n    } else {\r\n      this._clockingExcuse = [];\r\n      // console.error({ _networkResponse })\r\n    }\r\n  }\r\n\r\n  private async getAttendanceClocking() {\r\n    const _networkResponse = await GET_AttendanceClocking<MemberClockingInfo_I>(this.clockingId);\r\n    // console.log({ _networkResponse })\r\n    if (_networkResponse === null) {\r\n      this._memberClockingInfo = undefined;\r\n    } else {\r\n      this._memberClockingInfo = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    \r\n    if (this._clockingExcuse.length > 0) {\r\n      // console.log({\"this._clockingExcuse_excuseId\": this._clockingExcuse});\r\n      const excuseId: number = this._clockingExcuse[0].id;\r\n      await PUT_AttendanceClockingExcuse(excuseId);\r\n    } else {\r\n      // console.log({\"this._clockingExcuse_no_excuse\": this._clockingExcuse});\r\n      await POST_AttendanceClockingExcuse();\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","MemberClockingExcuse_S","data","id","Number","clockingId","MemberClockingInfo_S","excuse","String","enteredBy","date","Date","GET_AttendanceClockingExcuse","url_params","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","POST_AttendanceClockingExcuse","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","log","window","location","reload","PUT_AttendanceClockingExcuse","excuseId","PdbAttendanceClockingExcuse","LitElement","constructor","super","__memberClockingInfo","clockingIdEnc","_clockingExcuse","_memberClockingInfo","this","requestUpdate","connectedCallback","getMeetingEventId","getAttendanceClocking","getAttendanceClockingExcuse","disconnectedCallback","render","isNaN","header","html","content","memberClockingInfo","undefined","Array","isArray","meetingEventId","submitBTN","submitForm","clockingExcuse","firstUpdated","urlQueryParamsGet","_clockingId","base64Decode","base64Encode","_networkResponse","paginResponse","results","map","GET_AttendanceClocking","preventDefault","createRenderRoot","styles","css","property","type","customElement"],"sourceRoot":""}