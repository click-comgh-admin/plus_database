{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/members/all.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/download.ts","webpack://webpackNumbers/./src/addons/network/members/status/education/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/marital/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/occupation/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/profession/index.ts","webpack://webpackNumbers/./src/view/membership/members/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http_download } from \"@@addons/functions/https/download\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipUserDownload<Type>(url_params: string = \"\",) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/download-excel' + (url_params),\r\n    HTTP = await http_download(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return HTTP;\r\n    // return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    // console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_EducationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/education'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MaritalStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/marital'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_OccupationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/occupation'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ProfessionStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/profession'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/branch/main.scss';\r\nimport \"@@assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/select';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallPaginResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport './select-member-type';\r\nimport '../../no_access/account_expired';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport '../../no_access/no_page_entry';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from './page__id';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { GroupModel, Convert as gmConvert } from '@@addons/interfaces/members/groupings/group/models';\r\nimport { SubGroupModel, Convert as sgmConvert } from '@@addons/interfaces/members/groupings/subgroup/models';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport { EducationStatusModel, Convert as esmConvert } from '@@addons/interfaces/members/user/status/education_status';\r\nimport { MaritalStatusModel, Convert as msmConvert } from '@@addons/interfaces/members/user/status/marital_status';\r\nimport { OccupationStatusModel, Convert as osmConvert } from '@@addons/interfaces/members/user/status/occupation_status';\r\nimport { ProfessionStatusModel, Convert as psmConvert } from '@@addons/interfaces/members/user/status/profession_status';\r\nimport { GET_EducationStatus } from '@@addons/network/members/status/education';\r\nimport { GET_MaritalStatus } from '@@addons/network/members/status/marital';\r\nimport { GET_OccupationStatus } from '@@addons/network/members/status/occupation';\r\nimport { GET_ProfessionStatus } from '@@addons/network/members/status/profession';\r\nimport { GET_MembershipUserDownload } from '@@addons/network/members/membership/users/download';\r\n\r\n\r\ntype filterSelectType = { id: number|\"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-members\")\r\nexport class PdbMembershipMembers extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  // @property({ type: String })\r\n  // private memberProfileEditBaseUrl: string = \"/member/update-profile?edit=\";\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: SubGroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public maritalStatusInfo: MaritalStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public occupationStatusInfo: OccupationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public professionStatusInfo: ProfessionStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public educationStatusInfo: EducationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Boolean })\r\n  private downloadingFile: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  private __members: NetworkCallPaginResponse_I<MembershipMixedUserModel> = null;\r\n\r\n  public set _members(value: NetworkCallPaginResponse_I<MembershipMixedUserModel>) {\r\n    this.__members = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _members(): NetworkCallPaginResponse_I<MembershipMixedUserModel> {\r\n    return this.__members;\r\n  }\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => {\r\n      if (this._hasSetup !== null) {\r\n        return this._hasSetup = true;\r\n      }\r\n    });\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getGenders();\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n    await this.getMaritalStatus();\r\n    await this.getEducationStatus();\r\n    await this.getOccupationStatus();\r\n    await this.getProfessionStatus();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.view, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        ${this.downloadBtns}\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n  }\r\n\r\n  private get downloadBtns() {\r\n    return html`\r\n      <div class=\"flex mb-4\">\r\n        <mwc-button icon=\"download\" class=\"success mr-2\" \r\n          label=\"Download Excel File\" raised @click=\"${this.downloadMemberExcel}\">\r\n        </mwc-button> \r\n        ${this.downloadingFile? html`<mwc-circular-progress indeterminate></mwc-circular-progress>`: nothing}\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\",\r\n      filterNameId_maritalStatus = \"maritalStatus\",\r\n      filterNameId_occupationalStatus = \"occupationalStatus\",\r\n      filterNameId_educationalStatus = \"educationalStatus\",\r\n      filterNameId_professionStatus = \"professionStatus\";\r\n\r\n    let filterNameId_filter_genderVal: string = null,\r\n      filterNameId_filter_nameVal:string = null,\r\n      filterNameId_filter_identityVal: string = null,\r\n      filterNameId_memberTypeVal: string = null,\r\n      filterNameId_groupIdVal: string = null,\r\n      filterNameId_subgroupIdVal: string = null,\r\n      filterNameId_maritalStatusVal: string = null,\r\n      filterNameId_occupationalStatusVal: string = null,\r\n      filterNameId_educationalStatusVal: string = null,\r\n      filterNameId_professionStatusVal: string = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_filter_gender) {\r\n          filterNameId_filter_genderVal = value;\r\n        }\r\n        if (key === filterNameId_filter_name) {\r\n          filterNameId_filter_nameVal = value;\r\n        }\r\n        if (key === filterNameId_filter_identity) {\r\n          filterNameId_filter_identityVal = value;\r\n        }\r\n        if (key === filterNameId_memberType) {\r\n          filterNameId_memberTypeVal = value;\r\n        }\r\n        if (key === filterNameId_groupId) {\r\n          filterNameId_groupIdVal = value;\r\n        }\r\n        if (key === filterNameId_subgroupId) {\r\n          filterNameId_subgroupIdVal = value;\r\n        }\r\n        if (key === filterNameId_maritalStatus) {\r\n          filterNameId_maritalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_occupationalStatus) {\r\n          filterNameId_occupationalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_educationalStatus) {\r\n          filterNameId_educationalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_professionStatus) {\r\n          filterNameId_professionStatusVal = value;\r\n        }\r\n      }\r\n    \r\n    const nameField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Name</h4>\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_name}\" id=\"${filterNameId_filter_name}\" label=\"Search By Name\" \r\n            value=\"${filterNameId_filter_nameVal === null ? \"\" : filterNameId_filter_nameVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const genderField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n          <mwc-select name=\"${filterNameId_filter_gender}\" id=\"${filterNameId_filter_gender}\" label=\"Select Gender\" outlined required>\r\n            ${this._genders.map((item) => {\r\n              // console.log({item});\r\n              if (filterNameId_filter_genderVal === null) {\r\n                return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_genderVal) === item.id) {\r\n                  return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const identifyField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Member ID</h4>\r\n          <mwc-textfield name=\"${filterNameId_filter_identity}\" id=\"${filterNameId_filter_identity}\" label=\"Search By Member ID\"\r\n            value=\"${filterNameId_filter_identityVal === null ? \"\" : filterNameId_filter_identityVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_memberTypeVal}\" \r\n            name=\"${filterNameId_memberType}\" id=\"${filterNameId_memberType}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n\r\n    const selectedGroupID = Number.isNaN(filterNameId_groupIdVal) ? 0 : Number(filterNameId_groupIdVal),\r\n      selectedSubGroupID = Number.isNaN(filterNameId_subgroupIdVal) ? 0 : Number(filterNameId_subgroupIdVal);\r\n    const groupsSubgroups = this.groupsSubgroups(selectedGroupID, selectedSubGroupID);\r\n    // console.log({groupsSubgroups});\r\n    \r\n    \r\n    const groupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <select-input name=\"groupId\" class=\"w-full\" id=\"groupId\" label=\"Select Group\"\r\n            .options=\"${groupsSubgroups.groups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const subGroupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Group</h4>\r\n          <select-input name=\"subgroupId\" class=\"w-full\" id=\"subgroupId\" label=\"Select Sub-Group\"\r\n            .options=\"${groupsSubgroups.subgroups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const selectedMaritalStatusID = Number.isNaN(filterNameId_maritalStatusVal) ? 0 : Number(filterNameId_maritalStatusVal),\r\n      selectedOccupationalStatusID = Number.isNaN(filterNameId_occupationalStatusVal) ? 0 : Number(filterNameId_occupationalStatusVal),\r\n      selectedEducationalStatusID = Number.isNaN(filterNameId_educationalStatusVal) ? 0 : Number(filterNameId_educationalStatusVal),\r\n      selectedProfessionStatusID = Number.isNaN(filterNameId_professionStatusVal) ? 0 : Number(filterNameId_professionStatusVal);\r\n    \r\n    const MOPES = this.maritalOccupationalProfessionEducationalStatus(\r\n      selectedMaritalStatusID, selectedOccupationalStatusID, selectedEducationalStatusID, selectedProfessionStatusID\r\n    );\r\n    // console.log({MOPES});\r\n    \r\n    \r\n    const maritalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Marital Status</h4>\r\n          <select-input name=\"maritalStatus\" class=\"w-full\" id=\"maritalStatus\" label=\"Select Marital Status\"\r\n            .options=\"${MOPES.maritalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const occupationalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Occupational Status</h4>\r\n          <select-input name=\"occupationalStatus\" class=\"w-full\" id=\"occupationalStatus\" label=\"Select Occupational Status\"\r\n            .options=\"${MOPES.occupationalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const educationalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Educational Status</h4>\r\n          <select-input name=\"educationalStatus\" class=\"w-full\" id=\"educationalStatus\" label=\"Select Educational Status\"\r\n            .options=\"${MOPES.educationalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const professionField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Profession Status</h4>\r\n          <select-input name=\"professionStatus\" class=\"w-full\" id=\"professionStatus\" label=\"Select Profession Status\"\r\n            .options=\"${MOPES.professionStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${nameField} ${genderField} ${identifyField} ${memberCategoryField}\r\n              <div class=\"col-md-12 my-2\"><hr/></div>\r\n              ${groupField} ${subGroupField}\r\n              <div class=\"col-md-12 my-2\"><hr/></div>\r\n              ${maritalStatusField} ${occupationalStatusField} ${educationalStatusField} ${professionField}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private groupsSubgroups(selectedGroupID: number, selectedSubGroupID: number) {\r\n    type returnType = { groups: filterSelectType[], subgroups: filterSelectType[] };\r\n    let groups: filterSelectType[] = [{id: 0, name: \"Select Group Status\", isSelected: \"false\", selected: false}];\r\n    let subgroups: filterSelectType[] = [{id: 0, name: \"Select Sub-Group Status\", isSelected: \"false\", selected: false}];\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    \r\n\r\n    this._groups.forEach(_group => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedGroupID === _group.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const group: filterSelectType = {\r\n        id: _group.id, name: _group.group, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!groups.includes(group)) {\r\n        groups.push(group);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._subgroups\": this._subgroups})\r\n    this._subgroups.forEach(_subgroup => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedSubGroupID === _subgroup.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const subgroup: filterSelectType = {\r\n        id: _subgroup.id, name: `${_subgroup.groupID.group} => ${_subgroup.subgroup}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!subgroups.includes(subgroup)) {\r\n        subgroups.push(subgroup);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    // console.log({\"groups-groups\": groups, \"subgroups-subgroups\": subgroups});\r\n\r\n    const _returnType: returnType = {\r\n      groups: groups, subgroups: subgroups,\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private maritalOccupationalProfessionEducationalStatus(selectedMaritalStatusID: number, selectedOccupationalStatusID: number, selectedEducationalStatusID: number, selectedProfessionStatusID: number, ) {\r\n    type returnType = { maritalStatuses: filterSelectType[], occupationalStatuses: filterSelectType[], educationalStatuses: filterSelectType[], professionStatuses: filterSelectType[] };\r\n    let maritalStatuses: filterSelectType[] = [{id: 0, name: \"Select Marital Status\", isSelected: \"false\", selected: false}];\r\n    let professionStatuses: filterSelectType[] = [{id: 0, name: \"Select Profession Status\", isSelected: \"false\", selected: false}];\r\n    let educationalStatuses: filterSelectType[] = [{id: 0, name: \"Select Education Status\", isSelected: \"false\", selected: false}];\r\n    let occupationalStatuses: filterSelectType[] = [{id: 0, name: \"Select Occupation Status\", isSelected: \"false\", selected: false}];    \r\n\r\n    this.maritalStatusInfo.forEach(_maritalStatus => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedMaritalStatusID === _maritalStatus.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const maritalStatus: filterSelectType = {\r\n        id: _maritalStatus.id, name: _maritalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!maritalStatuses.includes(maritalStatus)) {\r\n        maritalStatuses.push(maritalStatus);\r\n      }\r\n    });\r\n\r\n    this.professionStatusInfo.forEach(_professionStatus => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedProfessionStatusID === _professionStatus.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const professionStatus: filterSelectType = {\r\n        id: _professionStatus.id, name: _professionStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n  \r\n      if (!professionStatuses.includes(professionStatus)) {\r\n        professionStatuses.push(professionStatus);\r\n      }\r\n    });\r\n\r\n    this.educationStatusInfo.forEach(_educationalStatus => {\r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (selectedEducationalStatusID === _educationalStatus.id) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const educationalStatus: filterSelectType = {\r\n        id: _educationalStatus.id, name: _educationalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n    \r\n      if (!educationalStatuses.includes(educationalStatus)) {\r\n        educationalStatuses.push(educationalStatus);\r\n      }\r\n    });\r\n\r\n    this.occupationStatusInfo.forEach(_occupationalStatus => {\r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (selectedOccupationalStatusID === _occupationalStatus.id) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const occupationalStatus: filterSelectType = {\r\n        id: _occupationalStatus.id, name: _occupationalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n      \r\n      if (!occupationalStatuses.includes(occupationalStatus)) {\r\n        occupationalStatuses.push(occupationalStatus);\r\n      }\r\n    });\r\n\r\n    const _returnType: returnType = {\r\n      maritalStatuses: maritalStatuses, occupationalStatuses: occupationalStatuses,\r\n      educationalStatuses: educationalStatuses, professionStatuses: professionStatuses\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    // const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    // let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user?branchId=\" + branchId + \"&memberType=\" + memberType + \"&order__by=firstname&datatable_plugin\";\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user?branchId=\" + branchId + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\",\r\n      filterNameId_maritalStatus = \"maritalStatus\",\r\n      filterNameId_occupationalStatus = \"occupationalStatus\",\r\n      filterNameId_educationalStatus = \"educationalStatus\",\r\n      filterNameId_professionStatus = \"professionStatus\";\r\n\r\n    let newObject:any = {};\r\n    // for (const key in _urlQueryParams) {\r\n    //   let value = Number(_urlQueryParams[key]);\r\n    //   if (!Number.isNaN(value) && (value !== 0)) {\r\n    //     // console.log({value, });\r\n        \r\n    //     newObject[key] = value;\r\n    //   }\r\n    // }\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_gender) || (key === filterNameId_filter_name)\r\n        || (key === filterNameId_filter_identity) || (key === filterNameId_memberType)\r\n        || (key === filterNameId_groupId) || (key === filterNameId_subgroupId)\r\n        || (key === filterNameId_maritalStatus) || (key === filterNameId_occupationalStatus)\r\n        || (key === filterNameId_educationalStatus) || (key === filterNameId_professionStatus)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n\r\n        if ((key === filterNameId_groupId) || (key === filterNameId_subgroupId)\r\n          || (key === filterNameId_maritalStatus) || (key === filterNameId_occupationalStatus)\r\n          || (key === filterNameId_educationalStatus) || (key === filterNameId_professionStatus)) {\r\n          // console.log({value, });\r\n          if (value === \"0\") {\r\n            newObject[key] = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!(filterNameId_memberType in newObject)) {\r\n      newObject[filterNameId_memberType] = \"1\";\r\n    }\r\n\r\n    // console.log({\"newObject-newObject\": newObject});\r\n    \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<any>();\r\n    let __groups: GroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // console.log({\"_networkResponse.response.data\": _networkResponse.response.data});\r\n\r\n        const DATA: GroupModel[] = _networkResponse.response.data.map((group: any) => gmConvert.toGroupModel(JSON.stringify(group)));\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupModel> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n  }\r\n\r\n  private async getSubGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<any>();\r\n    let __subgroups: SubGroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: SubGroupModel[] = _networkResponse.response.data.map((subgroup: any) => sgmConvert.toSubGroupModel(JSON.stringify(subgroup)));\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<SubGroupModel> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n  }\r\n  \r\n  private async getMaritalStatus() {\r\n    const _networkResponse = await GET_MaritalStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _maritalStatusInfo: MaritalStatusModel[] = [\r\n      {name: \"Select Marital Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _maritalStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: MaritalStatusModel[] = data.map(value => {\r\n          return msmConvert.toMaritalStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _maritalStatusInfo = [..._maritalStatusInfo, ...DATA];\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<MaritalStatusModel> = [];\r\n    new_data.push(...this.maritalStatusInfo, ..._maritalStatusInfo);\r\n    this.maritalStatusInfo = new_data;\r\n  }\r\n\r\n  private async getOccupationStatus() {\r\n    const _networkResponse = await GET_OccupationStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _occupationStatusInfo: OccupationStatusModel[] = [\r\n      {name: \"Select Occupation Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _occupationStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: OccupationStatusModel[] = data.map(value => {\r\n          return osmConvert.toOccupationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _occupationStatusInfo = [..._occupationStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<OccupationStatusModel> = [];\r\n    new_data.push(...this.occupationStatusInfo, ..._occupationStatusInfo);\r\n    this.occupationStatusInfo = new_data;\r\n  }\r\n\r\n  private async getProfessionStatus() {\r\n    const _networkResponse = await GET_ProfessionStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _professionStatusInfo: ProfessionStatusModel[] = [\r\n      {name: \"Select Profession Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _professionStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ProfessionStatusModel[] = data.map(value => {\r\n          return psmConvert.toProfessionStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _professionStatusInfo = [..._professionStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ProfessionStatusModel> = [];\r\n    new_data.push(...this.professionStatusInfo, ..._professionStatusInfo);\r\n    this.professionStatusInfo = new_data;\r\n  }\r\n\r\n  private async getEducationStatus() {\r\n    const _networkResponse = await GET_EducationStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _educationStatusInfo: EducationStatusModel[] = [\r\n      {name: \"Select Education Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _educationStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: EducationStatusModel[] = data.map(value => {\r\n          return esmConvert.toEducationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _educationStatusInfo = [..._educationStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<EducationStatusModel> = [];\r\n    new_data.push(...this.educationStatusInfo, ..._educationStatusInfo);\r\n    this.educationStatusInfo = new_data;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            // console.log({ data, type, member });\r\n            const ID = base64Encode(String(member.id), true);\r\n            return `<div class=\"flex items-center whitespace-normal mb-0\">\r\n                <user-profile-photo class=\"w-16 h-16 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${__this.memberProfileBaseUrl}${ID}\" type=\"member\"\r\n                  url=\"${member.profilePicture}\" size=\"16\"></user-profile-photo>\r\n                <p class=\"ml-1 mb-0\">${member.firstname} ${member.middlename} ${member.surname}</p>\r\n              </div>\r\n              <span class=\"whitespace-normal shadow p-1\">\r\n                <i class=\"ml-1\"><b>ID: </b> ${member.identification}</i>\r\n              </span>`;\r\n          },\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'firstname',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            const ID = base64Encode(String(member.id), true);\r\n            // return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n            //   <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n            //     href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            //   <!-- <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n            //     href=\"${__this.memberProfileEditBaseUrl}${ID}\" label=\"Edit\"></link-button> -->\r\n            // </div>`;\r\n            return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n              <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n                href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            </div>`;\r\n          },\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n      },\r\n      \"responsive\": true,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async downloadMemberExcel() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n\r\n    let URL = \"?branchId=\" + branchId + \"&order__by=firstname\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    this.downloadingFile = true;\r\n    await GET_MembershipUserDownload<any>(URL);\r\n    this.downloadingFile = false;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","GenericGenderInfo_S","data","id","Number","name","GET_GenericGender","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","GET_MembershipUserDownload","url_params","http_download","GET_EducationStatus","GET_MaritalStatus","GET_OccupationStatus","GET_ProfessionStatus","PdbMembershipMembers","LitElement","constructor","super","memberProfileBaseUrl","_genders","_groups","_subgroups","maritalStatusInfo","occupationStatusInfo","professionStatusInfo","educationStatusInfo","_activeBranchId","downloadingFile","_memberType","_hasSetup","__members","_members","value","this","requestUpdate","connectedCallback","AppSetup","then","activeBranchId","getActiveBranchIdCookie","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGenders","getGroups","getSubGroups","getMaritalStatus","getEducationStatus","getOccupationStatus","getProfessionStatus","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","toggleFilterFields","filterForm","downloadBtns","table","firstUpdated","downloadMemberExcel","nothing","returnHtml","_urlQueryParams","urlQueryParams","filterNameId_filter_gender","filterNameId_filter_name","filterNameId_filter_identity","filterNameId_memberType","filterNameId_filter_genderVal","filterNameId_filter_nameVal","filterNameId_filter_identityVal","filterNameId_memberTypeVal","filterNameId_groupIdVal","filterNameId_subgroupIdVal","filterNameId_maritalStatusVal","filterNameId_occupationalStatusVal","filterNameId_educationalStatusVal","filterNameId_professionStatusVal","key","String","nameField","genderField","map","item","identifyField","memberCategoryField","selectedGroupID","isNaN","selectedSubGroupID","groupsSubgroups","groupField","groups","subGroupField","subgroups","selectedMaritalStatusID","selectedOccupationalStatusID","selectedEducationalStatusID","selectedProfessionStatusID","MOPES","maritalOccupationalProfessionEducationalStatus","maritalStatusField","maritalStatuses","occupationalStatusField","occupationalStatuses","educationalStatusField","educationalStatuses","professionField","professionStatuses","clear_filter","submit","isSelected","selected","forEach","_group","isSelectedAlt","group","includes","push","_subgroup","subgroup","groupID","_maritalStatus","maritalStatus","_professionStatus","professionStatus","_educationalStatus","educationalStatus","_occupationalStatus","occupationalStatus","__tableHeaders","title","__tableBody","__tableFoot","branchId","URL","urlQueryString","__dataTable","ajaxHeader","filterNameId_groupId","filterNameId_subgroupId","filterNameId_maritalStatus","filterNameId_occupationalStatus","filterNameId_educationalStatus","filterNameId_professionStatus","newObject","_urlQueryParamsJoin","urlQueryParamsJoin","length","_networkResponse","__genders","response","success","new_data","GET_MemberGroupingsGroups","__groups","date","Date","JSON","stringify","GET_MemberGroupingsSubGroups","__subgroups","_maritalStatusInfo","DATA","_occupationStatusInfo","_professionStatusInfo","_educationStatusInfo","__this","dataSrc","apiType","member","ID","base64Encode","profilePicture","firstname","middlename","surname","identification","orderable","targets","className","checkboxes","selectRow","e","aoData","buttons","select","createRenderRoot","styles","css","query","Button","Element","HTMLFormElement","property","Array","Boolean","customElement"],"sourceRoot":""}