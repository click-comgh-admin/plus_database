{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/members/all-organizations.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/network/members/membership/users/organization/download.ts","webpack://webpackNumbers/./src/view/membership/members/organization/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http_download } from \"@@addons/functions/https/download\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipOrganizationUserDownload<Type>(url_params: string = \"\",) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization/download-excel' + (url_params),\r\n    HTTP = await http_download(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return HTTP;\r\n    // return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    // console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/branch/main.scss';\r\nimport \"@@assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/select';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallPaginResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport '../select-member-type';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport '../../../no_access/no_page_entry';\r\nimport '../../../no_access/account_expired';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../page__id';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { GroupModel, Convert as gmConvert } from '@@addons/interfaces/members/groupings/group/models';\r\nimport { SubGroupModel, Convert as sgmConvert } from '@@addons/interfaces/members/groupings/subgroup/models';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport { GET_MembershipOrganizationUserDownload } from '@@addons/network/members/membership/users/organization/download';\r\n\r\n\r\ntype filterSelectType = { id: number|\"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-member-organizations\")\r\nexport class PdbMembershipMemberOrganizations extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/organization/member-profile?view=\";\r\n\r\n  // @property({ type: String })\r\n  // private memberProfileEditBaseUrl: string = \"/member/update-profile?edit=\";\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: SubGroupModel[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private downloadingFile: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  private __members: NetworkCallPaginResponse_I<MembershipMixedUserModel> = null;\r\n\r\n  public set _members(value: NetworkCallPaginResponse_I<MembershipMixedUserModel>) {\r\n    this.__members = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _members(): NetworkCallPaginResponse_I<MembershipMixedUserModel> {\r\n    return this.__members;\r\n  }\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n    \r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.view, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.downloadBtns}\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n  }\r\n\r\n  private get downloadBtns() {\r\n    return html`\r\n      <div class=\"flex mb-4\">\r\n        <mwc-button icon=\"download\" class=\"success mr-2\" \r\n          label=\"Download Excel File\" raised @click=\"${this.downloadMemberExcel}\">\r\n        </mwc-button> \r\n        ${this.downloadingFile? html`<mwc-circular-progress indeterminate></mwc-circular-progress>`: nothing}\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\";\r\n\r\n    let filterNameId_filter_nameVal:string = null,\r\n      filterNameId_filter_identityVal: string = null,\r\n      filterNameId_memberTypeVal: string = null,\r\n      filterNameId_groupIdVal: string = null,\r\n      filterNameId_subgroupIdVal: string = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_filter_name) {\r\n          filterNameId_filter_nameVal = value;\r\n        }\r\n        if (key === filterNameId_filter_identity) {\r\n          filterNameId_filter_identityVal = value;\r\n        }\r\n        if (key === filterNameId_memberType) {\r\n          filterNameId_memberTypeVal = value;\r\n        }\r\n        if (key === filterNameId_groupId) {\r\n          filterNameId_groupIdVal = value;\r\n        }\r\n        if (key === filterNameId_subgroupId) {\r\n          filterNameId_subgroupIdVal = value;\r\n        }\r\n      }\r\n    \r\n    const nameField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Name</h4>\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_name}\" id=\"${filterNameId_filter_name}\" label=\"Search By Name\" \r\n            value=\"${filterNameId_filter_nameVal === null ? \"\" : filterNameId_filter_nameVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const identifyField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Organization ID</h4>\r\n          <mwc-textfield name=\"${filterNameId_filter_identity}\" id=\"${filterNameId_filter_identity}\" label=\"Search By Organization ID\"\r\n            value=\"${filterNameId_filter_identityVal === null ? \"\" : filterNameId_filter_identityVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_memberTypeVal}\" \r\n            name=\"${filterNameId_memberType}\" id=\"${filterNameId_memberType}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n\r\n    const selectedGroupID = Number.isNaN(filterNameId_groupIdVal) ? 0 : Number(filterNameId_groupIdVal),\r\n      selectedSubGroupID = Number.isNaN(filterNameId_subgroupIdVal) ? 0 : Number(filterNameId_subgroupIdVal);\r\n    const groupsSubgroups = this.groupsSubgroups(selectedGroupID, selectedSubGroupID);\r\n    // console.log({groupsSubgroups});\r\n    \r\n    \r\n    const groupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <select-input name=\"groupId\" class=\"w-full\" id=\"groupId\" label=\"Select Group\"\r\n            .options=\"${groupsSubgroups.groups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const subGroupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Group</h4>\r\n          <select-input name=\"subgroupId\" class=\"w-full\" id=\"subgroupId\" label=\"Select Sub-Group\"\r\n            .options=\"${groupsSubgroups.subgroups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${nameField} ${identifyField} ${memberCategoryField}\r\n              <div class=\"col-md-12 my-2\"><hr/></div>\r\n              ${groupField} ${subGroupField}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private groupsSubgroups(selectedGroupID: number, selectedSubGroupID: number) {\r\n    type returnType = { groups: filterSelectType[], subgroups: filterSelectType[] };\r\n    let groups: filterSelectType[] = [{id: 0, name: \"Select Group Status\", isSelected: \"false\", selected: false}];\r\n    let subgroups: filterSelectType[] = [{id: 0, name: \"Select Sub-Group Status\", isSelected: \"false\", selected: false}];\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    \r\n\r\n    this._groups.forEach(_group => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedGroupID === _group.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const group: filterSelectType = {\r\n        id: _group.id, name: _group.group, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!groups.includes(group)) {\r\n        groups.push(group);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._subgroups\": this._subgroups})\r\n    this._subgroups.forEach(_subgroup => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedSubGroupID === _subgroup.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const subgroup: filterSelectType = {\r\n        id: _subgroup.id, name: `${_subgroup.groupID.group} => ${_subgroup.subgroup}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!subgroups.includes(subgroup)) {\r\n        subgroups.push(subgroup);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    // console.log({\"groups-groups\": groups, \"subgroups-subgroups\": subgroups});\r\n\r\n    const _returnType: returnType = {\r\n      groups: groups, subgroups: subgroups,\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    // const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    // let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user-organization?branchId=\" + branchId + \"&memberType=\" + memberType + \"&order__by=firstname&datatable_plugin\";\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user-organization?branchId=\" + branchId + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\";\r\n\r\n    let newObject:any = {};\r\n    // for (const key in _urlQueryParams) {\r\n    //   let value = Number(_urlQueryParams[key]);\r\n    //   if (!Number.isNaN(value) && (value !== 0)) {\r\n    //     // console.log({value, });\r\n        \r\n    //     newObject[key] = value;\r\n    //   }\r\n    // }\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_name) || (key === filterNameId_filter_identity)\r\n        || (key === filterNameId_memberType) || (key === filterNameId_groupId)\r\n        || (key === filterNameId_subgroupId)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n\r\n        if ((key === filterNameId_groupId) || (key === filterNameId_subgroupId)) {\r\n          // console.log({value, });\r\n          if (value === \"0\") {\r\n            newObject[key] = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!(filterNameId_memberType in newObject)) {\r\n      newObject[filterNameId_memberType] = \"1\";\r\n    }\r\n\r\n    // console.log({\"newObject-newObject\": newObject});\r\n    \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private async getGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<any>();\r\n    let __groups: GroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // console.log({\"_networkResponse.response.data\": _networkResponse.response.data});\r\n\r\n        const DATA: GroupModel[] = _networkResponse.response.data.map((group: any) => gmConvert.toGroupModel(JSON.stringify(group)));\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupModel> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n  }\r\n\r\n  private async getSubGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<any>();\r\n    let __subgroups: SubGroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: SubGroupModel[] = _networkResponse.response.data.map((subgroup: any) => sgmConvert.toSubGroupModel(JSON.stringify(subgroup)));\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<SubGroupModel> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            // console.log({ data, type, member });\r\n            const ID = base64Encode(String(member.id), true);\r\n            return `<div class=\"flex items-center whitespace-normal mb-0\">\r\n                <user-profile-photo class=\"w-16 h-16 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${__this.memberProfileBaseUrl}${ID}\" type=\"member\"\r\n                  url=\"${member.logo}\" size=\"16\"></user-profile-photo>\r\n                <p class=\"ml-1 mb-0\">${member.organizationName}</p>\r\n              </div>\r\n              <span class=\"whitespace-normal shadow p-1\">\r\n                <i class=\"ml-1\"><b>ID: </b> ${member.identification}</i>\r\n              </span>`;\r\n          },\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'organizationName',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            const ID = base64Encode(String(member.id), true);\r\n            // return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n            //   <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n            //     href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            //   <!-- <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n            //     href=\"${__this.memberProfileEditBaseUrl}${ID}\" label=\"Edit\"></link-button> -->\r\n            // </div>`;\r\n            return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n              <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n                href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            </div>`;\r\n          },\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n      },\r\n      \"responsive\": true,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async downloadMemberExcel() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n\r\n    let URL = \"?branchId=\" + branchId + \"&order__by=firstname\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    this.downloadingFile = true;\r\n    await GET_MembershipOrganizationUserDownload<any>(URL);\r\n    this.downloadingFile = false;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","GET_MembershipOrganizationUserDownload","url_params","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http_download","method","headers","Authorization","token","error","errorHttp","NetWorkCallResponses","PdbMembershipMemberOrganizations","LitElement","constructor","super","memberProfileBaseUrl","_activeBranchId","_groups","_subgroups","downloadingFile","_memberType","_hasSetup","__members","_members","value","this","requestUpdate","connectedCallback","AppSetup","then","activeBranchId","getActiveBranchIdCookie","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGroups","getSubGroups","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","toggleFilterFields","filterForm","downloadBtns","table","firstUpdated","downloadMemberExcel","nothing","returnHtml","_urlQueryParams","urlQueryParams","filterNameId_filter_name","filterNameId_filter_identity","filterNameId_memberType","filterNameId_filter_nameVal","filterNameId_filter_identityVal","filterNameId_memberTypeVal","filterNameId_groupIdVal","filterNameId_subgroupIdVal","key","String","nameField","identifyField","memberCategoryField","selectedGroupID","Number","isNaN","selectedSubGroupID","groupsSubgroups","groupField","groups","subGroupField","subgroups","clear_filter","submit","id","name","isSelected","selected","forEach","_group","isSelectedAlt","group","includes","push","_subgroup","subgroup","groupID","__tableHeaders","title","__tableBody","__tableFoot","branchId","URL","urlQueryString","__dataTable","ajaxHeader","filterNameId_groupId","filterNameId_subgroupId","newObject","_urlQueryParamsJoin","urlQueryParamsJoin","length","_networkResponse","GET_MemberGroupingsGroups","__groups","date","Date","response","success","data","map","JSON","stringify","new_data","GET_MemberGroupingsSubGroups","__subgroups","__this","dataSrc","apiType","type","member","ID","base64Encode","logo","organizationName","identification","orderable","targets","className","checkboxes","selectRow","e","aoData","buttons","select","createRenderRoot","styles","css","query","Button","Element","HTMLFormElement","property","Array","Boolean","customElement"],"sourceRoot":""}