{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/connections/unassigned.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/members/connections/accounts.ts","webpack://webpackNumbers/./src/addons/interfaces/members/connections/types.ts","webpack://webpackNumbers/./src/addons/network/members/connections/accounts/approve.ts","webpack://webpackNumbers/./src/addons/network/members/connections/accounts/reject.ts","webpack://webpackNumbers/./src/view/membership/connections/list-unassigned.ts","webpack://webpackNumbers/./src/view/membership/connections/unassigned_and_rejected/view_unassigned.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { MembershipUser_I, MembershipUser_S } from \"../user\";\r\nimport { UserConnectionType_I, UserConnectionType_S } from \"./types\";\r\n\r\nexport interface UserConnectionAccount_I {\r\n  id?: number,\r\n  type?: UserConnectionType_I,\r\n  memberId?: MembershipUser_I,\r\n  memberAccountType?: number,\r\n  connectionId?: MembershipUser_I,\r\n  connectionAccountType?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n}\r\n\r\nexport function UserConnectionAccount_S(data: any): UserConnectionAccount_I {\r\n  // console.log({data});\r\n\r\n  const userConnectionAccount_S: UserConnectionAccount_I = {\r\n    id: Number(data['id']),\r\n    type: UserConnectionType_S(data['type']),\r\n    memberId: MembershipUser_S(data['memberId']),\r\n    memberAccountType: Number(data['memberAccountType']),\r\n    connectionId: MembershipUser_S(data['connectionId']),\r\n    connectionAccountType: Number(data['connectionAccountType']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n  };\r\n\r\n  return userConnectionAccount_S;\r\n}\r\n","export interface UserConnectionType_I {\r\n  id?: number,\r\n  clientId?: number,\r\n  type?: string,\r\n  description?: string,\r\n  lastUpdatedBy?: number,\r\n  lastUpdateDate?: Date,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n}\r\n\r\nexport function UserConnectionType_S(data: any): UserConnectionType_I {\r\n  // console.log({data});\r\n\r\n  const userConnectionType_S: UserConnectionType_I = {\r\n    id: Number(data['id']),\r\n    type: String(data['type']),\r\n    clientId: Number(data['clientId']),\r\n    description: String(data['description']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    lastUpdatedBy: Number(data['lastUpdatedBy']),\r\n    lastUpdateDate: new Date(data['lastUpdateDate']),\r\n  };\r\n\r\n  return userConnectionType_S;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function APPROVE_UserConnectionAccount(connectionIds: Array<Number>,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-connection-account/approve-connection',\r\n    formData = {connectionIds: connectionIds};\r\n\r\n  return Swal.fire({\r\n    title: 'Approve Connection?',\r\n    // text: \"Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"POST\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function REJECT_UserConnectionAccount(connectionIds: Array<Number>,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-connection-account/reject-connection',\r\n    formData = {connectionIds: connectionIds};\r\n\r\n  return Swal.fire({\r\n    title: 'Reject Connection(s)?',\r\n    // text: \"Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"POST\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport './members_and_connections/view_members';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from './page__id';\r\nimport './unassigned_and_rejected/view_unassigned';\r\n\r\n\r\n@customElement(\"pdb-connections-unassigned-connections\")\r\nexport class PdbConnectionsUnassignedConnections extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.user_connections, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n\r\n    return html`\r\n      <div class=\"flex flex-col shadow bg-white my-2 p-2\">\r\n        <pdb-connections-unassigned-view class=\"my-1\"></pdb-connections-unassigned-view>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css, TemplateResult, } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport \"@material/mwc-icon\";\r\nimport \"@material/mwc-icon-button\";\r\nimport \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { DELETE_UserConnectionAccount } from '@@addons/network/members/connections/accounts/delete';\r\nimport { UserConnectionAccount_I, UserConnectionAccount_S } from '@@addons/interfaces/members/connections/accounts';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport \"@material/mwc-select\";\r\nimport '@@addons/widgets/form/new/select';\r\nimport { MembershipUser_I, MembershipUser_S } from '@@addons/interfaces/members/user';\r\nimport { GET_MembershipUsers } from '@@addons/network/members/membership/users';\r\nimport { APPROVE_UserConnectionAccount } from '@@addons/network/members/connections/accounts/approve';\r\nimport { REJECT_UserConnectionAccount } from '@@addons/network/members/connections/accounts/reject';\r\n\r\n\r\n@customElement(\"pdb-connections-unassigned-view\")\r\nexport class PdbConnectionsUnassignedView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Array })\r\n  private _connection_accounts: UserConnectionAccount_I[] = [];\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"members/user-connection-account/unassigned\";\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this._connection_accounts === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._connection_accounts === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Schedule </span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1 overflow-x-scroll\">\r\n        <hr class=\"my-2\" />\r\n        ${this.table_header}\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n\r\n  }\r\n\r\n  private get table_header() {\r\n    return html`\r\n      <div class=\"flex-col p-2 mb-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4 pb-5\">\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <label class=\"flex justify-between items-center\">\r\n            <b>CHECK ALL: </b>\r\n            <input id=\"unassigned_info_all\" name=\"unassigned_info_all\" type=\"checkbox\"\r\n              class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n              @change=\"${this.check_all_unassigned}\" />\r\n          </label>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"success\" raised @click=\"${this.approveMultipleConnections}\">\r\n            Approve All Selected</mwc-button>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"warning\" raised @click=\"${this.rejectMultipleConnections}\">Reject All Selected</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n\r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    connectionInfo = UserConnectionAccount_S(connectionInfo)\r\n    // console.log({connectionInfo});\r\n    const unassigned_info_id = connectionInfo.id,\r\n      memberId = connectionInfo.memberId,\r\n      connectionId = connectionInfo.connectionId;\r\n    return `\r\n      <div class=\"flex mb-0\">\r\n        <input id=\"unassigned_info\" name=\"unassigned_info\" type=\"checkbox\" value=\"${unassigned_info_id}\"\r\n          class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n        <div class=\"flex flex-col\">\r\n          <div class=\"flex flex-col lg:flex-row m-1 justify-start\">\r\n            <div class=\"flex\">\r\n              <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Name</h6>\r\n              <p class=\"whitespace-nowrap text-sm ml-1\">${connectionId.firstname} ${connectionId.middlename}\r\n                ${connectionId.surname}</p>\r\n            </div>\r\n            <div class=\"m-1\"><mwc-icon>directions<mwc-icon/></div>\r\n            <div class=\"flex\">\r\n              <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Member Name</h6>\r\n              <p class=\"whitespace-nowrap text-sm ml-1\">${memberId.firstname} ${memberId.middlename} ${memberId.surname}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderClockInInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const connectionType = connectionInfo.type;\r\n    return `\r\n      <div class=\"justify-center content-center\">\r\n        <div class=\"flex\">\r\n          <mwc-icon-button class=\"ml-1 success\" icon=\"check\" \r\n            approve-this-item=\"${connectionInfo.id}\" >\r\n          </mwc-icon-button>\r\n          <mwc-icon-button class=\"ml-1 warning\" icon=\"cancel\" \r\n            reject-this-item=\"${connectionInfo.id}\" >\r\n          </mwc-icon-button>\r\n          <mwc-icon-button class=\"ml-1 danger\" icon=\"delete_forever\" \r\n            delete-this-item=\"${connectionInfo.id}\" >\r\n          </mwc-icon-button>\r\n        </div>\r\n        <div class=\"flex flex-col\">\r\n          <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Type:</h6>\r\n          <div class=\"flex flex-col\">\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionType.type}</p>\r\n            <p class=\"text-xs ml-1 whitespace-pre-wrap\">${connectionType.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_memberId = \"memberId\";\r\n\r\n    let newObject: any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_memberId)) {\r\n        // console.log({value, });\r\n\r\n        newObject[key] = value;\r\n      }\r\n    }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"__this\": __this, url });\r\n\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderMemberInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderClockInInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteConnectionAction();\r\n        __this.approveConnectionAction();\r\n        __this.rejectConnectionAction();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async check_all_unassigned(e: any) {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('[id=\"unassigned_info_all\"][name=\"unassigned_info_all\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        document.querySelectorAll('[id=\"unassigned_info\"][name=\"unassigned_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = true;\r\n        })\r\n      } else {\r\n        document.querySelectorAll('[id=\"unassigned_info\"][name=\"unassigned_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private deleteConnectionAction() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteConnection(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async deleteConnection(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userConnectionId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_UserConnectionAccount(userConnectionId);\r\n  }\r\n\r\n  private approveConnectionAction() {\r\n    document.querySelectorAll('[approve-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.approveConnection(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async approveConnection(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userConnectionId = Number(e.currentTarget.getAttribute('approve-this-item'));\r\n\r\n    await APPROVE_UserConnectionAccount([userConnectionId]);\r\n  }\r\n\r\n  private rejectConnectionAction() {\r\n    document.querySelectorAll('[reject-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.rejectConnection(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async rejectConnection(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userConnectionId = Number(e.currentTarget.getAttribute('reject-this-item'));\r\n\r\n    await REJECT_UserConnectionAccount([userConnectionId]);\r\n  }\r\n\r\n  private async approveMultipleConnections(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"unassigned_info\"][name=\"unassigned_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    await APPROVE_UserConnectionAccount(ids);\r\n  }\r\n\r\n\r\n  private async rejectMultipleConnections(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"unassigned_info\"][name=\"unassigned_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    await REJECT_UserConnectionAccount(ids);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","UserConnectionAccount_S","data","id","Number","type","UserConnectionType_S","memberId","MembershipUser_S","memberAccountType","connectionId","connectionAccountType","createdBy","creationDate","Date","String","clientId","description","lastUpdatedBy","lastUpdateDate","APPROVE_UserConnectionAccount","connectionIds","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","forEach","e","err","push","error","res","https_swal_error_format","console","errorHttp","postForm","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","REJECT_UserConnectionAccount","PdbConnectionsUnassignedConnections","LitElement","constructor","super","_hasSetup","connectedCallback","AppSetup","this","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","firstUpdated","createRenderRoot","styles","css","property","Boolean","customElement","PdbConnectionsUnassignedView","_connection_accounts","datatablePathUrl","undefined","table_header","table","check_all_unassigned","approveMultipleConnections","rejectMultipleConnections","__tableHeaders","__tableBody","__tableFoot","URL","urlQueryString","__dataTable","ajaxHeader","renderMemberInfo","connectionInfo","unassigned_info_id","firstname","middlename","surname","renderClockInInfo","connectionType","_urlQueryParams","urlQueryParams","newObject","key","_urlQueryParamsJoin","urlQueryParamsJoin","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","deleteConnectionAction","approveConnectionAction","rejectConnectionAction","buttons","select","preventDefault","document","querySelectorAll","input","checked","_input_","btn","addEventListener","deleteConnection","userConnectionId","currentTarget","getAttribute","DELETE_UserConnectionAccount","approveConnection","rejectConnection","ids","isNaN","includes","Array"],"sourceRoot":""}