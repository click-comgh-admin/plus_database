{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/groupings/bulk_assignment/groups/add.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/interfaces/members/user/model/index2.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/bulk_assignment/group/post.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/file-select.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/view/membership/groupings/bulk_assignment/groups/add.ts","webpack://webpackNumbers/./src/view/membership/groupings/page__id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","// To parse this data:\n//\n//   import { Convert, MembershipUserModel } from \"./file\";\n//\n//   const membershipUserModel = Convert.toMembershipUserModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface MembershipUserModel {\n    id?:                    number;\n    clientID?:              number;\n    firstname?:             string;\n    middlename?:            string;\n    surname?:               string;\n    gender?:                number;\n    profilePicture?:        string;\n    phone?:                 string;\n    email?:                 string;\n    dateOfBirth?:           Date;\n    religion?:              number;\n    nationality?:           string;\n    countryOfResidence?:    string;\n    stateProvince?:         string;\n    region?:                number;\n    district?:              number;\n    constituency?:          number;\n    electoralArea?:         number;\n    community?:             string;\n    hometown?:              string;\n    houseNoDigitalAddress?: string;\n    digitalAddress?:        string;\n    level?:                 number;\n    status?:                number;\n    accountType?:           number;\n    memberType?:            number;\n    date?:                  Date;\n    lastLogin?:             Date;\n    referenceID?:           string;\n    branchID?:              number;\n    editable?:              boolean;\n    profileResume?:         string;\n    profileIdentification?: string;\n    archived?:              boolean;\n    identification?:        string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toMembershipUserModel(json: string): MembershipUserModel {\n        return cast(JSON.parse(json), r(\"MembershipUserModel\"));\n    }\n\n    public static membershipUserModelToJson(value: MembershipUserModel): string {\n        return JSON.stringify(uncast(value, r(\"MembershipUserModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"MembershipUserModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"firstname\", js: \"firstname\", typ: u(null, \"\") },\n        { json: \"middlename\", js: \"middlename\", typ: u(null, \"\") },\n        { json: \"surname\", js: \"surname\", typ: u(null, \"\") },\n        { json: \"gender\", js: \"gender\", typ: u(null, 0) },\n        { json: \"profilePicture\", js: \"profilePicture\", typ: u(null, \"\") },\n        { json: \"phone\", js: \"phone\", typ: u(null, \"\") },\n        { json: \"email\", js: \"email\", typ: u(null, \"\") },\n        { json: \"dateOfBirth\", js: \"dateOfBirth\", typ: u(null, Date) },\n        { json: \"religion\", js: \"religion\", typ: u(null, 0) },\n        { json: \"nationality\", js: \"nationality\", typ: u(null, \"\") },\n        { json: \"countryOfResidence\", js: \"countryOfResidence\", typ: u(null, \"\") },\n        { json: \"stateProvince\", js: \"stateProvince\", typ: u(null, \"\") },\n        { json: \"region\", js: \"region\", typ: u(null, 0) },\n        { json: \"district\", js: \"district\", typ: u(null, 0) },\n        { json: \"constituency\", js: \"constituency\", typ: u(null, 0) },\n        { json: \"electoralArea\", js: \"electoralArea\", typ: u(null, 0) },\n        { json: \"community\", js: \"community\", typ: u(null, \"\") },\n        { json: \"hometown\", js: \"hometown\", typ: u(null, \"\") },\n        { json: \"houseNoDigitalAddress\", js: \"houseNoDigitalAddress\", typ: u(null, \"\") },\n        { json: \"digitalAddress\", js: \"digitalAddress\", typ: u(null, \"\") },\n        { json: \"level\", js: \"level\", typ: u(null, 0) },\n        { json: \"status\", js: \"status\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n        { json: \"memberType\", js: \"memberType\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"last_login\", js: \"lastLogin\", typ: u(null, Date) },\n        { json: \"referenceId\", js: \"referenceID\", typ: u(null, \"\") },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"editable\", js: \"editable\", typ: u(null, true) },\n        { json: \"profileResume\", js: \"profileResume\", typ: u(null, \"\") },\n        { json: \"profileIdentification\", js: \"profileIdentification\", typ: u(null, \"\") },\n        { json: \"archived\", js: \"archived\", typ: u(null, true) },\n        { json: \"identification\", js: \"identification\", typ: u(null, \"\") },\n    ], false),\n};\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_MemberGroupingsBulkAssignGroup(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/bulk-assignment/groups',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"bulk-assignment_group\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Assign Members to selected group?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-button';\r\nimport '../../../../assets/styles/views/widget/file_input/file_input.scss';\r\n\r\n\r\n@customElement('file-input')\r\nexport class FileInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: String })\r\n  public accept: string = \"*\";\r\n\r\n  @property({ type: Number })\r\n  private randomID: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: String })\r\n  public id: string = this.id + \"_\" + this.randomID;\r\n\r\n  @property({ type: Boolean })\r\n  public required?: boolean;\r\n\r\n  @property({ type: Boolean })\r\n  public hasLabel?: boolean;\r\n\r\n  @property({ type: Boolean })\r\n  /** For multiple image selection */\r\n  public multiple?: boolean;\r\n\r\n  private fileSelector: HTMLInputElement;\r\n\r\n  @property({ type: Number })\r\n  public startNumber: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public rowsPerPage: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public totalShowing: number = 10;\r\n\r\n  @property({ type: Boolean })\r\n  private showSelectorLoaded?: boolean = false;\r\n\r\n  styles() {\r\n    return [\r\n      css`\r\n      #${Number(this.id)} {\r\n        width: 1px !important;\r\n        height: 1px !important;\r\n        position: absolute !important;\r\n      }\r\n      `\r\n    ];\r\n  }\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    setInterval(() => {\r\n      if (this.fileSelector === undefined) {\r\n        // console.log({ \"this.fileSelector\": this.fileSelector });\r\n        this.fileSelector = this.querySelector(`[type=\"file\"][name=\"${this.name}\"][id=\"${this.id}\"]`);\r\n      } else {\r\n        this.showFileSelector();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.required) {\r\n      if (this.multiple) {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}*</label>`: nothing}\r\n            <input accept=\"${this.accept}\" class=\"form-input\" type=\"file\" name=\"${this.name}[]\" id=\"${this.id}\" multiple required />\r\n          </div>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}*</label>`: nothing}\r\n            <input accept=\"${this.accept}\" class=\"form-input\" type=\"file\" name=\"${this.name}\" id=\"${this.id}\" required />\r\n          </div>\r\n        `;\r\n      }\r\n    } else {\r\n      if (this.multiple) {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}</label>`: nothing}\r\n            <input accept=\"${this.accept}\" type=\"file\" name=\"${this.name}[]\" id=\"${this.id}\" multiple />\r\n          </div>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}</label>`: nothing}\r\n            <input accept=\"${this.accept}\" type=\"file\" name=\"${this.name}\" id=\"${this.id}\" />\r\n          </div>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n  }\r\n\r\n  private showFileSelector() {\r\n    if (this.showSelectorLoaded === false) {\r\n      this.showSelectorLoaded = true;\r\n\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GroupingsMemberCategories_I } from \"@@addons/interfaces/members/groupings/member_categories\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { GET_MemberGroupingsMemberCategories } from \"@@addons/network/members/groupings/member_categories\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { QueryOptions } from 'select2';\r\nimport { MembershipUserModel, Convert as MuMconvert } from '@@addons/interfaces/members/user/model/index2';\r\nimport { MembershipOrganizationUserModel, Convert as MouMconvert } from '@@addons/interfaces/members/user/organization_model';\r\nimport { GroupingsGroup_I } from \"@@addons/interfaces/members/groupings/group\";\r\nimport { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { POST_MemberGroupingsBulkAssignGroup } from \"@@addons/network/members/groupings/bulk_assignment/group/post\";\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from \"@@addons/functions/app_settings\";\r\nimport { getAppSettingsExtraSettings } from \"@@addons/functions/app_settings/extra_settings\";\r\nimport { AppSettingsExtraUserAccess } from \"@@addons/functions/app_settings/extra_settings/user_access\";\r\nimport { PAGE__IDS } from \"../../page__id\";\r\n\r\n\r\ntype groupSubgroupType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\nlet _branchGroups: { [branch: string]: GroupingsGroup_I[]} = {};\r\n@customElement(\"membership-groupings-bulk_assignment-groups-add\")\r\nexport class MembershipGroupingsBulkAssignmentMemberGroupsAdd extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    await this.getGroups();\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.assignment, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    \r\n    const groups = this._groups.map(_group => {\r\n      const group: groupSubgroupType = {\r\n        id: _group.id, name: _group.group,\r\n        isSelected: \"false\", selected: false,\r\n      };\r\n      // console.log({\"_group.id\": _group.id, \"filterNameId_groupVal\": filterNameId_groupVal, group});\r\n      \r\n      return group\r\n    });\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">New Group Assignment(s)</h1>\r\n                    <h3 class=\"h3\">Assignment Group!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"bulk-assignment_group\" enctype=\"multipart/form-data\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Account Type</h4>\r\n                      <mwc-select class=\"w-full\" label=\"Select Account Type\"\r\n                        name=\"accountType\" id=\"accountType\" @change=\"${this.accountTypeChange}\"\r\n                        outlined required>\r\n                        <mwc-list-item value=\"0\" selected>Select Account Type</mwc-list-item>\r\n                        <mwc-list-item value=\"1\">User Account </mwc-list-item>\r\n                        <mwc-list-item value=\"2\">Organization Account</mwc-list-item>\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                        name=\"branchId\" id=\"branchId\" @change=\"${this.branchChange}\" outlined required>\r\n                        ${userBranch === 1 ? html`\r\n                          <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                          ${this._branches.map((value) => {\r\n                              if (userBranch === value.id) {\r\n                                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                              } else {\r\n                                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                              }\r\n                          })}\r\n                        `: html`\r\n                          ${this._branches.map((value) => {\r\n                            if (value.id === userBranch) {\r\n                              return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                            }\r\n                          })}\r\n                        `}\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n                      <pdb-membership-select-member-type defaultValue=\"1\" \r\n                        name=\"memberType\" id=\"memberType\"\r\n                        label=\"Select Member Category\" outlined required>\r\n                      </pdb-membership-select-member-type>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n                      <select-input name=\"groups[]\" class=\"w-full\" id=\"groups\" label=\"Select User Group\" .options=\"${groups}\"\r\n                        outlined required >\r\n                      </select-input>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                      ${this.memberListField}\r\n                    </div>\r\n                  </div>\r\n        \r\n                  <div class=\"form-input-container\">\r\n                    <mwc-button label=\"Assign\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                    </mwc-button>\r\n                  </div>\r\n                \r\n                  <div class=\"flex form-input-container items-center text-center\">\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                      ...\r\n                    </label>\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  async branchChange(e: Event) {\r\n    const accountType = this.accountType;\r\n    this.accountType = 0;\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n    \r\n    setTimeout(() => {\r\n      this.accountType = accountType\r\n    }, 500);\r\n    \r\n    await this.getGroups(\"?branchId=\" + this.selectedBranch, this.selectedBranch);\r\n\r\n  }\r\n\r\n  accountTypeChange(e: Event) {\r\n    // @ts-ignore\r\n    this.accountType = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n  }\r\n\r\n  get memberListField() {\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n    if (Number(this.accountType) === 0) {\r\n      return \"...\";\r\n    } else {\r\n      if (Number(this.accountType) === 1) {\r\n        return this.individualMemberList;\r\n      } else {\r\n        return this.organizationMemberList;\r\n      }\r\n    }\r\n  }\r\n\r\n  get individualMemberList() {\r\n    this.startSearchPage = 0;\r\n\r\n    function processClientUserSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n      params.page = params.page || 0;\r\n      const TOTAL = data.count,\r\n        RESULTS = data.results,\r\n        SELECTOR = document.querySelector('[id=\"memberIds\"]');\r\n      // console.log({ data, params, RESULTS, SELECTOR });\r\n  \r\n      let processedData: { id: number; text: string; }[] = [];\r\n      if (TOTAL > 0) {\r\n        var _data = RESULTS;\r\n        // console.log({ \"smbfl-_data\": _data });\r\n        for (let i = 0; i < _data.length; i++) {\r\n          const item = _data[i];\r\n          // console.log({\"typeof\": typeof item, \"item-item\": item });\r\n          const member: MembershipUserModel = MuMconvert.toMembershipUserModel(JSON.stringify(item));\r\n          // console.log({ \"member-member\": member });\r\n  \r\n          const id = member.id;\r\n          const fullName = `${member.firstname} ${member.middlename ?? \"\"} ${member.surname}`;\r\n          const _new = {\r\n            id: id,\r\n            text: fullName,\r\n          }\r\n          if (!processedData.includes(_new)) {\r\n            processedData.push(_new)\r\n          }\r\n        }\r\n      }\r\n      // console.log({ processedData });\r\n  \r\n      return {\r\n        results: processedData,\r\n        total: TOTAL,\r\n        // @ts-ignore\r\n        totalShowing: SELECTOR.totalShowing,\r\n      };\r\n    }\r\n    \r\n    let ajaxHeader: {Authorization?: string} = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <h4 class=\"font-semibold my-2\">Select User</h4>\r\n      <select-input class=\"w-100\" id=\"memberIds\" name=\"memberIds\" label=\"Select User\" multiple\r\n        .ajaxFetchProcessResponse=\"${processClientUserSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n        .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n        ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n    `;\r\n  }\r\n\r\n  get organizationMemberList() {\r\n    this.startSearchPage = 0;\r\n\r\n    function processClientUserSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n      params.page = params.page || 0;\r\n      const TOTAL = data.count,\r\n        RESULTS = data.results,\r\n        SELECTOR = document.querySelector('[id=\"memberIds\"]');\r\n      // console.log({ data, params, RESULTS, SELECTOR });\r\n  \r\n      let processedData: { id: number; text: string; }[] = [];\r\n      if (TOTAL > 0) {\r\n        var _data = RESULTS;\r\n        // console.log({ \"smbfl-_data\": _data });\r\n        for (let i = 0; i < _data.length; i++) {\r\n          const item = _data[i];\r\n          // console.log({\"typeof\": typeof item, \"item-item\": item });\r\n          const member: MembershipOrganizationUserModel = MouMconvert.toMembershipOrganizationUserModel(JSON.stringify(item));\r\n          // console.log({ \"member-member\": member });\r\n  \r\n          const id = member.id;\r\n          const organizationName = `${member.organizationName}`;\r\n          const _new = {\r\n            id: id,\r\n            text: organizationName,\r\n          }\r\n          if (!processedData.includes(_new)) {\r\n            processedData.push(_new)\r\n          }\r\n        }\r\n      }\r\n      // console.log({ processedData });\r\n  \r\n      return {\r\n        results: processedData,\r\n        total: TOTAL,\r\n        // @ts-ignore\r\n        totalShowing: SELECTOR.totalShowing,\r\n      };\r\n    }\r\n    \r\n    let ajaxHeader: {Authorization?: string} = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    // console.log({\"this.selectedBranch\": this.selectedBranch});\r\n    \r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <h4 class=\"font-semibold my-2\">Select Organization</h4>\r\n      <select-input class=\"w-100\" id=\"memberIds\" name=\"memberIds\" label=\"Select Organization\" multiple\r\n        .ajaxFetchProcessResponse=\"${processClientUserSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n        .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n        ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user-organization/search\"></select-input>\r\n    `;\r\n  }\r\n\r\n  private get ajaxFetchUrlParams(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"branchId\", value: String(this.selectedBranch) }\r\n    ]\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  private async getGroups(url_params: string = \"\", branchID: number = null) {\r\n    const KEY = (branchID === null) || branchID < 1 ? \"__\" : String(branchID);\r\n    // console.log({\"_branchGroups\": _branchGroups});\r\n    \r\n    this._groups = [];\r\n    if (KEY in _branchGroups) {\r\n      setTimeout(() => {\r\n        this._groups = _branchGroups[KEY];\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(null, url_params);\r\n    let __groups: GroupingsGroup_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsGroup_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsGroup_I> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n    _branchGroups[KEY] = this._groups;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_MemberGroupingsBulkAssignGroup();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"grouping\": 33,\r\n  \"assignment\": 34,\r\n};"],"names":["root","factory","exports","module","define","amd","self","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","typ","undefined","jsonToJS","map","props","p","key","js","jsToJSON","val","getProps","ref","typeMap","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","POST_MemberGroupingsBulkAssignGroup","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","errors","e","err","errormsg","id","push","res","catch","String","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","window","location","reload","GET_MemberGroupingsGroups","type","url_params","console","errorHttp","FileInput","LitElement","label","accept","randomID","Math","floor","random","this","startNumber","rowsPerPage","totalShowing","showSelectorLoaded","styles","css","Number","connectedCallback","super","setInterval","fileSelector","showFileSelector","render","required","multiple","html","hasLabel","nothing","firstUpdated","createRenderRoot","property","Boolean","customElement","SwitchInput","selected","isSelected","switch","switchAction","switchActionEvent","target","querySelectorAll","input","_branchGroups","MembershipGroupingsBulkAssignmentMemberGroupsAdd","constructor","startSearchPage","accountType","selectedBranch","_userLoginInfo","_activeBranchId","_memberCategories","_groups","_branches","_hasSetup","AppSetup","activeBranchId","getActiveBranchIdCookie","user","branchId","getGroups","getBranches","getClientMemberCategories","disconnectedCallback","getAppSettingsExtraSettings","expiration_date","expired","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","userBranch","groups","_group","group","accountTypeChange","branchChange","memberListField","submitForm","currentTarget","individualMemberList","organizationMemberList","ajaxHeader","params","page","TOTAL","count","RESULTS","results","SELECTOR","processedData","_data","item","member","_new","text","firstname","middlename","surname","includes","total","ajaxFetchUrlParams","organizationName","param","_networkResponse","GET_ClientBranches","__branches","new_data","GET_MemberGroupingsMemberCategories","__memberCategories","category","branchID","KEY","__groups","date","preventDefault"],"sourceRoot":""}