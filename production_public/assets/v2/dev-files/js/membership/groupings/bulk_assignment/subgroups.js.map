{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/groupings/bulk_assignment/subgroups.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/members/user/model/index2.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/subgroup/delete_member.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/subgroup/index.ts","webpack://webpackNumbers/./src/addons/widgets/profile_photo/index.ts","webpack://webpackNumbers/./src/view/membership/groupings/bulk_assignment/subgroups/view.ts","webpack://webpackNumbers/./src/view/membership/groupings/page__id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","// To parse this data:\n//\n//   import { Convert, MembershipUserModel } from \"./file\";\n//\n//   const membershipUserModel = Convert.toMembershipUserModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface MembershipUserModel {\n    id?:                    number;\n    clientID?:              number;\n    firstname?:             string;\n    middlename?:            string;\n    surname?:               string;\n    gender?:                number;\n    profilePicture?:        string;\n    phone?:                 string;\n    email?:                 string;\n    dateOfBirth?:           Date;\n    religion?:              number;\n    nationality?:           string;\n    countryOfResidence?:    string;\n    stateProvince?:         string;\n    region?:                number;\n    district?:              number;\n    constituency?:          number;\n    electoralArea?:         number;\n    community?:             string;\n    hometown?:              string;\n    houseNoDigitalAddress?: string;\n    digitalAddress?:        string;\n    level?:                 number;\n    status?:                number;\n    accountType?:           number;\n    memberType?:            number;\n    date?:                  Date;\n    lastLogin?:             Date;\n    referenceID?:           string;\n    branchID?:              number;\n    editable?:              boolean;\n    profileResume?:         string;\n    profileIdentification?: string;\n    archived?:              boolean;\n    identification?:        string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toMembershipUserModel(json: string): MembershipUserModel {\n        return cast(JSON.parse(json), r(\"MembershipUserModel\"));\n    }\n\n    public static membershipUserModelToJson(value: MembershipUserModel): string {\n        return JSON.stringify(uncast(value, r(\"MembershipUserModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"MembershipUserModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"firstname\", js: \"firstname\", typ: u(null, \"\") },\n        { json: \"middlename\", js: \"middlename\", typ: u(null, \"\") },\n        { json: \"surname\", js: \"surname\", typ: u(null, \"\") },\n        { json: \"gender\", js: \"gender\", typ: u(null, 0) },\n        { json: \"profilePicture\", js: \"profilePicture\", typ: u(null, \"\") },\n        { json: \"phone\", js: \"phone\", typ: u(null, \"\") },\n        { json: \"email\", js: \"email\", typ: u(null, \"\") },\n        { json: \"dateOfBirth\", js: \"dateOfBirth\", typ: u(null, Date) },\n        { json: \"religion\", js: \"religion\", typ: u(null, 0) },\n        { json: \"nationality\", js: \"nationality\", typ: u(null, \"\") },\n        { json: \"countryOfResidence\", js: \"countryOfResidence\", typ: u(null, \"\") },\n        { json: \"stateProvince\", js: \"stateProvince\", typ: u(null, \"\") },\n        { json: \"region\", js: \"region\", typ: u(null, 0) },\n        { json: \"district\", js: \"district\", typ: u(null, 0) },\n        { json: \"constituency\", js: \"constituency\", typ: u(null, 0) },\n        { json: \"electoralArea\", js: \"electoralArea\", typ: u(null, 0) },\n        { json: \"community\", js: \"community\", typ: u(null, \"\") },\n        { json: \"hometown\", js: \"hometown\", typ: u(null, \"\") },\n        { json: \"houseNoDigitalAddress\", js: \"houseNoDigitalAddress\", typ: u(null, \"\") },\n        { json: \"digitalAddress\", js: \"digitalAddress\", typ: u(null, \"\") },\n        { json: \"level\", js: \"level\", typ: u(null, 0) },\n        { json: \"status\", js: \"status\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n        { json: \"memberType\", js: \"memberType\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"last_login\", js: \"lastLogin\", typ: u(null, Date) },\n        { json: \"referenceId\", js: \"referenceID\", typ: u(null, \"\") },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"editable\", js: \"editable\", typ: u(null, true) },\n        { json: \"profileResume\", js: \"profileResume\", typ: u(null, \"\") },\n        { json: \"profileIdentification\", js: \"profileIdentification\", typ: u(null, \"\") },\n        { json: \"archived\", js: \"archived\", typ: u(null, true) },\n        { json: \"identification\", js: \"identification\", typ: u(null, \"\") },\n    ], false),\n};\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_MemberGroupingsSubGroupMember(subgroupId: Number, memberId: Number): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/bulk-assignment/remove-from-subgroup',\r\n    formData = {\r\n      \"subgroupId\": subgroupId,\r\n      \"memberId\": memberId\r\n    };\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Member From Sub-Group?',\r\n    text: \"Member will be permanently removed from sub-group member list!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsSubGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/sub-group'\r\n  + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from '@@addons/constants';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement('user-profile-photo')\r\nexport class UserProfilePhoto extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public url?: string;\r\n\r\n  @property({ type: String })\r\n  public type?: \"member\" | \"client\";\r\n\r\n  @property({ type: Boolean })\r\n  public rounded?: boolean;\r\n\r\n  /** URL TO OPEN ON CLICK*/\r\n  @property({ type: String })\r\n  public 'click-to-open'?: 'false' | string = 'false';\r\n\r\n  @property({ type: Number })\r\n  public size?: 8 | 16 | 32;\r\n\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"this['click-to-open']\": this['click-to-open'] });\r\n\r\n\r\n    if (this.type === \"client\") {\r\n      this.setUpClientImage();\r\n    } else {\r\n      this.setUpMemberImage();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div @click=\"${this.openProfile}\"\r\n        class=\"h-${this.size} w-${this.size} items-center justify-center border-2 border-yellow-500 ${this.rounded ? 'rounded-full' : ''}\">\r\n        <img class=\"object-cover h-full w-full border-2 border-akwaaba-orange-light ${this.rounded ? 'rounded-full' : ''}\"\r\n          src=\"${this.url}\">\r\n      </div>\r\n      <div class=\"w-8 h-8 w-16 h-16 w-32 h-32 hidden\"></div>\r\n    `;\r\n  }\r\n\r\n  private openProfile(event: any) {\r\n    event.preventDefault();\r\n\r\n    if (this['click-to-open'] !== \"false\") {\r\n      window.location.href = this['click-to-open'];\r\n    }\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private setUpMemberImage() {\r\n    if (this.url.includes(\"member/logo/\") || this.url.includes(\"member/profile/\")) {\r\n      this.url = this.url;\r\n    } else {\r\n      const parts = this.url.split('/');\r\n      const fileName = parts[parts.length - 1];\r\n      this.url = CONSTANTS.URLS.FILE_BUCKET_BASE_URL + \"/files/members/profile-picture/\" + fileName;\r\n    }\r\n  }\r\n\r\n  private setUpClientImage() {\r\n    if (this.url.includes(\"clients/profile-picture/\")) {\r\n      this.url = this.url;\r\n    } else {\r\n      const parts = this.url.split('/');\r\n      const fileName = parts[parts.length - 1];\r\n      this.url = CONSTANTS.URLS.FILE_BUCKET_BASE_URL + \"/files/clients/profile-picture/\" + fileName;\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators.js';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@@addons/widgets/profile_photo';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { MembershipUserModel, Convert as MuMconvert } from '@@addons/interfaces/members/user/model/index2';\r\nimport { MembershipOrganizationUserModel, Convert as MouMconvert } from '@@addons/interfaces/members/user/organization_model';\r\nimport { GroupingsGroup_I } from '@@addons/interfaces/members/groupings/group';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { DELETE_MemberGroupingsSubGroupMember } from '@@addons/network/members/groupings/subgroup/delete_member';\r\nimport { GroupingsSubGroup_I } from '@@addons/interfaces/members/groupings/subgroup';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../../page__id';\r\n\r\n\r\ntype groupSubgroupType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\nlet _branchGroups: { [branch: string]: GroupingsGroup_I[] } = {};\r\nlet _branchSubGroups: { [branch: string]: GroupingsSubGroup_I[]} = {};\r\n@customElement(\"membership-groupings-bulk_assignment-subgroups-view\")\r\nexport class MembershipGroupingsBulkAssignmentMemberSubgroupsView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: GroupingsSubGroup_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  // private _branchGroups: { [branch: string]: GroupingsGroup_I[]} = {\"__\": []};\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"members/groupings/bulk-assignment/get-subgroups\";\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: Boolean })\r\n  private filterBoxStarted?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n    \r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.assignment, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n        <div class=\"block my-1\">\r\n          <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n            filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n          </mwc-button>\r\n        </div>\r\n        <div class=\"block my-1\">\r\n          ${this.filterForm}<br />\r\n        </div>\r\n        <div class=\"block my-1\">\r\n          ${this.table}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, memberInfo: any) {\r\n    // console.log({memberInfo});\r\n\r\n    if (memberInfo.accountType === 1) {\r\n      const member: MembershipUserModel = MuMconvert.toMembershipUserModel(JSON.stringify(memberInfo));\r\n      const MEMBER_ID = base64Encode(String(member.id), true);\r\n      return `\r\n        <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n          <div class=\"flex m-1 justify-evenly\">\r\n            <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n              click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n              url=\"${member.profilePicture}\" size=\"32\"></user-profile-photo>\r\n          </div>\r\n          <div class=\"block m-1\">\r\n            <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n              <b>Name</b>: ${member.firstname} ${member.middlename} ${member.surname}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      const member: MembershipOrganizationUserModel = MouMconvert.toMembershipOrganizationUserModel(JSON.stringify(memberInfo));\r\n      return `\r\n        <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n          <div class=\"flex m-1 justify-evenly\">\r\n            <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"false\"\r\n              click-to-open=\"false\" type=\"member\"\r\n              url=\"${member.logo}\" size=\"32\"></user-profile-photo>\r\n          </div>\r\n          <div class=\"block m-1\">\r\n            <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n              <b>Org. Name</b>: ${member.organizationName}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private removeFromList(data: any, type: any, memberInfo: MembershipUserModel) {\r\n    // console.log({memberInfo});\r\n    const MEMBER_ID = memberInfo.id;\r\n    \r\n    const _urlQueryParams = urlQueryParams(),\r\n    subGroupId = 'subGroupId' in _urlQueryParams ? Number(_urlQueryParams['subGroupId']) : 0;\r\n\r\n    return `\r\n      <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <mwc-button class=\"button warning\" outlined delete-this-item=\"${subGroupId}\"\r\n        delete-item-member-id=\"${MEMBER_ID}\">\r\n          <mwc-icon class=\"mr-1\">delete_forever</mwc-icon> Remove\r\n        </mwc-button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n    filterNameId_branchId = \"branchId\",\r\n    filterNameId_memberType = \"memberType\",\r\n    filterNameId_group = \"groupId\",\r\n    filterNameId_subGroup = \"subGroupId\";\r\n\r\n    let newObject:any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_branchId) || (key === filterNameId_memberType) || (key === filterNameId_group) || (key === filterNameId_subGroup)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n      }\r\n    } \r\n\r\n    if (!(filterNameId_branchId in newObject)) {\r\n      let userBranch = 0;\r\n      if (this._userLoginInfo !== null) {\r\n        if (this._userLoginInfo.length > 0) {\r\n          userBranch = this._userLoginInfo[0].user.branchId;\r\n        }\r\n      }\r\n      newObject[filterNameId_branchId] = userBranch;\r\n    }\r\n\r\n    if (!(filterNameId_memberType in newObject)) {\r\n      newObject[filterNameId_memberType] = \"1\";\r\n    }\r\n\r\n    if (!(filterNameId_group in newObject)) {\r\n      if (this._groups.length > 0) {\r\n        newObject[filterNameId_group] = this._groups[0].id;\r\n      } else {\r\n        newObject[filterNameId_group] = \"0\";\r\n      }\r\n    }\r\n\r\n    if (!(filterNameId_subGroup in newObject)) {\r\n      if (this._subgroups.length > 0) {\r\n        newObject[filterNameId_subGroup] = this._subgroups[0].id;\r\n      } else {\r\n        newObject[filterNameId_subGroup] = \"0\";\r\n      }\r\n    }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private get filterForm() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_branchId = \"branchId\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_group = \"groupId\",\r\n      filterNameId_subGroup = \"subGroupId\";\r\n\r\n    let filterNameId_memberTypeVal: number = 1,\r\n      filterNameId_branchIdVal: number = userBranch,\r\n      filterNameId_groupVal: number = null,\r\n      filterNameId_subGroupVal: number = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_memberType) {\r\n          filterNameId_memberTypeVal = Number(value);\r\n        }\r\n        if (key === filterNameId_branchId) {\r\n          filterNameId_branchIdVal = Number(value);\r\n        }\r\n        if (key === filterNameId_group) {\r\n          filterNameId_groupVal = Number(value);\r\n        }\r\n        if (key === filterNameId_subGroup) {\r\n          filterNameId_subGroupVal = Number(value);\r\n        }\r\n    }\r\n    \r\n    const branchField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n          <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n            name=\"${filterNameId_branchId}\" id=\"${filterNameId_branchId}\"\r\n            outlined required @change=\"${this.branchChange}\">\r\n            ${userBranch === 1 ? html`\r\n              <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n              ${this._branches.map((value) => {\r\n                if (filterNameId_branchIdVal === value.id) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                }\r\n              })}\r\n            `: html`\r\n              ${this._branches.map((value) => {\r\n                if (value.id === userBranch) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                }\r\n              })}\r\n            `}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Member Category</h4>\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_memberTypeVal}\" \r\n            name=\"${filterNameId_memberType}\" id=\"${filterNameId_memberType}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const groups = this._groups.map(_group => {\r\n      const group: groupSubgroupType = {\r\n        id: _group.id, name: _group.group,\r\n        isSelected: _group.id === filterNameId_groupVal\r\n          ? \"true\" : \"false\",\r\n        selected: _group.id === filterNameId_groupVal ? true : false,\r\n      };\r\n      // console.log({\"_group.id\": _group.id, \"filterNameId_groupVal\": filterNameId_groupVal, group});\r\n      \r\n      return group\r\n    });\r\n    \r\n    const subGroups = this._subgroups.map(_subgroup => {\r\n      const group: groupSubgroupType = {\r\n        id: _subgroup.id, name: _subgroup.subgroup,\r\n        isSelected: _subgroup.id === filterNameId_subGroupVal\r\n          ? \"true\" : \"false\",\r\n        selected: _subgroup.id === filterNameId_subGroupVal ? true : false,\r\n      };\r\n      \r\n      // console.log({\"_subgroup.id\": _subgroup.id, \"filterNameId_subGroupVal\": filterNameId_subGroupVal, subgroup});\r\n      \r\n      return group\r\n    });\r\n\r\n    const groupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <mwc-select class=\"w-full\" setSelectedGroupId label=\"Select Group\"\r\n            name=\"${filterNameId_group}\" id=\"${filterNameId_group}\"\r\n            outlined required @change=\"${this.groupChange}\">\r\n            <mwc-list-item value=\"0\">Select Group</mwc-list-item>\r\n            ${groups.map((value) => {\r\n              if (filterNameId_groupVal === value.id) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const groupField_ = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <select-input name=\"${filterNameId_group}\" class=\"w-full\" id=\"${filterNameId_group}\" label=\"Select User Group\" .options=\"${groups}\"\r\n            outlined required @change=\"${this.groupChange}\" >\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n    const subGroupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Group</h4>\r\n          <select-input name=\"${filterNameId_subGroup}\" class=\"w-full\" id=\"${filterNameId_subGroup}\" label=\"Select User Sub-Group\" .options=\"${subGroups}\"\r\n            outlined required >\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${branchField} ${memberCategoryField} ${groupField} ${subGroupField}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  async branchChange(e: Event) {\r\n    // @ts-ignore\r\n    const branchId = Number.isNaN(e.currentTarget.value) ? 0 : Number(e.currentTarget.value);\r\n    this.selectedBranch = branchId;\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n    await this.getGroups(\"?branchId=\" + branchId, branchId);\r\n  }\r\n\r\n  async groupChange(e: Event) {\r\n    // @ts-ignore\r\n    const groupId = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedGroup\": this.selectedGroup });\r\n    await this.getSubGroups(\r\n      \"?groupId=\" + groupId + \"&branchId=\" + this.selectedBranch,\r\n      groupId\r\n    );\r\n\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Info', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Info', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    setInterval(() => {\r\n      if (this.filterSectionContextContainer !== null) {\r\n        if (!this.filterBoxStarted) {\r\n          // let branchId = 0;\r\n          // if (this._activeBranchId !== null) {\r\n          //   branchId = this._activeBranchId[0].id;\r\n          // }\r\n          this.filterBox = new FilterFieldBox({\r\n            selectors: {\r\n              container: this.filterSectionContextContainer,\r\n              form: this.filterSectionContextForm,\r\n              filterSectionContextBtn: this.filterSectionContextBtn,\r\n            }, unmutableInputNames: [\r\n              // { name: 'branchId', value: String(branchId) },\r\n            ],\r\n          }); \r\n          this.filterBoxStarted = true;\r\n        }\r\n      }\r\n    });   \r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    \r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, memberInfo: MembershipUserModel) => __this.renderMemberInfo(data, type, memberInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, memberInfo: MembershipUserModel) => __this.removeFromList(data, type, memberInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteMemberFx();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        // 'pdf',\r\n        // 'excel',\r\n        // 'copy',\r\n        // 'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private deleteMemberFx() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteMemberFromList(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async deleteMemberFromList(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    \r\n    // @ts-ignore\r\n    const subGroupId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n    // @ts-ignore\r\n    const memberId = Number(e.currentTarget.getAttribute('delete-item-member-id'));\r\n\r\n    await DELETE_MemberGroupingsSubGroupMember(subGroupId, memberId);\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  private async getGroups(url_params: string = \"\", branchID: number = null) {\r\n    const KEY = (branchID === null) || branchID < 1 ? \"__\" : String(branchID);\r\n    // console.log({\"_branchGroups\": _branchGroups});\r\n    \r\n    this._groups = [];\r\n    if (KEY in _branchGroups) {\r\n      setTimeout(() => {\r\n        this._groups = _branchGroups[KEY];\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(null, url_params);\r\n    let __groups: GroupingsGroup_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsGroup_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsGroup_I> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n    _branchGroups[KEY] = this._groups;\r\n  }\r\n\r\n  private async getSubGroups(url_params: string = \"\", groupID: number | null = null) {\r\n    const KEY = (groupID === null) || groupID < 1 ? \"__\" : String(groupID);\r\n    // console.log({\"_branchSubGroups\": _branchSubGroups});\r\n    \r\n    this._subgroups = [];\r\n    if (KEY in _branchSubGroups) {\r\n      setTimeout(() => {\r\n        this._subgroups = _branchSubGroups[KEY];\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<GroupingsSubGroup_I>(null, url_params);\r\n    let __subgroups: GroupingsSubGroup_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsSubGroup_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsSubGroup_I> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n    _branchSubGroups[KEY] = this._subgroups;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"grouping\": 33,\r\n  \"assignment\": 34,\r\n};"],"names":["root","factory","exports","module","define","amd","self","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","typ","undefined","jsonToJS","map","props","forEach","p","key","js","jsToJSON","val","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","GET_MemberGroupingsGroups","type","url_params","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","DELETE_MemberGroupingsSubGroupMember","subgroupId","memberId","formData","title","text","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","errors","e","err","push","res","https_swal_error_format","postForm","catch","String","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","window","location","reload","GET_MemberGroupingsSubGroups","UserProfilePhoto","LitElement","constructor","super","connectedCallback","this","setUpClientImage","setUpMemberImage","disconnectedCallback","render","html","openProfile","size","rounded","event","preventDefault","href","firstUpdated","includes","parts","split","fileName","createRenderRoot","styles","css","property","Boolean","Number","customElement","_branchGroups","_branchSubGroups","MembershipGroupingsBulkAssignmentMemberSubgroupsView","_memberCategories","_activeBranchId","_memberType","selectedBranch","_groups","_subgroups","_branches","_userLoginInfo","memberProfileBaseUrl","datatablePathUrl","filterBoxStarted","_hasSetup","AppSetup","activeBranchId","getActiveBranchIdCookie","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGroups","getSubGroups","getBranches","getClientMemberCategories","getAppSettingsExtraSettings","expiration_date","expired","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","toggleFilterFields","filterForm","table","renderMemberInfo","data","memberInfo","accountType","member","MEMBER_ID","base64Encode","id","profilePicture","firstname","middlename","surname","logo","organizationName","removeFromList","_urlQueryParams","urlQueryParams","urlQueryString","filterNameId_branchId","filterNameId_memberType","filterNameId_group","filterNameId_subGroup","newObject","userBranch","user","branchId","_urlQueryParamsJoin","urlQueryParamsJoin","returnHtml","filterNameId_memberTypeVal","filterNameId_branchIdVal","filterNameId_groupVal","filterNameId_subGroupVal","branchField","branchChange","memberCategoryField","groups","_group","group","isSelected","selected","subGroups","_subgroup","subgroup","groupField","groupChange","subGroupField","clear_filter","submit","currentTarget","groupId","__tableHeaders","__tableBody","__tableFoot","URL","__dataTable","ajaxHeader","setInterval","unmutableInputNames","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","deleteMemberFx","buttons","select","document","querySelectorAll","btn","addEventListener","deleteMemberFromList","subGroupId","getAttribute","_networkResponse","GET_ClientBranches","__branches","new_data","GET_MemberGroupingsMemberCategories","__memberCategories","category","branchID","KEY","__groups","date","groupID","__subgroups","query","Button","Element","HTMLFormElement"],"sourceRoot":""}