{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/groupings/group_subgroup/subgroups/add-bulk.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/subgroup/subgroup/post_bulk.ts","webpack://webpackNumbers/./src/view/membership/groupings/group_subgroup/subgroups/add-bulk.ts","webpack://webpackNumbers/./src/view/membership/groupings/page__id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_GroupingsSubgroupBulk(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/sub-group/bulk',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-groupings-subgroup\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Create Multiple Sub-Group(s)?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textarea';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GroupingsMemberCategories_I } from \"@@addons/interfaces/members/groupings/member_categories\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { GET_MemberGroupingsMemberCategories } from \"@@addons/network/members/groupings/member_categories\";\r\nimport { GroupingsGroup_I } from \"@@addons/interfaces/members/groupings/group\";\r\nimport { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { POST_GroupingsSubgroupBulk } from \"@@addons/network/members/groupings/subgroup/subgroup/post_bulk\";\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from \"@@addons/functions/app_settings\";\r\nimport { getAppSettingsExtraSettings } from \"@@addons/functions/app_settings/extra_settings\";\r\nimport { AppSettingsExtraUserAccess } from \"@@addons/functions/app_settings/extra_settings/user_access\";\r\nimport { PAGE__IDS } from \"../../page__id\";\r\n\r\n\r\ntype groupSubgroupType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\nlet _branchGroups: { [branch: string]: GroupingsGroup_I[]} = {};\r\n@customElement(\"membership-groupings-group_subgroup-subgroup-add-bulk\")\r\nexport class MembershipGroupingsGroupSubgroupSubgroupGroupAddBulk extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private selectedCategory: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    await this.getGroups();\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.grouping, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    \r\n    const groups = this._groups.map(_group => {\r\n      const group: groupSubgroupType = {\r\n        id: _group.id, name: _group.group,\r\n        isSelected: \"false\", selected: false,\r\n      };\r\n      // console.log({\"_group.id\": _group.id, \"filterNameId_groupVal\": filterNameId_groupVal, group});\r\n      \r\n      return group\r\n    });\r\n\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">New Sub-Group</h1>\r\n                    <h3 class=\"h3\">Create Sub-Group!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"members-groupings-subgroup\" enctype=\"multipart/form-data\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                        name=\"branchId\" id=\"branchId\" @change=\"${this.branchChange}\" outlined required>\r\n                        ${userBranch === 1 ? html`\r\n                          <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                          ${this._branches.map((value) => {\r\n                              if (userBranch === value.id) {\r\n                                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                              } else {\r\n                                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                              }\r\n                          })}\r\n                        `: html`\r\n                          ${this._branches.map((value) => {\r\n                            if (value.id === userBranch) {\r\n                              return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                            }\r\n                          })}\r\n                        `}\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n                      <pdb-membership-select-member-type defaultValue=\"1\" \r\n                        name=\"memberCategoryId\" id=\"memberCategoryId\"\r\n                        label=\"Select Member Category\" outlined required>\r\n                      </pdb-membership-select-member-type>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n                      <select-input name=\"groupId\" class=\"w-full\" id=\"groupId\" label=\"Select Group\" .options=\"${groups}\"\r\n                        outlined required >\r\n                      </select-input>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Sub-Group(s) - <span class=\"text-red-600\">Separated by commas</span></h4>\r\n                      <mwc-textarea name=\"_subgroups_\" id=\"_subgroups_\" label=\"Enter Sub-Group(s) - Separated by commas\"\r\n                        outlined required @keyup=\"${this.subgroups_to_select_options}\" @change=\"${this.subgroups_to_select_options}\">\r\n                      </mwc-textarea>\r\n                      <select name=\"subgroups[]\" id=\"subgroups\" hidden multiple></select>\r\n                    </div>\r\n                  </div>\r\n        \r\n                  <div class=\"form-input-container\">\r\n                    <mwc-button label=\"Create\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                    </mwc-button>\r\n                  </div>\r\n                \r\n                  <div class=\"flex form-input-container items-center text-center\">\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                      ...\r\n                    </label>\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private categoryValueChanged() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"memberCategoryId\"]').forEach((_select) => {\r\n      _select.addEventListener(\"change\", async (evt) => {\r\n        // @ts-ignore \r\n        _this.selectedCategory = _select.selectedCategory;\r\n        // console.log({ \"this.selectedCategory\": this.selectedCategory });\r\n        \r\n        if (!Number.isNaN(this.selectedCategory) ) {\r\n          await this.getGroups(\r\n            `?branchId=${this.selectedBranch}&memberCategoryId=${this.selectedCategory}`,\r\n            this.selectedBranch, this.selectedCategory\r\n          );\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async branchChange(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        \r\n    if (!Number.isNaN(this.selectedCategory) ) {\r\n      await this.getGroups(\r\n        `?branchId=${this.selectedBranch}&memberCategoryId=${this.selectedCategory}`,\r\n        this.selectedBranch, this.selectedCategory\r\n      );\r\n    }\r\n  }\r\n\r\n  subgroups_to_select_options(e: Event) {\r\n    // @ts-ignore\r\n    const subgroups_txt = String(e.currentTarget.value);\r\n    const subgroupsFields = document.querySelectorAll('[name=\"subgroups[]\"][id=\"subgroups\"]');\r\n    // console.log({\"subgroups_txt-subgroups_txt\": subgroups_txt, \"subgroupsFields-subgroupsFields\": subgroupsFields});\r\n\r\n    subgroupsFields.forEach(subgroupsField => {\r\n      let subgroups: Array<String> = []\r\n      subgroups_txt.split(',').forEach(_subgroup => {\r\n        const subgroup = _subgroup.trim().split(\",\").join(\"\");\r\n        if (subgroup.length > 0 && subgroup !== \"\" && subgroup !== \" \") {\r\n          console.log({\"_subgroup-_subgroup\": _subgroup, \"group-group\": subgroup});\r\n          if (!subgroups.includes(subgroup)) {\r\n            subgroups.push(subgroup);\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignore\r\n      subgroupsField.innerHTML = subgroups.map(subgroup => {\r\n        return \"<option selected>\"+subgroup+\"</option>\";\r\n      })\r\n    });\r\n    \r\n  }\r\n\r\n  firstUpdated() {\r\n    this.categoryValueChanged();\r\n  }\r\n\r\n  private async getGroups(url_params: string = \"\", branchID: number = null, categoryID: number = null) {\r\n    const KEY_1 = (branchID === null) || branchID < 1 ? \"__\" : String(branchID),\r\n      KEY_2 = (categoryID === null) || categoryID < 1 ? \"__\" : String(categoryID),\r\n      KEY = `${KEY_1}-${KEY_2}`;\r\n    // console.log({\"_branchGroups\": _branchGroups});\r\n    \r\n    this._groups = [];\r\n    if (KEY in _branchGroups) {\r\n      setTimeout(() => {\r\n        this._groups = _branchGroups[KEY];\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(null, url_params);\r\n    let __groups: GroupingsGroup_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsGroup_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsGroup_I> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n    _branchGroups[KEY] = this._groups;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_GroupingsSubgroupBulk();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"grouping\": 33,\r\n  \"assignment\": 34,\r\n};"],"names":["root","factory","exports","module","define","amd","self","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","GET_ClientBranches","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","console","errorHttp","GET_MemberGroupingsGroups","url_params","POST_GroupingsSubgroupBulk","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","e","err","errormsg","id","push","res","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","_branchGroups","MembershipGroupingsGroupSubgroupSubgroupGroupAddBulk","LitElement","constructor","super","startSearchPage","accountType","selectedBranch","selectedCategory","_userLoginInfo","_activeBranchId","_memberCategories","_branches","_groups","_hasSetup","connectedCallback","AppSetup","this","activeBranchId","getActiveBranchIdCookie","user","branchId","getGroups","getBranches","getClientMemberCategories","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","userBranch","groups","map","_group","name","group","isSelected","selected","branchChange","subgroups_to_select_options","submitForm","categoryValueChanged","_this","querySelectorAll","_select","addEventListener","evt","Number","isNaN","currentTarget","subgroups_txt","subgroupsField","subgroups","split","_subgroup","subgroup","trim","join","log","includes","innerHTML","firstUpdated","branchID","categoryID","KEY","_networkResponse","__groups","date","Date","new_data","__branches","GET_MemberGroupingsMemberCategories","__memberCategories","category","preventDefault","createRenderRoot","styles","css","property","Boolean","customElement"],"sourceRoot":""}