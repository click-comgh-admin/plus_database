{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/groupings/group_subgroup/groups/edit.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/group/patch.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/view/membership/groupings/group_subgroup/groups/edit.ts","webpack://webpackNumbers/./src/view/membership/groupings/page__id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\nexport const urlQueryParamsGetAll = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = urlSearchParams.getAll(query);\r\n  return params;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  group?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsGroup_S(data: any): GroupingsGroup_I {\r\n  // console.log({data});\r\n  \r\n  const groupingsGroup_S: GroupingsGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    group: String(data['group']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsGroup_S;\r\n}","export interface GroupingsMemberCategories_I {\r\n  id: number,\r\n  category: string,\r\n  clientId?: number,\r\n  createdBy?: number,\r\n  date?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\nexport function GroupingsMemberCategories_S(data: any): GroupingsMemberCategories_I {\r\n  // console.log({data});\r\n\r\n  const groupingsMemberCategories_S: GroupingsMemberCategories_I = {\r\n    id: typeof data == \"number\" ? data: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    category: String(data['category']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsMemberCategories_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_GroupingsGroup(ID: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-groupings-group\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Group?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GroupingsMemberCategories_I } from \"@@addons/interfaces/members/groupings/member_categories\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { GET_MemberGroupingsMemberCategories } from \"@@addons/network/members/groupings/member_categories\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { urlQueryParamsGet } from \"@@addons/functions/url_query_params\";\r\nimport { GroupingsGroup_I, GroupingsGroup_S } from \"@@addons/interfaces/members/groupings/group\";\r\nimport { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { PATCH_GroupingsGroup } from \"@@addons/network/members/groupings/group/group/patch\";\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from \"@@addons/functions/app_settings\";\r\nimport { getAppSettingsExtraSettings } from \"@@addons/functions/app_settings/extra_settings\";\r\nimport { AppSettingsExtraUserAccess } from \"@@addons/functions/app_settings/extra_settings/user_access\";\r\nimport { PAGE__IDS } from \"../../page__id\";\r\n\r\n\r\n@customElement(\"membership-groupings-group_subgroup-group-edit\")\r\nexport class MembershipGroupingsGroupSubgroupGroupEdit extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private groupId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private groupIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    this.getGroupId();\r\n    this.getGroup(this.groupId);\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.grouping, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n\r\n    if (this._groups.length < 1) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._groups === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Group </span>: Not Found</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const GROUP = this._groups[0];\r\n    // console.log({GROUP});\r\n    \r\n    \r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Change Group</h1>\r\n                    <h3 class=\"h3\">Update Group!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"members-groupings-group\" enctype=\"multipart/form-data\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                        name=\"_branchId_\" id=\"_branchId_\"  outlined required>\r\n                        <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                        ${this._branches.map((value) => {\r\n                          if (value.id === GROUP.branchId) {\r\n                            return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                          }\r\n                        })}\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n                      <pdb-membership-select-member-type defaultValue=\"${String(GROUP.memberCategoryId.id)}\" \r\n                        name=\"_memberCategoryId_\" id=\"_memberCategoryId_\"\r\n                        label=\"Select Member Category\" outlined required>\r\n                      </pdb-membership-select-member-type>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Group</h4>\r\n                      <mwc-textfield name=\"group\" id=\"group\" label=\"Enter Group\"\r\n                        outlined required value=\"${GROUP.group}\">\r\n                      </mwc-textfield>\r\n                    </div>\r\n                  </div>\r\n        \r\n                  <div class=\"form-input-container\">\r\n                    <mwc-button label=\"Update\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                    </mwc-button>\r\n                  </div>\r\n                \r\n                  <div class=\"flex form-input-container items-center text-center\">\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                      ...\r\n                    </label>\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getGroupId() {\r\n    let groupId = urlQueryParamsGet('view-group');\r\n    // console.log({ groupId });\r\n    let _groupId = groupId !== null ? base64Decode(groupId) : null;\r\n    this.groupId = Number.isNaN(_groupId) ? null : Number(_groupId);\r\n    // console.log({ \"this.groupId\": this.groupId });\r\n    this.groupIdEnc = base64Encode(String(this.groupId), true);\r\n  }\r\n\r\n  private async getGroup(ID: number) {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n        this._groups = [GroupingsGroup_S(_networkResponse.response.data)];\r\n        return;\r\n      }\r\n    }\r\n    this._groups = null;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await PATCH_GroupingsGroup(this.groupId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"grouping\": 33,\r\n  \"assignment\": 34,\r\n};"],"names":["root","factory","exports","module","define","amd","self","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsGetAll","getAll","urlQueryParamsJoin","object","urlStr","index","GroupingsGroup_S","id","Number","clientId","group","String","branchId","memberCategoryId","GroupingsMemberCategories_S","createdBy","updatedBy","date","Date","updateDate","category","GET_ClientBranches","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","console","errorHttp","PATCH_GroupingsGroup","ID","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","e","err","errormsg","push","res","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","reload","GET_MemberGroupingsGroups","url_params","MembershipGroupingsGroupSubgroupGroupEdit","LitElement","constructor","super","startSearchPage","accountType","selectedBranch","groupId","groupIdEnc","_userLoginInfo","_activeBranchId","_memberCategories","_branches","_groups","_hasSetup","connectedCallback","AppSetup","this","activeBranchId","getActiveBranchIdCookie","user","getGroupId","getGroup","getBranches","getClientMemberCategories","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","GROUP","map","name","submitForm","firstUpdated","_groupId","base64Decode","isNaN","base64Encode","_networkResponse","__branches","new_data","GET_MemberGroupingsMemberCategories","__memberCategories","preventDefault","createRenderRoot","styles","css","property","Boolean","customElement"],"sourceRoot":""}