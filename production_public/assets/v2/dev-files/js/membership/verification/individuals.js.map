{"version":3,"file":"../../production_public/assets/v2/dev-files/js/membership/verification/individuals.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/members/user/model/index2.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/view/membership/verification/individuals/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","// To parse this data:\n//\n//   import { Convert, MembershipUserModel } from \"./file\";\n//\n//   const membershipUserModel = Convert.toMembershipUserModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface MembershipUserModel {\n    id?:                    number;\n    clientID?:              number;\n    firstname?:             string;\n    middlename?:            string;\n    surname?:               string;\n    gender?:                number;\n    profilePicture?:        string;\n    phone?:                 string;\n    email?:                 string;\n    dateOfBirth?:           Date;\n    religion?:              number;\n    nationality?:           string;\n    countryOfResidence?:    string;\n    stateProvince?:         string;\n    region?:                number;\n    district?:              number;\n    constituency?:          number;\n    electoralArea?:         number;\n    community?:             string;\n    hometown?:              string;\n    houseNoDigitalAddress?: string;\n    digitalAddress?:        string;\n    level?:                 number;\n    status?:                number;\n    accountType?:           number;\n    memberType?:            number;\n    date?:                  Date;\n    lastLogin?:             Date;\n    referenceID?:           string;\n    branchID?:              number;\n    editable?:              boolean;\n    profileResume?:         string;\n    profileIdentification?: string;\n    archived?:              boolean;\n    identification?:        string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toMembershipUserModel(json: string): MembershipUserModel {\n        return cast(JSON.parse(json), r(\"MembershipUserModel\"));\n    }\n\n    public static membershipUserModelToJson(value: MembershipUserModel): string {\n        return JSON.stringify(uncast(value, r(\"MembershipUserModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"MembershipUserModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"firstname\", js: \"firstname\", typ: u(null, \"\") },\n        { json: \"middlename\", js: \"middlename\", typ: u(null, \"\") },\n        { json: \"surname\", js: \"surname\", typ: u(null, \"\") },\n        { json: \"gender\", js: \"gender\", typ: u(null, 0) },\n        { json: \"profilePicture\", js: \"profilePicture\", typ: u(null, \"\") },\n        { json: \"phone\", js: \"phone\", typ: u(null, \"\") },\n        { json: \"email\", js: \"email\", typ: u(null, \"\") },\n        { json: \"dateOfBirth\", js: \"dateOfBirth\", typ: u(null, Date) },\n        { json: \"religion\", js: \"religion\", typ: u(null, 0) },\n        { json: \"nationality\", js: \"nationality\", typ: u(null, \"\") },\n        { json: \"countryOfResidence\", js: \"countryOfResidence\", typ: u(null, \"\") },\n        { json: \"stateProvince\", js: \"stateProvince\", typ: u(null, \"\") },\n        { json: \"region\", js: \"region\", typ: u(null, 0) },\n        { json: \"district\", js: \"district\", typ: u(null, 0) },\n        { json: \"constituency\", js: \"constituency\", typ: u(null, 0) },\n        { json: \"electoralArea\", js: \"electoralArea\", typ: u(null, 0) },\n        { json: \"community\", js: \"community\", typ: u(null, \"\") },\n        { json: \"hometown\", js: \"hometown\", typ: u(null, \"\") },\n        { json: \"houseNoDigitalAddress\", js: \"houseNoDigitalAddress\", typ: u(null, \"\") },\n        { json: \"digitalAddress\", js: \"digitalAddress\", typ: u(null, \"\") },\n        { json: \"level\", js: \"level\", typ: u(null, 0) },\n        { json: \"status\", js: \"status\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n        { json: \"memberType\", js: \"memberType\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"last_login\", js: \"lastLogin\", typ: u(null, Date) },\n        { json: \"referenceId\", js: \"referenceID\", typ: u(null, \"\") },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"editable\", js: \"editable\", typ: u(null, true) },\n        { json: \"profileResume\", js: \"profileResume\", typ: u(null, \"\") },\n        { json: \"profileIdentification\", js: \"profileIdentification\", typ: u(null, \"\") },\n        { json: \"archived\", js: \"archived\", typ: u(null, true) },\n        { json: \"identification\", js: \"identification\", typ: u(null, \"\") },\n    ], false),\n};\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/branch/main.scss';\r\nimport \"@@assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/select';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsGetAll, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport '../../members/select-member-type';\r\nimport '../../../no_access/account_expired';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport '../../../no_access/no_page_entry';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../page__id';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { GroupModel, Convert as gmConvert } from '@@addons/interfaces/members/groupings/group/models';\r\nimport { SubGroupModel, Convert as sgmConvert } from '@@addons/interfaces/members/groupings/subgroup/models';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport { ClientBranchModel, Convert as cbmConvert } from '@@addons/interfaces/clients/branches/model';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { QueryOptions } from 'select2';\r\nimport { MembershipUserModel, Convert as MuMconvert } from '@@addons/interfaces/members/user/model/index2';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { MembershipVerificationModel, Convert as mvmConvert } from '@@addons/interfaces/members/verification';\r\nimport { MembershipAutoVerificationModel, Convert as mavmConvert } from '@@addons/interfaces/members/verification/auto';\r\nimport { getDate } from '@@addons/functions/date_time/date';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { POST_MemberVerification } from '@@addons/network/members/membership/verification/post';\r\nimport { POST_MemberVerificationBulk } from '@@addons/network/members/membership/verification/post_bulk';\r\nimport { DELETE_MemberVerification } from '@@addons/network/members/membership/verification/delete';\r\nimport { DELETE_MemberVerificationBulk } from '@@addons/network/members/membership/verification/delete_bulk';\r\nimport { GET_MembershipUserIds } from '@@addons/network/members/membership/users/members';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { until } from 'lit/directives/until.js';\r\nimport { POST_MemberVerificationAuto } from '@@addons/network/members/membership/verification/auto_verification_set';\r\nimport { GET_MemberVerificationAuto } from '@@addons/network/members/membership/verification/auto_verification_get';\r\n\r\n\r\ntype filterSelectType = { id: number | \"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-individual-verification\")\r\nexport class PdbMembershipIndividualVerification extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  // @property({ type: String })\r\n  // private memberProfileEditBaseUrl: string = \"/member/update-profile?edit=\";\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: SubGroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public _branches: ClientBranchModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public _autoVerifications: MembershipAutoVerificationModel[] = [];\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _selectedMembersCalled: boolean = false;\r\n\r\n  @property({ type: Array })\r\n  private _selectedMembersNames: TemplateResult<1>[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });        \r\n      }\r\n    }\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getAutoVerification();\r\n    await this.getBranches();\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({ pageId: PAGE__IDS.access, viewType: \"Both\" }, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\" filter-section-context=\"btn\"\r\n          @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1 shadow bg-white p-2\">\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      },\r\n    });\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_branchId = \"filter_branchId\",\r\n      filterNameId_filter_search = \"filter_search\",\r\n      filterNameId_filter_memberCategoryId = \"filter_memberCategoryId\",\r\n      filterNameId_filter_groupIds = \"filter_groupIds\",\r\n      filterNameId_filter_subGroupIds = \"filter_subGroupIds\",\r\n      filterNameId_filter_memberIds = \"filter_memberIds\",\r\n      // filterNameId_filter_verificationIds = \"filter_verificationIds\",\r\n      filterNameId_filter_verification = \"filter_verification\";\r\n    // filter_accountType:1\r\n    // filter_verification:true\r\n\r\n    let filterNameId_filter_branchIdVal: string[] = null,\r\n      filterNameId_filter_searchVal: string = null,\r\n      filterNameId_filter_memberCategoryIdVal: string[] = null,\r\n      filterNameId_filter_groupIdsVal: string[] = null,\r\n      filterNameId_filter_subGroupIdsVal: string[] = null,\r\n      filterNameId_filter_memberIdsVal: string[] = null,\r\n      // filterNameId_filter_verificationIdsVal: string = null,\r\n      filterNameId_filter_verificationVal: string = null;\r\n    // console.log({_urlQueryParams, \"urlQueryParamsGetAll('groupId[]')\": urlQueryParamsGetAll('groupId[]')});\r\n\r\n    for (const key in _urlQueryParams) {\r\n      // console.log({\"`--------${key}--------`\": `--------${key}--------`});\r\n\r\n      let value = String(_urlQueryParams[key]);\r\n      value = value === \"\" ? null : value;\r\n      if (key === `${filterNameId_filter_branchId}[]`) {\r\n        // filterNameId_filter_branchIdVal = value;\r\n        filterNameId_filter_branchIdVal = urlQueryParamsGetAll(`${filterNameId_filter_branchId}[]`);\r\n      }\r\n      if (key === filterNameId_filter_search) {\r\n        filterNameId_filter_searchVal = value;\r\n      }\r\n      if (key === `${filterNameId_filter_memberCategoryId}[]`) {\r\n        // filterNameId_filter_memberCategoryIdVal = value;\r\n        // console.log({filterNameId_filter_memberCategoryId});\r\n\r\n        filterNameId_filter_memberCategoryIdVal = urlQueryParamsGetAll(`${filterNameId_filter_memberCategoryId}[]`);\r\n      }\r\n      if (key === `${filterNameId_filter_groupIds}[]`) {\r\n        // filterNameId_filter_groupIdsVal = value;\r\n        filterNameId_filter_groupIdsVal = urlQueryParamsGetAll(`${filterNameId_filter_groupIds}[]`);\r\n      }\r\n      if (key === `${filterNameId_filter_subGroupIds}[]`) {\r\n        // filterNameId_filter_subGroupIdsVal = value;\r\n        filterNameId_filter_subGroupIdsVal = urlQueryParamsGetAll(`${filterNameId_filter_subGroupIds}[]`);\r\n      }\r\n      if (key === `${filterNameId_filter_memberIds}[]`) {\r\n        // filterNameId_filter_memberIdsVal = value;\r\n        filterNameId_filter_memberIdsVal = urlQueryParamsGetAll(`${filterNameId_filter_memberIds}[]`);\r\n        // console.log({filterNameId_filter_memberIdsVal});\r\n\r\n      }\r\n      // if (key === filterNameId_filter_verificationIds) {\r\n      //   filterNameId_filter_verificationIdsVal = value;\r\n      // }\r\n      if (key === filterNameId_filter_verification) {\r\n        filterNameId_filter_verificationVal = value;\r\n      }\r\n    }\r\n\r\n    const searchField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Name/ E-mail/ Phone Number</h4>\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_search}\" id=\"${filterNameId_filter_search}\"\r\n            label=\"Search By Name/ E-mail/ Phone Number\"\r\n            value=\"${filterNameId_filter_searchVal === null ? \"\" : filterNameId_filter_searchVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n\r\n    const selectedGroupIDs = Array.isArray(filterNameId_filter_groupIdsVal) ? filterNameId_filter_groupIdsVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [],\r\n      selectedSubGroupIDs = Array.isArray(filterNameId_filter_subGroupIdsVal) ? filterNameId_filter_subGroupIdsVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [],\r\n      selectedBranchIDs = Array.isArray(filterNameId_filter_branchIdVal) ? filterNameId_filter_branchIdVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [];\r\n    const groupsSubgroupsBranches = this.groupsSubgroupsBranches(selectedGroupIDs, selectedSubGroupIDs, selectedBranchIDs);\r\n\r\n    const branchField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Branches</h4>\r\n          <select-input name=\"${filterNameId_filter_branchId}\" class=\"w-full\" id=\"${filterNameId_filter_branchId}\"\r\n            label=\"Select Branches\" .options=\"${groupsSubgroupsBranches.branches}\" outlined required multiple>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n    const verificationField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Verification Status</h4>\r\n          <mwc-select name=\"${filterNameId_filter_verification}\" id=\"${filterNameId_filter_verification}\"\r\n            label=\"Select Verification Status\" outlined required>\r\n            <mwc-list-item value=\"\">Select Verification Status</mwc-list-item>\r\n            <mwc-list-item value=\"1\"\r\n              ?selected=\"${Number.isNaN(filterNameId_filter_verificationVal) ? false : Number(filterNameId_filter_verificationVal) === 1}\">\r\n              Verified</mwc-list-item>\r\n            <mwc-list-item value=\"2\"\r\n              ?selected=\"${Number.isNaN(filterNameId_filter_verificationVal) ? false : Number(filterNameId_filter_verificationVal) === 2}\">\r\n              Un-Verified</mwc-list-item>\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryIDs = Array.isArray(filterNameId_filter_memberCategoryIdVal) ? filterNameId_filter_memberCategoryIdVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [];\r\n    // console.log({memberCategoryIDs, filterNameId_filter_memberCategoryIdVal});\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Member Categories</h4>\r\n          <pdb-membership-select-member-type .defaultValues=\"${memberCategoryIDs}\"\r\n            name=\"${filterNameId_filter_memberCategoryId}\" id=\"${filterNameId_filter_memberCategoryId}\"\r\n            label=\"Select Member Category\" outlined required multiple material=\"false\">\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n    // console.log({groupsSubgroupsBranches});\r\n\r\n    const groupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Groups</h4>\r\n          <select-input name=\"${filterNameId_filter_groupIds}\" class=\"w-full\" id=\"${filterNameId_filter_groupIds}\"\r\n            label=\"Select Groups\" .options=\"${groupsSubgroupsBranches.groups}\" outlined required multiple>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n    const subGroupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Groups</h4>\r\n          <select-input name=\"${filterNameId_filter_subGroupIds}\" class=\"w-full\" id=\"${filterNameId_filter_subGroupIds}\"\r\n            label=\"Select Sub-Groups\" .options=\"${groupsSubgroupsBranches.subgroups}\" outlined required multiple>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberListField = html`\r\n      <div class=\"col-xl-12 col-md-12\">\r\n        <div class=\"form-input-container !block\">\r\n          ${this.memberListField}\r\n          <div class=\"flex flex-wrap gap-2 p-1 my-2 shadow\">\r\n            ${until(this.getMembersByIds(filterNameId_filter_memberIdsVal?.map(memberId => Number.isNaN(memberId) ? 0 :\r\n      Number(memberId))), html`<span>Loading...</span>`)}\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n    returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      ${searchField} ${verificationField} ${memberCategoryField} ${branchField}\r\n      <div class=\"col-md-12 my-2\">\r\n        <hr />\r\n      </div>\r\n      ${groupField} ${subGroupField} ${memberListField}\r\n      <div class=\"col-xl-12 col-md-10\">\r\n        <div class=\"form-input-container mt-1\">\r\n          <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n          <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  async getMembersByIds(memberIds: Array<Number>) {\r\n    memberIds = memberIds === null ? [] : memberIds;\r\n    // console.log({memberIds, \"this._selectedMembersCalled\": this._selectedMembersCalled});\r\n\r\n    let _members: MembershipMixedUserModel[] = [];\r\n\r\n    if (this._selectedMembersCalled === false && memberIds?.length > 0) {\r\n      this._selectedMembersCalled = true;\r\n      const _networkResponse = await GET_MembershipUserIds<any>(memberIds);\r\n\r\n      if (_networkResponse !== null) {\r\n        // @ts-ignore\r\n        // console.log({\"_networkResponse.data.paginResponse\": _networkResponse.data});\r\n\r\n        if ((_networkResponse.response.success === true)) {\r\n          const _DATAS = _networkResponse.response.data;\r\n          // console.log({_DATAS});\r\n\r\n          const DATA: MembershipMixedUserModel[] = _DATAS.results?.map((member: any) => mmumConvert.toMembershipMixedUserModel(JSON.stringify(member)));\r\n          // console.log({DATA});\r\n          _members = DATA;\r\n        }\r\n      }\r\n      const _selectedMembersNames = _members?.map(member => {\r\n        return html`\r\n          <span\r\n            class=\"flex h-fit items-center gap-1 font-semibold bg-blue-100 text-blue-800 dark:bg-blue-200 dark:text-blue-800 group-hover:bg-blue-200 dark:group-hover:bg-blue-300 rounded-full p-1.5 text-xs\">\r\n            <span>${member.firstname} ${member.middlename ?? \"\"} ${member.surname}</span>\r\n          </span>\r\n        `;\r\n      });\r\n      this._selectedMembersNames = _selectedMembersNames;\r\n    }\r\n    return this._selectedMembersNames;\r\n  }\r\n\r\n  branchChange(e: Event) {\r\n    const accountType = this.accountType;\r\n    this.accountType = 1;\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value) ? 0 : Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n  }\r\n\r\n  private groupsSubgroupsBranches(selectedGroupIDs: Array<number>, selectedSubGroupIDs: Array<number>, selectedBranchIDs: Array<number>) {\r\n    type returnType = { groups: filterSelectType[], subgroups: filterSelectType[], branches: filterSelectType[] };\r\n    let groups: filterSelectType[] = [{ id: 0, name: \"Select Groups\", isSelected: \"false\", selected: false }];\r\n    let subgroups: filterSelectType[] = [{ id: 0, name: \"Select Sub-Groups\", isSelected: \"false\", selected: false }];\r\n    let branches: filterSelectType[] = [{ id: 0, name: \"Select Branches\", isSelected: \"false\", selected: false }];\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n\r\n\r\n    this._groups.forEach(_group => {\r\n      let thisIsSelected = false;\r\n      selectedGroupIDs.forEach(selectedGroupID => {\r\n        if (selectedGroupID === _group.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const group: filterSelectType = {\r\n        id: _group.id, name: _group.group, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!groups.includes(group)) {\r\n        groups.push(group);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._subgroups\": this._subgroups})\r\n    this._subgroups.forEach(_subgroup => {\r\n      let thisIsSelected = false;\r\n      selectedSubGroupIDs.forEach(selectedSubGroupID => {\r\n        if (selectedSubGroupID === _subgroup.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const subgroup: filterSelectType = {\r\n        id: _subgroup.id, name: `${_subgroup.groupID.group} => ${_subgroup.subgroup}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!subgroups.includes(subgroup)) {\r\n        subgroups.push(subgroup);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._branches\": this._branches, selectedBranchIDs})\r\n    this._branches.forEach(_branch => {\r\n      let thisIsSelected = false;\r\n      selectedBranchIDs.forEach(selectedBranchID => {\r\n        if (selectedBranchID === _branch.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const branch: filterSelectType = {\r\n        id: _branch.id, name: `${_branch.name}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!branches.includes(branch)) {\r\n        branches.push(branch);\r\n      }\r\n    });\r\n\r\n    const _returnType: returnType = {\r\n      groups: groups, subgroups: subgroups, branches\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  get memberListField() {\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n    if (Number(this.accountType) === 1) {\r\n      return this.individualMemberList;\r\n    } else {\r\n      return this.individualMemberList;\r\n    }\r\n  }\r\n\r\n  get individualMemberList() {\r\n    this.startSearchPage = 0;\r\n\r\n    function processClientUserSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n      params.page = params.page || 0;\r\n      const TOTAL = data.count,\r\n        RESULTS = data.results,\r\n        SELECTOR = document.querySelector('[id=\"filter_memberIds\"]');\r\n      // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n      let processedData: { id: number; text: string; }[] = [];\r\n      if (TOTAL > 0) {\r\n        var _data = RESULTS;\r\n        // console.log({ \"smbfl-_data\": _data });\r\n        for (let i = 0; i < _data.length; i++) {\r\n          const item = _data[i];\r\n          // console.log({\"typeof\": typeof item, \"item-item\": item });\r\n          const member: MembershipUserModel = MuMconvert.toMembershipUserModel(JSON.stringify(item));\r\n          // console.log({ \"member-member\": member });\r\n\r\n          const id = member.id;\r\n          const fullName = `${member.firstname} ${member.middlename ?? \"\"} ${member.surname}`;\r\n          const _new = {\r\n            id: id,\r\n            text: fullName,\r\n          }\r\n          if (!processedData.includes(_new)) {\r\n            processedData.push(_new)\r\n          }\r\n        }\r\n      }\r\n      // console.log({ processedData });\r\n\r\n      return {\r\n        results: processedData,\r\n        total: TOTAL,\r\n        // @ts-ignore\r\n        totalShowing: SELECTOR.totalShowing,\r\n      };\r\n    }\r\n\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n\r\n    return html`\r\n      <h4 class=\"font-semibold my-2\">Select User</h4>\r\n      <select-input class=\"w-100\" id=\"filter_memberIds\" name=\"filter_memberIds\" label=\"Select User\" multiple\r\n        .ajaxFetchProcessResponse=\"${processClientUserSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n        .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n        ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n    `;\r\n  }\r\n\r\n  private get table_header() {\r\n    return html`\r\n      <div class=\"flex-col p-2 mb-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4 pb-5\">\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <label class=\"flex justify-between items-center\">\r\n            <b>CHECK ALL: </b>\r\n            <input id=\"verification_info_all\" name=\"verification_info_all\" type=\"checkbox\"\r\n              class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n              @change=\"${this.check_all_verification}\" />\r\n          </label>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"success\" raised verification_info_all=\"activate\" @click=\"${this.activateMultipleMemberAction}\">\r\n            Activate All Selected</mwc-button>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"danger\" raised verification_info_all=\"deactivate\"\r\n            @click=\"${this.deactivateMultipleMemberAction}\">Deactivate All Selected</mwc-button>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <label class=\"flex justify-between items-center\">\r\n            <b>AUTO VERIFY: </b>\r\n            <input id=\"auto_verification\" name=\"auto_verification\" type=\"checkbox\"\r\n              class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n              @change=\"${this.check_auto_verification}\" ?checked=\"${this._autoVerifications.length > 0? true: false}\" auto-verification-id=\"${this._autoVerifications.length > 0? this._autoVerifications[0].id: 0}\" />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get ajaxFetchUrlParams(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"branchId\", value: String(this.selectedBranch) }\r\n    ]\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    // const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/member-verification/members?branchId=\" + branchId + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n\r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      ${this.table_header}\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_branchId = \"filter_branchId\",\r\n      filterNameId_filter_search = \"filter_search\",\r\n      filterNameId_filter_memberCategoryId = \"filter_memberCategoryId\",\r\n      filterNameId_filter_groupIds = \"filter_groupIds\",\r\n      filterNameId_filter_subGroupIds = \"filter_subGroupIds\",\r\n      filterNameId_filter_memberIds = \"filter_memberIds\",\r\n      // filterNameId_filter_verificationIds = \"filter_verificationIds\",\r\n      filterNameId_filter_verification = \"filter_verification\";\r\n\r\n    let newObject: any = {};\r\n    // for (const key in _urlQueryParams) {\r\n    //   let value = Number(_urlQueryParams[key]);\r\n    //   if (!Number.isNaN(value) && (value !== 0)) {\r\n    //     // console.log({value, });\r\n\r\n    //     newObject[key] = value;\r\n    //   }\r\n    // }\r\n    let _branchIds: Array<string> = [],\r\n      _memberCategoryIds: Array<string> = [],\r\n      _groupIds: Array<string> = [],\r\n      _subGroupIds: Array<string> = [],\r\n      _memberIds: Array<string> = [];\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]),\r\n        branchId = `${filterNameId_filter_branchId}[]`,\r\n        memberCategoryId = `${filterNameId_filter_memberCategoryId}[]`,\r\n        groupIds = `${filterNameId_filter_groupIds}[]`,\r\n        subGroupIds = `${filterNameId_filter_subGroupIds}[]`,\r\n        memberIds = `${filterNameId_filter_memberIds}[]`;\r\n\r\n      if ((key === branchId) || (key === filterNameId_filter_search)\r\n        || (key === memberCategoryId) || (key === groupIds)\r\n        || (key === subGroupIds) || (key === memberIds)\r\n        || (key === filterNameId_filter_verification)) {\r\n        // console.log({value, });\r\n\r\n        newObject[key] = value;\r\n\r\n        if ((key === branchId) || (key === memberCategoryId)\r\n          || (key === groupIds) || (key === subGroupIds)\r\n          || (key === memberIds)) {\r\n          // console.log({value, });\r\n          _branchIds = urlQueryParamsGetAll(branchId),\r\n            _memberCategoryIds = urlQueryParamsGetAll(memberCategoryId),\r\n            _groupIds = urlQueryParamsGetAll(groupIds),\r\n            _subGroupIds = urlQueryParamsGetAll(subGroupIds),\r\n            _memberIds = urlQueryParamsGetAll(memberIds);\r\n        }\r\n\r\n        if (key === filterNameId_filter_verification) {\r\n          if (value !== \"1\" && value !== \"2\" && value !== \"true\" && value !== \"false\") {\r\n            delete newObject[key]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    newObject[\"filter_accountType\"] = 1;\r\n\r\n\r\n    // console.log({\"newObject-newObject\": newObject});\r\n    let new_params = ``;\r\n    _branchIds.forEach(_branchId => new_params += `&${filterNameId_filter_branchId}=${_branchId}`);\r\n    _memberCategoryIds.forEach(_memberCategoryId => new_params += `&${filterNameId_filter_memberCategoryId}=${_memberCategoryId}`);\r\n    _groupIds.forEach(_groupId => new_params += `&${filterNameId_filter_groupIds}=${_groupId}`);\r\n    _subGroupIds.forEach(_subGroupId => new_params += `&${filterNameId_filter_subGroupIds}=${_subGroupId}`);\r\n    _memberIds.forEach(_memberId => new_params += `&${filterNameId_filter_memberIds}=${_memberId}`);\r\n    \r\n\r\n    // console.log({new_params});\r\n    \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin + new_params;\r\n  }\r\n\r\n  private rowOneRender(verification: MembershipVerificationModel) {\r\n    verification = mvmConvert.toMembershipVerificationModel(JSON.stringify(verification));\r\n    const member = verification.member;\r\n    const vInfo = verification.verificationInfo;\r\n    // console.log({ data, type, member });\r\n\r\n    let country = '-', region_state_name = \"-\", region_state = \"-\";\r\n    member.countryInfo.forEach(_country => {\r\n      country = _country.name;\r\n\r\n      if (_country.id === 76) {\r\n        region_state_name = \"Region\";\r\n\r\n        region_state = member.regionInfo.location;\r\n      } else {\r\n        region_state_name = \"State/ Province\";\r\n\r\n        region_state = member.stateProvince;\r\n      }\r\n    });\r\n\r\n    // console.log({vInfo});\r\n\r\n    const verification_info_id = verification.verification ? vInfo.memberId : member.id;\r\n\r\n    const ID = base64Encode(String(member.id), true);\r\n    return `<div class=\"flex items-center whitespace-normal mb-0\">\r\n      <input id=\"verification_info\" name=\"verification_info\" type=\"checkbox\" value=\"${verification_info_id}\"\r\n        class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n      <div>\r\n        <user-profile-photo class=\"w-16 h-16 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${this.memberProfileBaseUrl}${ID}\" type=\"member\"\r\n          url=\"${member.profilePicture}\" size=\"16\"></user-profile-photo>\r\n        <p class=\"ml-1 mb-2\">\r\n          <b>${member.firstname} ${member.middlename ?? \"\"} ${member.surname}</b>\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          Country: ${country}\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          ${region_state_name}: ${region_state}\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          Branch: ${member.branchInfo.name}\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          Contact: <a href=\"tel:${member.phone}\" type=\"tel\">${member.phone}</a>\r\n        </p>\r\n        <p class=\"ml-1 mt-3 mb-0\">\r\n          <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n            href=\"${this.memberProfileBaseUrl}${ID}\" label=\"View Profile\"></link-button>\r\n        </p>\r\n      </div>\r\n    </div>`;\r\n\r\n  }\r\n\r\n  private rowTwoRender(verification: MembershipVerificationModel) {\r\n    verification = mvmConvert.toMembershipVerificationModel(JSON.stringify(verification));\r\n    const member = verification.member;\r\n    const vInfo = verification.verificationInfo;\r\n\r\n    const name = vInfo === null ? \"-\" : `${vInfo.verifiedBy?.firstname} ${vInfo.verifiedBy?.surname}`,\r\n      date = vInfo === null ? \"-\" : getDate(vInfo.verifiedBy?.date, { dateStyle: \"medium\" }),\r\n      time = vInfo === null ? \"-\" : getLocalTime(vInfo.verifiedBy?.date, { timeStyle: \"short\" });\r\n    return `<div class=\"flex flex-col md:flex-row whitespace-normal\">\r\n      <p class=\"ml-1 mb-2\">\r\n        <b>Verified By: ${name}</b>\r\n      </p>\r\n    </div>\r\n    <div class=\"flex flex-col md:flex-row whitespace-normal\">\r\n      <p class=\"ml-1 mb-2\">\r\n        On: ${date}/ \r\n      </p>\r\n      <p class=\"ml-1 mb-2\">\r\n        At: ${time}\r\n      </p>\r\n    </div>\r\n    <div class=\"flex flex-col md:flex-row whitespace-normal\">\r\n      ${verification.verification ? `<p class=\"ml-1 mb-2\">\r\n        <mwc-button class=\"danger\" raised unverify-member=\"${vInfo.id}\">Deactivate</mwc-button>\r\n      </p>`: `<p class=\"ml-1 mb-2\">\r\n        <mwc-button class=\"success\" raised verify-member=\"${member.id}\">Activate</mwc-button>\r\n      </p>`}\r\n    </div>`;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'member',\r\n          render: (data: any, type: any, member: MembershipVerificationModel) => __this.rowOneRender(member),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'verification',\r\n          render: (data: any, type: any, member: MembershipVerificationModel) => __this.rowTwoRender(member),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.verifyMemberBtns();\r\n        __this.unVerifyMemberBtns();\r\n      },\r\n      \"responsive\": true,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranchModel>();\r\n    let __branches: ClientBranchModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // @ts-ignore\r\n        const DATA: ClientBranchModel[] = _networkResponse.response.data.map((data: any) => {\r\n          return cbmConvert.toClientBranchModel(JSON.stringify(data));\r\n        });\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranchModel> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getAutoVerification() {\r\n    const _networkResponse = await GET_MemberVerificationAuto<MembershipAutoVerificationModel>();\r\n    let __autos: MembershipAutoVerificationModel[] = [];\r\n\r\n    if (_networkResponse !== null) {\r\n      if ((_networkResponse.response.success === true)) {\r\n        // @ts-ignore\r\n        const DATA: MembershipAutoVerificationModel[] = _networkResponse.response.data.map((data: any) => {\r\n          return mavmConvert.toMembershipAutoVerificationModel(JSON.stringify(data));\r\n        });\r\n        // console.log({DATA});\r\n        __autos = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<MembershipAutoVerificationModel> = [];\r\n    new_data.push(...this._autoVerifications, ...__autos);\r\n    this._autoVerifications = new_data;\r\n  }\r\n\r\n  private async getGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<any>();\r\n    let __groups: GroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // console.log({\"_networkResponse.response.data\": _networkResponse.response.data});\r\n\r\n        const DATA: GroupModel[] = _networkResponse.response.data.map((group: any) => gmConvert.toGroupModel(JSON.stringify(group)));\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupModel> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n  }\r\n\r\n  private async getSubGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<any>();\r\n    let __subgroups: SubGroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: SubGroupModel[] = _networkResponse.response.data.map((subgroup: any) => sgmConvert.toSubGroupModel(JSON.stringify(subgroup)));\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<SubGroupModel> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n  }\r\n\r\n  private verifyMemberBtns() {\r\n    const selectorString = 'verify-member';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(verify_member => {\r\n      verify_member.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.verifyMemberAction(verify_member, selectorString, e);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  private async verifyMemberAction(element: Element, selectorString: string, e: any) {\r\n    e.preventDefault();\r\n\r\n    const memberID = element.getAttribute(selectorString);\r\n\r\n    if (!Number.isNaN(memberID) && Number(memberID) !== 0) {\r\n      await POST_MemberVerification(Number(memberID));\r\n    }\r\n  }\r\n\r\n  private async check_auto_verification(e: any) {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('[id=\"auto_verification\"][name=\"auto_verification\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        document.querySelectorAll('[id=\"auto_verification\"][name=\"auto_verification\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = true;\r\n          POST_MemberVerificationAuto();\r\n        })\r\n      } else {\r\n        document.querySelectorAll('[id=\"auto_verification\"][name=\"auto_verification\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = false;\r\n          const autoVerificationId = Number(_input_.getAttribute('auto-verification-id'))\r\n          POST_MemberVerificationAuto(autoVerificationId);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private async check_all_verification(e: any) {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('[id=\"verification_info_all\"][name=\"verification_info_all\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = true;\r\n        })\r\n      } else {\r\n        document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private async activateMultipleMemberAction(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    await POST_MemberVerificationBulk(ids);\r\n  }\r\n\r\n  private unVerifyMemberBtns() {\r\n    const selectorString = 'unverify-member';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(unverify_member => {\r\n      unverify_member.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.unVerifyMemberAction(unverify_member, selectorString, e);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  private async unVerifyMemberAction(element: Element, selectorString: string, e: any) {\r\n    e.preventDefault();\r\n\r\n    const memberID = element.getAttribute(selectorString);\r\n\r\n    if (!Number.isNaN(memberID) && Number(memberID) !== 0) {\r\n      await DELETE_MemberVerification(Number(memberID));\r\n    }\r\n  }\r\n\r\n  private async deactivateMultipleMemberAction(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    await DELETE_MemberVerificationBulk(ids);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","typ","undefined","jsonToJS","map","props","forEach","p","key","js","jsToJSON","val","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","GET_ClientBranches","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","PdbMembershipIndividualVerification","LitElement","constructor","super","memberProfileBaseUrl","_groups","_subgroups","_branches","_autoVerifications","startSearchPage","accountType","selectedBranch","_activeBranchId","_memberType","_hasSetup","_selectedMembersCalled","_selectedMembersNames","_userLoginInfo","connectedCallback","AppSetup","then","this","activeBranchId","getActiveBranchIdCookie","user","branchId","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getAutoVerification","getBranches","getGroups","getSubGroups","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","AppSettingsExtraUserAccess","pageId","PAGE__IDS","viewType","toggleFilterFields","filterForm","table","firstUpdated","returnHtml","_urlQueryParams","urlQueryParams","filterNameId_filter_branchId","filterNameId_filter_search","filterNameId_filter_memberCategoryId","filterNameId_filter_groupIds","filterNameId_filter_subGroupIds","filterNameId_filter_memberIds","filterNameId_filter_verification","filterNameId_filter_branchIdVal","filterNameId_filter_searchVal","filterNameId_filter_memberCategoryIdVal","filterNameId_filter_groupIdsVal","filterNameId_filter_subGroupIdsVal","filterNameId_filter_memberIdsVal","filterNameId_filter_verificationVal","String","urlQueryParamsGetAll","searchField","userBranch","selectedGroupIDs","item","Number","selectedSubGroupIDs","selectedBranchIDs","groupsSubgroupsBranches","branchField","branches","verificationField","memberCategoryIDs","memberCategoryField","groupField","groups","subGroupField","subgroups","memberListField","until","getMembersByIds","memberId","clear_filter","submit","memberIds","_members","_networkResponse","GET_MembershipUserIds","response","success","_DATAS","data","results","member","firstname","middlename","surname","branchChange","e","currentTarget","id","isSelected","selected","_group","thisIsSelected","selectedGroupID","isSelectedAlt","group","includes","push","_subgroup","selectedSubGroupID","subgroup","groupID","_branch","selectedBranchID","branch","individualMemberList","ajaxHeader","params","page","TOTAL","count","RESULTS","SELECTOR","document","querySelector","processedData","_data","_new","text","total","totalShowing","ajaxFetchUrlParams","table_header","check_all_verification","activateMultipleMemberAction","deactivateMultipleMemberAction","check_auto_verification","param","__tableHeaders","title","__tableBody","__tableFoot","URL","urlQueryString","__dataTable","newObject","_branchIds","_memberCategoryIds","_groupIds","_subGroupIds","_memberIds","memberCategoryId","groupIds","subGroupIds","new_params","_branchId","_memberCategoryId","_groupId","_subGroupId","_memberId","_urlQueryParamsJoin","urlQueryParamsJoin","rowOneRender","verification","vInfo","verificationInfo","country","region_state_name","region_state","countryInfo","_country","regionInfo","location","stateProvince","verification_info_id","ID","base64Encode","profilePicture","branchInfo","phone","rowTwoRender","verifiedBy","getDate","date","dateStyle","getLocalTime","timeStyle","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","verifyMemberBtns","unVerifyMemberBtns","buttons","select","__branches","new_data","GET_MemberVerificationAuto","__autos","GET_MemberGroupingsGroups","__groups","GET_MemberGroupingsSubGroups","__subgroups","selectorString","querySelectorAll","verify_member","addEventListener","preventDefault","verifyMemberAction","element","memberID","getAttribute","POST_MemberVerification","input","checked","_input_","POST_MemberVerificationAuto","autoVerificationId","ids","POST_MemberVerificationBulk","unverify_member","unVerifyMemberAction","DELETE_MemberVerification","DELETE_MemberVerificationBulk","createRenderRoot","styles","css","query","Button","Element","HTMLFormElement","property","Boolean","customElement"],"sourceRoot":""}