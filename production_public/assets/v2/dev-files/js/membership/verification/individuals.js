"use strict";!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.webpackNumbers=t():e.webpackNumbers=t()}(self,(()=>(self.webpackChunkwebpackNumbers=self.webpackChunkwebpackNumbers||[]).push([["membership/verification/individuals"],{8967:(e,t,r)=>{r.r(t),r.d(t,{__swalStyle:()=>n,https_swal_error_format:()=>i});const n="<style>#swal2-validation-message{\n  display: flex !important;\n  justify-content: flex-start !important;\n  font-weight: 600 !important;\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>",i=(e,t=!0)=>{if(Array.isArray(e)){let r=(t?n:"")+"<ul>";return e.forEach((e=>{r+="string"==typeof e?`<li>${e}</li>\n`:`<li>${e.error}</li>\n`})),r+="</ul>"}throw new Error("Unknown error response format")}},2813:(e,t,r)=>{r.r(t),r.d(t,{Convert:()=>n,typeMap:()=>c});class n{static toMembershipUserModel(e){return o(JSON.parse(e),a("MembershipUserModel"),i)}static membershipUserModelToJson(e){return JSON.stringify(o(e,a("MembershipUserModel"),s),null,2)}}function i(e){if(void 0===e.jsonToJS){const t={};e.props.forEach((e=>t[e.json]={key:e.js,typ:e.typ})),e.jsonToJS=t}return e.jsonToJS}function s(e){if(void 0===e.jsToJSON){const t={};e.props.forEach((e=>t[e.js]={key:e.json,typ:e.typ})),e.jsToJSON=t}return e.jsToJSON}function o(e,t,r,n=""){if("any"===t)return e;if(null===t&&null===e)return e;if(!1!==t){for(;"object"==typeof t&&void 0!==t.ref;)t=c[t.ref];return Array.isArray(t)?function(e,t){if(-1!==e.indexOf(t))return t}(t,e):"object"==typeof t?t.hasOwnProperty("unionMembers")?function(e,t){const n=e.length;for(let i=0;i<n;i++){const n=e[i];try{return o(t,n,r)}catch(e){}}}(t.unionMembers,e):t.hasOwnProperty("arrayItems")?function(e,t){if(Array.isArray(t))return t.map((t=>o(t,e,r)))}(t.arrayItems,e):t.hasOwnProperty("props")?function(e,t,n){if(null===n||"object"!=typeof n||Array.isArray(n))return;const i={};return Object.getOwnPropertyNames(e).forEach((t=>{const s=e[t],l=Object.prototype.hasOwnProperty.call(n,t)?n[t]:void 0;i[s.key]=o(l,s.typ,r,s.key)})),Object.getOwnPropertyNames(n).forEach((s=>{Object.prototype.hasOwnProperty.call(e,s)||(i[s]=o(n[s],t,r,s))})),i}(r(t),t.additional,e):void 0:t===Date&&"number"!=typeof e?function(e){if(null===e)return null;const t=new Date(e);return isNaN(t.valueOf())?void 0:t}(e):function(e,t){if(typeof e==typeof t)return t}(t,e)}}function l(...e){return{unionMembers:e}}function a(e){return{ref:e}}const c={MembershipUserModel:(d=[{json:"id",js:"id",typ:l(null,0)},{json:"clientId",js:"clientID",typ:l(null,0)},{json:"firstname",js:"firstname",typ:l(null,"")},{json:"middlename",js:"middlename",typ:l(null,"")},{json:"surname",js:"surname",typ:l(null,"")},{json:"gender",js:"gender",typ:l(null,0)},{json:"profilePicture",js:"profilePicture",typ:l(null,"")},{json:"phone",js:"phone",typ:l(null,"")},{json:"email",js:"email",typ:l(null,"")},{json:"dateOfBirth",js:"dateOfBirth",typ:l(null,Date)},{json:"religion",js:"religion",typ:l(null,0)},{json:"nationality",js:"nationality",typ:l(null,"")},{json:"countryOfResidence",js:"countryOfResidence",typ:l(null,"")},{json:"stateProvince",js:"stateProvince",typ:l(null,"")},{json:"region",js:"region",typ:l(null,0)},{json:"district",js:"district",typ:l(null,0)},{json:"constituency",js:"constituency",typ:l(null,0)},{json:"electoralArea",js:"electoralArea",typ:l(null,0)},{json:"community",js:"community",typ:l(null,"")},{json:"hometown",js:"hometown",typ:l(null,"")},{json:"houseNoDigitalAddress",js:"houseNoDigitalAddress",typ:l(null,"")},{json:"digitalAddress",js:"digitalAddress",typ:l(null,"")},{json:"level",js:"level",typ:l(null,0)},{json:"status",js:"status",typ:l(null,0)},{json:"accountType",js:"accountType",typ:l(null,0)},{json:"memberType",js:"memberType",typ:l(null,0)},{json:"date",js:"date",typ:l(null,Date)},{json:"last_login",js:"lastLogin",typ:l(null,Date)},{json:"referenceId",js:"referenceID",typ:l(null,"")},{json:"branchId",js:"branchID",typ:l(null,0)},{json:"editable",js:"editable",typ:l(null,!0)},{json:"profileResume",js:"profileResume",typ:l(null,"")},{json:"profileIdentification",js:"profileIdentification",typ:l(null,"")},{json:"archived",js:"archived",typ:l(null,!0)},{json:"identification",js:"identification",typ:l(null,"")}],!1,{props:d,additional:false})};var d},6224:(e,t,r)=>{r.r(t),r.d(t,{GET_ClientBranches:()=>l});var n=r(8485),i=r(7270),s=r(4492),o=r(3600);function l(e=null){return t=this,r=void 0,a=function*(){const t=(0,o.getUserLoginInfoCookie)(),r=n.CONSTANTS.URLS.AKWAABA_API_BASE_URL+"clients/branch"+(null===e?"":"/"+e),l=yield(0,i.http)(r,{method:"GET",headers:{Authorization:"Token "+t.token}},!0);try{return new s.NetWorkCallResponses("get",l)}catch(e){console.error({error:e});let t=l;return t.error=e,new s.NetWorkCallResponses("get",t,!0)}},new((l=void 0)||(l=Promise))((function(e,n){function i(e){try{o(a.next(e))}catch(e){n(e)}}function s(e){try{o(a.throw(e))}catch(e){n(e)}}function o(t){var r;t.done?e(t.value):(r=t.value,r instanceof l?r:new l((function(e){e(r)}))).then(i,s)}o((a=a.apply(t,r||[])).next())}));var t,r,l,a}},1684:(e,t,r)=>{r.r(t),r.d(t,{PdbMembershipIndividualVerification:()=>U}),r(7255),r(6660);var n,i,s,o=r(5862),l=r(9662),a=r(3283),c=(r(3590),r(789),r(3313),r(6883),r(367),r(1511),r(5866),r(2715),r(7725)),d=(r(8281),r(7052)),u=r(8485),m=r(3600),p=r(4672),f=r(2368),b=(r(3629),r(3683),r(1354)),h=(r(4657),r(1302)),y=r(1026),v=r(7712),_=r(428),g=r(1594),w=r(2892),S=r(9605),j=r(675),$=r(6224),N=r(2813),x=r(4474),A=r(4173),k=r(2831),B=r(1111),M=r(2545),I=r(6846),C=r(1829),E=r(941),P=r(7684),T=r(8881),O=function(e,t,r,n){var i,s=arguments.length,o=s<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(o=(s<3?i(o):s>3?i(t,r,o):i(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},G=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},L=function(e,t,r,n){return new(r||(r=Promise))((function(i,s){function o(e){try{a(n.next(e))}catch(e){s(e)}}function l(e){try{a(n.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,l)}a((n=n.apply(e,t||[])).next())}))};let U=class extends o.LitElement{constructor(){super(),this.memberProfileBaseUrl="/member/member-profile?view=",this._groups=[],this._subgroups=[],this._branches=[],this.startSearchPage=0,this.accountType=0,this.selectedBranch=1,this._activeBranchId=null,this._memberType=1,this._hasSetup=!1,this._selectedMembersCalled=!1,this._selectedMembersNames=null,this._userLoginInfo=null}connectedCallback(){const e=Object.create(null,{connectedCallback:{get:()=>super.connectedCallback}});return L(this,void 0,void 0,(function*(){e.connectedCallback.call(this),(0,v.AppSetup)().then((()=>this._hasSetup=!0));const t=(0,c.getActiveBranchIdCookie)();this._activeBranchId=null===t?null:[t],this._userLoginInfo=[(0,m.getUserLoginInfoCookie)()],null!==this._userLoginInfo&&this._userLoginInfo.length>0&&(this.accountType=1,this.selectedBranch=this._userLoginInfo[0].user.branchId),this.filterBox=new f.FilterFieldBox({selectors:{container:this.filterSectionContextContainer,form:this.filterSectionContextForm,filterSectionContextBtn:this.filterSectionContextBtn}}),yield this.getBranches(),yield this.getGroups(),yield this.getSubGroups()}))}disconnectedCallback(){}render(){var e;if(this._hasSetup){if(null===(e=(0,b.getAppSettingsExtraSettings)())||void 0===e?void 0:e.expiration_date.expired)return o.html`<account-expired-component></account-expired-component>`;if(!(0,h.AppSettingsExtraUserAccess)({pageId:y.PAGE__IDS.access,viewType:"View"},!1))return o.html`<no-page-entry-component></no-page-entry-component>`}return o.html`
      <span class="flex flex-row md:flex-col w-100"></span>
      <div class="block my-1">
        <mwc-button icon="open_with" label="Filters" raised class="primary mt-1" filter-section-context="btn"
          @click="${this.filterBox.toggleFilterFields}">
        </mwc-button>
      </div>
      <div class="block my-1">
        ${this.filterForm}
      </div>
      <div class="block my-1">
        ${this.table}
      </div>
    `}firstUpdated(){this.filterBox=new f.FilterFieldBox({selectors:{container:this.filterSectionContextContainer,form:this.filterSectionContextForm,filterSectionContextBtn:this.filterSectionContextBtn}})}get filterForm(){let e=o.html``;const t=(0,p.urlQueryParams)(),r="filter_branchId",n="filter_search",i="filter_memberCategoryId",s="filter_groupIds",l="filter_subGroupIds",a="filter_memberIds",c="filter_verification";let d=null,u=null,m=null,f=null,b=null,h=null,y=null;for(const e in t){let o=String(t[e]);o=""===o?null:o,e===`${r}[]`&&(d=(0,p.urlQueryParamsGetAll)(`${r}[]`)),e===n&&(u=o),e===`${i}[]`&&(m=(0,p.urlQueryParamsGetAll)(`${i}[]`)),e===`${s}[]`&&(f=(0,p.urlQueryParamsGetAll)(`${s}[]`)),e===`${l}[]`&&(b=(0,p.urlQueryParamsGetAll)(`${l}[]`)),e===`${a}[]`&&(h=(0,p.urlQueryParamsGetAll)(`${a}[]`)),e===c&&(y=o)}const v=o.html`
      <div class="col-xl-6 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Search By Name/ E-mail/ Phone Number</h4>
          <mwc-textfield type="text" name="${n}" id="${n}"
            label="Search By Name/ E-mail/ Phone Number"
            value="${null===u?"":u}" outlined required>
          </mwc-textfield>
        </div>
      </div>`;let _=0;null!==this._userLoginInfo&&this._userLoginInfo.length>0&&this._userLoginInfo[0].user.branchId;const g=Array.isArray(f)?f.map((e=>Number.isNaN(e)?0:Number(e))):[],w=Array.isArray(b)?b.map((e=>Number.isNaN(e)?0:Number(e))):[],S=Array.isArray(d)?d.map((e=>Number.isNaN(e)?0:Number(e))):[],j=this.groupsSubgroupsBranches(g,w,S),$=o.html`
      <div class="col-xl-6 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Select Branches</h4>
          <select-input name="${r}" class="w-full" id="${r}"
            label="Select Branches" .options="${j.branches}" outlined required multiple>
          </select-input>
        </div>
      </div>`,N=o.html`
      <div class="col-xl-6 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Select Verification Status</h4>
          <mwc-select name="${c}" id="${c}"
            label="Select Verification Status" outlined required>
            <mwc-list-item value="">Select Verification Status</mwc-list-item>
            <mwc-list-item value="1"
              ?selected="${!Number.isNaN(y)&&1===Number(y)}">
              Verified</mwc-list-item>
            <mwc-list-item value="2"
              ?selected="${!Number.isNaN(y)&&2===Number(y)}">
              Un-Verified</mwc-list-item>
          </mwc-select>
        </div>
      </div>`,x=Array.isArray(m)?m.map((e=>Number.isNaN(e)?0:Number(e))):[],A=o.html`
      <div class="col-xl-6 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Member Categories</h4>
          <pdb-membership-select-member-type .defaultValues="${x}"
            name="${i}" id="${i}"
            label="Select Member Category" outlined required multiple material="false">
          </pdb-membership-select-member-type>
        </div>
      </div>`,k=o.html`
      <div class="col-xl-6 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Select Groups</h4>
          <select-input name="${s}" class="w-full" id="${s}"
            label="Select Groups" .options="${j.groups}" outlined required multiple>
          </select-input>
        </div>
      </div>`,B=o.html`
      <div class="col-xl-6 col-md-6">
        <div class="form-input-container !block">
          <h4 class="font-semibold my-2">Select Sub-Groups</h4>
          <select-input name="${l}" class="w-full" id="${l}"
            label="Select Sub-Groups" .options="${j.subgroups}" outlined required multiple>
          </select-input>
        </div>
      </div>`,M=o.html`
      <div class="col-xl-12 col-md-12">
        <div class="form-input-container !block">
          ${this.memberListField}
          <div class="flex flex-wrap gap-2 p-1 my-2 shadow">
            ${(0,T.until)(this.getMembersByIds(null==h?void 0:h.map((e=>Number.isNaN(e)?0:Number(e)))),o.html`<span>Loading...</span>`)}
          </div>
        </div>
      </div>`;return e=o.html`<form method="get" class="form" make-general-posts="submit_filter_form" filter-section-context="container" hidden>
  <div class="container">
    <div class="row">
      ${v} ${N} ${A} ${$}
      <div class="col-md-12 my-2">
        <hr />
      </div>
      ${k} ${B} ${M}
      <div class="col-xl-12 col-md-10">
        <div class="form-input-container mt-1">
          <mwc-button label="Clear" @click="${this.filterBox.clear_filter}"></mwc-button>
          <mwc-button label="Filter" raised @click="${this.filterBox.submit}"></mwc-button>
        </div>
      </div>
    </div>
  </div>
  </div>
</form>`,e}getMembersByIds(e){var t;return L(this,void 0,void 0,(function*(){e=null===e?[]:e;let r=[];if(!1===this._selectedMembersCalled){this._selectedMembersCalled=!0;const n=yield(0,E.GET_MembershipUserIds)(e);if(null!==n&&!0===n.response.success){const e=n.response.data;r=null===(t=e.results)||void 0===t?void 0:t.map((e=>P.Convert.toMembershipMixedUserModel(JSON.stringify(e))))}const i=null==r?void 0:r.map((e=>{var t;return o.html`
          <span
            class="flex h-fit items-center gap-1 font-semibold bg-blue-100 text-blue-800 dark:bg-blue-200 dark:text-blue-800 group-hover:bg-blue-200 dark:group-hover:bg-blue-300 rounded-full p-1.5 text-xs">
            <span>${e.firstname} ${null!==(t=e.middlename)&&void 0!==t?t:""} ${e.surname}</span>
          </span>
        `}));this._selectedMembersNames=i}return this._selectedMembersNames}))}branchChange(e){this.accountType,this.accountType=1,this.selectedBranch=Number.isNaN(e.currentTarget.value)?0:Number(e.currentTarget.value)}groupsSubgroupsBranches(e,t,r){let n=[{id:0,name:"Select Groups",isSelected:"false",selected:!1}],i=[{id:0,name:"Select Sub-Groups",isSelected:"false",selected:!1}],s=[{id:0,name:"Select Branches",isSelected:"false",selected:!1}];return this._groups.forEach((t=>{let r=!1;e.forEach((e=>{e===t.id&&(r=!0)}));let i=!1,s="false";r&&(i=!0,s="true");const o={id:t.id,name:t.group,isSelected:s,selected:i};n.includes(o)||n.push(o)})),this._subgroups.forEach((e=>{let r=!1;t.forEach((t=>{t===e.id&&(r=!0)}));let n=!1,s="false";r&&(n=!0,s="true");const o={id:e.id,name:`${e.groupID.group} => ${e.subgroup}`,isSelected:s,selected:n};i.includes(o)||i.push(o)})),this._branches.forEach((e=>{let t=!1;r.forEach((r=>{r===e.id&&(t=!0)}));let n=!1,i="false";t&&(n=!0,i="true");const o={id:e.id,name:`${e.name}`,isSelected:i,selected:n};s.includes(o)||s.push(o)})),{groups:n,subgroups:i,branches:s}}get memberListField(){return Number(this.accountType),this.individualMemberList}get individualMemberList(){this.startSearchPage=0;let e={};const t=(0,m.getUserLoginInfoCookie)();return e.Authorization="Token "+t.token,o.html`
      <h4 class="font-semibold my-2">Select User</h4>
      <select-input class="w-100" id="filter_memberIds" name="filter_memberIds" label="Select User" multiple
        .ajaxFetchProcessResponse="${function(e,t){var r;t.page=t.page||0;const n=e.count,i=e.results,s=document.querySelector('[id="filter_memberIds"]');let o=[];if(n>0){var l=i;for(let e=0;e<l.length;e++){const t=l[e],n=N.Convert.toMembershipUserModel(JSON.stringify(t)),i={id:n.id,text:`${n.firstname} ${null!==(r=n.middlename)&&void 0!==r?r:""} ${n.surname}`};o.includes(i)||o.push(i)}}return{results:o,total:n,totalShowing:s.totalShowing}}}" startSearchPage="${this.startSearchPage}"
        .ajaxHeader="${e}" .ajaxFetchUrlParams="${this.ajaxFetchUrlParams}"
        ajaxFetchUrl="${u.CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search"></select-input>
    `}get table_header(){return o.html`
      <div class="flex-col p-2 mb-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4 pb-5">
        <div
          class="rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2">
          <label class="flex justify-between items-center">
            <b>CHECK ALL: </b>
            <input id="verification_info_all" name="verification_info_all" type="checkbox"
              class="rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
              @change="${this.check_all_verification}" />
          </label>
        </div>
        <div
          class="rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2">
          <mwc-button class="success" raised verification_info_all="activate" @click="${this.activateMultipleMemberAction}">
            Activate All Selected</mwc-button>
        </div>
        <div
          class="rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2">
          <mwc-button class="danger" raised verification_info_all="deactivate"
            @click="${this.deactivateMultipleMemberAction}">Deactivate All Selected</mwc-button>
        </div>
      </div>
    `}get ajaxFetchUrlParams(){return[{param:"branchId",value:String(this.selectedBranch)}]}get __tableHeaders(){return[{title:"Member(s)"},{title:"Action"}]}get __tableBody(){return[]}get __tableFoot(){return[{title:"Member(s)"},{title:"Action"}]}get table(){let e=0;null!==this._activeBranchId&&(e=this._activeBranchId[0].id);let t=u.CONSTANTS.URLS.AKWAABA_API_BASE_URL+"members/member-verification/members?branchId="+e+"&order__by=firstname&datatable_plugin";t+=this.urlQueryString;const r=this.__dataTable(t);let n={};const i=(0,m.getUserLoginInfoCookie)();return n.Authorization="Token "+i.token,o.html`
      ${this.table_header}
      <datatables-new .datatable="${r}" .ajaxHeader="${n}" .dt_body="${this.__tableBody}"
        .dt_foot="${this.__tableFoot}" .dt_head="${this.__tableHeaders}"></datatables-new>
    `}get urlQueryString(){const e=(0,p.urlQueryParams)(),t="filter_branchId",r="filter_memberCategoryId",n="filter_groupIds",i="filter_subGroupIds",s="filter_memberIds",o="filter_verification";let l={},a=[],c=[],d=[],u=[],m=[];for(const f in e){let b=String(e[f]),h=`${t}[]`,y=`${r}[]`,v=`${n}[]`,_=`${i}[]`,g=`${s}[]`;f!==h&&"filter_search"!==f&&f!==y&&f!==v&&f!==_&&f!==g&&f!==o||(l[f]=b,f!==h&&f!==y&&f!==v&&f!==_&&f!==g||(a=(0,p.urlQueryParamsGetAll)(h),c=(0,p.urlQueryParamsGetAll)(y),d=(0,p.urlQueryParamsGetAll)(v),u=(0,p.urlQueryParamsGetAll)(_),m=(0,p.urlQueryParamsGetAll)(g)),f===o&&"1"!==b&&"2"!==b&&"true"!==b&&"false"!==b&&delete l[f])}l.filter_accountType=1;let f="";a.forEach((e=>f+=`&${t}=${e}`)),c.forEach((e=>f+=`&${r}=${e}`)),d.forEach((e=>f+=`&${n}=${e}`)),u.forEach((e=>f+=`&${i}=${e}`)),m.forEach((e=>f+=`&${s}=${e}`));let b=(0,p.urlQueryParamsJoin)(l);return 0===b.length?b:"&"+b+f}rowOneRender(e){var t;const r=(e=x.Convert.toMembershipVerificationModel(JSON.stringify(e))).member,n=e.verificationInfo;let i="-",s="-",o="-";r.countryInfo.forEach((e=>{i=e.name,76===e.id?(s="Region",o=r.regionInfo.location):(s="State/ Province",o=r.stateProvince)}));const l=e.verification?n.memberId:r.id,a=(0,d.base64Encode)(String(r.id),!0);return`<div class="flex items-center whitespace-normal mb-0">\n      <input id="verification_info" name="verification_info" type="checkbox" value="${l}"\n        class="rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" />\n      <div>\n        <user-profile-photo class="w-16 h-16 mr-1" rounded 'click-to-open'="" click-to-open="${this.memberProfileBaseUrl}${a}" type="member"\n          url="${r.profilePicture}" size="16"></user-profile-photo>\n        <p class="ml-1 mb-2">\n          <b>${r.firstname} ${null!==(t=r.middlename)&&void 0!==t?t:""} ${r.surname}</b>\n        </p>\n        <p class="ml-1 mb-2">\n          Country: ${i}\n        </p>\n        <p class="ml-1 mb-2">\n          ${s}: ${o}\n        </p>\n        <p class="ml-1 mb-2">\n          Branch: ${r.branchInfo.name}\n        </p>\n        <p class="ml-1 mb-2">\n          Contact: <a href="tel:${r.phone}" type="tel">${r.phone}</a>\n        </p>\n        <p class="ml-1 mt-3 mb-0">\n          <link-button isblockcontent="false" aClass="" raised bClass="button success mr-2"\n            href="${this.memberProfileBaseUrl}${a}" label="View Profile"></link-button>\n        </p>\n      </div>\n    </div>`}rowTwoRender(e){var t,r,n,i;const s=(e=x.Convert.toMembershipVerificationModel(JSON.stringify(e))).member,o=e.verificationInfo;return`<div class="flex flex-col md:flex-row whitespace-normal">\n      <p class="ml-1 mb-2">\n        <b>Verified By: ${null===o?"-":`${null===(t=o.verifiedBy)||void 0===t?void 0:t.firstname} ${null===(r=o.verifiedBy)||void 0===r?void 0:r.surname}`}</b>\n      </p>\n    </div>\n    <div class="flex flex-col md:flex-row whitespace-normal">\n      <p class="ml-1 mb-2">\n        On: ${null===o?"-":(0,A.getDate)(null===(n=o.verifiedBy)||void 0===n?void 0:n.date,{dateStyle:"medium"})}/ \n      </p>\n      <p class="ml-1 mb-2">\n        At: ${null===o?"-":(0,k.getLocalTime)(null===(i=o.verifiedBy)||void 0===i?void 0:i.date,{timeStyle:"short"})}\n      </p>\n    </div>\n    <div class="flex flex-col md:flex-row whitespace-normal">\n      ${e.verification?`<p class="ml-1 mb-2">\n        <mwc-button class="danger" raised unverify-member="${o.id}">Deactivate</mwc-button>\n      </p>`:`<p class="ml-1 mb-2">\n        <mwc-button class="success" raised verify-member="${s.id}">Activate</mwc-button>\n      </p>`}\n    </div>`}__dataTable(e){const t=this;return{order:[[0,"desc"]],processing:!0,serverSide:!0,ajax:{url:e,dataSrc:"data",apiType:"akwaabaApp"},columns:[{data:"member",render:(e,r,n)=>t.rowOneRender(n),orderable:!0},{data:"verification",render:(e,r,n)=>t.rowTwoRender(n),orderable:!0}],columnDefs:[{targets:["_all"],className:"mdc-data-table__cell",checkboxes:{selectRow:!0}}],lengthMenu:[10,25,50,100,500,1e3],drawCallback:function(e){return L(this,void 0,void 0,(function*(){e.aoData,t.verifyMemberBtns(),t.unVerifyMemberBtns()}))},responsive:!0,dom:"Blfrtip",buttons:["selected","selectedSingle","selectAll","selectNone","selectRows","selectColumns","selectCells","pdf","excel","copy","csv"],select:!0}}getBranches(){return L(this,void 0,void 0,(function*(){const e=yield(0,$.GET_ClientBranches)();let t=[];null===e?t.push({id:0,name:"**NOT FOUND**"}):!0===e.response.success&&"length"in e.response.data&&(t=e.response.data.map((e=>j.Convert.toClientBranchModel(JSON.stringify(e)))));const r=[];r.push(...this._branches,...t),this._branches=r}))}getGroups(){return L(this,void 0,void 0,(function*(){const e=yield(0,w.GET_MemberGroupingsGroups)();let t=[];null===e?t.push({id:0,group:"**NOT FOUND**",date:new Date}):!0===e.response.success&&"length"in e.response.data&&(t=e.response.data.map((e=>_.Convert.toGroupModel(JSON.stringify(e)))));const r=[];r.push(...this._groups,...t),this._groups=r}))}getSubGroups(){return L(this,void 0,void 0,(function*(){const e=yield(0,S.GET_MemberGroupingsSubGroups)();let t=[];null===e?t.push({id:0,subgroup:"**NOT FOUND**",date:new Date}):!0===e.response.success&&"length"in e.response.data&&(t=e.response.data.map((e=>g.Convert.toSubGroupModel(JSON.stringify(e)))));const r=[];r.push(...this._subgroups,...t),this._subgroups=r}))}verifyMemberBtns(){const e="verify-member";document.querySelectorAll("["+e+"]").forEach((t=>{t.addEventListener("click",(r=>{r.preventDefault(),this.verifyMemberAction(t,e,r)}))}))}verifyMemberAction(e,t,r){return L(this,void 0,void 0,(function*(){r.preventDefault();const n=e.getAttribute(t);Number.isNaN(n)||0===Number(n)||(yield(0,B.POST_MemberVerification)(Number(n)))}))}check_all_verification(e){return L(this,void 0,void 0,(function*(){e.preventDefault(),document.querySelectorAll('[id="verification_info_all"][name="verification_info_all"]').forEach((e=>{e.checked?document.querySelectorAll('[id="verification_info"][name="verification_info"]').forEach((e=>{e.checked=!0})):document.querySelectorAll('[id="verification_info"][name="verification_info"]').forEach((e=>{e.checked=!1}))}))}))}activateMultipleMemberAction(e){return L(this,void 0,void 0,(function*(){e.preventDefault();let t=[];document.querySelectorAll('[id="verification_info"][name="verification_info"]').forEach((e=>{if(e.checked&&!Number.isNaN(e.value)){const r=Number(e.value);t.includes(r)||t.push(r)}})),yield(0,M.POST_MemberVerificationBulk)(t)}))}unVerifyMemberBtns(){const e="unverify-member";document.querySelectorAll("["+e+"]").forEach((t=>{t.addEventListener("click",(r=>{r.preventDefault(),this.unVerifyMemberAction(t,e,r)}))}))}unVerifyMemberAction(e,t,r){return L(this,void 0,void 0,(function*(){r.preventDefault();const n=e.getAttribute(t);Number.isNaN(n)||0===Number(n)||(yield(0,I.DELETE_MemberVerification)(Number(n)))}))}deactivateMultipleMemberAction(e){return L(this,void 0,void 0,(function*(){e.preventDefault();let t=[];document.querySelectorAll('[id="verification_info"][name="verification_info"]').forEach((e=>{if(e.checked&&!Number.isNaN(e.value)){const r=Number(e.value);t.includes(r)||t.push(r)}})),yield(0,C.DELETE_MemberVerificationBulk)(t)}))}createRenderRoot(){return this}};U.styles=[o.css`
   :host { display: block; }
  `],O([(0,l.query)('[filter-section-context="btn"]'),G("design:type","function"==typeof(n=void 0!==a.Button&&a.Button)?n:Object)],U.prototype,"filterSectionContextBtn",void 0),O([(0,l.query)('[filter-section-context="container"]'),G("design:type","function"==typeof(i="undefined"!=typeof Element&&Element)?i:Object)],U.prototype,"filterSectionContextContainer",void 0),O([(0,l.query)('[make-general-posts="submit_filter_form"]'),G("design:type","function"==typeof(s="undefined"!=typeof HTMLFormElement&&HTMLFormElement)?s:Object)],U.prototype,"filterSectionContextForm",void 0),O([(0,l.property)({type:String}),G("design:type",String)],U.prototype,"memberProfileBaseUrl",void 0),O([(0,l.property)({type:Array}),G("design:type",Array)],U.prototype,"_groups",void 0),O([(0,l.property)({type:Array}),G("design:type",Array)],U.prototype,"_subgroups",void 0),O([(0,l.property)({type:Array}),G("design:type",Array)],U.prototype,"_branches",void 0),O([(0,l.property)({type:Number}),G("design:type",Number)],U.prototype,"startSearchPage",void 0),O([(0,l.property)({type:Number}),G("design:type",Number)],U.prototype,"accountType",void 0),O([(0,l.property)({type:Number}),G("design:type",Number)],U.prototype,"selectedBranch",void 0),O([(0,l.property)({type:Array}),G("design:type",Array)],U.prototype,"_activeBranchId",void 0),O([(0,l.property)({type:Number}),G("design:type",Number)],U.prototype,"_memberType",void 0),O([(0,l.property)({type:Boolean}),G("design:type",Boolean)],U.prototype,"_hasSetup",void 0),O([(0,l.property)({type:Boolean}),G("design:type",Boolean)],U.prototype,"_selectedMembersCalled",void 0),O([(0,l.property)({type:Array}),G("design:type",Array)],U.prototype,"_selectedMembersNames",void 0),O([(0,l.property)({type:Array}),G("design:type",Array)],U.prototype,"_userLoginInfo",void 0),U=O([(0,l.customElement)("pdb-membership-individual-verification"),G("design:paramtypes",[])],U)}},e=>(e.O(0,["vendors.lit-html","vendors.lit","vendors.buffer","vendors.material","vendors.tslib","vendors.sweetalert2","vendors.jquery","vendors.select2","vendors-node_modules_base64-js_index_js-node_modules_ieee754_index_js-node_modules_lit-elemen-70ae82","src_addons_constants_index_ts-src_addons_functions_https_http_ts-src_addons_functions_login_i-9b586a","src_addons_classes_network_calls_response_ts","src_view_home_branch_button_ts","src_addons_functions_app_settings_extra_settings_user_access_ts-src_addons_functions_app_sett-730152","src_addons_widgets_form_new_select_ts","src_assets_styles_views_home_dashboard_scss","src_view_membership_members_select-member-type_index_ts","src_addons_classes_filter_field_box_index_ts-src_addons_widgets_datatables_index_ts","src_addons_interfaces_members_user_mixed_index_ts","src_addons_interfaces_members_groupings_subgroup_models_index_ts","src_addons_functions_date_time_date_ts-src_addons_functions_date_time_time_ts-src_addons_inte-6f8ed1","shared"],(()=>(1684,e(e.s=1684)))),e.O())])));
//# sourceMappingURL=individuals.js.map