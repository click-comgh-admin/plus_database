{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_widgets_form_new_select_ts-src_view_attendance_page__id_ts-src_assets_styles_views-9189ea.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/widgets/form/new/select.ts","webpack://webpackNumbers/./src/view/attendance/page__id.ts"],"sourcesContent":["import { SelectInputOptions_I, SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport * as $ from 'jquery'\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport 'select2';\r\nimport { ProcessedResult, QueryOptions, DataParams, Event } from 'select2';\r\nimport '../../../../assets/styles/views/widget/select_input/select_input.scss';\r\n\r\n\r\n@customElement('select-input')\r\nexport class SelectInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  public value: SelectInputOptions_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private randomID: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: String })\r\n  public input_id?: string = this.id + \"_\" + this.randomID;\r\n\r\n  @property({ type: Array })\r\n  public options?: { id: number, name: string, isSelected?: \"true\" | \"false\", selected: boolean }[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public required?: boolean;\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchToken?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchUrl?: string = null;\r\n\r\n  @property({attribute: false})\r\n  public currentValue: any | any[];\r\n\r\n  // @property({ type: Object })\r\n  // public ajaxHeader: object = {};\r\n\r\n  private _ajaxHeader: any = null;\r\n\r\n  public set ajaxHeader(value: any) {\r\n    this._ajaxHeader = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get ajaxHeader(): any {\r\n    return this._ajaxHeader;\r\n  }\r\n\r\n  @property({ type: Object })\r\n  public ajaxFetchProcessResponse?: (data: any, params: QueryOptions) => SelectInputProcessedAjaxResponse_I = null;\r\n\r\n  @property({ type: Array })\r\n  public ajaxFetchUrlParams?: SelectInputProcessedAjaxUrlParam_I[] = [];\r\n  \r\n  @property({ type: Number })\r\n  public startSearchPage?: number = 0\r\n\r\n  @property({ type: Boolean })\r\n  /** For multiple image selection */\r\n  public multiple?: boolean;\r\n\r\n  private selectSelector: NodeListOf<HTMLSelectElement>;\r\n  private $selectSelector: JQuery<HTMLSelectElement>;\r\n\r\n  @property({ type: Number })\r\n  public startNumber: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public rowsPerPage: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public totalShowing: number = 10;\r\n\r\n  @property({ type: Boolean })\r\n  private showSelectorLoaded?: boolean = false;\r\n\r\n  static styles = [\r\n    css`\r\n      .select2-container {\r\n        pointer-events: auto !important;\r\n      }\r\n    `\r\n  ];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();  \r\n    this.value = Array.isArray(this.value) ? this.value : [];\r\n\r\n    setInterval(() => {\r\n      if (this.selectSelector === undefined) {\r\n        // console.log({ \"this.selectSelector\": this.selectSelector });\r\n        // console.log({ \"this.input_id\": this.input_id, \"'select-input>select[input_id='+ this.input_id +']\": 'select-input>select[input_id='+ this.input_id +']' });\r\n        this.selectSelector = document.querySelectorAll('select-input>select[input_id='+ this.input_id +']');\r\n        // console.log({\"this.selectSelector\": this.selectSelector});\r\n        \r\n        this.$selectSelector = $(this.selectSelector)\r\n        // console.log({\"this.$selectSelector\": this.$selectSelector});\r\n      } else {\r\n        this.showDropdownAlt();\r\n      }\r\n    });\r\n\r\n    this.options = this.options.map((option) => {\r\n      const optionId = option.id;\r\n      let isSelected = false;\r\n\r\n      // console.log({\"this.value\": this.value});\r\n\r\n      this.value.forEach((val) => {\r\n        const valId = val.id;\r\n\r\n        isSelected = optionId === valId;\r\n      });\r\n      option.selected = isSelected;\r\n      return option;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log({\"this.options\": this.options});\r\n    \r\n    if (this.multiple) {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple required>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    } else {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\" required>\r\n            ${this.options.map(option => {\r\n              \r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                // console.log(\"option_option-option_option - \" + this.label + \" :\", {option});\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\">\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    // this.showDropdown();\r\n  }\r\n\r\n  formatRepo(repo: { loading: boolean; text: string; id: string; }) {\r\n    // console.log({ \"smbfl-repo\": repo });\r\n    if (repo.loading) {\r\n      return repo.text;\r\n    }\r\n\r\n    // console.log({ \"this.value\": this.value });\r\n    var $container = $(\r\n      this.value.map((val) => {\r\n        const _selected = Number(repo.id) === val.id,\r\n          selected = _selected ? \"selected='true'\" : \"\";\r\n        // console.log({ _selected, selected });\r\n\r\n        return '<option value=\"' + repo.id + '\" ' + selected + '>' + repo.text + '</option>'\r\n      })\r\n    );\r\n    return $container;\r\n  }\r\n\r\n  formatRepoSelection(repo: { full_name: string; text: string; }) {\r\n    return repo.full_name || repo.text;\r\n  }\r\n\r\n  _start(params: any, totalShowing: number) {\r\n    const _this = this;\r\n    // console.log({ _this });\r\n\r\n    // _this.totalShowing = 10;\r\n\r\n    this.startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n    this.startSearchPage = this.startSearchPage === 0 ? this.startSearchPage : this.startSearchPage * totalShowing;\r\n    $('.select2-search__field').on('keyup', function ($this) {\r\n      $(_this.selectSelector).empty();\r\n      _this.startSearchPage = 0\r\n      // _this.totalShowing = 10;\r\n      // console.log({ _this });\r\n    });\r\n\r\n    return _this.startSearchPage;\r\n  }\r\n\r\n  private showDropdownAlt() {\r\n    const _this = this;\r\n    let totalShowing = this.totalShowing,\r\n      startSearchPage = this.startSearchPage;\r\n\r\n      function _start(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n        startSearchPage = startSearchPage === 0 ? startSearchPage : startSearchPage * totalShowing;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n      function _page(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        let startSearchPage = isNaN(params.page) ? 1 : params.page + 1;\r\n        startSearchPage = startSearchPage === 0? 1 : startSearchPage;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n    if (this.showSelectorLoaded === false) {\r\n      this.showSelectorLoaded = true;\r\n      if (this.ajaxFetchUrl === null) {\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-1\": selectSelector})\r\n          $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            // @ts-ignore\r\n            placeholder: this.label,\r\n          });\r\n          $(selectSelector).on('select2:select', (e) => {\r\n            this.changeAction(e)\r\n          })\r\n        });\r\n      } else {\r\n        let _headers = {\r\n          \"Access-Control-Allow-Origin\": \"*/*\",\r\n          \"Accept\": \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        };\r\n        // console.log({\"this.ajaxHeader\": this.ajaxHeader})\r\n        \r\n        for (const header in this.ajaxHeader) {\r\n          // console.log({header})\r\n          // @ts-ignore\r\n          _headers[header] = this.ajaxHeader[header];\r\n        }\r\n\r\n        // console.log({ _headers });\r\n        // console.log({\"this.selectSelector\": this.selectSelector})\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-2\": selectSelector})\r\n          const S2: JQuery<HTMLSelectElement> = $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            ajax: {\r\n              url: _this.ajaxFetchUrl,\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params: { term: any; }) {\r\n                const start = _start(params, S2);\r\n                const page = _page(params, S2);\r\n                // let page = start / 10;\r\n                // page = page === 0 ? 1 : page;\r\n                let finalParams: any = {\r\n                  \"search\": params.term, // search term\r\n                  \"start\": start,\r\n                  \"page\": page,\r\n                };\r\n\r\n                _this.ajaxFetchUrlParams.forEach((param) => {\r\n                  finalParams[param.param] = param.value;\r\n                });\r\n                // console.log({finalParams});\r\n                return finalParams;\r\n              },\r\n              headers: _headers,\r\n              processResults: (data: any, params: any) => {\r\n                // return _this.ajaxFetchProcessResponse(data, params);\r\n                const processedResponse = this.ajaxFetchProcessResponse === null\r\n                  ? this._processResults(data, params)\r\n                  : this.ajaxFetchProcessResponse(data, params);\r\n\r\n                // console.log({ \"totalShowing-1\": totalShowing });\r\n                totalShowing += processedResponse.results.length;\r\n                // console.log({ \"totalShowing-2\": totalShowing });\r\n\r\n                return {\r\n                  results: processedResponse.results,\r\n                  pagination: {\r\n                    // @ts-ignore\r\n                    more: totalShowing < processedResponse.total\r\n                  }\r\n                };\r\n              },\r\n              cache: true\r\n            },\r\n            placeholder: this.label,\r\n          });\r\n          S2.on('select2:opening', (e) => {\r\n            // console.log({ e });\r\n            startSearchPage = 0\r\n            totalShowing = 0;\r\n          });\r\n        });\r\n      }\r\n\r\n      const SELECT2s = this.querySelectorAll('.select2-container');\r\n      // console.log({SELECT2s})\r\n      SELECT2s.forEach(SELECT2 => {\r\n        SELECT2.setAttribute('style', 'width: 100% !important; pointer-events: auto !important;');\r\n      });\r\n    }\r\n  }\r\n\r\n  private _processResults(data: any, params: any): SelectInputProcessedAjaxResponse_I {\r\n    const response = data;\r\n    params.page = params.page || 0;\r\n    // console.log({ \"smbfl-response\": response, \"check\": response.error === false });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (response.error === false) {\r\n      var _data = response['data'];\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['fullName'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n          // $($select).append($('<option>', { fullName: id }).text(fullName));\r\n        }\r\n      }\r\n    }\r\n    this.totalShowing += processedData.length;\r\n    return {\r\n      results: processedData,\r\n      total: response.total,\r\n      totalShowing: this.totalShowing\r\n    };\r\n  }\r\n\r\n  // @ts-ignore\r\n  private changeAction(changeActionEvent: Event<HTMLSelectElement, DataParams>) {\r\n    // // console.log({ changeActionEvent });\r\n    // // @ts-ignore\r\n    // const selectedOptions = changeActionEvent.target.selectedOptions;\r\n    // let currentValue: number[] = [];\r\n    // for (const iterator of selectedOptions) {\r\n    //   let selectedOption: HTMLOptionElement = iterator;\r\n    //   // console.log({ iterator, selectedOption });\r\n    //   const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n    //   if (!currentValue.includes(value)) {\r\n    //     currentValue.push(value);\r\n    //   }\r\n    // }\r\n    // this.currentValue = currentValue;\r\n    // // console.log({'this.querySelector(`[input_id=\"${this.input_id}\"]`)': this.querySelector(`[input_id=\"${this.input_id}\"]`)})\r\n    // @ts-ignore\r\n    const selectedOptions2 = this.querySelector(`[input_id=\"${this.input_id}\"]`).selectedOptions;\r\n    let currentValue2: number[] = [];\r\n    for (const iterator of selectedOptions2) {\r\n      let selectedOption: HTMLOptionElement = iterator;\r\n      // console.log({ iterator, selectedOption });\r\n      const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n      if (!currentValue2.includes(value)) {\r\n        currentValue2.push(value);\r\n      }\r\n    }\r\n    // console.log({ currentValue, currentValue2 });\r\n    this.currentValue = currentValue2;\r\n    // @ts-ignore\r\n    this.querySelector(`[input_id=\"${this.input_id}\"]`).setAttribute(\"currentValue\", currentValue2)\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"schedule_meeting_event\": 40,\r\n  \"clocking\": 41,\r\n  \"attendance_history\": 42,\r\n  \"attendees\": 43,\r\n  \"absentees\": 44,\r\n  \"device_request_approval\": 45,\r\n  \"absent_leave_status\": 58,\r\n  \"absent_leave_assignment\": 59,\r\n};\r\n"],"names":["SelectInput","LitElement","name","label","value","randomID","Math","floor","random","input_id","this","id","options","ajaxFetchToken","ajaxFetchUrl","_ajaxHeader","ajaxFetchProcessResponse","ajaxFetchUrlParams","startSearchPage","startNumber","rowsPerPage","totalShowing","showSelectorLoaded","ajaxHeader","requestUpdate","connectedCallback","super","Array","isArray","setInterval","undefined","selectSelector","document","querySelectorAll","$selectSelector","showDropdownAlt","map","option","optionId","isSelected","forEach","val","valId","selected","render","multiple","required","html","firstUpdated","formatRepo","repo","loading","text","Number","formatRepoSelection","full_name","_start","params","_this","isNaN","page","on","$this","empty","select2","closeOnSelect","placeholder","e","changeAction","_headers","header","ajax","url","dataType","delay","data","start","S2","_page","finalParams","term","param","headers","processResults","processedResponse","_processResults","results","length","pagination","more","total","cache","SELECT2","setAttribute","response","processedData","error","_data","i","item","_new","includes","push","changeActionEvent","selectedOptions2","querySelector","selectedOptions","currentValue2","iterator","selectedOption","currentValue","createRenderRoot","styles","css","property","type","String","Boolean","attribute","Object","customElement","PAGE__IDS"],"sourceRoot":""}