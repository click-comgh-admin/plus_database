{"version":3,"file":"../../production_public/assets/v2/dev-files/js/client/register.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/network_status.ts","webpack://webpackNumbers/./src/addons/functions/toggle_pswd_visibility/index.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/account_category/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/clients/account_category/index.ts","webpack://webpackNumbers/./src/addons/network/clients/register/index.ts","webpack://webpackNumbers/./src/addons/network/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/view/admin/client/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const GetNetworkStatus = (\r\n  online: (status: string) => void,\r\n  offline: (status: string) => void) => {\r\n  if (navigator.onLine === true) {\r\n    return online(\"online\");\r\n  } else {\r\n    return offline(\"offline\");\r\n  }\r\n}\r\n\r\nexport const GetNetworkStatusEvent = (self: { dispatchEvent: (arg0: CustomEvent<{ onlineStatus: boolean; }>) => void; }) => {\r\n  let newMessage = new CustomEvent('get-online-status', {\r\n    cancelable: true,\r\n    detail: { onlineStatus: navigator.onLine }\r\n  });\r\n\r\n  // dispatchEvent(newMessage);\r\n  self.dispatchEvent(newMessage);\r\n}","import '@material/mwc-icon-button';\r\nimport { TextField } from '@material/mwc-textfield';\r\n\r\nlet showingCheckBoxes: { id: string, showing: boolean, elem: HTMLInputElement | TextField, span: HTMLSpanElement }[] = [];\r\nconst labelTextShow = \"Show Password\", labelTextHide = \"Hide Password\";\r\n\r\nexport const togglePswdVisibility = (type: \"mwc-textfield\" | \"input\" = \"input\") => {\r\n  const PSWDs = document.querySelectorAll(type + '[type=\"password\"]');\r\n  // console.log({ PSWDs });\r\n\r\n  PSWDs.forEach((PSWD: HTMLInputElement | TextField, i) => {\r\n    // console.log({ PSWD });\r\n    const parentElement = PSWD.parentElement;\r\n    parentElement.setAttribute('style', parentElement.getAttribute('style') + \"; flex-direction: column !important;\")\r\n    const label = document.createElement('label');\r\n    label.setAttribute('style', label.getAttribute('style') + \"; display: inline-flex;\" +\r\n      \"width: 100%; cursor: pointer; align-items: center; margin-top: 10px; margin-bottom: 0;\"\r\n    );\r\n\r\n    const span = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n    span.innerText = labelTextShow;\r\n\r\n    const spanDummy = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.id = \"pswd-visibility-btn--\" + i;\r\n    checkbox.setAttribute('style', checkbox.getAttribute('style') + \"; -moz-appearance: auto !important;\" +\r\n      \"-webkit-appearance: auto !important; -ms-appearance: auto !important; appearance: auto !important;\" +\r\n      \"opacity: 1; margin-right: 0; z-index: 10;\"\r\n    );\r\n\r\n    label.appendChild(spanDummy);\r\n    label.appendChild(checkbox);\r\n    label.appendChild(span);\r\n\r\n    PSWD.after(label);\r\n\r\n    const showingCheckBox = { id: checkbox.id, showing: false, elem: PSWD, span: span };\r\n    if (!showingCheckBoxes.includes(showingCheckBox)) {\r\n      showingCheckBoxes.push(showingCheckBox);\r\n    }\r\n    checkbox.addEventListener('change', __toggleVisibility)\r\n  });\r\n}\r\n\r\nconst __toggleVisibility = (e: { preventDefault: () => void; currentTarget: any; }) => {\r\n  e.preventDefault();\r\n  const checkbox: HTMLInputElement = e.currentTarget;\r\n  // console.log({ checkbox, e })\r\n  checkbox.checked\r\n  showingCheckBoxes.forEach(showingCheckBox => {\r\n    if (checkbox.id === showingCheckBox.id) {\r\n      if (showingCheckBox.showing === false) {\r\n        showingCheckBox.elem.type = \"text\";\r\n        showingCheckBox.span.innerText = labelTextHide;\r\n        showingCheckBox.showing = true;\r\n      } else {\r\n        showingCheckBox.elem.type = \"password\";\r\n        showingCheckBox.span.innerText = labelTextShow;\r\n        showingCheckBox.showing = false;\r\n      }\r\n      // console.log({ showingCheckBox, button });\r\n    }\r\n  });\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","// To parse this data:\n//\n//   import { Convert, ClientAccountCategoryModel } from \"./file\";\n//\n//   const clientAccountCategoryModel = Convert.toClientAccountCategoryModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientAccountCategoryModel {\n  id?: number;\n  clientID?: number;\n  category?: string;\n  createdBy?: number;\n  updatedBy?: number;\n  updateDate?: Date;\n  date?: Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  public static toClientAccountCategoryModel(json: string): ClientAccountCategoryModel {\n    return cast(JSON.parse(json), r(\"ClientAccountCategoryModel\"));\n  }\n\n  public static clientAccountCategoryModelToJson(value: ClientAccountCategoryModel): string {\n    return JSON.stringify(uncast(value, r(\"ClientAccountCategoryModel\")), null, 2);\n  }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n  if (key) {\n    // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n  }\n  // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`,);\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val, key);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) { }\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map(el => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n    return d;\n  }\n\n  function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach(key => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n    });\n    Object.getOwnPropertyNames(val).forEach(key => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps, key);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n  }\n  if (typ === false) return;\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\") ? transformArray(typ.arrayItems, val)\n        : typ.hasOwnProperty(\"props\") ? transformObject(getProps(typ), typ.additional, val)\n          : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\nfunction m(additional: any) {\n  // @ts-ignore\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nexport const typeMap: any = {\n  \"ClientAccountCategoryModel\": o([\n    { json: \"id\", js: \"id\", typ: u(null, 0) },\n    { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n    { json: \"category\", js: \"category\", typ: u(null, \"\") },\n    { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n    { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n    { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n    { json: \"date\", js: \"date\", typ: u(null, Date) },\n  ], false),\n};\n","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","// To parse this data:\n//\n//   import { Convert, ClientSubscriptionMembershipSizeModel } from \"./file\";\n//\n//   const clientSubscriptionMembershipSizeModel = Convert.toClientSubscriptionMembershipSizeModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientSubscriptionMembershipSizeModel {\n    id?:          number;\n    info?:        string;\n    cost?:        string;\n    type?:        number;\n    client?:      number;\n    accountType?: number;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toClientSubscriptionMembershipSizeModel(json: string): ClientSubscriptionMembershipSizeModel {\n        return cast(JSON.parse(json), r(\"ClientSubscriptionMembershipSizeModel\"));\n    }\n\n    public static clientSubscriptionMembershipSizeModelToJson(value: ClientSubscriptionMembershipSizeModel): string {\n        return JSON.stringify(uncast(value, r(\"ClientSubscriptionMembershipSizeModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"ClientSubscriptionMembershipSizeModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"info\", js: \"info\", typ: u(null, \"\") },\n        { json: \"cost\", js: \"cost\", typ: u(null, \"\") },\n        { json: \"type\", js: \"type\", typ: u(null, 0) },\n        { json: \"client\", js: \"client\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n    ], false),\n};\n","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientAccountCategory<Type>(ID: Number = null,\r\n  url_params: string = \"\", anonymousAuth: boolean = false,) {\r\n  // anonymousAuth is for when user isn't logged in\r\n  const _get_cookie = anonymousAuth ? null : getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/account-category'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: anonymousAuth ? {} : {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { GetNetworkStatus } from \"@@addons/functions/https/network_status\";\r\nimport { setUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { userLoginInfo_S } from \"@@addons/interfaces/network_calls/login\";\r\nimport { removeActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport async function POST_ClientRegister(): Promise<any> {\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/register',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-register\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  GetNetworkStatus(online => {\r\n    // console.log({ \"networkStatus\": online });\r\n    // console.log({ \"networkStatus\": \"we are online\" });\r\n    return Swal.fire({\r\n      title: 'Create Client Account?',\r\n      // text: \"You won't be able to revert this!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      confirmButtonColor: '#f97817',\r\n      cancelButtonColor: '#ddd',\r\n      reverseButtons: true,\r\n      showLoaderOnConfirm: true,\r\n      backdrop: true,\r\n      preConfirm: async (register) => {\r\n        return await http(url, {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }, false).then((HTTP) => {\r\n\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n          const _RESPONSE = networkCallRes.response;\r\n          // console.log({\"_RESPONSE\": _RESPONSE});\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n\r\n                  errors.push(errormsg);\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        }).catch(error => {\r\n          Swal.showValidationMessage(\r\n            `${String(error)}`\r\n          );\r\n        });\r\n      },\r\n      allowOutsideClick: () => !Swal.isLoading()\r\n    }).then((result) => {\r\n      // console.log({result})\r\n      if (result.isConfirmed) {\r\n        let successMsg = \"Success\",\r\n          isSuccess = false,\r\n          data: any;\r\n        const _VALUE = result.value;\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          successMsg = \"Registration Successful\";\r\n\r\n          data = VALUE.data;\r\n          isSuccess = _VALUE.response.success;\r\n        }\r\n        isSuccess ? Swal.fire({\r\n          title: successMsg,\r\n          icon: isSuccess ? 'success' : 'error',\r\n          iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n          confirmButtonColor: '#f97817',\r\n        }) : null;\r\n        isSuccess ? setTimeout(() => {\r\n          const userLoginInfo = userLoginInfo_S(data);\r\n          setUserLoginInfoCookie(userLoginInfo);\r\n          removeActiveBranchIdCookie();\r\n          window.location.href = CONSTANTS.URLS.LOGIN_PAGE_BASE_URL;\r\n        }, 500) : null;\r\n      }\r\n    });\r\n  }, offline => {\r\n    // console.log({ \"networkStatus\": \"we are offline\" });\r\n    Swal.fire({\r\n      title: \"Looks like you're offline\",\r\n      text: \"Try again later!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      confirmButtonColor: '#f97817',\r\n    });\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_ClientSubsciptionMembershipSize<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/subscription/membership-size'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { togglePswdVisibility } from '@@addons/functions/toggle_pswd_visibility';\r\nimport { POST_ClientRegister } from '@@addons/network/clients/register';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from \"@@addons/interfaces/generic/gender\";\r\nimport { GET_GenericGender } from \"@@addons/network/generic/gender\";\r\nimport { GET_ClientSubsciptionMembershipSize } from \"@@addons/network/clients/subscription/membership_size\";\r\nimport { ClientSubscriptionMembershipSizeModel, Convert as csmsmConvert } from \"@@addons/interfaces/clients/subscription/membership_size\";\r\nimport { LocationCountryModel, Convert as lcmConvert } from \"@@addons/interfaces/location/country_model\";\r\nimport { LocationRegionModel, Convert as lrmConvert } from \"@@addons/interfaces/location/region_model\";\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from \"@@addons/interfaces/location/constituency_model\";\r\nimport { LocationDistrictModel, Convert as ldmConvert } from \"@@addons/interfaces/location/district_model\";\r\nimport { GET_LocationCountry } from \"@@addons/network/location/country\";\r\nimport { GET_LocationRegion } from \"@@addons/network/location/region\";\r\nimport { GET_LocationDistrictFilter } from \"@@addons/network/location/district/filter\";\r\nimport { GET_LocationConstituencyFilter } from \"@@addons/network/location/constituency/filter\";\r\nimport { ClientAccountCategoryModel, Convert as cacmConvert } from \"@@addons/interfaces/clients/account_category\";\r\nimport { GET_ClientAccountCategory } from \"@@addons/network/clients/account_category\";\r\n\r\n@customElement('pdb-register-form')\r\nexport class PdbRegisterForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private showLeadersForm: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _accountCategories: ClientAccountCategoryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private _constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private _districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n\r\n  @property({ type: Array })\r\n  private _membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await this.getGenders();\r\n    await this.getLocationCountry();\r\n    await this.getClientAccountCategory();\r\n    await this.getClientSubscriptionMembershipSize();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n    :host { display: block; }\r\n    input[type=\"text\"], input[type=\"password\"], \r\n    input[type=\"email\"], input[type=\"phone\"], \r\n    select, span.select2.select2-container, \r\n    span.select2-selection.select2-selection--single.form-control.p-0, \r\n    textarea {\r\n      background: none!important;\r\n      padding: unset!important;\r\n    }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const countries: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._countries.map((country) => {\r\n      return {\r\n        id: country.id, name: country.name,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const regions: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._regions.map((region) => {\r\n      return {\r\n        id: region.id, name: region.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const districts: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._districts.map((district) => {\r\n      return {\r\n        id: district.id, name: district.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    const constituencies: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._constituencies.map((constituency) => {\r\n      return {\r\n        id: constituency.id, name: constituency.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._accountCategories\": this._accountCategories});\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">New Client Account</h1>\r\n                  <h3 class=\"h3\">Create New Client Account!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-register\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Name</h4>\r\n                    <mwc-textfield name=\"name\" type=\"text\" class=\"w-full\" id=\"name\" value=\"\" label=\"Enter Organization Name\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Account Category</h4>\r\n                    <mwc-select name=\"accountCategory\" id=\"accountCategory\" label=\"Select Account Category\" outlined required>\r\n                      ${this._accountCategories.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.category}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_other_account_category>\r\n                    <h4 class=\"font-semibold my-2\">Enter Other Account Category</h4>\r\n                    <mwc-textfield name=\"accountCategoryOther\" type=\"text\" class=\"w-full\" id=\"accountCategoryOther\" value=\"\" label=\"Enter Other Account Category\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Membership Size</h4>\r\n                    <mwc-select name=\"membership_size\" id=\"membership_size\" label=\"Select Membership Size\" outlined required>\r\n                      ${this._membershipSizes.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.info}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Add Organization Logo <span class=\"text-yellow-600\">(optional)</span></h4>\r\n                    <file-input id=\"logo\" name=\"logo\" label=\"Add Organization Logo\" ></file-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Website <span class=\"text-yellow-600\">(Optional)</span></h4>\r\n                    <mwc-textfield name=\"website\" type=\"url\" class=\"w-full\" id=\"website\" value=\"\" label=\"Enter Organization Website (Optional)\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n                    <!--<mwc-select name=\"country\" id=\"country\" label=\"Select Country\" outlined required>\r\n                      ${this._countries.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select> -->\r\n                    <select-input name=\"country\" id=\"country\" label=\"Select Country\" .options=\"${countries}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_state_province>\r\n                    <h4 class=\"font-semibold my-2\">Enter State/ Province</h4>\r\n                    <mwc-textfield name=\"stateProvince\" type=\"text\" class=\"w-full\" id=\"stateProvince\" value=\"\" label=\"Enter State/ Province\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n                    <select-input name=\"region\" id=\"region\" label=\"Select Region\" .options=\"${regions}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select District</h4>\r\n                    <select-input name=\"district\" id=\"district\" label=\"Select District\" .options=\"${districts}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n                    <select-input name=\"constituency\" id=\"constituency\" label=\"Select Constituency\" .options=\"${constituencies}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Enter Community</h4>\r\n                    <mwc-textfield name=\"community\" type=\"text\" class=\"w-full\" id=\"community\" value=\"\" label=\"Enter Community\" outlined>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Applicant Info\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Firstname</h4>\r\n                    <mwc-textfield name=\"firstname\" type=\"text\" class=\"w-full\" id=\"firstname\" value=\"\" label=\"Enter Applicant Firstname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Surname</h4>\r\n                    <mwc-textfield name=\"surname\" type=\"text\" class=\"w-full\" id=\"surname\" value=\"\" label=\"Enter Applicant Surname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n                    <mwc-select name=\"gender\" id=\"gender\" label=\"Select Gender\" outlined required>\r\n                      ${this._genders.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter E-mail Address</h4>\r\n                    <mwc-textfield name=\"email\" type=\"email\" class=\"w-full\" id=\"email\" value=\"\" label=\"Enter E-mail Address\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Phone Number</h4>\r\n                    <mwc-textfield name=\"phone\" type=\"tel\" class=\"w-full\" id=\"phone\" value=\"\" label=\"Enter Phone Number\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Leaders\")}\r\n                    <h4 class=\"font-semibold my-2\">Add Leaders?</h4> \r\n                    <switch-input name=\"addLeaders\" class=\"w-full\" id=\"addLeaders\" ?isSelected=\"${this.showLeadersForm}\" label=\"Add Leaders?\" outlined>\r\n                    </switch-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_1_name\" id=\"leader_1_name\" label=\"Leader 1 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Contact</h4>\r\n                    <mwc-textfield name=\"leader_1_contact\" id=\"leader_1_contact\" label=\"Leader 1 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_1_email\" id=\"leader_1_email\" label=\"Leader 1 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_2_name\" id=\"leader_2_name\" label=\"Leader 2 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Contact</h4>\r\n                    <mwc-textfield name=\"leader_2_contact\" id=\"leader_2_contact\" label=\"Leader 2 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_2_email\" id=\"leader_2_email\" label=\"Leader 2 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                    <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_3_name\" id=\"leader_3_name\" label=\"Leader 3 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Contact</h4>\r\n                    <mwc-textfield name=\"leader_3_contact\" id=\"leader_3_contact\" label=\"Leader 3 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_3_email\" id=\"leader_3_email\" label=\"Leader 3 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Set Password\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Password</h4>\r\n                    <mwc-textfield name=\"password\" id=\"password\" label=\"Enter Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Confirm Password</h4>\r\n                    <mwc-textfield name=\"confirm_password\" id=\"confirm_password\" label=\"Confirm Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n      \r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Register\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private sectionSeparater(text: string) {\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n        <div class=\"flex form-input-container items-center text-center\">\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n          <label class=\"block font-bold text-sm text-gray-600 w-full my-0\">\r\n            ${text}\r\n          </label>\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private addLeadersAction() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"addLeaders\"]').forEach((_switch) => {\r\n      _switch.addEventListener(\"click\", (evt) => {\r\n        // @ts-ignore \r\n        _this.showLeadersForm = _switch.isSelected;\r\n        const show_leaders = this.querySelectorAll('[show_leaders]'),\r\n          show_hide_class = \"hidden\";\r\n        if (_this.showLeadersForm) {\r\n          show_leaders.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_leaders.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    togglePswdVisibility();\r\n    togglePswdVisibility(\"mwc-textfield\");\r\n    document.onreadystatechange = (event)=> {\r\n      // console.log({ \"document.readyState\": document.readyState })\r\n      if (document.readyState == \"complete\") this.countryChanged(event);\r\n      if (document.readyState == \"complete\") this.regionChanged(event);\r\n      if (document.readyState == \"complete\") this.districtChanged(event);\r\n      if (document.readyState == \"complete\") this.constituencyChanged(event);\r\n      if (document.readyState == \"complete\") this.accountCategoryChanged(event);\r\n    }  \r\n    this.addLeadersAction();  \r\n  }\r\n\r\n  private accountCategoryChanged(e: any) {\r\n    // console.log(e)\r\n    const accountCategoryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-select[name=\"accountCategory\"]');\r\n    // console.log({ \"accountCategoryNodes\": accountCategoryNodes })\r\n    accountCategoryNodes.forEach(accountCategoryNode => {\r\n      // console.log({ \"accountCategoryNode\": accountCategoryNode })\r\n      // console.log({ \"accountCategoryNodes.currentValue\": accountCategoryNodes.getAttribute(\"currentValue\") })\r\n      accountCategoryNode.onchange = async (event) => {\r\n        // console.log({ event, })\r\n        const show_other_account_category = this.querySelectorAll('[show_other_account_category]'),\r\n          show_hide_class = \"hidden\";\r\n        if (accountCategoryNode.value === \"-1000\") {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private countryChanged(e: any) {\r\n    // console.log(e)\r\n    const countryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"country\"]');\r\n    countryNodes.forEach(countryNode => {\r\n      // console.log({ \"countryNode\": countryNode })\r\n      // console.log({ \"countryNode.currentValue\": countryNode.getAttribute(\"currentValue\") })\r\n      countryNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": countryNode, \"counrtyValue.value\": countryNode.value, })\r\n        const show_ghana_locations = this.querySelectorAll('[show_ghana_locations]'),\r\n          show_state_province = this.querySelectorAll('[show_state_province]'),\r\n          show_hide_class = \"hidden\";\r\n        if (countryNode.value === \"76\") {\r\n          if (this.regionCalled === false) await this.getLocationRegion();\r\n          this.regionCalled = true;\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        } else {\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    const regionNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"region\"]');\r\n    regionNodes.forEach(regionNode => {\r\n      // console.log({ \"regionNode\": regionNode })\r\n      // console.log({ \"regionNode.currentValue\": regionNode.getAttribute(\"currentValue\") })\r\n      regionNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": regionNode, \"counrtyValue.value\": regionNode.value, })\r\n        const regionID = regionNode.value;\r\n        this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n        // console.log({regionID, \"this.selectedRegion\": this.selectedRegion})\r\n        this.getLocationDistrict(this.selectedRegion);\r\n      };\r\n    });\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    const districtNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"district\"]');\r\n    districtNodes.forEach(districtNode => {\r\n      // console.log({ \"districtNode\": districtNode })\r\n      // console.log({ \"districtNode.currentValue\": districtNode.getAttribute(\"currentValue\") })\r\n      districtNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": districtNode, \"counrtyValue.value\": districtNode.value, })\r\n        const districtID = districtNode.value;\r\n        this.selectedDistrict = Number.isNaN(districtID)? 0: Number(districtID);\r\n        this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n      };\r\n    });\r\n  }\r\n\r\n  private constituencyChanged(e: Event) {\r\n    // this.selectedRegion, this.selectedDistrict\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getClientSubscriptionMembershipSize() {\r\n    const _networkResponse = await GET_ClientSubsciptionMembershipSize<ClientSubscriptionMembershipSizeModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __membershipSizes.push({ id: 0, info: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientSubscriptionMembershipSizeModel[] = data.map(value => {\r\n          return csmsmConvert.toClientSubscriptionMembershipSizeModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __membershipSizes = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ClientSubscriptionMembershipSizeModel> = [];\r\n    new_data.push(...this._membershipSizes, ...__membershipSizes);\r\n    this._membershipSizes = new_data;\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationCountryModel> = [];\r\n    new_data.push(...this._countries, ...__countries);\r\n    this._countries = new_data;\r\n  }\r\n\r\n  private async getClientAccountCategory() {\r\n    const _networkResponse = await GET_ClientAccountCategory<ClientAccountCategoryModel>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __accountCategories: ClientAccountCategoryModel[] = [\r\n      {category: \"Select Account Type\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __accountCategories.push({ id: 0, category: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientAccountCategoryModel[] = data.map(value => {\r\n          return cacmConvert.toClientAccountCategoryModel(JSON.stringify(value))\r\n        });\r\n        DATA.push({ category: \"Other\", id: -1000 });\r\n        // console.log({DATA});\r\n        __accountCategories = [...__accountCategories, ...DATA];\r\n        // console.log({DATA, __accountCategories});\r\n      }\r\n    }\r\n    const new_data: Array<ClientAccountCategoryModel> = [];\r\n    new_data.push(...this._accountCategories, ...__accountCategories);\r\n    this._accountCategories = new_data;\r\n    // console.log({ \"this._accountCategories\": this._accountCategories });\r\n    // this._accountCategories = __accountCategories\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __regions = [...__regions, ...DATA];\r\n      }\r\n    }\r\n    const new_data: Array<LocationRegionModel> = [];\r\n    new_data.push(...this._regions, ...__regions);\r\n    this._regions = new_data;\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this._districts = [];\r\n    const identity = String(regionID),\r\n      _districtsMemo = this._districtsMemo;\r\n    // console.log({identity, _districtsMemo,})\r\n    if (identity in _districtsMemo) { // implementing memoization\r\n      // console.log({ \"_districtsMemo[identity]\": _districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationDistrictModel> = [];\r\n        new_data.push(...this._districts, ..._districtsMemo[identity]);\r\n        this._districts = new_data;\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __districts = [...__districts, ...DATA];\r\n          this._districtsMemo[identity] = __districts;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationDistrictModel> = [];\r\n      new_data.push(...this._districts, ...__districts);\r\n      this._districts = new_data;\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this._constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      _constituenciesMemo = this._constituenciesMemo;\r\n    if (identity in _constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationConstituencyModel> = [];\r\n        new_data.push(...this._constituencies, ..._constituenciesMemo[identity]);\r\n        this._constituencies = new_data;\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __constituencies = [...__constituencies, ...DATA];\r\n          this._constituenciesMemo[identity] = __constituencies;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationConstituencyModel> = [];\r\n      new_data.push(...this._constituencies, ...__constituencies);\r\n      this._constituencies = new_data;\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_ClientRegister();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","GetNetworkStatus","online","offline","navigator","onLine","GetNetworkStatusEvent","newMessage","CustomEvent","cancelable","detail","onlineStatus","dispatchEvent","showingCheckBoxes","labelTextShow","togglePswdVisibility","type","document","querySelectorAll","forEach","PSWD","i","parentElement","setAttribute","getAttribute","label","createElement","span","innerText","spanDummy","checkbox","id","appendChild","after","showingCheckBox","showing","elem","includes","push","addEventListener","__toggleVisibility","e","preventDefault","currentTarget","checked","userLoginInfo","setActiveBranchIdCookie","data","stringData","JSON","stringify","set_cookies","base64Encode","removeActiveBranchIdCookie","getActiveBranchIdCookie","get_cookie","_cookie","base64Decode","cookie","parse","clientBranchInfo_S","Convert","static","json","transform","r","jsonToJSProps","value","jsToJSONProps","typ","undefined","jsonToJS","map","props","p","key","js","jsToJSON","val","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","ClientBranch_S","Number","String","accountId","createdBy","creationDate","updatedBy","updateDate","GenericGenderInfo_S","GET_ClientAccountCategory","ID","url_params","anonymousAuth","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","POST_ClientRegister","formContainer","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","register","body","then","networkCallRes","_RESPONSE","response","unknownError","errors","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","success","setTimeout","userLoginInfo_S","setUserLoginInfoCookie","window","location","href","text","GET_ClientSubsciptionMembershipSize","GET_GenericGender","SwitchInput","LitElement","selected","isSelected","this","render","html","switch","switchAction","switchActionEvent","target","input","createRenderRoot","styles","css","property","Boolean","customElement","PdbRegisterForm","constructor","super","showLeadersForm","regionCalled","selectedRegion","selectedDistrict","_genders","_countries","_accountCategories","_regions","_districts","_constituencies","_constituenciesMemo","_districtsMemo","_membershipSizes","connectedCallback","getGenders","getLocationCountry","getClientAccountCategory","getClientSubscriptionMembershipSize","disconnectedCallback","countries","country","regions","region","districts","district","constituencies","constituency","item","category","info","sectionSeparater","submitForm","addLeadersAction","_this","_switch","evt","show_leaders","show_hide_class","node","classList","remove","add","firstUpdated","onreadystatechange","event","readyState","countryChanged","regionChanged","districtChanged","constituencyChanged","accountCategoryChanged","accountCategoryNode","onchange","show_other_account_category","countryNode","show_ghana_locations","show_state_province","getLocationRegion","regionNode","regionID","getLocationDistrict","districtNode","districtID","getLocationConstituency","_networkResponse","__genders","new_data","__membershipSizes","GET_LocationCountry","__countries","code","short","DATA","__accountCategories","GET_LocationRegion","__regions","identity","GET_LocationDistrictFilter","__districts","regionId","GET_LocationConstituencyFilter","__constituencies"],"sourceRoot":""}