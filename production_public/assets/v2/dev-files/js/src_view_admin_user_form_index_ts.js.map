{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_admin_user_form_index_ts.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/toggle_pswd_visibility/index.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/clients/users/access_update.ts","webpack://webpackNumbers/./src/addons/network/clients/users/post.ts","webpack://webpackNumbers/./src/addons/network/clients/users/put.ts","webpack://webpackNumbers/./src/addons/network/clients/users/put_password.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/view/admin/user/form/index.ts"],"sourcesContent":["import '@material/mwc-icon-button';\r\nimport { TextField } from '@material/mwc-textfield';\r\n\r\nlet showingCheckBoxes: { id: string, showing: boolean, elem: HTMLInputElement | TextField, span: HTMLSpanElement }[] = [];\r\nconst labelTextShow = \"Show Password\", labelTextHide = \"Hide Password\";\r\n\r\nexport const togglePswdVisibility = (type: \"mwc-textfield\" | \"input\" = \"input\") => {\r\n  const PSWDs = document.querySelectorAll(type + '[type=\"password\"]');\r\n  // console.log({ PSWDs });\r\n\r\n  PSWDs.forEach((PSWD: HTMLInputElement | TextField, i) => {\r\n    // console.log({ PSWD });\r\n    const parentElement = PSWD.parentElement;\r\n    parentElement.setAttribute('style', parentElement.getAttribute('style') + \"; flex-direction: column !important;\")\r\n    const label = document.createElement('label');\r\n    label.setAttribute('style', label.getAttribute('style') + \"; display: inline-flex;\" +\r\n      \"width: 100%; cursor: pointer; align-items: center; margin-top: 10px; margin-bottom: 0;\"\r\n    );\r\n\r\n    const span = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n    span.innerText = labelTextShow;\r\n\r\n    const spanDummy = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.id = \"pswd-visibility-btn--\" + i;\r\n    checkbox.setAttribute('style', checkbox.getAttribute('style') + \"; -moz-appearance: auto !important;\" +\r\n      \"-webkit-appearance: auto !important; -ms-appearance: auto !important; appearance: auto !important;\" +\r\n      \"opacity: 1; margin-right: 0; z-index: 10;\"\r\n    );\r\n\r\n    label.appendChild(spanDummy);\r\n    label.appendChild(checkbox);\r\n    label.appendChild(span);\r\n\r\n    PSWD.after(label);\r\n\r\n    const showingCheckBox = { id: checkbox.id, showing: false, elem: PSWD, span: span };\r\n    if (!showingCheckBoxes.includes(showingCheckBox)) {\r\n      showingCheckBoxes.push(showingCheckBox);\r\n    }\r\n    checkbox.addEventListener('change', __toggleVisibility)\r\n  });\r\n}\r\n\r\nconst __toggleVisibility = (e: { preventDefault: () => void; currentTarget: any; }) => {\r\n  e.preventDefault();\r\n  const checkbox: HTMLInputElement = e.currentTarget;\r\n  // console.log({ checkbox, e })\r\n  checkbox.checked\r\n  showingCheckBoxes.forEach(showingCheckBox => {\r\n    if (checkbox.id === showingCheckBox.id) {\r\n      if (showingCheckBox.showing === false) {\r\n        showingCheckBox.elem.type = \"text\";\r\n        showingCheckBox.span.innerText = labelTextHide;\r\n        showingCheckBox.showing = true;\r\n      } else {\r\n        showingCheckBox.elem.type = \"password\";\r\n        showingCheckBox.span.innerText = labelTextShow;\r\n        showingCheckBox.showing = false;\r\n      }\r\n      // console.log({ showingCheckBox, button });\r\n    }\r\n  });\r\n}","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientUserAccess(ID: Number): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user-access/setup/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Setup user page access?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              const _errors_name = e.id;\r\n\r\n              if (Array.isArray(_errors)) {\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n  \r\n                  errors.push(errormsg);\r\n                });\r\n              } else {\r\n                // console.log({ \"_RESPONSE.unknownError--e.errors\": e.errors, \"typeof e.errors\": typeof e.errors });\r\n                for (const key in e.errors) {\r\n                  if (Object.prototype.hasOwnProperty.call(e.errors, key)) {\r\n                    const _error = e.errors[key];\r\n\r\n                    if (Array.isArray(_error)) {\r\n                      _error.forEach(_err => {\r\n                        // console.log({ _err, \"_err_err\": typeof _err, });\r\n                        let errormsg2 = { error: _errors_name + \": \" + _err };\r\n  \r\n                        errors.push(errormsg2);\r\n                      })\r\n                      // console.log({key,  \"_RESPONSE.unknownError--e.errors--error\": typeof _error, _error });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_ClientUser(): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Admin User?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        console.log({ \"_RESPONSE\": _RESPONSE });\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              const _errors_name = e.id;\r\n\r\n              if (Array.isArray(_errors)) {\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n\r\n                  errors.push(errormsg);\r\n                });\r\n              } else {\r\n                // console.log({ \"_RESPONSE.unknownError--e.errors\": e.errors, \"typeof e.errors\": typeof e.errors });\r\n                for (const key in e.errors) {\r\n                  if (Object.prototype.hasOwnProperty.call(e.errors, key)) {\r\n                    const _error = e.errors[key];\r\n\r\n                    if (Array.isArray(_error)) {\r\n                      _error.forEach(_err => {\r\n                        // console.log({ _err, \"_err_err\": typeof _err, });\r\n                        let errormsg2 = { error: _errors_name + \": \" + _err };\r\n\r\n                        errors.push(errormsg2);\r\n                      })\r\n                      // console.log({key,  \"_RESPONSE.unknownError--e.errors--error\": typeof _error, _error });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n\r\n          if (_RESPONSE.nameError.length > 0) {\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.nameError.forEach(e => {\r\n              const _errors = e.errors;\r\n              const _errors_name = e.id;\r\n\r\n              if (['limitations', 'pageId'].includes(_errors_name)) {\r\n                console.log({ _errors_name });\r\n\r\n                if (Array.isArray(_errors)) {\r\n                  let errormsg = { error: \"Select Access Levels\" };\r\n                  errors.push(errormsg);\r\n                } else {\r\n                  // console.log({ \"_RESPONSE.unknownError--e.errors\": e.errors, \"typeof e.errors\": typeof e.errors });\r\n                  for (const key in e.errors) {\r\n                    if (Object.prototype.hasOwnProperty.call(e.errors, key)) {\r\n                      const _error = e.errors[key];\r\n\r\n                      if (Array.isArray(_error)) {\r\n                        _error.forEach(_err => {\r\n                          // console.log({ _err, \"_err_err\": typeof _err, });\r\n                          let errormsg2 = { error: _errors_name + \": \" + _err };\r\n\r\n                          errors.push(errormsg2);\r\n                        })\r\n                        // console.log({key,  \"_RESPONSE.unknownError--e.errors--error\": typeof _error, _error });\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientUser(ID: Number): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update user profile?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientUserPassword(ID: Number): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user/change-password/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update user password?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/admin/user/form.scss';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-tab';\r\nimport '@material/mwc-tab-bar';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { GET_ClientPageAccess } from '@@addons/network/clients/users/page_access';\r\nimport { POST_ClientUser } from '@@addons/network/clients/users/post';\r\nimport { togglePswdVisibility } from '@@addons/functions/toggle_pswd_visibility';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { QueryOptions } from 'select2';\r\nimport { ClientUsers_I } from '@@addons/interfaces/clients/users';\r\nimport { Button } from '@material/mwc-button';\r\nimport { PUT_ClientUserAccess } from '@@addons/network/clients/users/access_update';\r\nimport { PUT_ClientUser } from '@@addons/network/clients/users/put';\r\nimport { PUT_ClientUserPassword } from '@@addons/network/clients/users/put_password';\r\nimport '../access_card';\r\nimport { ClientPageAccessModel, Convert as cpamConvert } from '@@addons/interfaces/clients/users/page_access';\r\n// import { ClientUserAccess_S } from '@@addons/interfaces/clients/users/access';\r\nimport { ClientUserPageAccessModel, Convert as cupamConvert } from '@@addons/interfaces/clients/users/page_access/user_access';\r\nimport { setAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\n\r\n\r\n@customElement(\"pdb-admin-user-form\")\r\nexport class PdbAdminUserForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public edit: \"true\" | \"false\" = \"false\";\r\n\r\n  @property({ type: Boolean })\r\n  public editAccess?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public isEditable?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public page_type: \"mine\" | \"not-mine\" = \"mine\";\r\n\r\n  @property({ type: String })\r\n  private registrationType: \"from-members\" | \"new-entry\" | \"none\" = \"none\";\r\n\r\n  @property({ type: Number })\r\n  private formId: 1 | 2 | 3 = 1;\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranchId: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _pageAccesses: ClientPageAccessModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  private get _clientUserDefault(): NetworkCallResponse_I<ClientUsers_I>{\r\n    const user: ClientUsers_I = {};\r\n    return {data: user, message: \"\", success: false}\r\n  }\r\n\r\n  private _clientUser: NetworkCallResponse_I<ClientUsers_I> = this._clientUserDefault;\r\n\r\n  public set clientUser(value: NetworkCallResponse_I<ClientUsers_I>) {\r\n    this._clientUser = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUser(): NetworkCallResponse_I<ClientUsers_I> {\r\n    return this._clientUser;\r\n  }\r\n\r\n  private get _clientUserAccessDefault(): NetworkCallResponse_I<ClientUserPageAccessModel>{\r\n    const access: ClientUserPageAccessModel = {};\r\n    return {data: access, message: \"\", success: false}\r\n  }\r\n\r\n  private _clientUserAccess: NetworkCallResponse_I<ClientUserPageAccessModel> = this._clientUserAccessDefault;\r\n\r\n  public set clientUserAccess(value: NetworkCallResponse_I<ClientUserPageAccessModel>) {\r\n    this._clientUserAccess = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUserAccess(): NetworkCallResponse_I<ClientUserPageAccessModel> {\r\n    return this._clientUserAccess;\r\n  }\r\n\r\n  @query('#mainAccountFormBtn')\r\n  private mainAccountFormBtn: Button;\r\n\r\n  @query('#accessPagesFormBtn')\r\n  private accessPagesFormBtn: Button;\r\n\r\n  @query('#passwordFormBtn')\r\n  private passwordFormBtn: Button;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    await this.getPageAccesses();\r\n    await this.getBranches();\r\n    await this.getGenders();\r\n    // await this.getMembers();\r\n\r\n    if (this.edit == \"true\") {\r\n      this.registrationType = \"new-entry\";\r\n    }\r\n\r\n    // console.log({\"clientUser\": this.clientUser});\r\n    // console.log({\"clientUserAccess\": this.clientUserAccess});\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.edit === \"true\") {\r\n      if (this.page_type === \"mine\") {\r\n        this.isEditable = true;\r\n      } else {\r\n        if (this.editAccess) {\r\n          this.isEditable = true;\r\n        } else {\r\n          this.isEditable = false;\r\n        }\r\n      }\r\n      return html`\r\n        <div class=\"\">\r\n          <div class=\"shadow bg-white p-2 my-2\">\r\n            <div class=\"md:hidden block\">\r\n              <mwc-tab-bar activeIndex=\"0\">\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"person\" id=\"mainAccountFormBtn\"\r\n                  label=\"User\" @click=\"${this.displayMainAccountFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"business_center\" id=\"accessPagesFormBtn\"\r\n                  label=\"Access\" @click=\"${this.displayAccessPagesFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"lock\" id=\"passwordFormBtn\"\r\n                  class=\"!w-28 !px-1\" label=\"Password\" @click=\"${this.displayPasswordForm}\"></mwc-tab>\r\n              </mwc-tab-bar>\r\n            </div>\r\n            <div class=\"md:block hidden\">\r\n              <mwc-tab-bar activeIndex=\"0\">\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"person\" id=\"mainAccountFormBtn\"\r\n                  label=\"User Information\" @click=\"${this.displayMainAccountFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"business_center\" id=\"accessPagesFormBtn\"\r\n                  label=\"Access Page(s)\" @click=\"${this.displayAccessPagesFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"lock\" id=\"passwordFormBtn\"\r\n                  class=\"!w-28 !px-1\" label=\"Password\" @click=\"${this.displayPasswordForm}\"></mwc-tab>\r\n              </mwc-tab-bar>\r\n            </div>\r\n          </div>\r\n          <div class=\"shadow bg-white p-2 my-2\">\r\n            ${this.getEditForm}\r\n          </div>\r\n          \r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"shadow bg-white p-2\">\r\n          <div class=\"p-1\">\r\n            <mwc-button class=\"primary\" setFormMembersField label=\"From Member List\" @click=\"${this.setFormMembersField}\"></mwc-button>\r\n            <mwc-button class=\"primary\" setNewEntryField label=\"New Entry\" @click=\"${this.setNewEntryField}\"></mwc-button>\r\n          </div>\r\n          ${this.form}\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get getEditForm() {\r\n    if (this.formId === 1) {\r\n      return html`\r\n        ${this.profileForm}\r\n      `;\r\n    } else if (this.formId === 2) {\r\n      return html`\r\n        ${this.pageAccessForm}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.passwordForm}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private displayMainAccountFormBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 1;\r\n    this.mainAccountFormBtn.setAttribute('raised', \"true\");\r\n    this.accessPagesFormBtn.removeAttribute('raised');\r\n    this.passwordFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private displayAccessPagesFormBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 2;\r\n    this.accessPagesFormBtn.setAttribute('raised', \"true\");\r\n    this.mainAccountFormBtn.removeAttribute('raised');\r\n    this.passwordFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private displayPasswordForm(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 3;\r\n    this.passwordFormBtn.setAttribute('raised', \"true\");\r\n    this.accessPagesFormBtn.removeAttribute('raised');\r\n    this.mainAccountFormBtn.removeAttribute('raised');\r\n    \r\n    setTimeout(() => {\r\n      this.firstUpdated();\r\n    }, 500);\r\n  }\r\n\r\n  private setFormMembersField(e: any) {\r\n    e.preventDefault();\r\n    this.registrationType = \"from-members\";\r\n    this.querySelectorAll('[setFormMembersField]').forEach((btn) => {\r\n      btn.setAttribute('raised', '');\r\n      btn.setAttribute('class', 'warning');\r\n    });\r\n    this.querySelectorAll('[setNewEntryField]').forEach((btn) => {\r\n      btn.removeAttribute('raised');\r\n      btn.setAttribute('class', 'primary');\r\n    });\r\n  }\r\n\r\n  private setNewEntryField(e: any) {\r\n    e.preventDefault();\r\n    this.registrationType = \"new-entry\";\r\n    this.querySelectorAll('[setNewEntryField]').forEach((btn) => {\r\n      btn.setAttribute('raised', '');\r\n      btn.setAttribute('class', 'warning');\r\n    });\r\n    this.querySelectorAll('[setFormMembersField]').forEach((btn) => {\r\n      btn.removeAttribute('raised');\r\n      btn.setAttribute('class', 'primary');\r\n    });\r\n  }\r\n  \r\n  private setSelectedBranchId(e: any) {\r\n    e.preventDefault();\r\n    const registrationType = this.registrationType;\r\n    this.registrationType = \"none\";\r\n    this.querySelectorAll('[setSelectedBranchId]').forEach((selectField) => {\r\n      // @ts-ignore\r\n      this.selectedBranchId = selectField.value;\r\n      // console.log({\"this.selectedBranchId\": this.selectedBranchId});\r\n    });\r\n    this.registrationType = registrationType;\r\n  }\r\n\r\n  private get profileForm() {\r\n    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User</h1>\r\n                  <h3 class=\"h3\">Update User Profile!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.branchField}\r\n\r\n                  ${this.newEntryFields}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Update User Profile\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get pageAccessForm() {    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User</h1>\r\n                  <h3 class=\"h3\">Edit User Page Access!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.accessFieldTickBox}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Edit User Page Access\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get passwordForm() {\r\n    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User Password</h1>\r\n                  <h3 class=\"h3\">Set New Password!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.passwordFields}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Set New Password\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get form() {\r\n    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User</h1>\r\n                  <h3 class=\"h3\">Add Admin User!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.branchField}\r\n\r\n                  ${this.registrationType === \"new-entry\"? html`${this.newEntryFields}`: nothing}\r\n                  ${this.registrationType === \"from-members\"? html`${this.fromMembersField}`: nothing}\r\n                  \r\n                  <!-- ${this.accessFieldSelectBox} -->\r\n                  \r\n                  <div class=\"col-md-12 col-lg-12 my-2\"><hr/></div>\r\n\r\n                  ${this.passwordFields}\r\n\r\n                  <div class=\"col-md-12 col-lg-12 my-2\"><hr/></div>\r\n                  ${this.accessFieldTickBox}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Add Admin User\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get branchField() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    const clientUser = this.clientUser,\r\n      _data = clientUser.data,\r\n      DATA = Array.isArray(_data)? _data[0]: _data,\r\n      SUCCESS = clientUser.success;\r\n    return html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n        <mwc-select name=\"branchId\" class=\"w-full\" id=\"branchId\" setSelectedBranchId label=\"Select Branch\" @change=\"${this.setSelectedBranchId}\" outlined required>\r\n          ${userBranch === 1 ? html`\r\n            <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n            ${this._branches.map((value) => {\r\n              if (SUCCESS) {\r\n                if (DATA.branchId === value.id) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                }\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          `: html`\r\n            ${this._branches.map((value) => {\r\n              if (value.id === userBranch) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          `}\r\n        </mwc-select>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get passwordFields() {\r\n    return html`\r\n      ${this.edit === \"true\" ? html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Old Password</h4> \r\n        <mwc-textfield name=\"old_password\" id=\"old_password\" label=\"Enter Old Password\" outlined type=\"password\" required>\r\n        </mwc-textfield>\r\n      </div>`: nothing}\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Password</h4> \r\n        <mwc-textfield name=\"password\" id=\"password\" label=\"Enter Password\" outlined type=\"password\" required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Password Confirmation</h4> \r\n        <mwc-textfield name=\"confirm_password\" id=\"confirm_password\" label=\"Enter Password Confirmation\" outlined type=\"password\"\r\n          required>\r\n        </mwc-textfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get fromMembersField() {\r\n    let token = \"\";\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        token = this._userLoginInfo[0].token;\r\n      }\r\n    }\r\n    let ajaxHeader: {Authorization?: string} = {};\r\n    ajaxHeader.Authorization = \"Token \" + token;\r\n    \r\n    return html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Member</h4> \r\n        <select-input class=\"w-100\" id=\"member\" name=\"member\" label=\"Select Member\"\r\n          .ajaxFetchProcessResponse=\"${this.processClientUserSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n          .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n          ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search?\"></select-input>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get pageAccesses() {\r\n    type pageAccessType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; }\r\n    let pageAccesses: pageAccessType[] = [];\r\n\r\n    this._pageAccesses.forEach(page => {\r\n      const pageAccess: pageAccessType = {\r\n        id: page.id, name: page.page, isSelected: \"false\", selected: false,\r\n      };\r\n\r\n      if (!pageAccesses.includes(pageAccess)) {\r\n        pageAccesses.push(pageAccess);\r\n      }\r\n    });\r\n    return pageAccesses;\r\n  }\r\n\r\n  private get accessFieldSelectBox() {\r\n    const pageAccesses = this.pageAccesses;\r\n    return html`\r\n      <div class=\"col-md-6 col-lg-8\">\r\n        <h4 class=\"font-semibold my-2\">Select User Access</h4> \r\n        <select-input name=\"access\" multiple class=\"w-full\" id=\"access\"\r\n          label=\"Select User Access\" .options=\"${pageAccesses}\" outlined required>\r\n        </select-input>\r\n      </div>\r\n    `;    \r\n  }\r\n\r\n  private get accessFieldTickBox() {\r\n    const pageAccesses = this.pageAccesses;\r\n    // console.log({pageAccesses});\r\n    // console.log({\"this.clientUserAccess\": this.clientUserAccess});\r\n    const clientUserAccess = this.clientUserAccess,\r\n      _data = clientUserAccess.data,\r\n      PAGES = Array.isArray(_data)? _data: [_data],\r\n      SUCCESS = clientUserAccess.success;\r\n      \r\n    let accessIDs: Array<ClientUserPageAccessModel> = [];\r\n    if (SUCCESS) {\r\n      PAGES.forEach((PAGE) => {\r\n        PAGE = cupamConvert.toClientUserPageAccessModel(JSON.stringify(PAGE));\r\n        // console.log({ PAGE });\r\n      \r\n        if (!accessIDs.includes(PAGE)) {\r\n          accessIDs.push(PAGE);\r\n        }\r\n      });\r\n    }\r\n    // console.log({accessIDs});\r\n\r\n    // console.log({\"this._pageAccesses\": this._pageAccesses});\r\n    \r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12\">\r\n        <client-user-access-card ?isActive=\"${true}\" .available_access=\"${this._pageAccesses}\" .user_access=\"${accessIDs}\"></client-user-access-card>\r\n      </div>\r\n    `;\r\n    \r\n    // return html`\r\n    //   <div class=\"col-md-6 col-lg-8\">\r\n    //     <h4 class=\"font-semibold my-2\">Select User Access</h4> \r\n    //     <input type=\"hidden\" id=\"${this.edit === \"true\"? 'pageId': 'access'}\" />\r\n        \r\n    //     <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n    //       <div class=\"mdc-data-table__table-container\">\r\n    //         <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Member\">\r\n    //           <thead>\r\n    //             <tr class=\"mdc-data-table__header-row\">\r\n    //               <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n    //                 <div class=\"mdc-data-table__header-cell-wrapper\">\r\n    //                   <div class=\"mdc-data-table__header-cell-label\">\r\n    //                     <b>Page(s)</b>\r\n    //                   </div>\r\n    //                   <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n    //                 </div>\r\n    //               </th>\r\n    //               <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n    //                 <div class=\"mdc-data-table__header-cell-wrapper\">\r\n    //                   <div class=\"mdc-data-table__header-cell-label\">\r\n    //                     <mwc-icon>tune</mwc-icon>\r\n    //                   </div>\r\n    //                   <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n    //                 </div>\r\n    //               </th>\r\n    //             </tr>\r\n    //           </thead>\r\n    //           <tbody class=\"mdc-data-table__content\">\r\n    //             ${pageAccesses.map((pageAccess, i) => {\r\n    //               let access_id: string = \"access_\" + i,\r\n    //                 access_name = \"access[]\";\r\n    //               if (this.edit === \"true\") {\r\n    //                 access_id = \"pageId_\" + i,\r\n    //                 access_name = \"pageId[]\";\r\n    //               }\r\n    //               let checked = false;\r\n    //               if (SUCCESS) {\r\n    //                 accessIDs.forEach((accessID) => {\r\n    //                   if (pageAccess.id === accessID) {\r\n    //                     checked = true;\r\n    //                   }\r\n    //                 });\r\n    //               }\r\n                  \r\n    //               return html`\r\n    //                 <tr class=\"mdc-data-table__row\">\r\n    //                   <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n    //                     <div class=\"flex items-center\">\r\n    //                       <label for=\"${access_id}\">${pageAccess.name}</label>\r\n    //                     </div>\r\n    //                   </th>\r\n    //                   <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n    //                     <div class=\"\">\r\n    //                       ${checked? html`\r\n    //                         <input id=\"${access_id}\" name=\"${access_name}\" type=\"checkbox\" value=\"${pageAccess.id}\" checked\r\n    //                           class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"/>\r\n    //                       `:html`\r\n    //                         <input id=\"${access_id}\" name=\"${access_name}\" type=\"checkbox\" value=\"${pageAccess.id}\"\r\n    //                           class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"/>\r\n    //                       `\r\n    //                       }\r\n    //                     </div>\r\n    //                   </td>\r\n    //                 </tr>\r\n    //               `;\r\n    //             })}\r\n    //           </tbody>\r\n    //         </table>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // `;    \r\n  }\r\n\r\n  private get newEntryFields() {\r\n    const clientUser = this.clientUser,\r\n      _data = clientUser.data,\r\n      DATA = Array.isArray(_data)? _data[0]: _data,\r\n      SUCCESS = clientUser.success;\r\n    \r\n    let birthDate = \"\";\r\n    if (SUCCESS) {\r\n      const _birthDate = new Date(DATA.dateOfBirth),\r\n        __TO_DATE = _birthDate.toLocaleDateString('en-US', {\r\n          day: '2-digit', month: '2-digit', year: 'numeric', formatMatcher: 'best fit',\r\n          // @ts-ignore\r\n        }).split('/');\r\n      birthDate = [__TO_DATE[2], __TO_DATE[0], __TO_DATE[1]].join('-');\r\n    }\r\n    return html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Firstname</h4> \r\n        <mwc-textfield name=\"firstname\" type=\"text\" class=\"w-full\" id=\"firstname\" \r\n          value=\"${SUCCESS? DATA.firstname: ''}\" label=\"Enter Firstname\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Surname</h4> \r\n        <mwc-textfield name=\"surname\" type=\"text\" class=\"w-full\" id=\"surname\" \r\n          value=\"${SUCCESS? DATA.surname: ''}\" label=\"Enter Surname\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n        <mwc-select name=\"gender\" class=\"w-full\" id=\"gender\" label=\"Select Gender\" outlined required>\r\n          <mwc-list-item value=\"0\">Select Gender</mwc-list-item>\r\n          ${this._genders.map((value) => {\r\n            if (SUCCESS) {\r\n              if (DATA.gender === value.id) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n              }\r\n            } else {\r\n              return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n            }\r\n          })}\r\n        </mwc-select>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Date of Birth</h4> \r\n        <mwc-textfield name=\"dateOfBirth\" type=\"date\" class=\"w-full\" id=\"dateOfBirth\"\r\n          label=\"Select Date of Birth\" value=\"${birthDate}\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <!-- <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Add Profile Picture</h4> \r\n        <file-input id=\"profilePicture\" name=\"profilePicture\" hasLabel label=\"Add Profile Picture\"></file-input>\r\n      </div> -->\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Phone Number</h4> \r\n        <mwc-textfield name=\"phone\" multiple type=\"tel\" class=\"w-full\" id=\"phone\"\r\n          label=\"Enter Phone Number\" value=\"${SUCCESS? DATA.phone: ''}\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Email Address</h4> \r\n        <mwc-textfield name=\"email\" multiple type=\"email\" class=\"w-full\" id=\"email\"\r\n          label=\"Enter Email Address\" value=\"${SUCCESS? DATA.email: ''}\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n    `;\r\n  }\r\n  // ('id', '-- firstname --', '-- surname --', '-- gender --', '-- profilePicture --',\r\n  //   '-- dateOfBirth --', '-- phone --', '-- email --', 'role', 'accountId', '-- branchId --',\r\n  //   'access'\r\n  // )\r\n  firstUpdated() {\r\n    togglePswdVisibility();\r\n    togglePswdVisibility(\"mwc-textfield\");\r\n  }\r\n\r\n  private processClientUserSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"member\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['firstname'] + \" \" + item['surname'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n    \r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams(): SelectInputProcessedAjaxUrlParam_I[] {\r\n\r\n    // console.log({\"this.selectedBranchId--\": this.selectedBranchId});\r\n    return [\r\n      { param: \"branchId\", value: String(this.selectedBranchId) }\r\n    ]\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getPageAccesses() {\r\n    const _networkResponse = await GET_ClientPageAccess<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __pageAccesses: ClientPageAccessModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __pageAccesses.push({ id: 0, page: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientPageAccessModel[] = data.map(value => {\r\n          return cpamConvert.toClientPageAccessModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __pageAccesses = DATA;\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<ClientPageAccessModel> = [];\r\n    new_data.push(...this._pageAccesses, ...__pageAccesses);\r\n    this._pageAccesses = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n\r\n    if (this.edit === \"true\") {\r\n      if (this.isEditable) {\r\n        const clientUser = this.clientUser,\r\n          _data = clientUser.data,\r\n          DATA = Array.isArray(_data) ? _data[0] : _data,\r\n          SUCCESS = clientUser.success;\r\n        // console.log({clientUser, _data, DATA, SUCCESS});\r\n        \r\n        if (SUCCESS) {\r\n          if (this.formId === 1) {\r\n            await PUT_ClientUser(DATA.id)\r\n          } else if (this.formId === 2) {\r\n            await PUT_ClientUserAccess(DATA.id);\r\n            await setAppSettingsExtraSettings(true)\r\n          } else {\r\n            await PUT_ClientUserPassword(DATA.id);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      await POST_ClientUser();\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["showingCheckBoxes","labelTextShow","togglePswdVisibility","type","document","querySelectorAll","forEach","PSWD","i","parentElement","setAttribute","getAttribute","label","createElement","span","innerText","spanDummy","checkbox","id","appendChild","after","showingCheckBox","showing","elem","includes","push","addEventListener","__toggleVisibility","e","preventDefault","currentTarget","checked","GenericGenderInfo_S","data","Number","name","GET_ClientBranches","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","PUT_ClientUserAccess","ID","formContainer","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","_errors","_errors_name","Array","isArray","err","errormsg","key","Object","prototype","hasOwnProperty","call","_error","_err","errormsg2","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","VALUE","message","success","setTimeout","window","location","reload","POST_ClientUser","log","nameError","PUT_ClientUser","PUT_ClientUserPassword","GET_GenericGender","PdbAdminUserForm","LitElement","constructor","super","edit","editAccess","isEditable","page_type","registrationType","formId","startSearchPage","selectedBranchId","_branches","_genders","_pageAccesses","_activeBranchId","_userLoginInfo","_clientUser","this","_clientUserDefault","_clientUserAccess","_clientUserAccessDefault","clientUser","requestUpdate","clientUserAccess","connectedCallback","activeBranchId","getActiveBranchIdCookie","getPageAccesses","getBranches","getGenders","disconnectedCallback","render","html","displayMainAccountFormBtn","displayAccessPagesFormBtn","displayPasswordForm","getEditForm","setFormMembersField","setNewEntryField","form","profileForm","pageAccessForm","passwordForm","mainAccountFormBtn","accessPagesFormBtn","removeAttribute","passwordFormBtn","firstUpdated","btn","setSelectedBranchId","selectField","clientId","accountId","branchField","newEntryFields","submitForm","accessFieldTickBox","passwordFields","nothing","fromMembersField","accessFieldSelectBox","userBranch","user","branchId","_data","DATA","SUCCESS","map","ajaxHeader","processClientUserSearch","ajaxFetchUrlParams","pageAccesses","page","pageAccess","isSelected","selected","PAGES","accessIDs","PAGE","JSON","stringify","birthDate","__TO_DATE","Date","dateOfBirth","toLocaleDateString","day","month","year","formatMatcher","split","join","firstname","surname","gender","phone","email","params","TOTAL","count","RESULTS","results","SELECTOR","processedData","item","_new","text","total","totalShowing","param","_networkResponse","__branches","new_data","__genders","GET_ClientPageAccess","__pageAccesses","setAppSettingsExtraSettings","createRenderRoot","styles","css","property","Boolean","query","Button","customElement"],"sourceRoot":""}