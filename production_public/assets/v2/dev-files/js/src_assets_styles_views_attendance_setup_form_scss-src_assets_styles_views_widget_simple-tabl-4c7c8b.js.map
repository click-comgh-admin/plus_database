{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_assets_styles_views_attendance_setup_form_scss-src_assets_styles_views_widget_simple-tabl-4c7c8b.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/login/main.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/view/membership/registration/excel/form/location.ts","webpack://webpackNumbers/./src/view/membership/registration/page__id.ts"],"sourcesContent":["import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { get_cookie, set_cookies, set_cookies_minutes } from \"@@addons/functions/cookies\";\r\nimport { LoginTokenType_I, } from '@@addons/interfaces/network_calls/login/login_token';\r\n\r\nconst get_differences = (date: Date) => {\r\n  const now = new Date();\r\n  const msBetweenDates = Math.abs(date.getTime() - now.getTime());\r\n  const hoursBetweenDated = msBetweenDates / (60 * 60 * 1000);\r\n  // console.log({ msBetweenDates, hoursBetweenDated, });\r\n  if (hoursBetweenDated < 24) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport const verifyToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/verify-token',\r\n    cookieName = type,\r\n    token = get_cookie(cookieName),\r\n    userInfo = JSON.stringify({ \"token\": base64Decode(token) }),\r\n    formData = userInfo;\r\n  const cookieDate = new Date(get_cookie(cookieName + \"_date\"));\r\n  // console.log({ \"force_check, now\": get_differences(cookieDate) });\r\n  const force_check = get_differences(cookieDate);\r\n\r\n  if (!force_check) {\r\n    await http(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }, true).then(async (response) => {\r\n      // console.log({ response: response });\r\n      if (response.jsonData.token & response.jsonData.user & response.jsonData.expiry) {\r\n        // console.log({\"valid token\": true, \"response.jsonData.token\": response.jsonData.token})\r\n        const token = base64Encode(String(response.jsonData.token));\r\n        set_cookies(cookieName, token, 10);\r\n        set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n        // console.log({ \"response.token\": response.token });\r\n      } else {\r\n        // console.log({\"valid token\": false, \"response.jsonData.token\": response.jsonData.token})\r\n        await generateNewToken(email, _id_, type);\r\n      }\r\n    });\r\n  } else {\r\n    return token;\r\n  }\r\n}\r\n\r\nconst generateNewToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/login-id',\r\n    cookieName = type,\r\n    userInfo = JSON.stringify({ \"email\": email, \"id\": _id_ }),\r\n    formData = userInfo;\r\n\r\n  await http(url, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  }, true).then((response) => {\r\n    // console.log({ response: response });\r\n    if (response.jsonData.token) {\r\n      const token = base64Encode(String(response.jsonData.token));\r\n      set_cookies(cookieName, token, 10);\r\n      set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n      // console.log({ \"response.token\": response.token });\r\n    }\r\n\r\n  });\r\n}\r\nexport const tokenLogin = async (email: string, id: Number, type: LoginTokenType_I) => {\r\n  const _id_ = base64Encode(String(id)),\r\n    cookieName = type;\r\n  // console.log({\"_id__id__id_\": _id_});\r\n  // console.log({ email, id });\r\n  // @ts-ignore\r\n  window['supersecret'] = { unknowable: { ops: { email: email, id: _id_, cookieName: cookieName } } };\r\n  const _get_cookie = get_cookie(cookieName);\r\n  // console.log({ _get_cookie });\r\n\r\n  if (_get_cookie == '') {\r\n    await generateNewToken(email, _id_, type);\r\n  } else {\r\n    await verifyToken(email, _id_, type);\r\n  }\r\n};","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\nexport const urlQueryParamsGetAll = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = urlSearchParams.getAll(query);\r\n  return params;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { LocationCountryModel, Convert as lcmConvert } from \"@@addons/interfaces/location/country_model\";\r\nimport { LocationRegionModel, Convert as lrmConvert } from \"@@addons/interfaces/location/region_model\";\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from \"@@addons/interfaces/location/constituency_model\";\r\nimport { LocationDistrictModel, Convert as ldmConvert } from \"@@addons/interfaces/location/district_model\";\r\nimport { GET_LocationCountry } from \"@@addons/network/location/country\";\r\nimport { GET_LocationRegion } from \"@@addons/network/location/region\";\r\nimport { GET_LocationDistrictFilter } from \"@@addons/network/location/district/filter\";\r\nimport { GET_LocationConstituencyFilter } from \"@@addons/network/location/constituency/filter\";\r\n\r\n@customElement('membership-registration-excel-location')\r\nexport class MembershipRegistrationExcelLocation extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private _constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private _districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await this.getLocationCountry();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n    :host { display: block; }\r\n    input[type=\"text\"], input[type=\"password\"], \r\n    input[type=\"email\"], input[type=\"phone\"], \r\n    select, span.select2.select2-container, \r\n    span.select2-selection.select2-selection--single.form-control.p-0, \r\n    textarea {\r\n      background: none!important;\r\n      padding: unset!important;\r\n    }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const countries: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._countries.map((country) => {\r\n      return {\r\n        id: country.id, name: country.name,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const regions: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._regions.map((region) => {\r\n      return {\r\n        id: region.id, name: region.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const districts: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._districts.map((district) => {\r\n      return {\r\n        id: district.id, name: district.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    const constituencies: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._constituencies.map((constituency) => {\r\n      return {\r\n        id: constituency.id, name: constituency.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    return html`\r\n      <div class=\"form-container flex shadow-sm border bg-white p-2 m-2\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label my-1\">\r\n                  <h1 class=\"h1 !text-red-400\">Filter Location Details</h1>\r\n                  <h3 class=\"h3\">\r\n                    <span class=\"!text-red-400\">For reference only. </span>\r\n                    <span class=\"!text-red-400\"> Does not affect registration.</span>\r\n                  </h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form !my-1\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3 col-lg-3\">\r\n                    <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n                    <select-input name=\"country\" id=\"country\" label=\"Select Country\" .options=\"${countries}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_state_province>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n                    <select-input name=\"region\" id=\"region\" label=\"Select Region\" .options=\"${regions}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select District</h4>\r\n                    <select-input name=\"district\" id=\"district\" label=\"Select District\" .options=\"${districts}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-3 col-lg-3 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n                    <select-input name=\"constituency\" id=\"constituency\" label=\"Select Constituency\" .options=\"${constituencies}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center !my-1\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    document.onreadystatechange = (event)=> {\r\n      // console.log({ \"document.readyState\": document.readyState })\r\n      if (document.readyState == \"complete\") this.countryChanged(event);\r\n      if (document.readyState == \"complete\") this.regionChanged(event);\r\n      if (document.readyState == \"complete\") this.districtChanged(event);\r\n      if (document.readyState == \"complete\") this.constituencyChanged(event);\r\n    }  \r\n  }\r\n\r\n  private countryChanged(e: any) {\r\n    // console.log(e)\r\n    const countryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"country\"]');\r\n    countryNodes.forEach(countryNode => {\r\n      // console.log({ \"countryNode\": countryNode })\r\n      // console.log({ \"countryNode.currentValue\": countryNode.getAttribute(\"currentValue\") })\r\n      countryNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": countryNode, \"counrtyValue.value\": countryNode.value, })\r\n        const show_ghana_locations = this.querySelectorAll('[show_ghana_locations]'),\r\n          show_state_province = this.querySelectorAll('[show_state_province]'),\r\n          show_hide_class = \"hidden\";\r\n        if (countryNode.value === \"76\") {\r\n          if (this.regionCalled === false) await this.getLocationRegion();\r\n          this.regionCalled = true;\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        } else {\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    const regionNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"region\"]');\r\n    regionNodes.forEach(regionNode => {\r\n      // console.log({ \"regionNode\": regionNode })\r\n      // console.log({ \"regionNode.currentValue\": regionNode.getAttribute(\"currentValue\") })\r\n      regionNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": regionNode, \"counrtyValue.value\": regionNode.value, })\r\n        const regionID = regionNode.value;\r\n        this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n        // console.log({regionID, \"this.selectedRegion\": this.selectedRegion})\r\n        this.getLocationDistrict(this.selectedRegion);\r\n      };\r\n    });\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    const districtNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"district\"]');\r\n    districtNodes.forEach(districtNode => {\r\n      // console.log({ \"districtNode\": districtNode })\r\n      // console.log({ \"districtNode.currentValue\": districtNode.getAttribute(\"currentValue\") })\r\n      districtNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": districtNode, \"counrtyValue.value\": districtNode.value, })\r\n        const districtID = districtNode.value;\r\n        this.selectedDistrict = Number.isNaN(districtID)? 0: Number(districtID);\r\n        this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n      };\r\n    });\r\n  }\r\n\r\n  private constituencyChanged(e: Event) {\r\n    // this.selectedRegion, this.selectedDistrict\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationCountryModel> = [];\r\n    new_data.push(...this._countries, ...__countries);\r\n    this._countries = new_data;\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __regions = [...__regions, ...DATA];\r\n      }\r\n    }\r\n    const new_data: Array<LocationRegionModel> = [];\r\n    new_data.push(...this._regions, ...__regions);\r\n    this._regions = new_data;\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this._districts = [];\r\n    const identity = String(regionID),\r\n      _districtsMemo = this._districtsMemo;\r\n    // console.log({identity, _districtsMemo,})\r\n    if (identity in _districtsMemo) { // implementing memoization\r\n      // console.log({ \"_districtsMemo[identity]\": _districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationDistrictModel> = [];\r\n        new_data.push(...this._districts, ..._districtsMemo[identity]);\r\n        this._districts = new_data;\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __districts = [...__districts, ...DATA];\r\n          this._districtsMemo[identity] = __districts;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationDistrictModel> = [];\r\n      new_data.push(...this._districts, ...__districts);\r\n      this._districts = new_data;\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this._constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      _constituenciesMemo = this._constituenciesMemo;\r\n    if (identity in _constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationConstituencyModel> = [];\r\n        new_data.push(...this._constituencies, ..._constituenciesMemo[identity]);\r\n        this._constituencies = new_data;\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __constituencies = [...__constituencies, ...DATA];\r\n          this._constituenciesMemo[identity] = __constituencies;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationConstituencyModel> = [];\r\n      new_data.push(...this._constituencies, ...__constituencies);\r\n      this._constituencies = new_data;\r\n    }\r\n  }\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"create\": 23,\r\n};"],"names":["verifyToken","email","_id_","type","url","CONSTANTS","cookieName","token","get_cookie","formData","JSON","stringify","base64Decode","date","now","Date","Math","abs","getTime","get_differences","http","method","body","then","response","jsonData","user","expiry","base64Encode","String","set_cookies","set_cookies_minutes","toUTCString","generateNewToken","tokenLogin","id","window","unknowable","ops","urlQueryParams","urlSearchParams","URLSearchParams","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsGetAll","getAll","urlQueryParamsJoin","object","urlStr","index","MembershipRegistrationExcelLocation","LitElement","constructor","super","regionCalled","selectedRegion","selectedDistrict","_countries","_regions","_districts","_constituencies","_constituenciesMemo","_districtsMemo","connectedCallback","this","getLocationCountry","disconnectedCallback","render","countries","map","country","name","isSelected","selected","regions","region","districts","district","constituencies","constituency","html","firstUpdated","document","onreadystatechange","event","readyState","countryChanged","regionChanged","districtChanged","constituencyChanged","e","querySelectorAll","forEach","countryNode","onchange","show_ghana_locations","show_state_province","show_hide_class","getLocationRegion","node","classList","remove","add","regionNode","regionID","Number","isNaN","getLocationDistrict","districtNode","districtID","getLocationConstituency","_networkResponse","GET_LocationCountry","__countries","code","short","push","success","data","DATA","new_data","GET_LocationRegion","__regions","identity","setTimeout","GET_LocationDistrictFilter","__districts","regionId","GET_LocationConstituencyFilter","__constituencies","createRenderRoot","styles","css","property","Boolean","Array","customElement","PAGE__IDS"],"sourceRoot":""}