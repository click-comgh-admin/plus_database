{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_membership_members_select-member-type_index_ts.js","mappings":"gSAKO,SAAeA,EAA0CC,EAAe,M,qCAE7E,MAAMC,GAAc,IAAAC,0BACdC,EAAM,EAAAC,UAAA,0BAAsC,qCACpC,OAATJ,EAAgB,GAAK,IAAMA,GAC9BK,QAAa,IAAAC,MAAKH,EAAK,CACrBI,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWR,EAAYS,SAEvC,GACL,IACE,OAAO,IAAI,EAAAC,qBAA2B,MAAON,E,CAC7C,MAAOO,GACPC,QAAQD,MAAM,CAAEA,UAChB,IAAIE,EAAYT,EAEhB,OADAS,EAAiB,MAAIF,EACd,IAAI,EAAAD,qBAA2B,MAAOG,GAAW,E,CAE5D,E,qnCCfO,IAAMC,EAAN,cAA4C,EAAAC,WACjDC,cAAgBC,QAGT,KAAAC,SAA6B,OAG7B,KAAAC,aAAuB,KAGvB,KAAAC,cAA+B,GAG/B,KAAAC,iBAAkC,KAGlC,KAAAC,iBAA2B,KAG3B,KAAAC,UAAoB,EAGpB,KAAAC,UAAoB,EAGpB,KAAAC,MAAgB,GAGhB,KAAAC,KAAe,GAGf,KAAAC,GAAa,GAGb,KAAAC,UAAoB,GAGpB,KAAAC,UAAoB,GAGnB,KAAAC,kBAAmD,EAvClC,CAyCnBC,oB,2HACJ,EAAMA,kBAAiB,WAEvBC,YAAW,KACJC,MAAMC,QAAQC,KAAKd,oBACtBc,KAAKd,iBAAmB,IAEA,OAAtBc,KAAKhB,eACFgB,KAAKd,iBAAiBe,SAASD,KAAKhB,eACvCgB,KAAKd,iBAAiBgB,KAAKF,KAAKhB,eAIpCgB,KAAKf,cAAckB,SAAQnB,IACpBgB,KAAKd,iBAAiBe,SAASjB,IAClCgB,KAAKd,iBAAiBgB,KAAKlB,E,GAE7B,GAKD,WAGGgB,KAAKI,qBACb,G,CAEAC,uBAAyB,CAOzBC,SACE,MAAsB,SAAlBN,KAAKjB,SACA,EAAAwB,IAAI;UACPP,KAAKQ;QAGF,EAAAD,IAAI;UACPP,KAAKS;OAMb,CAEYD,0B,MACV,OAAyB,QAArB,EAAAR,KAAKd,wBAAgB,eAAEwB,QAAS,EAC3B,EAAAH,IAAI;4BACWP,KAAKT,uBAAuBS,KAAKP,kBAAkBO,KAAKR,cAAcQ,KAAKV,qCAAqCU,KAAKW,4BAA4BX,KAAKZ;qCAC7IY,KAAKV;YAC9BU,KAAKL,kBAAkBiB,KAAKC,GACrB,EAAAN,IAAI,yBAAyBM,EAAMrB,OAAOqB,EAAMC;;QAKtD,EAAAP,IAAI;0BACSP,KAAKT,uBAAuBS,KAAKP,kBAAkBO,KAAKR,cAAcQ,KAAKV,qCAAqCU,KAAKW,4BAA4BX,KAAKZ;mCAC7IY,KAAKV;UAC9BU,KAAKL,kBAAkBiB,KAAKC,IAC5B,IAAIE,GAAiB,EAMrB,OALAf,KAAKd,iBAAiBiB,SAAQnB,IACxBA,IAAiB6B,EAAMrB,KACzBuB,GAAiB,E,IAGjBA,EACK,EAAAR,IAAI,yBAAyBM,EAAMrB,gBAAgBqB,EAAMC,2BAEzD,EAAAP,IAAI,yBAAyBM,EAAMrB,OAAOqB,EAAMC,0B;;KAMjE,CAEYL,uBACV,IAAIO,EAA8B,CAAC,CAACxB,GAAI,EAAGD,KAAMS,KAAKV,MAAO2B,WAAY,QAASC,UAAU,IAG5FlB,KAAKL,kBAAkBQ,SAAQgB,IAC7B,IAAIJ,GAAiB,EACrBf,KAAKd,iBAAiBiB,SAAQnB,IAExBA,IAAiBmC,EAAgB3B,KACnCuB,GAAiB,E,IAMrB,IAAIE,GAAsB,EAC1BG,EAAkC,QAC9BL,IACFE,GAAa,EACbG,EAAgB,QAElB,MAAMC,EAA2B,CAC/B7B,GAAI2B,EAAgB3B,GAAID,KAAM4B,EAAgBL,SAAUG,WAAYG,EAAeF,SAAUD,GAG1FD,EAAQf,SAASoB,IACpBL,EAAQd,KAAKmB,E,IAQjB,IAAIC,EAAQ,EAAAf,IAAI;4BACQP,KAAKT,uBAAuBS,KAAKP,kBAAkBO,KAAKR,cAAcQ,KAAKV;oBACnF0B,0BAAgChB,KAAKX,wBAAwBW,KAAKZ;;MAGlF,OAAO,EAAAmB,IAAI,GAAGe,GAChB,CAEYC,kBACV,IAAID,EAAQ,EAAAf,IAAI,GA8BhB,OA5BEe,EADEtB,KAAKd,iBAAkBwB,OAAS,EAC1B,EAAAH,IAAI;yBACOP,KAAKP,oBAAoBO,KAAKT,aAAaS,KAAKR,cAAcQ,KAAKN,uBAAuBM,KAAKW,4BAA4BX,KAAKZ;8BAC3HY,KAAKV;YACvBU,KAAKL,kBAAkBiB,KAAKC,GACrB,EAAAN,IAAI,kBAAkBM,EAAMrB,OAAOqB,EAAMC;;QAK9C,EAAAP,IAAI;yBACOP,KAAKP,oBAAoBO,KAAKT,aAAaS,KAAKR,cAAcQ,KAAKN,uBAAuBM,KAAKW,4BAA4BX,KAAKZ;8BAC3HY,KAAKV;YACvBU,KAAKL,kBAAkBiB,KAAKC,IAC9B,IAAIE,GAAiB,EAMrB,OALAf,KAAKd,iBAAiBiB,SAAQnB,IACxBA,IAAiB6B,EAAMrB,KACzBuB,GAAiB,E,IAGjBA,EACO,EAAAR,IAAI,kBAAkBM,EAAMrB,gBAAgBqB,EAAMC,oBAElD,EAAAP,IAAI,kBAAkBM,EAAMrB,OAAOqB,EAAMC,mB;;QAMnD,EAAAP,IAAI;;;;;;;;;QASPe;;;;KAKN,CAEAE,eAAiB,CAEHpB,sB,yCACZ,MAAMqB,QAAyB,IAAA9D,uCAC/B,IAAI+D,EAAoD,GAE/B,OAArBD,EACFC,EAAmBxB,KAAK,CAAEV,GAAI,EAAGsB,SAAU,mBAEA,IAAtCW,EAAiBE,SAASC,SAAsB,WAAYH,EAAiBE,SAASE,OAGzFH,EAF4CD,EAAiBE,SAASE,MAK1E,MAAMC,EAA+C,GACrDA,EAAS5B,QAAQF,KAAKL,qBAAsB+B,GAC5C1B,KAAKL,kBAAoBmC,CAC3B,G,CAEQnB,aAAaoB,GAEnB/B,KAAKb,iBAAmB6C,OAAOC,MAAMF,EAAkBG,cAAcrB,OAAQ,EAAGmB,OAAOD,EAAkBG,cAAcrB,MACzH,CAEAsB,mBACE,OAAOnC,IACT,GAzKO,EAAAoC,OAAS,CACd,EAAAC,GAAG;;KArEL,IAAC,IAAAC,UAAS,CAAE1E,KAAM2E,S,wDAGlB,IAAC,IAAAD,UAAS,CAAE1E,KAAMoE,S,4DAGlB,IAAC,IAAAM,UAAS,CAAE1E,KAAMkC,Q,gBACS,mB,EAAA,oBAALA,OAAAA,OAAK,W,oCAE3B,IAAC,IAAAwC,UAAS,CAAE1E,KAAMkC,Q,gBACY,mB,EAAA,oBAALA,OAAAA,OAAK,W,uCAE9B,IAAC,IAAAwC,UAAS,CAAE1E,KAAMoE,S,gEAGlB,IAAC,IAAAM,UAAS,CAAE1E,KAAM4E,U,yDAGlB,IAAC,IAAAF,UAAS,CAAE1E,KAAM4E,U,yDAGlB,IAAC,IAAAF,UAAS,CAAE1E,KAAM2E,S,qDAGlB,IAAC,IAAAD,UAAS,CAAE1E,KAAM2E,S,oDAGlB,IAAC,IAAAD,UAAS,CAAE1E,KAAM2E,S,kDAGlB,IAAC,IAAAD,UAAS,CAAE1E,KAAM2E,S,yDAGlB,IAAC,IAAAD,UAAS,CAAE1E,KAAM2E,S,yDAGlB,IAAC,IAAAD,UAAS,CAAE1E,KAAMkC,Q,gEAvCPnB,EAA6B,IADzC,IAAA8D,eAAc,qC,2BACF9D,E","sources":["webpack://webpackNumbers/./src/addons/network/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/view/membership/members/select-member-type/index.ts"],"sourcesContent":["import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsMemberCategories<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/member-category'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport \"@@addons/widgets/form/new/select\";\r\n\r\ntype filterSelectType = { id: number|\"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-select-member-type\")\r\nexport class PdbMembershipSelectMemberType extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public material: \"true\" | \"false\" = \"true\";\r\n\r\n  @property({ type: Number })\r\n  public defaultValue: number = null;\r\n\r\n  @property({ type: Array })\r\n  public defaultValues: Array<number> = [];\r\n\r\n  @property({ type: Array })\r\n  public setDefaultValues: Array<number> = null;\r\n\r\n  @property({ type: Number })\r\n  public selectedCategory: number = null;\r\n\r\n  @property({ type: Boolean })\r\n  public multiple: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public required: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public id: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public tag_class: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public css_style: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    setTimeout(() => {\r\n      if (!Array.isArray(this.setDefaultValues)) {\r\n        this.setDefaultValues = [];\r\n      }\r\n      if (this.defaultValue !== null) {\r\n        if (!this.setDefaultValues.includes(this.defaultValue)) {\r\n          this.setDefaultValues.push(this.defaultValue);\r\n        }\r\n      }\r\n      \r\n      this.defaultValues.forEach(defaultValue => {\r\n        if (!this.setDefaultValues.includes(defaultValue)) {\r\n          this.setDefaultValues.push(defaultValue);\r\n        }\r\n      });\r\n  \r\n      // console.log({\"this.setDefaultValues\": this.setDefaultValues});\r\n      // console.log({\"this.defaultValue\": this.defaultValue});\r\n      // console.log({\"this.defaultValues\": this.defaultValues});\r\n    }, 100);\r\n    \r\n    \r\n    await this.getMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.material === \"true\") {\r\n      return html`\r\n        ${this.materialSelectField}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.selectInputField}\r\n      `;\r\n      // return html`\r\n      //   ${this.selectField}\r\n      // `;      \r\n    }\r\n  }\r\n\r\n  private get materialSelectField() {\r\n    if (this.setDefaultValues?.length < 1) {\r\n      return html`\r\n        <mwc-select name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\" outlined required @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n          <mwc-list-item value=\"0\">${this.label}</mwc-list-item>\r\n          ${this._memberCategories.map((value) => {\r\n            return html`<mwc-list-item value=\"${value.id}\">${value.category}</mwc-list-item>`;\r\n          })}\r\n        </mwc-select>\r\n      `;\r\n    } else {\r\n      return html`\r\n      <mwc-select name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\" outlined required @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n        <mwc-list-item value=\"0\">${this.label}</mwc-list-item>\r\n        ${this._memberCategories.map((value) => {\r\n          let thisIsSelected = false;\r\n          this.setDefaultValues.forEach(defaultValue => {\r\n            if (defaultValue === value.id) {\r\n              thisIsSelected = true;\r\n            }\r\n          });\r\n          if (thisIsSelected) {\r\n            return html`<mwc-list-item value=\"${value.id}\" selected>${value.category}</mwc-list-item>`;\r\n          } else {\r\n            return html`<mwc-list-item value=\"${value.id}\">${value.category}</mwc-list-item>`;\r\n          }\r\n        })}\r\n      </mwc-select>\r\n    `;\r\n    }\r\n  }\r\n\r\n  private get selectInputField() {\r\n    let options: filterSelectType[] = [{id: 0, name: this.label, isSelected: \"false\", selected: false}];\r\n\r\n    // console.log({\"this._memberCategories\": this._memberCategories, \"this.setDefaultValues\": this.setDefaultValues});\r\n    this._memberCategories.forEach(_memberCategory => {\r\n      let thisIsSelected = false;\r\n      this.setDefaultValues.forEach(defaultValue => {\r\n        // console.log({defaultValue, \"_memberCategory.id\": _memberCategory.id});\r\n        if (defaultValue === _memberCategory.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n\r\n      // console.log({thisIsSelected});\r\n      \r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const option: filterSelectType = {\r\n        id: _memberCategory.id, name: _memberCategory.category, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n    \r\n      if (!options.includes(option)) {\r\n        options.push(option);\r\n      }\r\n    });\r\n\r\n    // console.log({options});\r\n    \r\n    \r\n    \r\n    let _html = html`\r\n      <select-input name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\"\r\n        .options=\"${options}\" outlined ?required=\"${this.required}\" ?multiple=\"${this.multiple}\">\r\n      </select-input>\r\n    `;\r\n    return html`${_html}`\r\n  }\r\n\r\n  private get selectField() {\r\n    let _html = html``;\r\n    if (this.setDefaultValues!.length < 1) {\r\n      _html = html`\r\n        <select class=\"${this.tag_class}\" name=\"${this.name}\" id=\"${this.id}\" style=\"${this.css_style}\" @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n          <option value=\"0\">${this.label}</option>\r\n          ${this._memberCategories.map((value) => {\r\n            return html`<option value=\"${value.id}\">${value.category}</option>`;\r\n          })}\r\n        </select>\r\n      `;\r\n    } else {\r\n      _html = html`\r\n        <select class=\"${this.tag_class}\" name=\"${this.name}\" id=\"${this.id}\" style=\"${this.css_style}\" @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n          <option value=\"0\">${this.label}</option>\r\n          ${this._memberCategories.map((value) => {\r\n          let thisIsSelected = false;\r\n          this.setDefaultValues.forEach(defaultValue => {\r\n            if (defaultValue === value.id) {\r\n              thisIsSelected = true;\r\n            }\r\n          });\r\n          if (thisIsSelected) {\r\n              return html`<option value=\"${value.id}\" selected>${value.category}</option>`;\r\n            } else {\r\n              return html`<option value=\"${value.id}\">${value.category}</option>`;\r\n            }\r\n          })}\r\n        </select>\r\n      `;\r\n    }\r\n    return html`\r\n      <div class=\"main_class\">\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<div class=\"input-group mb-4\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\" icon_id=\"\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text px-2\">\r\n\t\t\t\t\t\t\t\t<i class=\"pe-7s-leaf icon-gradient bg-warm-flame text-success font-weight-bolder \"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t${_html}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    `\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  private changeAction(changeActionEvent: { target: { selected: boolean; value: string; }; currentTarget: { selected: boolean; value: string; }; }) {\r\n    // console.log({changeActionEvent});\r\n    this.selectedCategory = Number.isNaN(changeActionEvent.currentTarget.value)? 0: Number(changeActionEvent.currentTarget.value);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["GET_MemberGroupingsMemberCategories","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","PdbMembershipSelectMemberType","LitElement","constructor","super","material","defaultValue","defaultValues","setDefaultValues","selectedCategory","multiple","required","label","name","id","tag_class","css_style","_memberCategories","connectedCallback","setTimeout","Array","isArray","this","includes","push","forEach","getMemberCategories","disconnectedCallback","render","html","materialSelectField","selectInputField","length","changeAction","map","value","category","thisIsSelected","options","isSelected","selected","_memberCategory","isSelectedAlt","option","_html","selectField","firstUpdated","_networkResponse","__memberCategories","response","success","data","new_data","changeActionEvent","Number","isNaN","currentTarget","createRenderRoot","styles","css","property","String","Boolean","customElement"],"sourceRoot":""}