{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_membership_connections_members_and_connections_view_members_ts-src_view_membership_c-ed4f66.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/interfaces/boolean/index.ts","webpack://webpackNumbers/./src/addons/interfaces/location/constituency.ts","webpack://webpackNumbers/./src/addons/interfaces/location/country.ts","webpack://webpackNumbers/./src/addons/interfaces/location/district.ts","webpack://webpackNumbers/./src/addons/interfaces/location/electoral_area.ts","webpack://webpackNumbers/./src/addons/interfaces/location/region.ts","webpack://webpackNumbers/./src/addons/interfaces/members/user/index.ts","webpack://webpackNumbers/./src/addons/network/members/connections/accounts/delete.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/index.ts","webpack://webpackNumbers/./src/view/membership/connections/members_and_connections/view_members.ts","webpack://webpackNumbers/./src/view/membership/connections/page__id.ts"],"sourcesContent":["export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const Boolean_I = (bool: any) => {\r\n  const _bool = String(bool).toLowerCase();\r\n  // console.info({_bool});\r\n  \r\n  if (_bool === \"1\") {\r\n    return true;\r\n  } else if (_bool === \"true\") {\r\n    return true;\r\n  } else if (bool === true) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}","import { District_I, District_S, _District_D } from \"./district\";\r\nimport { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface Constituency_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  districtId?: District_I,\r\n  location?: string,\r\n}\r\nexport function Constituency_S(data: any): Constituency_I {\r\n  // console.log({data});\r\n  const constituency_S: Constituency_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    districtId: ('districtId' in data) ? District_S(data['districtId']) : _District_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return constituency_S;\r\n}\r\nexport function _Constituency_D(): Constituency_I {\r\n  // console.log({data});\r\n  const constituency_S: Constituency_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    districtId: _District_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return constituency_S;\r\n}","export interface Country_I {\r\n  id?: number,\r\n  name?: string,\r\n  short?: string,\r\n  code?: string,\r\n}\r\nexport function Country_S(data: any): Country_I {\r\n  // console.log({data});\r\n  const _data = Array.isArray(data) ? data[0] : data;\r\n  const country_S: Country_I = {\r\n    id: _data['id'],\r\n    name: String(_data['name']),\r\n    short: String(_data['short']),\r\n    code: String(_data['code']),\r\n  };\r\n\r\n  return country_S;\r\n}\r\nexport function _Country_D(): Country_I {\r\n  const country_S: Country_I = {\r\n    id: 0,\r\n    name: \"-\",\r\n    short: \"-\",\r\n    code: \"-\",\r\n  };\r\n\r\n  return country_S;\r\n}","import { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface District_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  location?: string,\r\n}\r\nexport function District_S(data: any): District_I {\r\n  // console.log({data});\r\n  const district_S: District_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return district_S;\r\n}\r\nexport function _District_D(): District_I {\r\n  // console.log({data});\r\n  const district_S: District_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return district_S;\r\n}","import { District_I, District_S, _District_D } from \"./district\";\r\nimport { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface ElectoralArea_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  districtId?: District_I,\r\n  location?: string,\r\n}\r\nexport function ElectoralArea_S(data: any): ElectoralArea_I {\r\n  // console.log({data});\r\n  const electoralArea_S: ElectoralArea_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    districtId: ('districtId' in data) ? District_S(data['districtId']) : _District_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return electoralArea_S;\r\n}\r\nexport function _ElectoralArea_D(): ElectoralArea_I {\r\n  // console.log({data});\r\n  const electoralArea_S: ElectoralArea_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    districtId: _District_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return electoralArea_S;\r\n}","export interface Region_I {\r\n  id?: number,\r\n  location?: string,\r\n}\r\nexport function Region_S(data: any): Region_I {\r\n  // console.log({data});\r\n  const region_S: Region_I = {\r\n    id: Number(data['id']),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return region_S;\r\n}\r\nexport function _Region_D(): Region_I {\r\n  const region_S: Region_I = {\r\n    id: 0,\r\n    location: \"-\",\r\n  };\r\n\r\n  return region_S;\r\n}","import { Boolean_I } from \"@@addons/interfaces/boolean\"\r\nimport { Constituency_I, Constituency_S, _Constituency_D } from \"@@addons/interfaces/location/constituency\"\r\nimport { Country_I, Country_S, _Country_D } from \"@@addons/interfaces/location/country\"\r\nimport { District_I, District_S, _District_D } from \"@@addons/interfaces/location/district\"\r\nimport { ElectoralArea_I, ElectoralArea_S, _ElectoralArea_D } from \"@@addons/interfaces/location/electoral_area\"\r\nimport { Region_I, Region_S, _Region_D } from \"@@addons/interfaces/location/region\"\r\n\r\nfunction null_string(params: any, replace: string = \"\") {\r\n  return String(params === null ? replace : params);\r\n}\r\nexport interface MembershipUser_I {\r\n  id?: number,\r\n  clientId?: number,\r\n  firstname?: string,\r\n  middlename?: string,\r\n  surname?: string,\r\n  gender?: number,\r\n  profilePicture?: string,\r\n  dateOfBirth?: Date,\r\n  phone?: string,\r\n  email?: string,\r\n  religion?: number,\r\n  nationality?: string,\r\n  countryOfResidence?: string,\r\n  stateProvince?: string,\r\n  region?: number,\r\n  district?: number,\r\n  constituency?: number,\r\n  electoralArea?: number,\r\n  community?: string,\r\n  hometown?: string,\r\n  houseNoDigitalAddress?: string,\r\n  digitalAddress?: string,\r\n  referenceId?: string,\r\n  branchId?: number,\r\n  editable?: boolean,\r\n  profileResume?: string,\r\n  profileIdentification?: string,\r\n  archived?: boolean,\r\n  identification?: string,\r\n  accountType?: number,\r\n  memberType?: number,\r\n  level?: number,\r\n  status?: number,\r\n  lastUpdatedBy?: number,\r\n  date?: Date,\r\n  last_login?: Date,\r\n  countryInfo?: Country_I,\r\n  regionInfo?: Region_I,\r\n  districtInfo?: District_I,\r\n  constituencyInfo?: Constituency_I,\r\n  electoralareaInfo?: ElectoralArea_I,\r\n}\r\n\r\nexport function MembershipUser_S(data: any): MembershipUser_I {\r\n  // console.log({data});\r\n\r\n  const membershipUser_S: MembershipUser_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    firstname: String(data['firstname']),\r\n    middlename: null_string(data['middlename']),\r\n    surname: String(data['surname']),\r\n    gender: Number(data['gender']),\r\n    profilePicture: String(data['profilePicture']),\r\n    dateOfBirth: new Date(data['dateOfBirth']),\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    religion: Number(data['religion']),\r\n    nationality: String(data['nationality']),\r\n    countryOfResidence: String(data['countryOfResidence']),\r\n    stateProvince: String(data['stateProvince']),\r\n    region: Number(data['region']),\r\n    district: Number(data['district']),\r\n    constituency: Number(data['constituency']),\r\n    electoralArea: Number(data['electoralArea']),\r\n    community: String(data['community']),\r\n    hometown: String(data['hometown']),\r\n    houseNoDigitalAddress: String(data['houseNoDigitalAddress']),\r\n    digitalAddress: String(data['digitalAddress']),\r\n    referenceId: null_string(data['referenceId'], \"-\"),\r\n    accountType: Number(data['accountType']),\r\n    memberType: Number(data['memberType']),\r\n    branchId: Number(data['branchId']),\r\n    editable: Boolean_I(data['editable']),\r\n    profileResume: String(data['profileResume']),\r\n    profileIdentification: String(data['profileIdentification']),\r\n    archived: Boolean_I(data['archived']),\r\n    identification: String(data['identification']),\r\n    level: Number(data['level']),\r\n    status: Number(data['status']),\r\n    lastUpdatedBy: Number(data['lastUpdatedBy']),\r\n    date: new Date(data['date']),\r\n    last_login: new Date(data['last_login']),\r\n    countryInfo: ('countryInfo' in data) ? Country_S(data['countryInfo']) : _Country_D(),\r\n    regionInfo: ('regionInfo' in data) ? Region_S(data['regionInfo']) : _Region_D(),\r\n    districtInfo: ('districtInfo' in data) ? District_S(data['districtInfo']) : _District_D(),\r\n    constituencyInfo: ('constituencyInfo' in data) ? Constituency_S(data['constituencyInfo']) : _Constituency_D(),\r\n    electoralareaInfo: ('electoralareaInfo' in data) ? ElectoralArea_S(data['electoralareaInfo']) : _ElectoralArea_D(),\r\n  };\r\n\r\n  return membershipUser_S;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_UserConnectionAccount(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-connection-account/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Connection?',\r\n    text: \"Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipUsers<Type>(ID: Number = null, url_params: string = \"\", withLocation: boolean = false) {\r\n\r\n  const raw_url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params);\r\n  const location_url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/location'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params);\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = withLocation ? location_url : raw_url,\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, } from 'lit/decorators.js';\r\nimport \"@material/mwc-icon\";\r\nimport \"@material/mwc-icon-button\";\r\nimport \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { DELETE_UserConnectionAccount } from '@@addons/network/members/connections/accounts/delete';\r\nimport { UserConnectionAccount_I } from '@@addons/interfaces/members/connections/accounts';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsGet, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { Button } from '@material/mwc-button';\r\nimport { QueryOptions } from 'select2';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport \"@material/mwc-select\";\r\nimport '@@addons/widgets/form/new/select';\r\nimport { UserConnectionType_I, UserConnectionType_S } from '@@addons/interfaces/members/connections/types';\r\nimport { GET_UserConnectionType } from '@@addons/network/members/connections/types';\r\nimport { MembershipUser_I, MembershipUser_S } from '@@addons/interfaces/members/user';\r\nimport { GET_MembershipUsers } from '@@addons/network/members/membership/users';\r\nimport { until } from 'lit/directives/until.js';\r\n\r\n\r\nexport function show_selection_member_id_filter(memberId: number) {\r\n  if (memberId === 0) {\r\n    return nothing;\r\n  } else {\r\n    const ___ = new PdbConnectionsMembersView();\r\n    return html`\r\n      <h4 class=\"font-semibold my-2\">\r\n        Current Selection: ${until(___.getMember(memberId), html`<span>Loading...</span>`)}\r\n      </h4>\r\n    `;\r\n  }\r\n}\r\n@customElement(\"pdb-connections-members-view\")\r\nexport class PdbConnectionsMembersView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Array })\r\n  private _connection_accounts: UserConnectionAccount_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage1: number = 0;\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"members/user-connection-account/member/\";\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, isOpen: true,\r\n    });\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this._connection_accounts === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._connection_accounts === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Schedule </span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1 overflow-x-scroll\">\r\n        <hr class=\"my-2\" />\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, unmutableInputNames: [], isOpen: true,\r\n    });\r\n    \r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_memberId = \"memberId\";\r\n\r\n    let filterNameId_filter_memberIdVal: number = 0;\r\n\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = Number(_urlQueryParams[key]);\r\n      value = Number.isNaN(value) ? 0 : value;\r\n      if (key === filterNameId_filter_memberId) {\r\n        filterNameId_filter_memberIdVal = value;\r\n      }\r\n    }\r\n\r\n    const memberField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <h4 class=\"font-semibold my-2\">Select Member</h4>\r\n          ${show_selection_member_id_filter(filterNameId_filter_memberIdVal)}\r\n          <select-input class=\"w-100\" id=\"${filterNameId_filter_memberId}\" name=\"${filterNameId_filter_memberId}\" label=\"Select Member\"\r\n            .ajaxFetchProcessResponse=\"${this.processClientUserSearch1}\" startSearchPage=\"${this.startSearchPage1}\"\r\n            .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams1}\"\r\n            ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n      </div>`;\r\n\r\n    returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          ${memberField}\r\n          <div class=\"col-xl-12 col-md-10\">\r\n            <div class=\"form-input-container mt-1\">\r\n              <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n              <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private processClientUserSearch1(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"memberId\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const member: MembershipUser_I = MembershipUser_S(item);\r\n        \r\n        const id = member.id;\r\n        const fullName = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams1(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"\", value: \"\" }\r\n    ]\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get getMemberId() {\r\n    const filterNameId_filter_memberId = \"memberId\";\r\n    let _memberId = urlQueryParamsGet(filterNameId_filter_memberId);\r\n    const memberId = Number.isNaN(_memberId) ? 0 : Number(_memberId);\r\n    // console.log({ \"this.meetingEventId\": this.meetingEventId });\r\n    return memberId;\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + this.getMemberId + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n\r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const memberId = connectionInfo.memberId;\r\n    const connectionId = connectionInfo.connectionId;\r\n    return `\r\n      <div class=\"flex flex-col\">\r\n        <div class=\"flex flex-col lg:flex-row m-1 justify-start\">\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionId.firstname} ${connectionId.middlename}\r\n              ${connectionId.surname}</p>\r\n          </div>\r\n          <div class=\"m-1\"><mwc-icon>directions<mwc-icon/></div>\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Member Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${memberId.firstname} ${memberId.middlename} ${memberId.surname}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderClockInInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const connectionType = connectionInfo.type;    \r\n    return `\r\n      <div class=\"justify-center content-center\">\r\n        <mwc-icon-button class=\"ml-1 danger\" icon=\"delete_forever\" \r\n          delete-this-item=\"${connectionInfo.id}\" >\r\n        </mwc-icon-button>\r\n        <div class=\"flex flex-col\">\r\n          <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Type:</h6>\r\n          <div class=\"flex flex-col\">\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionType.type}</p>\r\n            <p class=\"text-xs ml-1 whitespace-pre-wrap\">${connectionType.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_memberId = \"memberId\";\r\n\r\n    let newObject: any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_memberId)) {\r\n        // console.log({value, });\r\n\r\n        newObject[key] = value;\r\n      }\r\n    }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"__this\": __this, url });\r\n\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderMemberInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderClockInInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteConnectionAction();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private deleteConnectionAction() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteConnection(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async deleteConnection(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userConnectionId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_UserConnectionAccount(userConnectionId);\r\n  }\r\n\r\n  public async getMember(ID: number) {\r\n    const _networkResponse = await GET_MembershipUsers<MembershipUser_I>(ID);\r\n    if (_networkResponse === null) {\r\n      return \"???\";\r\n    } else {\r\n      // console.log({\"_networkResponse.response\": _networkResponse.response});\r\n      \r\n      if (_networkResponse.response.success && 'dateOfBirth' in _networkResponse.response.data) {\r\n        // console.log({ \"_networkResponse.response\": _networkResponse.response })\r\n        \r\n        const member: MembershipUser_I = MembershipUser_S(_networkResponse.response.data);\r\n        return `${member.firstname} ${member.middlename} ${member.surname}`;\r\n      } else {\r\n        return _networkResponse.response.message;\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"user_connections\": 56,\r\n  \"connection_types\": 57,\r\n};"],"names":["__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","Boolean_I","bool","_bool","String","toLowerCase","Constituency_S","id","Number","regionId","Region_S","_Region_D","districtId","District_S","_District_D","location","_Constituency_D","Country_S","_data","name","short","code","_Country_D","ElectoralArea_S","_ElectoralArea_D","null_string","params","replace","MembershipUser_S","clientId","firstname","middlename","surname","gender","profilePicture","dateOfBirth","Date","phone","email","religion","nationality","countryOfResidence","stateProvince","region","district","constituency","electoralArea","community","hometown","houseNoDigitalAddress","digitalAddress","referenceId","accountType","memberType","branchId","editable","profileResume","profileIdentification","archived","identification","level","status","lastUpdatedBy","date","last_login","countryInfo","regionInfo","districtInfo","constituencyInfo","electoralareaInfo","DELETE_UserConnectionAccount","ID","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","text","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","e","err","push","res","console","errorHttp","postForm","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","reload","GET_MembershipUsers","url_params","withLocation","raw_url","location_url","show_selection_member_id_filter","memberId","nothing","___","PdbConnectionsMembersView","html","until","getMember","LitElement","constructor","super","_connection_accounts","startSearchPage1","datatablePathUrl","connectedCallback","this","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","isOpen","disconnectedCallback","render","undefined","toggleFilterFields","filterForm","table","firstUpdated","unmutableInputNames","returnHtml","_urlQueryParams","urlQueryParams","filterNameId_filter_memberId","filterNameId_filter_memberIdVal","ajaxHeader","key","isNaN","memberField","processClientUserSearch1","ajaxFetchUrlParams1","clear_filter","submit","page","TOTAL","count","RESULTS","results","SELECTOR","document","querySelector","processedData","i","item","member","_new","includes","total","totalShowing","param","__tableHeaders","__tableBody","__tableFoot","getMemberId","_memberId","urlQueryParamsGet","URL","urlQueryString","__dataTable","renderMemberInfo","type","connectionInfo","connectionId","renderClockInInfo","connectionType","description","newObject","_urlQueryParamsJoin","urlQueryParamsJoin","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","deleteConnectionAction","buttons","select","querySelectorAll","btn","addEventListener","deleteConnection","preventDefault","userConnectionId","currentTarget","getAttribute","_networkResponse","createRenderRoot","styles","css","query","Button","Element","HTMLFormElement","property","customElement","PAGE__IDS"],"sourceRoot":""}