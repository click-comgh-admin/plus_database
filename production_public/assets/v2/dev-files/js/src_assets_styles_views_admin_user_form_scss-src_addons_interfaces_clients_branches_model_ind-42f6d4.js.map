{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_assets_styles_views_admin_user_form_scss-src_addons_interfaces_clients_branches_model_ind-42f6d4.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/clients/branches/model/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/organization/patch.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/patch.ts","webpack://webpackNumbers/./src/addons/widgets/alert/index.ts","webpack://webpackNumbers/./src/view/membership/members/edit/pages/extras/branch_category.ts","webpack://webpackNumbers/./src/view/membership/members/edit/pages/extras/location.ts","webpack://webpackNumbers/./src/view/membership/members/page__id.ts"],"sourcesContent":["// To parse this data:\n//\n//   import { Convert, ClientBranchModel } from \"./file\";\n//\n//   const clientBranchModel = Convert.toClientBranchModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientBranchModel {\n    id?:           number;\n    name?:         string;\n    accountID?:    number;\n    createdBy?:    number;\n    creationDate?: Date;\n    updatedBy?:    number;\n    updateDate?:   Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toClientBranchModel(json: string): ClientBranchModel {\n        return cast(JSON.parse(json), r(\"ClientBranchModel\"));\n    }\n\n    public static clientBranchModelToJson(value: ClientBranchModel): string {\n        return JSON.stringify(uncast(value, r(\"ClientBranchModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = ''): never {\n    if (key) {\n        throw Error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        \n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"ClientBranchModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"name\", js: \"name\", typ: u(null, \"\") },\n        { json: \"accountId\", js: \"accountID\", typ: u(null, 0) },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"creationDate\", js: \"creationDate\", typ: u(null, Date) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n    ], false),\n};\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsMemberCategories<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/member-category'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_MembershipOrganizationUser(ID: Number, message: string = null): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-organization\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: message ?? 'Update Member Data?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_MembershipUser(ID: Number, message: string = null): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: message ?? 'Update Member Data?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/tailwind-output/loading_placeholder.scss';\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '../../../assets/styles/views/widget/alert/alert.scss';\r\n\r\n\r\n@customElement('alert-card')\r\nexport class AlertCard extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  public loading?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public success?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public info?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public warning?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public danger?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public default?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public primary?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public extra_class?: string = \"\";\r\n\r\n  public header?: TemplateResult<1> = null;\r\n\r\n  public content?: TemplateResult<1> = null;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.loading) {\r\n      return html`\r\n        <div class=\"bg-white alert-box p-0 pr-2 mb-2\">\r\n          <div class=\"flex flex-row items-center\">\r\n            <div class=\"flex-shrink pr-4 placeholder--load-wrapper\">\r\n              <div class=\"p-3 placeholder--activity\">\r\n                <i class=\"p-2\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"ml-2 flex-1 placeholder--load-wrapper\">\r\n              <div class=\"placeholder--activity p-2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"alert-box\">\r\n          <div class=\"alert-container ${this.getClass} ${this.extra_class}\">\r\n            <aside class=\"${this.getClass}\">\r\n              <div class=\"padded\">\r\n                ${this.getIcon}\r\n              </div>\r\n            </aside>\r\n            <div class=\"content\">\r\n              ${this.header !== null? html`<header class=\"header\">${this.header}</header>`: nothing}\r\n              ${this.content !== null? html`<main class=\"main\">${this.content}</main>`: nothing}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get getClass() {\r\n    if (this.success) {\r\n      return \"success\";\r\n    }\r\n    if (this.info) {\r\n      return \"info\";\r\n    }\r\n    if (this.warning) {\r\n      return \"warning\";\r\n    }\r\n    if (this.danger) {\r\n      return \"danger\";\r\n    }\r\n    if (this.default) {\r\n      return html`<mwc-icon></mwc-icon>`;\r\n    }\r\n    if (this.primary) {\r\n      return \"primary\";\r\n    }\r\n  }\r\n\r\n  private get getIcon() {\r\n    if (this.success) {\r\n      return html`<mwc-icon>check_circle_outline</mwc-icon>`;\r\n    }\r\n    if (this.info) {\r\n      return html`<mwc-icon>notification_important</mwc-icon>`;\r\n    }\r\n    if (this.warning) {\r\n      return html`<mwc-icon>warning</mwc-icon>`;\r\n    }\r\n    if (this.danger) {\r\n      return html`<mwc-icon>error_outline</mwc-icon>`;\r\n    }\r\n    if (this.default) {\r\n      return html`<mwc-icon>priority_high</mwc-icon>`;\r\n    }\r\n    if (this.primary) {\r\n      return html`<mwc-icon>star_outline</mwc-icon>`;\r\n    }\r\n\r\n    return html`<mwc-icon>emoji_objects</mwc-icon>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@material/mwc-circular-progress';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@@addons/widgets/alert';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { MembershipMixedUserModel } from '@@addons/interfaces/members/user/mixed';\r\nimport { PATCH_MembershipOrganizationUser } from '@@addons/network/members/membership/users/organization/patch';\r\nimport { GroupingsMemberCategoryModel } from '@@addons/interfaces/members/groupings/member_categories/model';\r\nimport { ClientBranchModel } from '@@addons/interfaces/clients/branches/model';\r\nimport { PATCH_MembershipUser } from '@@addons/network/members/membership/users/patch';\r\n\r\n\r\n@customElement(\"pdb-membership-update-view-branch-category\")\r\nexport class PdbMembershipUpdateViewBranchCategory extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public memberId?: number;\r\n\r\n  @property({ type: String })\r\n  public updateType?: \"member\" | \"organization\";\r\n\r\n  @property({ type: Array })\r\n  public memberInfo: MembershipMixedUserModel[] = null;\r\n\r\n  @property({ type: Array })\r\n  public categories: GroupingsMemberCategoryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public branches: ClientBranchModel[] = [];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    console.log({\"this.branches\": this.branches});\r\n    console.log({\"this.categories\": this.categories});\r\n    \r\n\r\n    if (this.memberInfo === null) return this.pageLoading;\r\n    if (this.memberInfo.length < 1) this.memberInfo.push(null);\r\n    return this.memberInfo.map(member => {\r\n      return html`\r\n      <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"--awaiting-type--\" enctype=\"multipart/form-data\">\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mt-1 mb-2\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 grid-flow-row gap-4\">\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Account Branch</h4>\r\n              <mwc-select name=\"branchId\" id=\"branchId\" label=\"Select Account Branch\" outlined required>\r\n                ${this.branches.map((item) => {\r\n                  // console.log({item});\r\n                  if (member.branchId === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                })}\r\n              </mwc-select>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Account Category</h4>\r\n              <mwc-select name=\"memberType\" id=\"memberType\" label=\"Select Account Category\" outlined required>\r\n                ${this.categories.map((item) => {\r\n                  // console.log({item});\r\n                  if (member.memberType === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.category}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.category}</mwc-list-item>`;\r\n                })}\r\n              </mwc-select>\r\n            </div>\r\n            <input type=\"hidden\" name=\"memberId\" id=\"memberId\" value=\"${this.memberId}\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-1\">\r\n          <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" @click=\"${this.submitForm}\">\r\n          </mwc-button>\r\n        </div>\r\n      </form>\r\n     `;\r\n    });\r\n  }\r\n\r\n  private get pageLoading() {\r\n    return html`\r\n    <div class=\"main-container\">\r\n      <div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>\r\n    </div>\r\n   `;\r\n  }\r\n\r\n  // private get pageError() {\r\n  //   const header = html`<h4 class=\"text-gray-600\">No Data Found!</h4>`,\r\n  //     content = nothing;\r\n  //   return html`\r\n  //   <div class=\"col-md-12\">\r\n  //     <alert-card info .header=\"${header}\" .content=\"${content}\" extra_class=\"!max-w-full\"></alert-card>\r\n  //   </div>\r\n  //  `;\r\n  // }\r\n\r\n  firstUpdated() { }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    if (this.updateType === \"member\") {\r\n      const _handleMultitpleSubmitFormSelectors = this.handleMultitpleSubmitFormSelectors();\r\n      _handleMultitpleSubmitFormSelectors.handle(\"members-user\");\r\n\r\n      await PATCH_MembershipUser(this.memberId);\r\n      _handleMultitpleSubmitFormSelectors.reset(\"members-user\");\r\n    } else {\r\n      const _handleMultitpleSubmitFormSelectors = this.handleMultitpleSubmitFormSelectors();\r\n      _handleMultitpleSubmitFormSelectors.handle(\"members-user-organization\");\r\n\r\n      await PATCH_MembershipOrganizationUser(this.memberId);\r\n      _handleMultitpleSubmitFormSelectors.reset(\"members-user-organization\");\r\n    }\r\n  }\r\n\r\n  handleMultitpleSubmitFormSelectors() {\r\n    type submit_type = \"members-user\" | \"members-user-organization\";\r\n    return {\r\n      handle: (submitType: submit_type) => {\r\n        // console.log({submitType});\r\n\r\n        document.querySelectorAll('[make-general-posts=\"--awaiting-type--\"]').forEach(form => {\r\n          if (form.hasAttribute(\"make-general-posts\")) {\r\n            // console.log({formSubmitType});\r\n            form.setAttribute(\"make-general-posts\", submitType)\r\n          }\r\n        });\r\n      },\r\n      reset: (submitType: submit_type) => {\r\n        document.querySelectorAll(`[make-general-posts=\"${submitType}\"]`).forEach(form => {\r\n          form.setAttribute(\"make-general-posts\", \"--awaiting-type--\")\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@material/mwc-circular-progress';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@@addons/widgets/alert';\r\nimport { MembershipMixedUserModel } from '@@addons/interfaces/members/user/mixed';\r\nimport { LocationCountryModel } from '@@addons/interfaces/location/country_model';\r\nimport { PATCH_MembershipOrganizationUser } from '@@addons/network/members/membership/users/organization/patch';\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from '@@addons/interfaces/location/constituency_model';\r\nimport { LocationDistrictModel, Convert as ldmConvert } from '@@addons/interfaces/location/district_model';\r\nimport { LocationRegionModel, Convert as lrmConvert } from '@@addons/interfaces/location/region_model';\r\nimport { GET_LocationConstituencyFilter } from '@@addons/network/location/constituency/filter';\r\nimport { GET_LocationDistrictFilter } from '@@addons/network/location/district/filter';\r\nimport { GET_LocationRegion } from '@@addons/network/location/region';\r\nimport { PATCH_MembershipUser } from '@@addons/network/members/membership/users/patch';\r\n\r\n\r\n@customElement(\"pdb-membership-update-view-location\")\r\nexport class PdbMembershipUpdateViewLocation extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public memberId?: number;\r\n\r\n  @property({ type: String })\r\n  public updateType?: \"member\" | \"organization\";\r\n\r\n  @property({ type: Number })\r\n  private selectedCountry: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public memberInfo: MembershipMixedUserModel[] = null;\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this.memberInfo === null) return this.pageLoading;\r\n    if (this.memberInfo.length < 1) this.memberInfo.push(null);\r\n\r\n    const country_name_id = this.updateType === \"member\"? \"countryOfResidence\": \"countryOfBusiness\";\r\n    return this.memberInfo.map(member => {  \r\n      // this.selectedCountry = Number(member[country_name_id]);\r\n      // console.log({\"this.selectedCountry === 76\": this.selectedCountry === 76, \"this.selectedCountry\": this.selectedCountry});\r\n      \r\n      return html`\r\n      <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"--awaiting-type--\" enctype=\"multipart/form-data\">\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mt-1 mb-2\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 grid-flow-row gap-4\">\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n              <mwc-select name=\"${country_name_id}\" id=\"${country_name_id}\" label=\"Select Country\" outlined required @change=\"${this.countryChanged}\">\r\n                ${this.countries.map((item) => {\r\n                  // console.log({item});\r\n                  let countryId = 0;\r\n                  if (member?.countryInfo.length > 0) {\r\n                    countryId = member?.countryInfo[0].id;\r\n                  }\r\n                  if (countryId === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                })}\r\n              </mwc-select>\r\n            </div>\r\n            ${(this.selectedCountry === 76)? html`<div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n              <mwc-select name=\"region\" id=\"region\" label=\"Select Region\" outlined required @change=\"${this.regionChanged}\">\r\n                ${this.regions.map((item) => {\r\n                  // console.log({item});\r\n                  if (member?.region === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.location}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.location}</mwc-list-item>`;\r\n                })}\r\n              </mwc-select>\r\n            </div>`: nothing}\r\n            ${(this.selectedCountry === 76)? html`<div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select District</h4>\r\n              <mwc-select name=\"district\" id=\"district\" label=\"Select District\" outlined required @change=\"${this.districtChanged}\">\r\n                ${this.districts.map((item) => {\r\n                  // console.log({item});\r\n                  if (member?.district === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.location}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.location}</mwc-list-item>`;\r\n                })}\r\n              </mwc-select>\r\n            </div>`: nothing}\r\n            ${(this.selectedCountry === 76)? html`<div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n              <mwc-select name=\"constituency\" id=\"constituency\" label=\"Select Constituency\" outlined required>\r\n                ${this.constituencies.map((item) => {\r\n                  // console.log({item});\r\n                  if (member?.constituency === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.location}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.location}</mwc-list-item>`;\r\n                })}\r\n              </mwc-select>\r\n            </div>`: nothing}\r\n            ${(this.selectedCountry !== 76)? html`<div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Enter State/ Province</h4>\r\n              <mwc-textfield name=\"stateProvince\" id=\"stateProvince\" label=\"Enter State/ Province\" outlined type=\"text\" value=\"${member?.stateProvince}\">\r\n              </mwc-textfield>\r\n            </div>`: nothing}\r\n            <input type=\"hidden\" name=\"memberId\" id=\"memberId\" value=\"${this.memberId}\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-1\">\r\n          <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" @click=\"${this.submitForm}\">\r\n          </mwc-button>\r\n        </div>\r\n      </form>\r\n     `;\r\n    });\r\n  }\r\n\r\n  private get pageLoading() {\r\n    return html`\r\n    <div class=\"main-container\">\r\n      <div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>\r\n    </div>\r\n   `;\r\n  }\r\n\r\n  // private get pageError() {\r\n  //   const header = html`<h4 class=\"text-gray-600\">No Data Found!</h4>`,\r\n  //     content = nothing;\r\n  //   return html`\r\n  //   <div class=\"col-md-12\">\r\n  //     <alert-card info .header=\"${header}\" .content=\"${content}\" extra_class=\"!max-w-full\"></alert-card>\r\n  //   </div>\r\n  //  `;\r\n  // }\r\n\r\n  private async countryChanged(e: Event) {\r\n    // @ts-ignore\r\n    const countryID = e.currentTarget.value;\r\n    this.selectedCountry = Number.isNaN(countryID) ? 0 : Number(countryID);\r\n    // console.log({\"this.selectedCountry\": this.selectedCountry});\r\n    \r\n\r\n    this.countryCheck(false);\r\n  }\r\n\r\n  private async countryCheck(init?: boolean) {\r\n    const country_name_id = this.updateType === \"member\"? \"countryOfResidence\": \"countryOfBusiness\";\r\n    if (init) {\r\n      // console.log({\"document.querySelector('[name='+country_name_id+']')\": document.querySelector('[name=\"'+country_name_id+'\"]')});\r\n      \r\n      // @ts-ignore\r\n      const countryID = document.querySelector('[name=\"' + country_name_id + '\"]').value;\r\n      // console.log({countryID});\r\n      \r\n      this.selectedCountry = Number.isNaN(countryID) ? 0 : Number(countryID);\r\n      // console.log({\"this.selectedCountry\": this.selectedCountry});\r\n    }\r\n    \r\n\r\n    if (this.selectedCountry === 76) {\r\n      // console.log({\"this.regionCalled\": this.regionCalled});\r\n      if (this.regionCalled === false) await this.getLocationRegion();\r\n      // console.log({\"this.regions\": this.regions});\r\n      this.regionCalled = true;\r\n    }\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    // @ts-ignore\r\n    const regionID = e.currentTarget.value;\r\n    this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n    \r\n    this.getLocationDistrict(this.selectedRegion);\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    // @ts-ignore\r\n    const districtID = e.currentTarget.value;\r\n    this.selectedDistrict = Number.isNaN(districtID) ? 0 : Number(districtID);\r\n    \r\n    this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n  }\r\n\r\n  firstUpdated() { \r\n    setTimeout(() => {\r\n      this.countryCheck(true);\r\n    }, 100);\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let _regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _regions = [..._regions, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationRegionModel> = [];\r\n    new_data.push(...this.regions, ..._regions);\r\n    this.regions = new_data;\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this.districts = [];\r\n    const identity = String(regionID),\r\n      districtsMemo = this.districtsMemo;\r\n    // console.log({identity, districtsMemo,})\r\n    if (identity in districtsMemo) { // implementing memoization\r\n      // console.log({ \"districtsMemo[identity]\": districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationDistrictModel> = [];\r\n        new_data.push(...this.districts, ...districtsMemo[identity]);\r\n        this.districts = new_data;\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let _districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        _districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          _districts = [..._districts, ...DATA];\r\n          this.districtsMemo[identity] = _districts;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationDistrictModel> = [];\r\n      new_data.push(...this.districts, ..._districts);\r\n      this.districts = new_data;\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this.constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      constituenciesMemo = this.constituenciesMemo;\r\n    if (identity in constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationConstituencyModel> = [];\r\n        new_data.push(...this.constituencies, ...constituenciesMemo[identity]);\r\n        this.constituencies = new_data;\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let _constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        _constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          _constituencies = [..._constituencies, ...DATA];\r\n          this.constituenciesMemo[identity] = _constituencies;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationConstituencyModel> = [];\r\n      new_data.push(...this.constituencies, ..._constituencies);\r\n      this.constituencies = new_data;\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    if (this.updateType === \"member\") {\r\n      const _handleMultitpleSubmitFormSelectors = this.handleMultitpleSubmitFormSelectors();\r\n      _handleMultitpleSubmitFormSelectors.handle(\"members-user\");\r\n\r\n      await PATCH_MembershipUser(this.memberId);\r\n      _handleMultitpleSubmitFormSelectors.reset(\"members-user\");\r\n    } else {\r\n      const _handleMultitpleSubmitFormSelectors = this.handleMultitpleSubmitFormSelectors();\r\n      _handleMultitpleSubmitFormSelectors.handle(\"members-user-organization\");\r\n\r\n      await PATCH_MembershipOrganizationUser(this.memberId);\r\n      _handleMultitpleSubmitFormSelectors.reset(\"members-user-organization\");\r\n    }\r\n  }\r\n\r\n  handleMultitpleSubmitFormSelectors() {\r\n    type submit_type = \"members-user\" | \"members-user-organization\";\r\n    return {\r\n      handle: (submitType: submit_type) => {\r\n        // console.log({submitType});\r\n\r\n        document.querySelectorAll('[make-general-posts=\"--awaiting-type--\"]').forEach(form => {\r\n          if (form.hasAttribute(\"make-general-posts\")) {\r\n            // console.log({formSubmitType});\r\n            form.setAttribute(\"make-general-posts\", submitType)\r\n          }\r\n        });\r\n      },\r\n      reset: (submitType: submit_type) => {\r\n        document.querySelectorAll(`[make-general-posts=\"${submitType}\"]`).forEach(form => {\r\n          form.setAttribute(\"make-general-posts\", \"--awaiting-type--\")\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","export const PAGE__IDS = {\r\n  \"view\": 21,\r\n  \"edit\": 22,\r\n  \"create\": 23,\r\n  \"view-organization\": 53,\r\n  \"edit-organization\": 54,\r\n};"],"names":["Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","invalidValue","typ","val","key","Error","undefined","jsonToJS","map","props","forEach","p","js","jsToJSON","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","GET_ClientBranches","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","GET_MemberGroupingsMemberCategories","PATCH_MembershipOrganizationUser","ID","message","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","errors","e","err","errormsg","id","push","res","https_swal_error_format","catch","String","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","success","setTimeout","window","location","reload","PATCH_MembershipUser","AlertCard","LitElement","constructor","super","loading","info","warning","danger","default","primary","extra_class","header","content","connectedCallback","disconnectedCallback","render","this","html","getClass","getIcon","nothing","firstUpdated","createRenderRoot","styles","css","property","Boolean","customElement","PdbMembershipUpdateViewBranchCategory","memberInfo","categories","branches","log","pageLoading","member","item","branchId","memberType","category","memberId","submitForm","updateType","_handleMultitpleSubmitFormSelectors","handleMultitpleSubmitFormSelectors","handle","reset","submitType","querySelectorAll","form","hasAttribute","setAttribute","Number","PdbMembershipUpdateViewLocation","selectedCountry","regionCalled","selectedRegion","selectedDistrict","countries","regions","districts","constituencies","constituenciesMemo","districtsMemo","country_name_id","countryChanged","countryId","countryInfo","regionChanged","region","districtChanged","district","constituency","stateProvince","countryID","currentTarget","countryCheck","init","getLocationRegion","regionID","getLocationDistrict","districtID","getLocationConstituency","_networkResponse","GET_LocationRegion","_regions","data","DATA","new_data","identity","GET_LocationDistrictFilter","_districts","regionId","GET_LocationConstituencyFilter","_constituencies","PAGE__IDS"],"sourceRoot":""}