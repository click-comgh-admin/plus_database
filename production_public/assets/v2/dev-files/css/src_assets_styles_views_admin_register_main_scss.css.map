{"version":3,"file":"../../production_public/assets/v2/dev-files/css/src_assets_styles_views_admin_register_main_scss.css","mappings":"AAAA;EACI;EACA;ACCJ;;ADGA;AENA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADOJ;;ADXA;AAGA;AGbA;AAAgE;EAAiB;EAAuB;AF6BxG;;AE7B8H;EAAe;AFiC7I;;AEjC6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AF2C5c;;AE3Cud;EAAK;EAAoB;AFgDhf;;AEhDyf;EAAG;EAAqB;EAAc;AFsD/hB;;AEtDwiB;EAAoB;EAAyC;AF2DrmB;;AE3DsoB;EAAkB;EAAkB;AFgE1qB;;AEhE8rB;EAAE;EAAc;AFqE9sB;;AErEsuB;EAAS;AFyE/uB;;AEzEkwB;EAAkB;EAAoG;AF8Ex3B;;AE9Es4B;EAAM;AFkF54B;;AElF05B;EAAQ;EAAc;EAAc;EAAkB;AFyFh9B;;AEzFw+B;EAAI;AF6F5+B;;AE7F0/B;EAAI;AFiG9/B;;AEjGwgC;EAAM;EAAyB;EAAqB;AFuG5jC;;AEvG0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AFiHltC;;AEjH4tC;EAAc;AFqH1uC;;AErH8vC;EAAgD;EAA0B;EAA6B;AF2Hr2C;;AE3H23C;EAAgB;AF+H34C;;AE/Hw5C;EAAiB;AFmIz6C;;AEnIy7C;EAAS;AFuIl8C;;AEvI09C;EAAwD;AF2IlhD;;AE3I8hD;EAAc;EAA6B;AFgJzkD;;AEhJ6lD;EAA4B;AFoJznD;;AEpJipD;EAA6B;EAA0B;AFyJxsD;;AEzJqtD;EAAQ;AF6J7tD;;AE7J+uD;EAAmD;AFiKlyD;;AEjK2yD;EAAS;AFqKpzD;;AErK6zD;EAAgB;AFyK70D;;AEzKu1D;EAAW;EAAgB;EAAS;AF+K33D;;AE/Kq4D;EAAS;AFmL94D;;AEnL85D;EAAmD;EAAc;AFwL/9D;;AExLy+D;EAAyC;EAAc;AF6LhiE;;AE7L0iE;EAAqB;AFiM/jE;;AEjM8kE;EAAU;AFqMxlE;;AErMumE;EAA+C;EAAc;AF0MpqE;;AE1M0rE;EAAU;EAAY;AF+MhtE;;AE/M+tE;EAAS;AFmNxuE;;AEnNqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFkQjpG;;AElQuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFiT7jI;;AEjTmlI;EAAW;AFqT9lI;;AErTymI;EAAyB;IAAW;EF0T3oI;AACF;AE3T8pI;EAAyB;IAAW;EF+ThsI;AACF;AEhUmtI;EAA0B;IAAW;EFoUtvI;AACF;AErU0wI;EAA0B;IAAW;EFyU7yI;AACF;AE1Ui0I;EAA0B;IAAW;EF8Up2I;AACF;AE/Uw3I;EAA0B;IAAW;EFmV35I;AACF;AEpV+6I;EAAS;AFuVx7I;;AEvV28I;EAAW;AF2Vt9I;;AE3Vw+I;EAAQ;AF+Vh/I;;AE/VggJ;EAAO;AFmWvgJ;;AEnWshJ;EAAU;AFuWhiJ;;AEvWkjJ;EAAU;AF2W5jJ;;AE3W8kJ;EAAS;EAAS;EAAO;EAAQ;AFkX/mJ;;AElXqnJ;EAAQ;AFsX7nJ;;AEtXwoJ;EAAQ;AF0XhpJ;;AE1XupJ;EAAS;AF8XhqJ;;AE9XwqJ;EAAS;AFkYjrJ;;AElY4rJ;EAAW;AFsYvsJ;;AEtYmtJ;EAAO;AF0Y1tJ;;AE1YguJ;EAAO;AF8YvuJ;;AE9YgvJ;EAAS;AFkZzvJ;;AElZmwJ;EAAQ;AFsZ3wJ;;AEtZoxJ;EAAQ;AF0Z5xJ;;AE1ZqyJ;EAAU;AF8Z/yJ;;AE9Z4zJ;EAAS;AFkar0J;;AElam1J;EAAU;AFsa71J;;AEta42J;EAAgB;AF0a53J;;AE1au4J;EAAM;AF8a74J;;AE9aw5J;EAAM;AFkb95J;;AElby6J;EAAM;AFsb/6J;;AEtb07J;EAAK;AF0b/7J;;AE1by8J;EAAK;AF8b98J;;AE9b49J;EAAK;AFkcj+J;;AElc0+J;EAAM;AFsch/J;;AEtc4/J;EAAO;EAAmB;AF2cthK;;AE3csiK;EAAS;EAAiB;AFgdhkK;;AEhdklK;EAAM;EAAoB;AFqd5mK;;AErd6nK;EAAM;EAAgB;AF0dnpK;;AE1dgqK;EAAM;EAAqB;AF+d3rK;;AE/d6sK;EAAM;EAAiB;AFoepuK;;AEpesvK;EAAM;EAAmB;AFye/wK;;AEze+xK;EAAM;EAAkB;AF8evzK;;AE9e00K;EAAM;EAAmB;AFmfn2K;;AEnfu3K;EAAQ;EAA6B;AFwf55K;;AExf07K;EAAQ;EAA+B;AF6fj+K;;AE7f6/K;EAAO;EAAiB;AFkgBrhL;;AElgBuiL;EAAO;AFsgB9iL;;AEtgBikL;EAAO;AF0gBxkL;;AE1gBwlL;EAAO;AF8gB/lL;;AE9gBknL;EAAM;AFkhBxnL;;AElhB2oL;EAAM;AFshBjpL;;AEthBmqL;EAAM;AF0hBzqL;;AE1hB6rL;EAAM;AF8hBnsL;;AE9hBqtL;EAAM;AFkiB3tL;;AEliB2uL;EAAM;AFsiBjvL;;AEtiBowL;EAAM;AF0iB1wL;;AE1iB4xL;EAAM;AF8iBlyL;;AE9iBmzL;EAAM;AFkjBzzL;;AEljB80L;EAAM;AFsjBp1L;;AEtjBw2L;EAAM;AF0jB92L;;AE1jBi4L;EAAM;AF8jBv4L;;AE9jBo5L;EAAM;AFkkB15L;;AElkB46L;EAAM;AFskBl7L;;AEtkBo8L;EAAM;AF0kB18L;;AE1kBw9L;EAAM;AF8kB99L;;AE9kB6+L;EAAM;AFklBn/L;;AEllBsgM;EAAO;AFslB7gM;;AEtlB+hM;EAAO;AF0lBtiM;;AE1lByjM;EAAO;AF8lBhkM;;AE9lBmlM;EAAM;AFkmBzlM;;AElmB0mM;EAAO;AFsmBjnM;;AEtmBmoM;EAAO;AF0mB1oM;;AE1mBwpM;EAAS;AF8mBjqM;;AE9mByrM;EAAc;AFknBvsM;;AElnB4tM;EAAM;AFsnBluM;;AEtnB+uM;EAAQ;AF0nBvvM;;AE1nB8wM;EAAa;AF8nB3xM;;AE9nB+yM;EAAO;AFkoBtzM;;AEloBo0M;EAAY;AFsoBh1M;;AEtoBm2M;EAAoB;AF0oBv3M;;AE1oBk5M;EAAiB;AF8oBn6M;;AE9oB27M;EAAW;AFkpBt8M;;AElpBw9M;EAAM;AFspB99M;;AEtpB2+M;EAAU;AF0pBr/M;;AE1pBsgN;EAAQ;AF8pB9gN;;AE9pB2hN;EAAM;AFkqBjiN;;AElqB8iN;EAAQ;AFsqBtjN;;AEtqBkkN;EAAK;AF0qBvkN;;AE1qBmlN;EAAM;AF8qBzlN;;AE9qBqmN;EAAM;AFkrB3mN;;AElrBunN;EAAM;AFsrB7nN;;AEtrB0oN;EAAM;AF0rBhpN;;AE1rB6pN;EAAK;AF8rBlqN;;AE9rBgrN;EAAM;AFksBtrN;;AElsBmsN;EAAM;AFssBzsN;;AEtsBstN;EAAM;AF0sB5tN;;AE1sBwuN;EAAM;AF8sB9uN;;AE9sB4vN;EAAM;AFktBlwN;;AEltBixN;EAAK;AFstBtxN;;AEttBmyN;EAAM;AF0tBzyN;;AE1tBqzN;EAAO;EAAwB;AF+tBp1N;;AE/tBu2N;EAAa;AFmuBp3N;;AEnuBi4N;EAAU;AFuuB34N;;AEvuB45N;EAAQ;AF2uBp6N;;AE3uB+6N;EAAK;AF+uBp7N;;AE/uB+7N;EAAM;AFmvBr8N;;AEnvBg9N;EAAM;AFuvBt9N;;AEvvBi+N;EAAO;EAAuB;AF4vB//N;;AE5vBihO;EAAK;AFgwBthO;;AEhwBmiO;EAAK;AFowBxiO;;AEpwBqjO;EAAK;AFwwB1jO;;AExwBskO;EAAQ;AF4wB9kO;;AE5wBylO;EAAM;AFgxB/lO;;AEhxB2mO;EAAM;AFoxBjnO;;AEpxB6nO;EAAM;AFwxBnoO;;AExxB8oO;EAAM;AF4xBppO;;AE5xBgqO;EAAM;AFgyBtqO;;AEhyBkrO;EAAM;AFoyBxrO;;AEpyBosO;EAAmB;EAAuB;AFyyB9uO;;AEzyBgwO;EAAa;AF6yB7wO;;AE7yByxO;EAAQ;AFizBjyO;;AEjzBszO;EAAc;AFqzBp0O;;AErzB61O;EAAQ;AFyzBr2O;;AEzzBi3O;EAAa;AF6zB93O;;AE7zB44O;EAAW;AFi0Bv5O;;AEj0Bm6O;EAAW;AFq0B96O;;AEr0Bg8O;EAAsB;AFy0Bt9O;;AEz0BopP;EAAQ;AF60B5pP;;AE70BwqP;EAAW;AFi1BnrP;;AEj1BwsP;EAAiB;EAAwB;EAAqB;AFu1BtwP;;AEv1BsxP;EAAe;AF21BryP;;AE31BwzP;EAAa;AF+1Br0P;;AE/1Bm3P;EAAU;AFm2B73P;;AEn2Bg5P;EAAkB;AFu2Bl6P;;AEv2B67P;EAAU;AF22Bv8P;;AE32B69P;EAAW;AF+2Bx+P;;AE/2Bu/P;EAAa;AFm3BpgQ;;AEn3BqhQ;EAAgB;AFu3BriQ;;AEv3B0jQ;EAAiB;AF23B3kQ;;AE33BumQ;EAAgB;AF+3BvnQ;;AE/3BkpQ;EAAa;AFm4B/pQ;;AEn4BsrQ;EAAW;AFu4BjsQ;;AEv4BstQ;EAAc;AF24BpuQ;;AE34BuvQ;EAAe;AF+4BtwQ;;AE/4BiyQ;EAAa;AFm5B9yQ;;AEn5Bu0Q;EAAgB;AFu5Bv1Q;;AEv5B82Q;EAAiB;AF25B/3Q;;AE35B65Q;EAAmB;AF+5Bh7Q;;AE/5Bw9Q;EAAgB;AFm6Bx+Q;;AEn6BqgR;EAAQ;AFu6B7gR;;AEv6BshR;EAAO;AF26B7hR;;AE36BsiR;EAAO;AF+6B7iR;;AE/6BwjR;EAAO;AFm7B/jR;;AEn7BykR;EAAyC;EAAuB;EAAqD;AFy7B9rR;;AEz7BsvR;EAAwC;EAAwB;EAAyD;AF+7B/2R;;AE/7B26R;EAA+C;EAAsB;AFo8Bh/R;;AEp8BuiS;EAAiB;AFw8BxjS;;AEx8BwkS;EAAiB;AF48BzlS;;AE58BymS;EAAmB;AFg9B5nS;;AEh9B8oS;EAAmB;AFo9BjqS;;AEp9BmrS;EAAmB;AFw9BtsS;;AEx9BwtS;EAAU;EAAgB;EAAuB;AF89BzwS;;AE99B4xS;EAAmB;AFk+B/yS;;AEl+Bk0S;EAAmB;AFs+Br1S;;AEt+Bw2S;EAAqB;AF0+B73S;;AE1+Bk5S;EAAqB;AF8+Bv6S;;AE9+B47S;EAAY;AFk/Bx8S;;AEl/B89S;EAAS;AFs/Bv+S;;AEt/B4/S;EAAY;AF0/BxgT;;AE1/B4hT;EAAc;AF8/B1iT;;AE9/B+jT;EAAc;AFkgC7kT;;AElgC6lT;EAAa;AFsgC1mT;;AEtgC6nT;EAAY;AF0gCzoT;;AE1gC8pT;EAAa;AF8gC3qT;;AE9gCgsT;EAAY;AFkhC5sT;;AElhCkuT;EAAgB;EAA6B;AFuhC/wT;;AEvhCyyT;EAAc;EAAkC;AF4hCz1T;;AE5hC43T;EAAU;AFgiCt4T;;AEhiCu5T;EAAQ;AFoiC/5T;;AEpiCg7T;EAAU;AFwiC17T;;AExiCy8T;EAAY;AF4iCr9T;;AE5iC6+T;EAAY;AFgjCz/T;;AEhjC8gU;EAAU;AFojCxhU;;AEpjCgjU;EAAU;AFwjC1jU;;AExjC+kU;EAAY;AF4jC3lU;;AE5jCknU;EAAY;AFgkC9nU;;AEhkCopU;EAAc;AFokClqU;;AEpkCqrU;EAAa;AFwkClsU;;AExkCotU;EAAiB;EAAsB;AF6kC3vU;;AE7kCkzU;EAAmB;EAAsB;AFklC31U;;AEllCg5U;EAA6B;EAAsB;AFulCn8U;;AEvlCy/U;EAAiB;EAAsB;AF4lChiV;;AE5lCulV;EAAiB;EAAsB;AFimC9nV;;AEjmCqrV;EAAgB;EAAsB;AFsmC3tV;;AEtmCgxV;EAAoB;AF0mCpyV;;AE1mC6zV;EAA4B;EAAsB;AF+mC/2V;;AE/mCm6V;EAAU;EAAkB;AFonC/7V;;AEpnCs/V;EAAc;EAAkB;AFynCthW;;AEznC2kW;EAAc;EAAkB;AF8nC3mW;;AE9nCgqW;EAAY;EAAkB;AFmoC9rW;;AEnoCqvW;EAAa;EAAkB;AFwoCpxW;;AExoC20W;EAAa;EAAkB;AF6oC12W;;AE7oCi6W;EAAgB;AFipCj7W;;AEjpC88W;EAAc;EAAkB;AFspC9+W;;AEtpCkiX;EAAa;EAAkB;AF2pCjkX;;AE3pCqnX;EAAa;EAAkB;AFgqCppX;;AEhqC2sX;EAAmB;AFoqC9tX;;AEpqCsyX;EAAkB;AFwqCxzX;;AExqC43X;EAAmB;AF4qC/4X;;AE5qC09X;EAA6B;EAA2B;EAAoC;AFkrCtjY;;AElrCwnY;EAAc;EAA2B;EAAqC;AFwrCtsY;;AExrCwwY;EAA2B;EAA2B;EAAoC;AF8rCl2Y;;AE9rCo6Y;EAAW;EAAmC;AFmsCl9Y;;AEnsCyhZ;EAAc;EAAqC;AFwsC5kZ;;AExsCspZ;EAAwB;AF4sC9qZ;;AE5sCusZ;EAAY;AFgtCntZ;;AEhtC2uZ;EAAc;AFotCzvZ;;AEptC2wZ;EAAgB;EAAsB;AFytCjzZ;;AEztCo0Z;EAAc;EAAoB;AF8tCt2Z;;AE9tCu3Z;EAAe;EAA0B;AFmuCh6Z;;AEnuCu7Z;EAAK;AFuuC57Z;;AEvuCs8Z;EAAK;AF2uC38Z;;AE3uC09Z;EAAK;AF+uC/9Z;;AE/uC6+Z;EAAK;AFmvCl/Z;;AEnvCiga;EAAK;AFuvCtga;;AEvvCmha;EAAK;AF2vCxha;;AE3vCuia;EAAQ;AF+vC/ia;;AE/vC+ja;EAAM;EAAoB;AFowCzla;;AEpwC8ma;EAAO;EAAoB;AFywCzoa;;AEzwC0pa;EAAM;EAAqB;AF8wCrra;;AE9wC2sa;EAAM;EAAsB;AFmxCvua;;AEnxC0va;EAAQ;EAAgC;AFwxClya;;AExxC+za;EAAQ;EAAyB;AF6xCh2a;;AE7xC03a;EAAM;EAAqB;AFkyCr5a;;AElyCu6a;EAAM;EAAoB;AFuyCj8a;;AEvyCs9a;EAAM;EAAoB;AF4yCh/a;;AE5yCqgb;EAAQ;EAA8B;AFizC3ib;;AEjzCskb;EAAM;EAAmB;AFszC/lb;;AEtzCmnb;EAAM;EAAkB;AF2zC3ob;;AE3zC8pb;EAAM;EAAqB;AFg0Czrb;;AEh0C+sb;EAAM;EAAoB;AFq0Czub;;AEr0C0vb;EAAM;EAAe;AF00C/wb;;AE10C+xb;EAAM;EAAsB;AF+0C3zb;;AE/0C80b;EAAQ;EAA8B;AFo1Cp3b;;AEp1Cm5b;EAAM;EAAiB;AFy1C16b;;AEz1Cw7b;EAAM;AF61C97b;;AE71Ck9b;EAAM;AFi2Cx9b;;AEj2C2+b;EAAM;AFq2Cj/b;;AEr2Cogc;EAAM;AFy2C1gc;;AEz2C4hc;EAAM;AF62Clic;;AE72Cujc;EAAM;AFi3C7jc;;AEj3Colc;EAAM;AFq3C1lc;;AEr3C6mc;EAAM;AFy3Cnnc;;AEz3Cuoc;EAAM;AF63C7oc;;AE73C4pc;EAAM;AFi4Clqc;;AEj4Csrc;EAAW;AFq4Cjsc;;AEr4Citc;EAAa;AFy4C9tc;;AEz4Cgvc;EAAe;AF64C/vc;;AE74C2xc;EAAY;AFi5Cvyc;;AEj5Cwzc;EAAc;AFq5Ct0c;;AEr5Ci2c;EAAc;AFy5C/2c;;AEz5Cq4c;EAAY;AF65Cj5c;;AE75Ck9c;EAAS;EAAkB;AFk6C7+c;;AEl6Cigd;EAAU;EAAe;AFu6C1hd;;AEv6Cwid;EAAS;AF26Cjjd;;AE36Cmkd;EAAkB;AF+6Crld;;AE/6Cymd;EAAS;AFm7Clnd;;AEn7Cqod;EAAW;EAAe;AFw7C/pd;;AEx7Ckrd;EAAU;EAAmB;AF67C/sd;;AE77Cmud;EAAS;EAAiB;AFk8C7vd;;AEl8C8wd;EAAa;AFs8C3xd;;AEt8C2yd;EAAW;AF08Ctzd;;AE18Cs0d;EAAe;AF88Cr1d;;AE98Cq2d;EAAa;AFk9Cl3d;;AEl9Ck4d;EAAY;AFs9C94d;;AEt9C85d;EAAW;AF09Cz6d;;AE19Ck8d;EAAY;AF89C98d;;AE99Cw+d;EAAQ;AFk+Ch/d;;AEl+Ckge;EAAc;AFs+Chhe;;AEt+Ckie;EAAe;AF0+Cjje;;AE1+Ckke;EAAgB;AF8+Clle;;AE9+Cyme;EAAe;AFk/Cxne;;AEl/C8oe;EAAiB;EAA8B;AFu/C7re;;AEv/Ckve;EAAe;EAAoB;AF4/Crxe;;AE5/Cg0e;EAAY;EAAoB;AFigDh2e;;AEjgD84e;EAAgB;EAA8B;AFsgD57e;;AEtgDo/e;EAAiB;EAAoB;AF2gDzhf;;AE3gDqkf;EAAY;EAAoB;AFghDrmf;;AEhhD6of;EAAc;EAAoB;AFqhD/qf;;AErhD2tf;EAAiB;EAAoB;AF0hDhwf;;AE1hD4yf;EAAe;EAAoB;AF+hD/0f;;AE/hD63f;EAAe;EAAoB;AFoiDh6f;;AEpiD48f;EAAgB;EAAoB;AFyiDh/f;;AEziD4hgB;EAAc;EAAoB;AF8iD9jgB;;AE9iD0mgB;EAAe;EAAoB;AFmjD7ogB;;AEnjD2rgB;EAAgB;EAAoB;AFwjD/tgB;;AExjD2wgB;EAAc;EAAoB;AF6jD7ygB;;AE7jD21gB;EAAe;EAAoB;AFkkD93gB;;AElkDy6gB;EAAe;EAAoB;AFukD58gB;;AEvkDu/gB;EAA0B;EAAoB;AF4kDrihB;;AE5kDglhB;EAAiB;EAAoB;AFilDrnhB;;AEjlDkqhB;EAAiB;EAAoB;AFslDvshB;;AEtlDmvhB;EAAgB;EAAoB;AF2lDvxhB;;AE3lDm0hB;EAA2B;EAAoB;AFgmDl3hB;;AEhmD+5hB;EAAe;EAAoB;AFqmDl8hB;;AErmD8+hB;EAAe;EAAoB;AF0mDjhiB;;AE1mD8jiB;EAAiB;EAAoB;AF+mDnmiB;;AE/mDgpiB;EAAW;AFmnD3piB;;AEnnD0riB;EAAc;AFunDxsiB;;AEvnDkuiB;EAAW;AF2nD7uiB;;AE3nDuviB;EAAW;EAAwE;AFgoD10iB;;AEhoD06iB;EAAsB;AFooDh8iB;;AEpoDmijB;EAAW;EAA0E;AFyoDxnjB;;AEzoD0tjB;EAAQ;EAAqE;AF8oDvyjB;;AE9oDo4jB;EAAmB;AFkpDv5jB;;AElpD0/jB;EAAW;EAAwC;AFupD7ikB;;AEvpDomkB;EAAW;EAA2E;AF4pD1rkB;;AE5pD6xkB;EAAyB;AFgqDtzkB;;AEhqDy5kB;EAAc;EAA8C;AFqqDr9kB;;AErqDkhlB;EAAa;EAAsB;EAA8B;AF2qDnllB;;AE3qDsrlB;EAAc;EAA8B;AFgrDlulB;;AEhrDqvlB;EAAQ;EAA2G;AFqrDx2lB;;AErrD28lB;EAAc;AFyrDz9lB;;AEzrDkjmB;EAAM;EAA2G;AF8rDnqmB;;AE9rD4wmB;EAA2B;EAAoB;AFmsD3zmB;;AEnsDk3mB;EAAM;AFusDx3mB;;AEvsD44mB;EAAc;AF2sD15mB;;AE3sD2knB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AFmtD1joB;;AEntD6moB;EAAoB;EAA4B;AFwtD7poB;;AExtDgtoB;EAAkC;AF4tDlvoB;;AE5tD2woB;EAAc;AFguDzxoB;;AEhuDizoB;EAAa;AFouD9zoB;;AEpuDi3oB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AF+uDpspB;;AE/uDstpB;EAA6C;EAAe;AFovDlxpB;;AEpvD4xpB;EAAmD;EAAqD;AFyvDp4pB;;AEzvDm5pB;EAAmD;EAAyB;AF8vD/9pB;;AE9vD8+pB;EAAW;AFkwDz/pB;;AElwD8gqB;EAAgC;EAAwB;EAAyB;AFwwD/lqB;;AExwDqoqB;EAA6B;AF4wDlqqB;;AE5wDwrqB;EAAyD;EAAsB;EAAoB;AFkxD3xqB;;AElxDgzqB;EAAkB;EAAY;AFuxD90qB;;AEvxD81qB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AF+xD5jrB;;AE/xD2krB;EAAqH;AFmyDhsrB;;AEnyDotrB;EAAyB;IAAgC;EFwyD3wrB;EExyDuyrB;IAA6B;IAAwB;EF4yD51rB;EE5yDy3rB;IAAkB;IAAa;EFgzDx5rB;AACF;AEjzD66rB;EAA0B;IAAgC;IAA4B;EFszDjgsB;AACF;AEvzD2isB;EAAO;EAA2B;EAAqC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AFi0Dv4sB;AEj0D0+sB;EAAa;AFo0Dv/sB;AEp0DkktB;EAAM;EAA2B;EAAmC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AF80D35tB;AE90D8/tB;EAAO;EAA2B;EAAqC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AFw1D11uB;AEx1D67uB;EAAe;AF21D58uB;AE31DuhvB;EAAQ;EAA2B;EAAqC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AFq2Dp3vB;AEr2Du9vB;EAAS;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AF+2DpzwB;AE/2Du5wB;EAAmB;AFk3D16wB;AEl3Dq/wB;EAAU;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AF43Dn1xB;;AE53Du7xB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AFo4D9pyB;;AEp4DyqyB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AF64DrxyB;;AE74DsyyB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AFu5D16yB;;AEv5Dq7yB;EAAyB;IAAmC;EF45D/+yB;EE55D+/yB;IAAuB;EF+5DthzB;EE/5DkizB;IAA4B;IAAc;EFm6D5kzB;EEn6DulzB;IAAyB;IAAc;EFu6D9nzB;EEv6D8ozB;IAAyB;IAAc;EF26DrrzB;EE36DsszB;IAAyB;IAAc;EF+6D7uzB;EE/6DuvzB;IAAyB;IAAc;EFm7D9xzB;EEn7D+yzB;IAAyB;IAAc;EFu7Dt1zB;EEv7Du2zB;IAAyB;IAAc;EF27D94zB;EE37Dw5zB;IAAyB;IAAc;EF+7D/7zB;EE/7Dg9zB;IAAyB;IAAc;EFm8Dv/zB;EEn8Dwg0B;IAAyB;IAAc;EFu8D/i0B;EEv8Dyj0B;IAA0B;IAAc;EF28Djm0B;EE38Dkn0B;IAA0B;IAAc;EF+8D1p0B;EE/8D2q0B;IAA0B;IAAc;EFm9Dnt0B;AACF;AEp9Diu0B;EAAyB;IAAsD;EFw9D9y0B;EEx9D8z0B;IAAuB;EF29Dr10B;EE39Di20B;IAA4B;IAAc;EF+9D340B;EE/9Ds50B;IAAyB;IAAc;EFm+D770B;EEn+D680B;IAAyB;IAAc;EFu+Dp/0B;EEv+Dqg1B;IAAyB;IAAc;EF2+D5i1B;EE3+Dsj1B;IAAyB;IAAc;EF++D7l1B;EE/+D8m1B;IAAyB;IAAc;EFm/Drp1B;EEn/Dsq1B;IAAyB;IAAc;EFu/D7s1B;EEv/Dut1B;IAAyB;IAAc;EF2/D9v1B;EE3/D+w1B;IAAyB;IAAc;EF+/Dtz1B;EE//Du01B;IAAyB;IAAc;EFmgE921B;EEngEw31B;IAA0B;IAAc;EFugEh61B;EEvgEi71B;IAA0B;IAAc;EF2gEz91B;EE3gE0+1B;IAA0B;IAAc;EF+gElh2B;AACF;AEhhEgi2B;EAA0B;IAAyE;EFohEjo2B;EEphEkp2B;IAAuB;EFuhEzq2B;EEvhEqr2B;IAA4B;IAAc;EF2hE/t2B;EE3hE0u2B;IAAyB;IAAc;EF+hEjx2B;EE/hEiy2B;IAAyB;IAAc;EFmiEx02B;EEniEy12B;IAAyB;IAAc;EFuiEh42B;EEviE042B;IAAyB;IAAc;EF2iEj72B;EE3iEk82B;IAAyB;IAAc;EF+iEz+2B;EE/iE0/2B;IAAyB;IAAc;EFmjEji3B;EEnjE2i3B;IAAyB;IAAc;EFujEll3B;EEvjEmm3B;IAAyB;IAAc;EF2jE1o3B;EE3jE2p3B;IAAyB;IAAc;EF+jEls3B;EE/jE4s3B;IAA0B;IAAc;EFmkEpv3B;EEnkEqw3B;IAA0B;IAAc;EFukE7y3B;EEvkE8z3B;IAA0B;IAAc;EF2kEt23B;AACF;AE5kEo33B;EAA0B;IAA4F;EFglEx+3B;EEhlEy/3B;IAAuB;EFmlEhh4B;EEnlE4h4B;IAA4B;IAAc;EFulEtk4B;EEvlEil4B;IAAyB;IAAc;EF2lExn4B;EE3lEwo4B;IAAyB;IAAc;EF+lE/q4B;EE/lEgs4B;IAAyB;IAAc;EFmmEvu4B;EEnmEiv4B;IAAyB;IAAc;EFumExx4B;EEvmEyy4B;IAAyB;IAAc;EF2mEh14B;EE3mEi24B;IAAyB;IAAc;EF+mEx44B;EE/mEk54B;IAAyB;IAAc;EFmnEz74B;EEnnE084B;IAAyB;IAAc;EFunEj/4B;EEvnEkg5B;IAAyB;IAAc;EF2nEzi5B;EE3nEmj5B;IAA0B;IAAc;EF+nE3l5B;EE/nE4m5B;IAA0B;IAAc;EFmoEpp5B;EEnoEqq5B;IAA0B;IAAc;EFuoE7s5B;AACF;AExoE2t5B;EAA0B;IAAgH;EF4oEn25B;EE5oEo35B;IAAwB;EF+oE545B;EE/oEw55B;IAA6B;IAAc;EFmpEn85B;EEnpE885B;IAA0B;IAAc;EFupEt/5B;EEvpEsg6B;IAA0B;IAAc;EF2pE9i6B;EE3pE+j6B;IAA0B;IAAc;EF+pEvm6B;EE/pEin6B;IAA0B;IAAc;EFmqEzp6B;EEnqE0q6B;IAA0B;IAAc;EFuqElt6B;EEvqEmu6B;IAA0B;IAAc;EF2qE3w6B;EE3qEqx6B;IAA0B;IAAc;EF+qE7z6B;EE/qE806B;IAA0B;IAAc;EFmrEt36B;EEnrEu46B;IAA0B;IAAc;EFurE/66B;EEvrEy76B;IAA2B;IAAc;EF2rEl+6B;EE3rEm/6B;IAA2B;IAAc;EF+rE5h7B;EE/rE6i7B;IAA2B;IAAc;EFmsEtl7B;AACF;AEpsEom7B;EAA0B;IAAqI;EFwsEjw7B;EExsEkx7B;IAAyB;EF2sE3y7B;EE3sEuz7B;IAA8B;IAAc;EF+sEn27B;EE/sE827B;IAA2B;IAAc;EFmtEv57B;EEntEu67B;IAA2B;IAAc;EFutEh97B;EEvtEi+7B;IAA2B;IAAc;EF2tE1g8B;EE3tEoh8B;IAA2B;IAAc;EF+tE7j8B;EE/tE8k8B;IAA2B;IAAc;EFmuEvn8B;EEnuEwo8B;IAA2B;IAAc;EFuuEjr8B;EEvuE2r8B;IAA2B;IAAc;EF2uEpu8B;EE3uEqv8B;IAA2B;IAAc;EF+uE9x8B;EE/uE+y8B;IAA2B;IAAc;EFmvEx18B;EEnvEk28B;IAA4B;IAAc;EFuvE548B;EEvvE658B;IAA4B;IAAc;EF2vEv88B;EE3vEw98B;IAA4B;IAAc;EF+vElg9B;AACF;AEhwEgh9B;EAAsB;EAAyC;AFowE/k9B;AEpwE8n9B;EAAO;EAA4C;AFwwEjr9B;AExwE6t9B;EAAU;EAA+C;AF4wEtx9B;AE5wE+z9B;EAAO;EAA4C;AFgxEl39B;AEhxE259B;EAAU;EAA+C;AFoxEp99B;AEpxE6/9B;EAAS;EAA8C;AFwxEpj+B;AExxE6l+B;EAAU;EAA+C;AF4xEtp+B;;AE5xEgs+B;EAA6B;EAAuB;AFiyEpv+B;AEjyEqx+B;EAAM;EAAuB;EAAsB;EAAiC;EAAgB;AFwyEz3+B;;AExyE+4+B;EAA8B;AF4yE76+B;;AE5yEo8+B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AFszE9s/B;;AEtzEqu/B;EAAsC;AF0zE3w/B;;AE1zE82/B;EAAsB;EAA0E;AF+zE98/B;;AE/zEgjgC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AFu0ExrgC;;AEv0EsugC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AFq1EnxhC;;AEr1Ei0hC;EAAiC;EAA6B;AF01E/3hC;;AE11E65hC;EAA+B;EAAgC;AF+1E59hC;;AE/1E6/hC;EAA0B;EAAkB;AFo2EziiC;;AEp2EgmiC;EAA8B;EAA8B;AFy2E5piC;;AEz2EitiC;EAA2B;AF62E5uiC;;AE72EswiC;EAAwB;EAA0E;EAAkG;AFm3E18iC;;AEn3E6ijC;EAAgC;EAAsB;AFw3EnmjC;;AEx3E0pjC;EAAwB;EAA0E;EAAkG;AF83E91jC;;AE93Ei8jC;EAA2B;EAA8B;AFm4E1/jC;;AEn4E6gkC;EAAqB;EAA2G;AFw4E7okC;;AEx4EgvkC;EAAwC;AF44ExxkC;;AE54Ei3kC;EAAmB;EAA2G;AFi5E/+kC;;AEj5EwllC;EAAqB;EAA2G;EAAyG;AFu5Ej0lC;;AEv5E05lC;EAA8B;EAAoB;AF45E58lC;;AE55EogmC;EAA4B;EAAoB;AFi6EpjmC;;AEj6E4mmC;EAA8B;AFq6E1omC;;AEr6EgqmC;EAA0B;EAA0E;EAAkG;AF26Et2mC;;AE36Ey8mC;EAAuC;EAAkB;AFg7ElgnC;;AEh7EyjnC;EAA2D;EAAsB;AFq7E1onC;;AEr7E8rnC;EAA6B;EAAsB;AF07EjvnC;;AE17EqynC;EAAyB;EAAkB;AF+7Eh1nC;;AE/7Eo4nC;EAAyB;EAAkB;AFo8E/6nC;;AEp8Em+nC;EAAyB;EAAkB;AFy8E9goC;;AEz8EkkoC;EAAyB;EAAkB;AF88E7moC;;AE98EoqoC;EAAwB;EAAoB;AFm9EhtoC;;AEn9E8voC;EAA2B;EAAoB;AFw9E7yoC;;AEx9E21oC;EAA2B;EAAoB;AF69E14oC;;AE79Es7oC;EAAsC;EAAkB;AFk+E9+oC;;AEl+EkipC;EAAwC;EAAoB;AFu+E9lpC;;AEv+EmppC;EAAmD;EAAkB;AF4+ExtpC;;AE5+E+wpC;EAAyB;IAAY;EFi/ElzpC;EEj/E+zpC;IAAY;EFo/E30pC;EEp/Eq1pC;IAAiB;EFu/Et2pC;EEv/Eo5pC;IAAiB;EF0/Er6pC;AACF;AE3/Es9pC;EAAyB;IAAW;IAAiB;EFggFzgqC;EEhgF2hqC;IAAW;IAAmB;EFogFzjqC;EEpgFykqC;IAAW;EFugFplqC;EEvgFkmqC;IAAY;EF0gF9mqC;EE1gF2nqC;IAAU;EF6gFroqC;EE7gFkpqC;IAAiB;EFghFnqqC;EEhhFitqC;IAAiB;EFmhFluqC;EEnhFgxqC;IAAc;EFshF9xqC;EEthFizqC;IAAc;EFyhF/zqC;EEzhFq1qC;IAAW;IAAkB;EF6hFl3qC;EE7hFq4qC;IAAiB;EFgiFt5qC;EEhiFw6qC;IAAc;IAAkB;EFoiFx8qC;EEpiFs9qC;IAAc;IAAiB;EFwiFr/qC;AACF;AEziFygrC;EAA0B;IAAU;EF6iF3irC;EE7iFwjrC;IAAU;EFgjFlkrC;EEhjFklrC;IAAiB;EFmjFnmrC;EEnjFiprC;IAAiB;EFsjFlqrC;EEtjFgtrC;IAAc;EFyjF9trC;EEzjFivrC;IAAe;EF4jFhwrC;AACF;AE7jFmxrC;EAA0B;IAAU;EFikFrzrC;EEjkFi0rC;IAAW;IAAkB;EFqkF91rC;EErkFi3rC;IAAc;IAAiB;EFykFh5rC;EEzkF85rC;IAAc;IAAmB;EF6kF/7rC;AACF;AD7jFA;AIjBA;AAAgE;EAAiB;EAAuB;AHolFxG;;AGplF8H;EAAe;AHwlF7I;;AGxlF6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AHkmF5c;;AGlmFud;EAAK;EAAoB;AHumFhf;;AGvmFyf;EAAG;EAAqB;EAAc;AH6mF/hB;;AG7mFwiB;EAAoB;EAAyC;AHknFrmB;;AGlnFsoB;EAAkB;EAAkB;AHunF1qB;;AGvnF8rB;EAAE;EAAc;AH4nF9sB;;AG5nFsuB;EAAS;AHgoF/uB;;AGhoFkwB;EAAkB;EAAoG;AHqoFx3B;;AGroFs4B;EAAM;AHyoF54B;;AGzoF05B;EAAQ;EAAc;EAAc;EAAkB;AHgpFh9B;;AGhpFw+B;EAAI;AHopF5+B;;AGppF0/B;EAAI;AHwpF9/B;;AGxpFwgC;EAAM;EAAyB;EAAqB;AH8pF5jC;;AG9pF0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AHwqFltC;;AGxqF4tC;EAAc;AH4qF1uC;;AG5qF8vC;EAAgD;EAA0B;EAA6B;AHkrFr2C;;AGlrF23C;EAAgB;AHsrF34C;;AGtrFw5C;EAAiB;AH0rFz6C;;AG1rFy7C;EAAS;AH8rFl8C;;AG9rF09C;EAAwD;AHksFlhD;;AGlsF8hD;EAAc;EAA6B;AHusFzkD;;AGvsF6lD;EAA4B;AH2sFznD;;AG3sFipD;EAA6B;EAA0B;AHgtFxsD;;AGhtFqtD;EAAQ;AHotF7tD;;AGptF+uD;EAAmD;AHwtFlyD;;AGxtF2yD;EAAS;AH4tFpzD;;AG5tF6zD;EAAgB;AHguF70D;;AGhuFu1D;EAAW;EAAgB;EAAS;AHsuF33D;;AGtuFq4D;EAAS;AH0uF94D;;AG1uF85D;EAAmD;EAAc;AH+uF/9D;;AG/uFy+D;EAAyC;EAAc;AHovFhiE;;AGpvF0iE;EAAqB;AHwvF/jE;;AGxvF8kE;EAAU;AH4vFxlE;;AG5vFumE;EAA+C;EAAc;AHiwFpqE;;AGjwF0rE;EAAU;EAAY;AHswFhtE;;AGtwF+tE;EAAS;AH0wFxuE;;AG1wFqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHyzFjpG;;AGzzFuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHw2F7jI;;AGx2FmlI;EAAW;AH42F9lI;;AG52FymI;EAAyB;IAAW;EHi3F3oI;AACF;AGl3F8pI;EAAyB;IAAW;EHs3FhsI;AACF;AGv3FmtI;EAA0B;IAAW;EH23FtvI;AACF;AG53F0wI;EAA0B;IAAW;EHg4F7yI;AACF;AGj4Fi0I;EAA0B;IAAW;EHq4Fp2I;AACF;AGt4Fw3I;EAA0B;IAAW;EH04F35I;AACF;AG34F+6I;EAAS;AH84Fx7I;;AG94F28I;EAAW;AHk5Ft9I;;AGl5Fw+I;EAAQ;AHs5Fh/I;;AGt5FggJ;EAAO;AH05FvgJ;;AG15FshJ;EAAU;AH85FhiJ;;AG95FkjJ;EAAU;AHk6F5jJ;;AGl6F8kJ;EAAS;EAAS;EAAO;EAAQ;AHy6F/mJ;;AGz6FqnJ;EAAQ;AH66F7nJ;;AG76FwoJ;EAAQ;AHi7FhpJ;;AGj7FupJ;EAAS;AHq7FhqJ;;AGr7FwqJ;EAAS;AHy7FjrJ;;AGz7F4rJ;EAAW;AH67FvsJ;;AG77FmtJ;EAAO;AHi8F1tJ;;AGj8FguJ;EAAO;AHq8FvuJ;;AGr8FgvJ;EAAS;AHy8FzvJ;;AGz8FmwJ;EAAQ;AH68F3wJ;;AG78FoxJ;EAAQ;AHi9F5xJ;;AGj9FqyJ;EAAU;AHq9F/yJ;;AGr9F4zJ;EAAS;AHy9Fr0J;;AGz9Fm1J;EAAU;AH69F71J;;AG79F42J;EAAgB;AHi+F53J;;AGj+Fu4J;EAAM;AHq+F74J;;AGr+Fw5J;EAAM;AHy+F95J;;AGz+Fy6J;EAAM;AH6+F/6J;;AG7+F07J;EAAK;AHi/F/7J;;AGj/Fy8J;EAAK;AHq/F98J;;AGr/F49J;EAAK;AHy/Fj+J;;AGz/F0+J;EAAM;AH6/Fh/J;;AG7/F4/J;EAAO;EAAmB;AHkgGthK;;AGlgGsiK;EAAS;EAAiB;AHugGhkK;;AGvgGklK;EAAM;EAAoB;AH4gG5mK;;AG5gG6nK;EAAM;EAAgB;AHihGnpK;;AGjhGgqK;EAAM;EAAqB;AHshG3rK;;AGthG6sK;EAAM;EAAiB;AH2hGpuK;;AG3hGsvK;EAAM;EAAmB;AHgiG/wK;;AGhiG+xK;EAAM;EAAkB;AHqiGvzK;;AGriG00K;EAAM;EAAmB;AH0iGn2K;;AG1iGu3K;EAAQ;EAA6B;AH+iG55K;;AG/iG07K;EAAQ;EAA+B;AHojGj+K;;AGpjG6/K;EAAO;EAAiB;AHyjGrhL;;AGzjGuiL;EAAO;AH6jG9iL;;AG7jGikL;EAAO;AHikGxkL;;AGjkGwlL;EAAO;AHqkG/lL;;AGrkGknL;EAAM;AHykGxnL;;AGzkG2oL;EAAM;AH6kGjpL;;AG7kGmqL;EAAM;AHilGzqL;;AGjlG6rL;EAAM;AHqlGnsL;;AGrlGqtL;EAAM;AHylG3tL;;AGzlG2uL;EAAM;AH6lGjvL;;AG7lGowL;EAAM;AHimG1wL;;AGjmG4xL;EAAM;AHqmGlyL;;AGrmGmzL;EAAM;AHymGzzL;;AGzmG80L;EAAM;AH6mGp1L;;AG7mGw2L;EAAM;AHinG92L;;AGjnGi4L;EAAM;AHqnGv4L;;AGrnGo5L;EAAM;AHynG15L;;AGznG46L;EAAM;AH6nGl7L;;AG7nGo8L;EAAM;AHioG18L;;AGjoGw9L;EAAM;AHqoG99L;;AGroG6+L;EAAM;AHyoGn/L;;AGzoGsgM;EAAO;AH6oG7gM;;AG7oG+hM;EAAO;AHipGtiM;;AGjpGyjM;EAAO;AHqpGhkM;;AGrpGmlM;EAAM;AHypGzlM;;AGzpG0mM;EAAO;AH6pGjnM;;AG7pGmoM;EAAO;AHiqG1oM;;AGjqGwpM;EAAS;AHqqGjqM;;AGrqGyrM;EAAc;AHyqGvsM;;AGzqG4tM;EAAM;AH6qGluM;;AG7qG+uM;EAAQ;AHirGvvM;;AGjrG8wM;EAAa;AHqrG3xM;;AGrrG+yM;EAAO;AHyrGtzM;;AGzrGo0M;EAAY;AH6rGh1M;;AG7rGm2M;EAAoB;AHisGv3M;;AGjsGk5M;EAAiB;AHqsGn6M;;AGrsG27M;EAAW;AHysGt8M;;AGzsGw9M;EAAM;AH6sG99M;;AG7sG2+M;EAAU;AHitGr/M;;AGjtGsgN;EAAQ;AHqtG9gN;;AGrtG2hN;EAAM;AHytGjiN;;AGztG8iN;EAAQ;AH6tGtjN;;AG7tGkkN;EAAK;AHiuGvkN;;AGjuGmlN;EAAM;AHquGzlN;;AGruGqmN;EAAM;AHyuG3mN;;AGzuGunN;EAAM;AH6uG7nN;;AG7uG0oN;EAAM;AHivGhpN;;AGjvG6pN;EAAK;AHqvGlqN;;AGrvGgrN;EAAM;AHyvGtrN;;AGzvGmsN;EAAM;AH6vGzsN;;AG7vGstN;EAAM;AHiwG5tN;;AGjwGwuN;EAAM;AHqwG9uN;;AGrwG4vN;EAAM;AHywGlwN;;AGzwGixN;EAAK;AH6wGtxN;;AG7wGmyN;EAAM;AHixGzyN;;AGjxGqzN;EAAO;EAAwB;AHsxGp1N;;AGtxGu2N;EAAa;AH0xGp3N;;AG1xGi4N;EAAU;AH8xG34N;;AG9xG45N;EAAQ;AHkyGp6N;;AGlyG+6N;EAAK;AHsyGp7N;;AGtyG+7N;EAAM;AH0yGr8N;;AG1yGg9N;EAAM;AH8yGt9N;;AG9yGi+N;EAAO;EAAuB;AHmzG//N;;AGnzGihO;EAAK;AHuzGthO;;AGvzGmiO;EAAK;AH2zGxiO;;AG3zGqjO;EAAK;AH+zG1jO;;AG/zGskO;EAAQ;AHm0G9kO;;AGn0GylO;EAAM;AHu0G/lO;;AGv0G2mO;EAAM;AH20GjnO;;AG30G6nO;EAAM;AH+0GnoO;;AG/0G8oO;EAAM;AHm1GppO;;AGn1GgqO;EAAM;AHu1GtqO;;AGv1GkrO;EAAM;AH21GxrO;;AG31GosO;EAAmB;EAAuB;AHg2G9uO;;AGh2GgwO;EAAa;AHo2G7wO;;AGp2GyxO;EAAQ;AHw2GjyO;;AGx2GszO;EAAc;AH42Gp0O;;AG52G61O;EAAQ;AHg3Gr2O;;AGh3Gi3O;EAAa;AHo3G93O;;AGp3G44O;EAAW;AHw3Gv5O;;AGx3Gm6O;EAAW;AH43G96O;;AG53Gg8O;EAAsB;AHg4Gt9O;;AGh4GopP;EAAQ;AHo4G5pP;;AGp4GwqP;EAAW;AHw4GnrP;;AGx4GwsP;EAAiB;EAAwB;EAAqB;AH84GtwP;;AG94GsxP;EAAe;AHk5GryP;;AGl5GwzP;EAAa;AHs5Gr0P;;AGt5Gm3P;EAAU;AH05G73P;;AG15Gg5P;EAAkB;AH85Gl6P;;AG95G67P;EAAU;AHk6Gv8P;;AGl6G69P;EAAW;AHs6Gx+P;;AGt6Gu/P;EAAa;AH06GpgQ;;AG16GqhQ;EAAgB;AH86GriQ;;AG96G0jQ;EAAiB;AHk7G3kQ;;AGl7GumQ;EAAgB;AHs7GvnQ;;AGt7GkpQ;EAAa;AH07G/pQ;;AG17GsrQ;EAAW;AH87GjsQ;;AG97GstQ;EAAc;AHk8GpuQ;;AGl8GuvQ;EAAe;AHs8GtwQ;;AGt8GiyQ;EAAa;AH08G9yQ;;AG18Gu0Q;EAAgB;AH88Gv1Q;;AG98G82Q;EAAiB;AHk9G/3Q;;AGl9G65Q;EAAmB;AHs9Gh7Q;;AGt9Gw9Q;EAAgB;AH09Gx+Q;;AG19GqgR;EAAQ;AH89G7gR;;AG99GshR;EAAO;AHk+G7hR;;AGl+GsiR;EAAO;AHs+G7iR;;AGt+GwjR;EAAO;AH0+G/jR;;AG1+GykR;EAAyC;EAAuB;EAAqD;AHg/G9rR;;AGh/GsvR;EAAwC;EAAwB;EAAyD;AHs/G/2R;;AGt/G26R;EAA+C;EAAsB;AH2/Gh/R;;AG3/GuiS;EAAiB;AH+/GxjS;;AG//GwkS;EAAiB;AHmgHzlS;;AGngHymS;EAAmB;AHugH5nS;;AGvgH8oS;EAAmB;AH2gHjqS;;AG3gHmrS;EAAmB;AH+gHtsS;;AG/gHwtS;EAAU;EAAgB;EAAuB;AHqhHzwS;;AGrhH4xS;EAAmB;AHyhH/yS;;AGzhHk0S;EAAmB;AH6hHr1S;;AG7hHw2S;EAAqB;AHiiH73S;;AGjiHk5S;EAAqB;AHqiHv6S;;AGriH47S;EAAY;AHyiHx8S;;AGziH89S;EAAS;AH6iHv+S;;AG7iH4/S;EAAY;AHijHxgT;;AGjjH4hT;EAAc;AHqjH1iT;;AGrjH+jT;EAAc;AHyjH7kT;;AGzjH6lT;EAAa;AH6jH1mT;;AG7jH6nT;EAAY;AHikHzoT;;AGjkH8pT;EAAa;AHqkH3qT;;AGrkHgsT;EAAY;AHykH5sT;;AGzkHkuT;EAAgB;EAA6B;AH8kH/wT;;AG9kHyyT;EAAc;EAAkC;AHmlHz1T;;AGnlH43T;EAAU;AHulHt4T;;AGvlHu5T;EAAQ;AH2lH/5T;;AG3lHg7T;EAAU;AH+lH17T;;AG/lHy8T;EAAY;AHmmHr9T;;AGnmH6+T;EAAY;AHumHz/T;;AGvmH8gU;EAAU;AH2mHxhU;;AG3mHgjU;EAAU;AH+mH1jU;;AG/mH+kU;EAAY;AHmnH3lU;;AGnnHknU;EAAY;AHunH9nU;;AGvnHopU;EAAc;AH2nHlqU;;AG3nHqrU;EAAa;AH+nHlsU;;AG/nHotU;EAAiB;EAAsB;AHooH3vU;;AGpoHkzU;EAAmB;EAAsB;AHyoH31U;;AGzoHg5U;EAA6B;EAAsB;AH8oHn8U;;AG9oHy/U;EAAiB;EAAsB;AHmpHhiV;;AGnpHulV;EAAiB;EAAsB;AHwpH9nV;;AGxpHqrV;EAAgB;EAAsB;AH6pH3tV;;AG7pHgxV;EAAoB;AHiqHpyV;;AGjqH6zV;EAA4B;EAAsB;AHsqH/2V;;AGtqHm6V;EAAU;EAAkB;AH2qH/7V;;AG3qHs/V;EAAc;EAAkB;AHgrHthW;;AGhrH2kW;EAAc;EAAkB;AHqrH3mW;;AGrrHgqW;EAAY;EAAkB;AH0rH9rW;;AG1rHqvW;EAAa;EAAkB;AH+rHpxW;;AG/rH20W;EAAa;EAAkB;AHosH12W;;AGpsHi6W;EAAgB;AHwsHj7W;;AGxsH88W;EAAc;EAAkB;AH6sH9+W;;AG7sHkiX;EAAa;EAAkB;AHktHjkX;;AGltHqnX;EAAa;EAAkB;AHutHppX;;AGvtH2sX;EAAmB;AH2tH9tX;;AG3tHsyX;EAAkB;AH+tHxzX;;AG/tH43X;EAAmB;AHmuH/4X;;AGnuH09X;EAA6B;EAA2B;EAAoC;AHyuHtjY;;AGzuHwnY;EAAc;EAA2B;EAAqC;AH+uHtsY;;AG/uHwwY;EAA2B;EAA2B;EAAoC;AHqvHl2Y;;AGrvHo6Y;EAAW;EAAmC;AH0vHl9Y;;AG1vHyhZ;EAAc;EAAqC;AH+vH5kZ;;AG/vHspZ;EAAwB;AHmwH9qZ;;AGnwHusZ;EAAY;AHuwHntZ;;AGvwH2uZ;EAAc;AH2wHzvZ;;AG3wH2wZ;EAAgB;EAAsB;AHgxHjzZ;;AGhxHo0Z;EAAc;EAAoB;AHqxHt2Z;;AGrxHu3Z;EAAe;EAA0B;AH0xHh6Z;;AG1xHu7Z;EAAK;AH8xH57Z;;AG9xHs8Z;EAAK;AHkyH38Z;;AGlyH09Z;EAAK;AHsyH/9Z;;AGtyH6+Z;EAAK;AH0yHl/Z;;AG1yHiga;EAAK;AH8yHtga;;AG9yHmha;EAAK;AHkzHxha;;AGlzHuia;EAAQ;AHszH/ia;;AGtzH+ja;EAAM;EAAoB;AH2zHzla;;AG3zH8ma;EAAO;EAAoB;AHg0Hzoa;;AGh0H0pa;EAAM;EAAqB;AHq0Hrra;;AGr0H2sa;EAAM;EAAsB;AH00Hvua;;AG10H0va;EAAQ;EAAgC;AH+0Hlya;;AG/0H+za;EAAQ;EAAyB;AHo1Hh2a;;AGp1H03a;EAAM;EAAqB;AHy1Hr5a;;AGz1Hu6a;EAAM;EAAoB;AH81Hj8a;;AG91Hs9a;EAAM;EAAoB;AHm2Hh/a;;AGn2Hqgb;EAAQ;EAA8B;AHw2H3ib;;AGx2Hskb;EAAM;EAAmB;AH62H/lb;;AG72Hmnb;EAAM;EAAkB;AHk3H3ob;;AGl3H8pb;EAAM;EAAqB;AHu3Hzrb;;AGv3H+sb;EAAM;EAAoB;AH43Hzub;;AG53H0vb;EAAM;EAAe;AHi4H/wb;;AGj4H+xb;EAAM;EAAsB;AHs4H3zb;;AGt4H80b;EAAQ;EAA8B;AH24Hp3b;;AG34Hm5b;EAAM;EAAiB;AHg5H16b;;AGh5Hw7b;EAAM;AHo5H97b;;AGp5Hk9b;EAAM;AHw5Hx9b;;AGx5H2+b;EAAM;AH45Hj/b;;AG55Hogc;EAAM;AHg6H1gc;;AGh6H4hc;EAAM;AHo6Hlic;;AGp6Hujc;EAAM;AHw6H7jc;;AGx6Holc;EAAM;AH46H1lc;;AG56H6mc;EAAM;AHg7Hnnc;;AGh7Huoc;EAAM;AHo7H7oc;;AGp7H4pc;EAAM;AHw7Hlqc;;AGx7Hsrc;EAAW;AH47Hjsc;;AG57Hitc;EAAa;AHg8H9tc;;AGh8Hgvc;EAAe;AHo8H/vc;;AGp8H2xc;EAAY;AHw8Hvyc;;AGx8Hwzc;EAAc;AH48Ht0c;;AG58Hi2c;EAAc;AHg9H/2c;;AGh9Hq4c;EAAY;AHo9Hj5c;;AGp9Hk9c;EAAS;EAAkB;AHy9H7+c;;AGz9Higd;EAAU;EAAe;AH89H1hd;;AG99Hwid;EAAS;AHk+Hjjd;;AGl+Hmkd;EAAkB;AHs+Hrld;;AGt+Hymd;EAAS;AH0+Hlnd;;AG1+Hqod;EAAW;EAAe;AH++H/pd;;AG/+Hkrd;EAAU;EAAmB;AHo/H/sd;;AGp/Hmud;EAAS;EAAiB;AHy/H7vd;;AGz/H8wd;EAAa;AH6/H3xd;;AG7/H2yd;EAAW;AHigItzd;;AGjgIs0d;EAAe;AHqgIr1d;;AGrgIq2d;EAAa;AHygIl3d;;AGzgIk4d;EAAY;AH6gI94d;;AG7gI85d;EAAW;AHihIz6d;;AGjhIk8d;EAAY;AHqhI98d;;AGrhIw+d;EAAQ;AHyhIh/d;;AGzhIkge;EAAc;AH6hIhhe;;AG7hIkie;EAAe;AHiiIjje;;AGjiIkke;EAAgB;AHqiIlle;;AGriIyme;EAAe;AHyiIxne;;AGziI8oe;EAAiB;EAA8B;AH8iI7re;;AG9iIkve;EAAe;EAAoB;AHmjIrxe;;AGnjIg0e;EAAY;EAAoB;AHwjIh2e;;AGxjI84e;EAAgB;EAA8B;AH6jI57e;;AG7jIo/e;EAAiB;EAAoB;AHkkIzhf;;AGlkIqkf;EAAY;EAAoB;AHukIrmf;;AGvkI6of;EAAc;EAAoB;AH4kI/qf;;AG5kI2tf;EAAiB;EAAoB;AHilIhwf;;AGjlI4yf;EAAe;EAAoB;AHslI/0f;;AGtlI63f;EAAe;EAAoB;AH2lIh6f;;AG3lI48f;EAAgB;EAAoB;AHgmIh/f;;AGhmI4hgB;EAAc;EAAoB;AHqmI9jgB;;AGrmI0mgB;EAAe;EAAoB;AH0mI7ogB;;AG1mI2rgB;EAAgB;EAAoB;AH+mI/tgB;;AG/mI2wgB;EAAc;EAAoB;AHonI7ygB;;AGpnI21gB;EAAe;EAAoB;AHynI93gB;;AGznIy6gB;EAAe;EAAoB;AH8nI58gB;;AG9nIu/gB;EAA0B;EAAoB;AHmoIrihB;;AGnoIglhB;EAAiB;EAAoB;AHwoIrnhB;;AGxoIkqhB;EAAiB;EAAoB;AH6oIvshB;;AG7oImvhB;EAAgB;EAAoB;AHkpIvxhB;;AGlpIm0hB;EAA2B;EAAoB;AHupIl3hB;;AGvpI+5hB;EAAe;EAAoB;AH4pIl8hB;;AG5pI8+hB;EAAe;EAAoB;AHiqIjhiB;;AGjqI8jiB;EAAiB;EAAoB;AHsqInmiB;;AGtqIgpiB;EAAW;AH0qI3piB;;AG1qI0riB;EAAc;AH8qIxsiB;;AG9qIkuiB;EAAW;AHkrI7uiB;;AGlrIuviB;EAAW;EAAwE;AHurI10iB;;AGvrI06iB;EAAsB;AH2rIh8iB;;AG3rImijB;EAAW;EAA0E;AHgsIxnjB;;AGhsI0tjB;EAAQ;EAAqE;AHqsIvyjB;;AGrsIo4jB;EAAmB;AHysIv5jB;;AGzsI0/jB;EAAW;EAAwC;AH8sI7ikB;;AG9sIomkB;EAAW;EAA2E;AHmtI1rkB;;AGntI6xkB;EAAyB;AHutItzkB;;AGvtIy5kB;EAAc;EAA8C;AH4tIr9kB;;AG5tIkhlB;EAAa;EAAsB;EAA8B;AHkuInllB;;AGluIsrlB;EAAc;EAA8B;AHuuIlulB;;AGvuIqvlB;EAAQ;EAA2G;AH4uIx2lB;;AG5uI28lB;EAAc;AHgvIz9lB;;AGhvIkjmB;EAAM;EAA2G;AHqvInqmB;;AGrvI4wmB;EAA2B;EAAoB;AH0vI3zmB;;AG1vIk3mB;EAAM;AH8vIx3mB;;AG9vI44mB;EAAc;AHkwI15mB;;AGlwI2knB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AH0wI1joB;;AG1wI6moB;EAAoB;EAA4B;AH+wI7poB;;AG/wIgtoB;EAAkC;AHmxIlvoB;;AGnxI2woB;EAAc;AHuxIzxoB;;AGvxIizoB;EAAa;AH2xI9zoB;;AG3xIi3oB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AHsyIpspB;;AGtyIstpB;EAA6C;EAAe;AH2yIlxpB;;AG3yI4xpB;EAAmD;EAAqD;AHgzIp4pB;;AGhzIm5pB;EAAmD;EAAyB;AHqzI/9pB;;AGrzI8+pB;EAAW;AHyzIz/pB;;AGzzI8gqB;EAAgC;EAAwB;EAAyB;AH+zI/lqB;;AG/zIqoqB;EAA6B;AHm0IlqqB;;AGn0IwrqB;EAAyD;EAAsB;EAAoB;AHy0I3xqB;;AGz0IgzqB;EAAkB;EAAY;AH80I90qB;;AG90I81qB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AHs1I5jrB;;AGt1I2krB;EAAqH;AH01IhsrB;;AG11IotrB;EAAyB;IAAgC;EH+1I3wrB;EG/1IuyrB;IAA6B;IAAwB;EHm2I51rB;EGn2Iy3rB;IAAkB;IAAa;EHu2Ix5rB;AACF;AGx2I66rB;EAA0B;IAAgC;IAA4B;EH62IjgsB;AACF;AG92I2isB;EAAO;EAA2B;EAAqC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AHw3Iv4sB;AGx3I0+sB;EAAa;AH23Iv/sB;AG33IkktB;EAAM;EAA2B;EAAmC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AHq4I35tB;AGr4I8/tB;EAAO;EAA2B;EAAqC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AH+4I11uB;AG/4I67uB;EAAe;AHk5I58uB;AGl5IuhvB;EAAQ;EAA2B;EAAqC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AH45Ip3vB;AG55Iu9vB;EAAS;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AHs6IpzwB;AGt6Iu5wB;EAAmB;AHy6I16wB;AGz6Iq/wB;EAAU;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAwE;EAAgG;AHm7In1xB;;AGn7Iu7xB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AH27I9pyB;;AG37IyqyB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AHo8IrxyB;;AGp8IsyyB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AH88I16yB;;AG98Iq7yB;EAAyB;IAAmC;EHm9I/+yB;EGn9I+/yB;IAAuB;EHs9IthzB;EGt9IkizB;IAA4B;IAAc;EH09I5kzB;EG19IulzB;IAAyB;IAAc;EH89I9nzB;EG99I8ozB;IAAyB;IAAc;EHk+IrrzB;EGl+IsszB;IAAyB;IAAc;EHs+I7uzB;EGt+IuvzB;IAAyB;IAAc;EH0+I9xzB;EG1+I+yzB;IAAyB;IAAc;EH8+It1zB;EG9+Iu2zB;IAAyB;IAAc;EHk/I94zB;EGl/Iw5zB;IAAyB;IAAc;EHs/I/7zB;EGt/Ig9zB;IAAyB;IAAc;EH0/Iv/zB;EG1/Iwg0B;IAAyB;IAAc;EH8/I/i0B;EG9/Iyj0B;IAA0B;IAAc;EHkgJjm0B;EGlgJkn0B;IAA0B;IAAc;EHsgJ1p0B;EGtgJ2q0B;IAA0B;IAAc;EH0gJnt0B;AACF;AG3gJiu0B;EAAyB;IAAsD;EH+gJ9y0B;EG/gJ8z0B;IAAuB;EHkhJr10B;EGlhJi20B;IAA4B;IAAc;EHshJ340B;EGthJs50B;IAAyB;IAAc;EH0hJ770B;EG1hJ680B;IAAyB;IAAc;EH8hJp/0B;EG9hJqg1B;IAAyB;IAAc;EHkiJ5i1B;EGliJsj1B;IAAyB;IAAc;EHsiJ7l1B;EGtiJ8m1B;IAAyB;IAAc;EH0iJrp1B;EG1iJsq1B;IAAyB;IAAc;EH8iJ7s1B;EG9iJut1B;IAAyB;IAAc;EHkjJ9v1B;EGljJ+w1B;IAAyB;IAAc;EHsjJtz1B;EGtjJu01B;IAAyB;IAAc;EH0jJ921B;EG1jJw31B;IAA0B;IAAc;EH8jJh61B;EG9jJi71B;IAA0B;IAAc;EHkkJz91B;EGlkJ0+1B;IAA0B;IAAc;EHskJlh2B;AACF;AGvkJgi2B;EAA0B;IAAyE;EH2kJjo2B;EG3kJkp2B;IAAuB;EH8kJzq2B;EG9kJqr2B;IAA4B;IAAc;EHklJ/t2B;EGllJ0u2B;IAAyB;IAAc;EHslJjx2B;EGtlJiy2B;IAAyB;IAAc;EH0lJx02B;EG1lJy12B;IAAyB;IAAc;EH8lJh42B;EG9lJ042B;IAAyB;IAAc;EHkmJj72B;EGlmJk82B;IAAyB;IAAc;EHsmJz+2B;EGtmJ0/2B;IAAyB;IAAc;EH0mJji3B;EG1mJ2i3B;IAAyB;IAAc;EH8mJll3B;EG9mJmm3B;IAAyB;IAAc;EHknJ1o3B;EGlnJ2p3B;IAAyB;IAAc;EHsnJls3B;EGtnJ4s3B;IAA0B;IAAc;EH0nJpv3B;EG1nJqw3B;IAA0B;IAAc;EH8nJ7y3B;EG9nJ8z3B;IAA0B;IAAc;EHkoJt23B;AACF;AGnoJo33B;EAA0B;IAA4F;EHuoJx+3B;EGvoJy/3B;IAAuB;EH0oJhh4B;EG1oJ4h4B;IAA4B;IAAc;EH8oJtk4B;EG9oJil4B;IAAyB;IAAc;EHkpJxn4B;EGlpJwo4B;IAAyB;IAAc;EHspJ/q4B;EGtpJgs4B;IAAyB;IAAc;EH0pJvu4B;EG1pJiv4B;IAAyB;IAAc;EH8pJxx4B;EG9pJyy4B;IAAyB;IAAc;EHkqJh14B;EGlqJi24B;IAAyB;IAAc;EHsqJx44B;EGtqJk54B;IAAyB;IAAc;EH0qJz74B;EG1qJ084B;IAAyB;IAAc;EH8qJj/4B;EG9qJkg5B;IAAyB;IAAc;EHkrJzi5B;EGlrJmj5B;IAA0B;IAAc;EHsrJ3l5B;EGtrJ4m5B;IAA0B;IAAc;EH0rJpp5B;EG1rJqq5B;IAA0B;IAAc;EH8rJ7s5B;AACF;AG/rJ2t5B;EAA0B;IAAgH;EHmsJn25B;EGnsJo35B;IAAwB;EHssJ545B;EGtsJw55B;IAA6B;IAAc;EH0sJn85B;EG1sJ885B;IAA0B;IAAc;EH8sJt/5B;EG9sJsg6B;IAA0B;IAAc;EHktJ9i6B;EGltJ+j6B;IAA0B;IAAc;EHstJvm6B;EGttJin6B;IAA0B;IAAc;EH0tJzp6B;EG1tJ0q6B;IAA0B;IAAc;EH8tJlt6B;EG9tJmu6B;IAA0B;IAAc;EHkuJ3w6B;EGluJqx6B;IAA0B;IAAc;EHsuJ7z6B;EGtuJ806B;IAA0B;IAAc;EH0uJt36B;EG1uJu46B;IAA0B;IAAc;EH8uJ/66B;EG9uJy76B;IAA2B;IAAc;EHkvJl+6B;EGlvJm/6B;IAA2B;IAAc;EHsvJ5h7B;EGtvJ6i7B;IAA2B;IAAc;EH0vJtl7B;AACF;AG3vJom7B;EAA0B;IAAqI;EH+vJjw7B;EG/vJkx7B;IAAyB;EHkwJ3y7B;EGlwJuz7B;IAA8B;IAAc;EHswJn27B;EGtwJ827B;IAA2B;IAAc;EH0wJv57B;EG1wJu67B;IAA2B;IAAc;EH8wJh97B;EG9wJi+7B;IAA2B;IAAc;EHkxJ1g8B;EGlxJoh8B;IAA2B;IAAc;EHsxJ7j8B;EGtxJ8k8B;IAA2B;IAAc;EH0xJvn8B;EG1xJwo8B;IAA2B;IAAc;EH8xJjr8B;EG9xJ2r8B;IAA2B;IAAc;EHkyJpu8B;EGlyJqv8B;IAA2B;IAAc;EHsyJ9x8B;EGtyJ+y8B;IAA2B;IAAc;EH0yJx18B;EG1yJk28B;IAA4B;IAAc;EH8yJ548B;EG9yJ658B;IAA4B;IAAc;EHkzJv88B;EGlzJw98B;IAA4B;IAAc;EHszJlg9B;AACF;AGvzJgh9B;EAAsB;EAAyC;AH2zJ/k9B;AG3zJ8n9B;EAAO;EAA4C;AH+zJjr9B;AG/zJ6t9B;EAAU;EAA+C;AHm0Jtx9B;AGn0J+z9B;EAAO;EAA4C;AHu0Jl39B;AGv0J259B;EAAU;EAA+C;AH20Jp99B;AG30J6/9B;EAAS;EAA8C;AH+0Jpj+B;AG/0J6l+B;EAAU;EAA+C;AHm1Jtp+B;;AGn1Jgs+B;EAA6B;EAAuB;AHw1Jpv+B;AGx1Jqx+B;EAAM;EAAuB;EAAsB;EAAiC;EAAgB;AH+1Jz3+B;;AG/1J+4+B;EAA8B;AHm2J76+B;;AGn2Jo8+B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AH62J9s/B;;AG72Jqu/B;EAAsC;AHi3J3w/B;;AGj3J82/B;EAAsB;EAA0E;AHs3J98/B;;AGt3JgjgC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AH83JxrgC;;AG93JsugC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AH44JnxhC;;AG54Ji0hC;EAAwH;EAAoB;EAA2C;EAAc;EAAiB;EAAgB;EAAiB;EAAkB;AHu5J1kiC;AGv5J0liC;EAAO;EAAoB;EAA6C;EAAe;EAAc;AH85J/riC;AG95J4siC;EAAS;EAAoB;EAA6C;EAAiB;EAAgB;AHq6JvziC;AGr6Jw0iC;EAAS;EAAoB;EAA6C;EAAkB;EAAgB;EAAoB;AH66Jx8iC;;AG76J49iC;EAAsB;AHi7Jl/iC;;AGj7JmjjC;EAAgB;EAA8B;AHs7JjmjC;AGt7JupjC;EAA2B;EAA8B;AH07JhtjC;AG17JswjC;EAA+H;EAA8B;AH87Jn6jC;AG97Jw9jC;EAAa;AHi8Jr+jC;AGj8J4hkC;EAAkC;AHo8J9jkC;AGp8J4lkC;EAAqB;AHu8JjnkC;AGv8JyqkC;EAAgB;EAA8B;AH28JvtkC;AG38J4wkC;EAA2B;EAA8B;AH+8Jr0kC;AG/8J23kC;EAAe;EAA8B;AHm9Jx6kC;AGn9J89kC;EAAyB;EAA8B;AHu9JrhlC;AGv9J2klC;EAAgB;EAA8B;AH29JznlC;AG39J+qlC;EAA2B;EAA8B;AH+9JxulC;;AG/9J+xlC;EAAsB;AHm+JrzlC;;AGn+Jw0lC;EAAkC;AHu+J12lC;;AGv+Ju3lC;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AHg/JxhmC;;AGh/JmimC;EAAa;AHo/JhjmC;;AGp/J6jmC;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AHigK15mC;;AGjgK46mC;EAAiD;AHqgK79mC;AGrgK4gnC;EAAU;AHwgKthnC;AGxgKqknC;EAAO;AH2gK5knC;AG3gKwnnC;EAAU;AH8gKlonC;AG9gKirnC;EAAS;AHihK1rnC;AGjhKwunC;EAAU;AHohKlvnC;;AGphKkynC;EAAsB;EAAa;AHyhKr0nC;;AGzhK82nC;EAAO;EAAkB;EAAkB;EAAoB;EAAoD;AHiiKj+nC;AGjiK4goC;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AHwiKnooC;AGxiKiroC;EAAO;EAAkB;EAAkB;EAAoB;EAAsD;AH+iKtyoC;AG/iKo1oC;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AHsjK58oC;AGtjK0/oC;EAAS;EAAkB;EAAkB;EAAoB;EAAqD;AH6jKhnpC;AG7jK8ppC;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AHokKrxpC;;AGpkKo0pC;EAAmB;EAA+C;AHykKt4pC;AGzkKk6pC;EAAkC;EAA4C;AH6kKh/pC;AG7kK+gqC;EAAwC;EAA+C;AHilKtmqC;AGjlKkoqC;EAAkC;EAA4C;AHqlKhtqC;AGrlK4uqC;EAAwC;EAA+C;AHylKn0qC;AGzlK+1qC;EAAsC;EAA8C;AH6lKn7qC;AG7lK+8qC;EAAwC;EAA+C;AHimKtirC;AGjmK0lrC;EAAO;EAA4C;AHqmK7orC;AGrmKyqrC;EAAU;EAAwD;AHymK3urC;AGzmKuwrC;EAAO;EAAqD;AH6mKn0rC;AG7mK+1rC;EAAU;EAAwD;AHinKj6rC;AGjnK67rC;EAAS;EAAuD;AHqnK7/rC;AGrnKyhsC;EAAU;EAAwD;AHynK3lsC;;AGznKynsC;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AHioK10sC;AGjoKs2sC;EAAO;EAAkB;EAAkB;EAAoB;EAAoD;AHwoKz9sC;AGxoKogtC;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AH+oK3ntC;AG/oKyqtC;EAAO;EAAkB;EAAkB;EAAoB;EAAsD;AHspK9xtC;AGtpK40tC;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AH6pKp8tC;AG7pKk/tC;EAAS;EAAkB;EAAkB;EAAoB;EAAqD;AHoqKxmuC;AGpqKspuC;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AH2qK7wuC;AG3qK2zuC;EAAO;EAA4C;EAAgD;EAA2D;AHirKz9uC;AGjrKw/uC;EAAU;EAA+C;EAAmD;EAA8D;AHurKlqvC;AGvrK8rvC;EAAO;EAA4C;EAAgD;EAA2D;AH6rK51vC;AG7rKw3vC;EAAU;EAA+C;EAAmD;EAA8D;AHmsKliwC;AGnsK8jwC;EAAS;EAA8C;EAAkD;EAA6D;AHysKpuwC;AGzsKgwwC;EAAU;EAA+C;EAAmD;EAA8D;AH+sK16wC;;AG/sKu8wC;EAAiC;EAA6B;AHotKrgxC;;AGptKmixC;EAA+B;EAAgC;AHytKlmxC;;AGztKmoxC;EAA0B;EAAkB;AH8tK/qxC;;AG9tKsuxC;EAA8B;EAA8B;AHmuKlyxC;;AGnuKu1xC;EAA2B;AHuuKl3xC;;AGvuK44xC;EAAwB;EAA0E;EAAkG;AH6uKhlyC;;AG7uKmryC;EAAgC;EAAsB;AHkvKzuyC;;AGlvKgyyC;EAAwB;EAA0E;EAAkG;AHwvKp+yC;;AGxvKukzC;EAA2B;EAA8B;AH6vKhozC;;AG7vKmpzC;EAAqB;EAA2G;AHkwKnxzC;;AGlwKs3zC;EAAwC;AHswK95zC;;AGtwKu/zC;EAAmB;EAA2G;AH2wKrn0C;;AG3wK8t0C;EAAqB;EAA2G;EAAyG;AHixKv80C;;AGjxKgi1C;EAA8B;EAAoB;AHsxKll1C;;AGtxK0o1C;EAA4B;EAAoB;AH2xK1r1C;;AG3xKkv1C;EAA8B;AH+xKhx1C;;AG/xKsy1C;EAA0B;EAA0E;EAAkG;AHqyK5+1C;;AGryK+k2C;EAAuC;EAAkB;AH0yKxo2C;;AG1yK+r2C;EAA2D;EAAsB;AH+yKhx2C;;AG/yKo02C;EAA6B;EAAsB;AHozKv32C;;AGpzK262C;EAAyB;EAAkB;AHyzKt92C;;AGzzK0g3C;EAAyB;EAAkB;AH8zKrj3C;;AG9zKym3C;EAAyB;EAAkB;AHm0Kpp3C;;AGn0Kws3C;EAAyB;EAAkB;AHw0Knv3C;;AGx0K0y3C;EAAwB;EAAoB;AH60Kt13C;;AG70Ko43C;EAA2B;EAAoB;AHk1Kn73C;;AGl1Ki+3C;EAA2B;EAAoB;AHu1Khh4C;;AGv1K4j4C;EAAsC;EAAkB;AH41Kpn4C;;AG51Kwq4C;EAAwC;EAAoB;AHi2Kpu4C;;AGj2Kyx4C;EAAmD;EAAkB;AHs2K914C;;AGt2Kq54C;EAAyB;IAAY;EH22Kx74C;EG32Kq84C;IAAY;EH82Kj94C;EG92K294C;IAAiB;EHi3K5+4C;EGj3K0h5C;IAAiB;EHo3K3i5C;AACF;AGr3K4l5C;EAAyB;IAAW;IAAiB;EH03K/o5C;EG13Kiq5C;IAAW;IAAmB;EH83K/r5C;EG93K+s5C;IAAW;EHi4K1t5C;EGj4Kwu5C;IAAY;EHo4Kpv5C;EGp4Kiw5C;IAAU;EHu4K3w5C;EGv4Kwx5C;IAAiB;EH04Kzy5C;EG14Ku15C;IAAiB;EH64Kx25C;EG74Ks55C;IAAc;EHg5Kp65C;EGh5Ku75C;IAAc;EHm5Kr85C;EGn5K295C;IAAW;IAAkB;EHu5Kx/5C;EGv5K2g6C;IAAiB;EH05K5h6C;EG15K8i6C;IAAc;IAAkB;EH85K9k6C;EG95K4l6C;IAAc;IAAiB;EHk6K3n6C;AACF;AGn6K+o6C;EAA0B;IAAU;EHu6Kjr6C;EGv6K8r6C;IAAU;EH06Kxs6C;EG16Kwt6C;IAAiB;EH66Kzu6C;EG76Kux6C;IAAiB;EHg7Kxy6C;EGh7Ks16C;IAAc;EHm7Kp26C;EGn7Ku36C;IAAe;EHs7Kt46C;AACF;AGv7Ky56C;EAA0B;IAAU;EH27K376C;EG37Ku86C;IAAW;IAAkB;EH+7Kp+6C;EG/7Ku/6C;IAAc;IAAiB;EHm8Kth7C;EGn8Koi7C;IAAc;IAAmB;EHu8Krk7C;AACF,EIx8KA;AAAgE;EAAiB;EAAuB;AJ48KxG;;AI58K8H;EAAe;AJg9K7I;;AIh9K6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AJ09K5c;;AI19Kud;EAAK;EAAoB;AJ+9Khf;;AI/9Kyf;EAAG;EAAqB;EAAc;AJq+K/hB;;AIr+KwiB;EAAoB;EAAyC;AJ0+KrmB;;AI1+KsoB;EAAkB;EAAkB;AJ++K1qB;;AI/+K8rB;EAAE;EAAc;AJo/K9sB;;AIp/KsuB;EAAS;AJw/K/uB;;AIx/KkwB;EAAkB;EAAoG;AJ6/Kx3B;;AI7/Ks4B;EAAM;AJigL54B;;AIjgL05B;EAAQ;EAAc;EAAc;EAAkB;AJwgLh9B;;AIxgLw+B;EAAI;AJ4gL5+B;;AI5gL0/B;EAAI;AJghL9/B;;AIhhLwgC;EAAM;EAAyB;EAAqB;AJshL5jC;;AIthL0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AJgiLltC;;AIhiL4tC;EAAc;AJoiL1uC;;AIpiL8vC;EAAgD;EAA0B;EAA6B;AJ0iLr2C;;AI1iL23C;EAAgB;AJ8iL34C;;AI9iLw5C;EAAiB;AJkjLz6C;;AIljLy7C;EAAS;AJsjLl8C;;AItjL09C;EAAwD;AJ0jLlhD;;AI1jL8hD;EAAc;EAA6B;AJ+jLzkD;;AI/jL6lD;EAA4B;AJmkLznD;;AInkLipD;EAA6B;EAA0B;AJwkLxsD;;AIxkLqtD;EAAQ;AJ4kL7tD;;AI5kL+uD;EAAmD;AJglLlyD;;AIhlL2yD;EAAS;AJolLpzD;;AIplL6zD;EAAgB;AJwlL70D;;AIxlLu1D;EAAW;EAAgB;EAAS;AJ8lL33D;;AI9lLq4D;EAAS;AJkmL94D;;AIlmL85D;EAAmD;EAAc;AJumL/9D;;AIvmLy+D;EAAyC;EAAc;AJ4mLhiE;;AI5mL0iE;EAAqB;AJgnL/jE;;AIhnL8kE;EAAU;AJonLxlE;;AIpnLumE;EAA+C;EAAc;AJynLpqE;;AIznL0rE;EAAU;EAAY;AJ8nLhtE;;AI9nL+tE;EAAS;AJkoLxuE;;AIloLqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJirLjpG;;AIjrLuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJguL7jI;;AIhuLmlI;EAAW;AJouL9lI;;AIpuLymI;EAAyB;IAAW;EJyuL3oI;AACF;AI1uL8pI;EAAyB;IAAW;EJ8uLhsI;AACF;AI/uLmtI;EAA0B;IAAW;EJmvLtvI;AACF;AIpvL0wI;EAA0B;IAAW;EJwvL7yI;AACF;AIzvLi0I;EAA0B;IAAW;EJ6vLp2I;AACF;AI9vLw3I;EAA0B;IAAW;EJkwL35I;AACF;AInwL+6I;EAAS;AJswLx7I;;AItwL28I;EAAW;AJ0wLt9I;;AI1wLw+I;EAAQ;AJ8wLh/I;;AI9wLggJ;EAAO;AJkxLvgJ;;AIlxLshJ;EAAU;AJsxLhiJ;;AItxLkjJ;EAAU;AJ0xL5jJ;;AI1xL8kJ;EAAS;EAAS;EAAO;EAAQ;AJiyL/mJ;;AIjyLqnJ;EAAQ;AJqyL7nJ;;AIryLwoJ;EAAQ;AJyyLhpJ;;AIzyLupJ;EAAS;AJ6yLhqJ;;AI7yLwqJ;EAAS;AJizLjrJ;;AIjzL4rJ;EAAW;AJqzLvsJ;;AIrzLmtJ;EAAO;AJyzL1tJ;;AIzzLguJ;EAAO;AJ6zLvuJ;;AI7zLgvJ;EAAS;AJi0LzvJ;;AIj0LmwJ;EAAQ;AJq0L3wJ;;AIr0LoxJ;EAAQ;AJy0L5xJ;;AIz0LqyJ;EAAU;AJ60L/yJ;;AI70L4zJ;EAAS;AJi1Lr0J;;AIj1Lm1J;EAAU;AJq1L71J;;AIr1L42J;EAAgB;AJy1L53J;;AIz1Lu4J;EAAM;AJ61L74J;;AI71Lw5J;EAAM;AJi2L95J;;AIj2Ly6J;EAAM;AJq2L/6J;;AIr2L07J;EAAK;AJy2L/7J;;AIz2Ly8J;EAAK;AJ62L98J;;AI72L49J;EAAK;AJi3Lj+J;;AIj3L0+J;EAAM;AJq3Lh/J;;AIr3L4/J;EAAO;EAAmB;AJ03LthK;;AI13LsiK;EAAS;EAAiB;AJ+3LhkK;;AI/3LklK;EAAM;EAAoB;AJo4L5mK;;AIp4L6nK;EAAM;EAAgB;AJy4LnpK;;AIz4LgqK;EAAM;EAAqB;AJ84L3rK;;AI94L6sK;EAAM;EAAiB;AJm5LpuK;;AIn5LsvK;EAAM;EAAmB;AJw5L/wK;;AIx5L+xK;EAAM;EAAkB;AJ65LvzK;;AI75L00K;EAAM;EAAmB;AJk6Ln2K;;AIl6Lu3K;EAAQ;EAA6B;AJu6L55K;;AIv6L07K;EAAQ;EAA+B;AJ46Lj+K;;AI56L6/K;EAAO;EAAiB;AJi7LrhL;;AIj7LuiL;EAAO;AJq7L9iL;;AIr7LikL;EAAO;AJy7LxkL;;AIz7LwlL;EAAO;AJ67L/lL;;AI77LknL;EAAM;AJi8LxnL;;AIj8L2oL;EAAM;AJq8LjpL;;AIr8LmqL;EAAM;AJy8LzqL;;AIz8L6rL;EAAM;AJ68LnsL;;AI78LqtL;EAAM;AJi9L3tL;;AIj9L2uL;EAAM;AJq9LjvL;;AIr9LowL;EAAM;AJy9L1wL;;AIz9L4xL;EAAM;AJ69LlyL;;AI79LmzL;EAAM;AJi+LzzL;;AIj+L80L;EAAM;AJq+Lp1L;;AIr+Lw2L;EAAM;AJy+L92L;;AIz+Li4L;EAAM;AJ6+Lv4L;;AI7+Lo5L;EAAM;AJi/L15L;;AIj/L46L;EAAM;AJq/Ll7L;;AIr/Lo8L;EAAM;AJy/L18L;;AIz/Lw9L;EAAM;AJ6/L99L;;AI7/L6+L;EAAM;AJigMn/L;;AIjgMsgM;EAAO;AJqgM7gM;;AIrgM+hM;EAAO;AJygMtiM;;AIzgMyjM;EAAO;AJ6gMhkM;;AI7gMmlM;EAAM;AJihMzlM;;AIjhM0mM;EAAO;AJqhMjnM;;AIrhMmoM;EAAO;AJyhM1oM;;AIzhMwpM;EAAS;AJ6hMjqM;;AI7hMyrM;EAAc;AJiiMvsM;;AIjiM4tM;EAAM;AJqiMluM;;AIriM+uM;EAAQ;AJyiMvvM;;AIziM8wM;EAAa;AJ6iM3xM;;AI7iM+yM;EAAO;AJijMtzM;;AIjjMo0M;EAAY;AJqjMh1M;;AIrjMm2M;EAAoB;AJyjMv3M;;AIzjMk5M;EAAiB;AJ6jMn6M;;AI7jM27M;EAAW;AJikMt8M;;AIjkMw9M;EAAM;AJqkM99M;;AIrkM2+M;EAAU;AJykMr/M;;AIzkMsgN;EAAQ;AJ6kM9gN;;AI7kM2hN;EAAM;AJilMjiN;;AIjlM8iN;EAAQ;AJqlMtjN;;AIrlMkkN;EAAK;AJylMvkN;;AIzlMmlN;EAAM;AJ6lMzlN;;AI7lMqmN;EAAM;AJimM3mN;;AIjmMunN;EAAM;AJqmM7nN;;AIrmM0oN;EAAM;AJymMhpN;;AIzmM6pN;EAAK;AJ6mMlqN;;AI7mMgrN;EAAM;AJinMtrN;;AIjnMmsN;EAAM;AJqnMzsN;;AIrnMstN;EAAM;AJynM5tN;;AIznMwuN;EAAM;AJ6nM9uN;;AI7nM4vN;EAAM;AJioMlwN;;AIjoMixN;EAAK;AJqoMtxN;;AIroMmyN;EAAM;AJyoMzyN;;AIzoMqzN;EAAO;EAAwB;AJ8oMp1N;;AI9oMu2N;EAAa;AJkpMp3N;;AIlpMi4N;EAAU;AJspM34N;;AItpM45N;EAAQ;AJ0pMp6N;;AI1pM+6N;EAAK;AJ8pMp7N;;AI9pM+7N;EAAM;AJkqMr8N;;AIlqMg9N;EAAM;AJsqMt9N;;AItqMi+N;EAAO;EAAuB;AJ2qM//N;;AI3qMihO;EAAK;AJ+qMthO;;AI/qMmiO;EAAK;AJmrMxiO;;AInrMqjO;EAAK;AJurM1jO;;AIvrMskO;EAAQ;AJ2rM9kO;;AI3rMylO;EAAM;AJ+rM/lO;;AI/rM2mO;EAAM;AJmsMjnO;;AInsM6nO;EAAM;AJusMnoO;;AIvsM8oO;EAAM;AJ2sMppO;;AI3sMgqO;EAAM;AJ+sMtqO;;AI/sMkrO;EAAM;AJmtMxrO;;AIntMosO;EAAmB;EAAuB;AJwtM9uO;;AIxtMgwO;EAAa;AJ4tM7wO;;AI5tMyxO;EAAQ;AJguMjyO;;AIhuMszO;EAAc;AJouMp0O;;AIpuM61O;EAAQ;AJwuMr2O;;AIxuMi3O;EAAa;AJ4uM93O;;AI5uM44O;EAAW;AJgvMv5O;;AIhvMm6O;EAAW;AJovM96O;;AIpvMg8O;EAAsB;AJwvMt9O;;AIxvMopP;EAAQ;AJ4vM5pP;;AI5vMwqP;EAAW;AJgwMnrP;;AIhwMwsP;EAAiB;EAAwB;EAAqB;AJswMtwP;;AItwMsxP;EAAe;AJ0wMryP;;AI1wMwzP;EAAa;AJ8wMr0P;;AI9wMm3P;EAAU;AJkxM73P;;AIlxMg5P;EAAkB;AJsxMl6P;;AItxM67P;EAAU;AJ0xMv8P;;AI1xM69P;EAAW;AJ8xMx+P;;AI9xMu/P;EAAa;AJkyMpgQ;;AIlyMqhQ;EAAgB;AJsyMriQ;;AItyM0jQ;EAAiB;AJ0yM3kQ;;AI1yMumQ;EAAgB;AJ8yMvnQ;;AI9yMkpQ;EAAa;AJkzM/pQ;;AIlzMsrQ;EAAW;AJszMjsQ;;AItzMstQ;EAAc;AJ0zMpuQ;;AI1zMuvQ;EAAe;AJ8zMtwQ;;AI9zMiyQ;EAAa;AJk0M9yQ;;AIl0Mu0Q;EAAgB;AJs0Mv1Q;;AIt0M82Q;EAAiB;AJ00M/3Q;;AI10M65Q;EAAmB;AJ80Mh7Q;;AI90Mw9Q;EAAgB;AJk1Mx+Q;;AIl1MqgR;EAAQ;AJs1M7gR;;AIt1MshR;EAAO;AJ01M7hR;;AI11MsiR;EAAO;AJ81M7iR;;AI91MwjR;EAAO;AJk2M/jR;;AIl2MykR;EAAyC;EAAuB;EAAqD;AJw2M9rR;;AIx2MsvR;EAAwC;EAAwB;EAAyD;AJ82M/2R;;AI92M26R;EAA+C;EAAsB;AJm3Mh/R;;AIn3MuiS;EAAiB;AJu3MxjS;;AIv3MwkS;EAAiB;AJ23MzlS;;AI33MymS;EAAmB;AJ+3M5nS;;AI/3M8oS;EAAmB;AJm4MjqS;;AIn4MmrS;EAAmB;AJu4MtsS;;AIv4MwtS;EAAU;EAAgB;EAAuB;AJ64MzwS;;AI74M4xS;EAAmB;AJi5M/yS;;AIj5Mk0S;EAAmB;AJq5Mr1S;;AIr5Mw2S;EAAqB;AJy5M73S;;AIz5Mk5S;EAAqB;AJ65Mv6S;;AI75M47S;EAAY;AJi6Mx8S;;AIj6M89S;EAAS;AJq6Mv+S;;AIr6M4/S;EAAY;AJy6MxgT;;AIz6M4hT;EAAc;AJ66M1iT;;AI76M+jT;EAAc;AJi7M7kT;;AIj7M6lT;EAAa;AJq7M1mT;;AIr7M6nT;EAAY;AJy7MzoT;;AIz7M8pT;EAAa;AJ67M3qT;;AI77MgsT;EAAY;AJi8M5sT;;AIj8MkuT;EAAgB;EAA6B;AJs8M/wT;;AIt8MyyT;EAAc;EAAkC;AJ28Mz1T;;AI38M43T;EAAU;AJ+8Mt4T;;AI/8Mu5T;EAAQ;AJm9M/5T;;AIn9Mg7T;EAAU;AJu9M17T;;AIv9My8T;EAAY;AJ29Mr9T;;AI39M6+T;EAAY;AJ+9Mz/T;;AI/9M8gU;EAAU;AJm+MxhU;;AIn+MgjU;EAAU;AJu+M1jU;;AIv+M+kU;EAAY;AJ2+M3lU;;AI3+MknU;EAAY;AJ++M9nU;;AI/+MopU;EAAc;AJm/MlqU;;AIn/MqrU;EAAa;AJu/MlsU;;AIv/MotU;EAAiB;EAAsB;AJ4/M3vU;;AI5/MkzU;EAAmB;EAAsB;AJigN31U;;AIjgNg5U;EAA6B;EAAsB;AJsgNn8U;;AItgNy/U;EAAiB;EAAsB;AJ2gNhiV;;AI3gNulV;EAAiB;EAAsB;AJghN9nV;;AIhhNqrV;EAAgB;EAAsB;AJqhN3tV;;AIrhNgxV;EAAoB;AJyhNpyV;;AIzhN6zV;EAA4B;EAAsB;AJ8hN/2V;;AI9hNm6V;EAAU;EAAkB;AJmiN/7V;;AIniNs/V;EAAc;EAAkB;AJwiNthW;;AIxiN2kW;EAAc;EAAkB;AJ6iN3mW;;AI7iNgqW;EAAY;EAAkB;AJkjN9rW;;AIljNqvW;EAAa;EAAkB;AJujNpxW;;AIvjN20W;EAAa;EAAkB;AJ4jN12W;;AI5jNi6W;EAAgB;AJgkNj7W;;AIhkN88W;EAAc;EAAkB;AJqkN9+W;;AIrkNkiX;EAAa;EAAkB;AJ0kNjkX;;AI1kNqnX;EAAa;EAAkB;AJ+kNppX;;AI/kN2sX;EAAmB;AJmlN9tX;;AInlNsyX;EAAkB;AJulNxzX;;AIvlN43X;EAAmB;AJ2lN/4X;;AI3lN09X;EAA6B;EAA2B;EAAoC;AJimNtjY;;AIjmNwnY;EAAc;EAA2B;EAAqC;AJumNtsY;;AIvmNwwY;EAA2B;EAA2B;EAAoC;AJ6mNl2Y;;AI7mNo6Y;EAAW;EAAmC;AJknNl9Y;;AIlnNyhZ;EAAc;EAAqC;AJunN5kZ;;AIvnNspZ;EAAwB;AJ2nN9qZ;;AI3nNusZ;EAAY;AJ+nNntZ;;AI/nN2uZ;EAAc;AJmoNzvZ;;AInoN2wZ;EAAgB;EAAsB;AJwoNjzZ;;AIxoNo0Z;EAAc;EAAoB;AJ6oNt2Z;;AI7oNu3Z;EAAe;EAA0B;AJkpNh6Z;;AIlpNu7Z;EAAK;AJspN57Z;;AItpNs8Z;EAAK;AJ0pN38Z;;AI1pN09Z;EAAK;AJ8pN/9Z;;AI9pN6+Z;EAAK;AJkqNl/Z;;AIlqNiga;EAAK;AJsqNtga;;AItqNmha;EAAK;AJ0qNxha;;AI1qNuia;EAAQ;AJ8qN/ia;;AI9qN+ja;EAAM;EAAoB;AJmrNzla;;AInrN8ma;EAAO;EAAoB;AJwrNzoa;;AIxrN0pa;EAAM;EAAqB;AJ6rNrra;;AI7rN2sa;EAAM;EAAsB;AJksNvua;;AIlsN0va;EAAQ;EAAgC;AJusNlya;;AIvsN+za;EAAQ;EAAyB;AJ4sNh2a;;AI5sN03a;EAAM;EAAqB;AJitNr5a;;AIjtNu6a;EAAM;EAAoB;AJstNj8a;;AIttNs9a;EAAM;EAAoB;AJ2tNh/a;;AI3tNqgb;EAAQ;EAA8B;AJguN3ib;;AIhuNskb;EAAM;EAAmB;AJquN/lb;;AIruNmnb;EAAM;EAAkB;AJ0uN3ob;;AI1uN8pb;EAAM;EAAqB;AJ+uNzrb;;AI/uN+sb;EAAM;EAAoB;AJovNzub;;AIpvN0vb;EAAM;EAAe;AJyvN/wb;;AIzvN+xb;EAAM;EAAsB;AJ8vN3zb;;AI9vN80b;EAAQ;EAA8B;AJmwNp3b;;AInwNm5b;EAAM;EAAiB;AJwwN16b;;AIxwNw7b;EAAM;AJ4wN97b;;AI5wNk9b;EAAM;AJgxNx9b;;AIhxN2+b;EAAM;AJoxNj/b;;AIpxNogc;EAAM;AJwxN1gc;;AIxxN4hc;EAAM;AJ4xNlic;;AI5xNujc;EAAM;AJgyN7jc;;AIhyNolc;EAAM;AJoyN1lc;;AIpyN6mc;EAAM;AJwyNnnc;;AIxyNuoc;EAAM;AJ4yN7oc;;AI5yN4pc;EAAM;AJgzNlqc;;AIhzNsrc;EAAW;AJozNjsc;;AIpzNitc;EAAa;AJwzN9tc;;AIxzNgvc;EAAe;AJ4zN/vc;;AI5zN2xc;EAAY;AJg0Nvyc;;AIh0Nwzc;EAAc;AJo0Nt0c;;AIp0Ni2c;EAAc;AJw0N/2c;;AIx0Nq4c;EAAY;AJ40Nj5c;;AI50Nk9c;EAAS;EAAkB;AJi1N7+c;;AIj1Nigd;EAAU;EAAe;AJs1N1hd;;AIt1Nwid;EAAS;AJ01Njjd;;AI11Nmkd;EAAkB;AJ81Nrld;;AI91Nymd;EAAS;AJk2Nlnd;;AIl2Nqod;EAAW;EAAe;AJu2N/pd;;AIv2Nkrd;EAAU;EAAmB;AJ42N/sd;;AI52Nmud;EAAS;EAAiB;AJi3N7vd;;AIj3N8wd;EAAa;AJq3N3xd;;AIr3N2yd;EAAW;AJy3Ntzd;;AIz3Ns0d;EAAe;AJ63Nr1d;;AI73Nq2d;EAAa;AJi4Nl3d;;AIj4Nk4d;EAAY;AJq4N94d;;AIr4N85d;EAAW;AJy4Nz6d;;AIz4Nk8d;EAAY;AJ64N98d;;AI74Nw+d;EAAQ;AJi5Nh/d;;AIj5Nkge;EAAc;AJq5Nhhe;;AIr5Nkie;EAAe;AJy5Njje;;AIz5Nkke;EAAgB;AJ65Nlle;;AI75Nyme;EAAe;AJi6Nxne;;AIj6N8oe;EAAiB;EAA8B;AJs6N7re;;AIt6Nkve;EAAe;EAAoB;AJ26Nrxe;;AI36Ng0e;EAAY;EAAoB;AJg7Nh2e;;AIh7N84e;EAAgB;EAA8B;AJq7N57e;;AIr7No/e;EAAiB;EAAoB;AJ07Nzhf;;AI17Nqkf;EAAY;EAAoB;AJ+7Nrmf;;AI/7N6of;EAAc;EAAoB;AJo8N/qf;;AIp8N2tf;EAAiB;EAAoB;AJy8Nhwf;;AIz8N4yf;EAAe;EAAoB;AJ88N/0f;;AI98N63f;EAAe;EAAoB;AJm9Nh6f;;AIn9N48f;EAAgB;EAAoB;AJw9Nh/f;;AIx9N4hgB;EAAc;EAAoB;AJ69N9jgB;;AI79N0mgB;EAAe;EAAoB;AJk+N7ogB;;AIl+N2rgB;EAAgB;EAAoB;AJu+N/tgB;;AIv+N2wgB;EAAc;EAAoB;AJ4+N7ygB;;AI5+N21gB;EAAe;EAAoB;AJi/N93gB;;AIj/Ny6gB;EAAe;EAAoB;AJs/N58gB;;AIt/Nu/gB;EAA0B;EAAoB;AJ2/NrihB;;AI3/NglhB;EAAiB;EAAoB;AJggOrnhB;;AIhgOkqhB;EAAiB;EAAoB;AJqgOvshB;;AIrgOmvhB;EAAgB;EAAoB;AJ0gOvxhB;;AI1gOm0hB;EAA2B;EAAoB;AJ+gOl3hB;;AI/gO+5hB;EAAe;EAAoB;AJohOl8hB;;AIphO8+hB;EAAe;EAAoB;AJyhOjhiB;;AIzhO8jiB;EAAiB;EAAoB;AJ8hOnmiB;;AI9hOgpiB;EAAW;AJkiO3piB;;AIliO0riB;EAAc;AJsiOxsiB;;AItiOkuiB;EAAW;AJ0iO7uiB;;AI1iOuviB;EAAW;EAAwE;AJ+iO10iB;;AI/iO06iB;EAAsB;AJmjOh8iB;;AInjOmijB;EAAW;EAA0E;AJwjOxnjB;;AIxjO0tjB;EAAQ;EAAqE;AJ6jOvyjB;;AI7jOo4jB;EAAmB;AJikOv5jB;;AIjkO0/jB;EAAW;EAAwC;AJskO7ikB;;AItkOomkB;EAAW;EAA2E;AJ2kO1rkB;;AI3kO6xkB;EAAyB;AJ+kOtzkB;;AI/kOy5kB;EAAc;EAA8C;AJolOr9kB;;AIplOkhlB;EAAa;EAAsB;EAA8B;AJ0lOnllB;;AI1lOsrlB;EAAc;EAA8B;AJ+lOlulB;;AI/lOqvlB;EAAQ;EAA2G;AJomOx2lB;;AIpmO28lB;EAAc;AJwmOz9lB;;AIxmOkjmB;EAAM;EAA2G;AJ6mOnqmB;;AI7mO4wmB;EAA2B;EAAoB;AJknO3zmB;;AIlnOk3mB;EAAM;AJsnOx3mB;;AItnO44mB;EAAc;AJ0nO15mB;;AI1nO2knB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AJkoO1joB;;AIloO6moB;EAAoB;EAA4B;AJuoO7poB;;AIvoOgtoB;EAAkC;AJ2oOlvoB;;AI3oO2woB;EAAc;AJ+oOzxoB;;AI/oOizoB;EAAa;AJmpO9zoB;;AInpOi3oB;EAAW;AJupO53oB;;AIvpOi5oB;EAAsB;AJ2pOv6oB;;AI3pO07oB;EAAkC;AJ+pO59oB;;AI/pOy+oB;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AJwqO1opB;;AIxqOqppB;EAAa;AJ4qOlqpB;;AI5qO+qpB;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AJyrO5gqB;;AIzrO8hqB;EAAiD;AJ6rO/kqB;AI7rO8nqB;EAAU;AJgsOxoqB;AIhsOurqB;EAAO;AJmsO9rqB;AInsO0uqB;EAAU;AJssOpvqB;AItsOmyqB;EAAS;AJysO5yqB;AIzsO01qB;EAAU;AJ4sOp2qB;;AI5sOo5qB;EAAsB;EAAa;AJitOv7qB;;AIjtOg+qB;EAAO;EAAkB;EAAkB;EAAoB;EAAoD;AJytOnlrB;AIztO8nrB;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AJguOrvrB;AIhuOmyrB;EAAO;EAAkB;EAAkB;EAAoB;EAAsD;AJuuOx5rB;AIvuOs8rB;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AJ8uO9jsB;AI9uO4msB;EAAS;EAAkB;EAAkB;EAAoB;EAAqD;AJqvOlusB;AIrvOgxsB;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AJ4vOv4sB;;AI5vOs7sB;EAAmB;EAA+C;AJiwOx/sB;AIjwOohtB;EAAkC;EAA4C;AJqwOlmtB;AIrwOiotB;EAAwC;EAA+C;AJywOxttB;AIzwOovtB;EAAkC;EAA4C;AJ6wOl0tB;AI7wO81tB;EAAwC;EAA+C;AJixOr7tB;AIjxOi9tB;EAAsC;EAA8C;AJqxOriuB;AIrxOikuB;EAAwC;EAA+C;AJyxOxpuB;AIzxO4suB;EAAO;EAA4C;AJ6xO/vuB;AI7xO2xuB;EAAU;EAAwD;AJiyO71uB;AIjyOy3uB;EAAO;EAAqD;AJqyOr7uB;AIryOi9uB;EAAU;EAAwD;AJyyOnhvB;AIzyO+ivB;EAAS;EAAuD;AJ6yO/mvB;AI7yO2ovB;EAAU;EAAwD;AJizO7svB;;AIjzO2uvB;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AJyzO57vB;AIzzOw9vB;EAAO;EAAkB;EAAkB;EAAoB;EAAoD;AJg0O3kwB;AIh0OsnwB;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AJu0O7uwB;AIv0O2xwB;EAAO;EAAkB;EAAkB;EAAoB;EAAsD;AJ80Oh5wB;AI90O87wB;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AJq1OtjxB;AIr1OomxB;EAAS;EAAkB;EAAkB;EAAoB;EAAqD;AJ41O1txB;AI51OwwxB;EAAU;EAAkB;EAAkB;EAAoB;EAAqD;AJm2O/3xB;AIn2O66xB;EAAO;EAA4C;EAAgD;EAA2D;AJy2O3kyB;AIz2O0myB;EAAU;EAA+C;EAAmD;EAA8D;AJ+2OpxyB;AI/2OgzyB;EAAO;EAA4C;EAAgD;EAA2D;AJq3O98yB;AIr3O0+yB;EAAU;EAA+C;EAAmD;EAA8D;AJ23OppzB;AI33OgrzB;EAAS;EAA8C;EAAkD;EAA6D;AJi4Ot1zB;AIj4Ok3zB;EAAU;EAA+C;EAAmD;EAA8D;AJu4O5h0B;;AIv4Oyj0B;EAAiC;EAA6B;AJ44Ovn0B;;AI54Oqp0B;EAA+B;EAAgC;AJi5Opt0B;;AIj5Oqv0B;EAA0B;EAAkB;AJs5Ojy0B;;AIt5Ow10B;EAA8B;EAA8B;AJ25Op50B;;AI35Oy80B;EAA2B;AJ+5Op+0B;;AI/5O8/0B;EAAwB;EAA0E;EAAkG;AJq6Ols1B;;AIr6Oqy1B;EAAgC;EAAsB;AJ06O311B;;AI16Ok51B;EAAwB;EAA0E;EAAkG;AJg7Otl2B;;AIh7Oyr2B;EAA2B;EAA8B;AJq7Olv2B;;AIr7Oqw2B;EAAqB;EAA2G;AJ07Or42B;;AI17Ow+2B;EAAwC;AJ87Ohh3B;;AI97Oym3B;EAAmB;EAA2G;AJm8Ovu3B;;AIn8Og13B;EAAqB;EAA2G;EAAyG;AJy8Ozj4B;;AIz8Okp4B;EAA8B;EAAoB;AJ88Ops4B;;AI98O4v4B;EAA4B;EAAoB;AJm9O5y4B;;AIn9Oo24B;EAA8B;AJu9Ol44B;;AIv9Ow54B;EAA0B;EAA0E;EAAkG;AJ69O9l5B;;AI79Ois5B;EAAuC;EAAkB;AJk+O1v5B;;AIl+Oiz5B;EAA2D;EAAsB;AJu+Ol45B;;AIv+Os75B;EAA6B;EAAsB;AJ4+Oz+5B;;AI5+O6h6B;EAAyB;EAAkB;AJi/Oxk6B;;AIj/O4n6B;EAAyB;EAAkB;AJs/Ovq6B;;AIt/O2t6B;EAAyB;EAAkB;AJ2/Otw6B;;AI3/O0z6B;EAAyB;EAAkB;AJggPr26B;;AIhgP456B;EAAwB;EAAoB;AJqgPx86B;;AIrgPs/6B;EAA2B;EAAoB;AJ0gPri7B;;AI1gPml7B;EAA2B;EAAoB;AJ+gPlo7B;;AI/gP8q7B;EAAsC;EAAkB;AJohPtu7B;;AIphP0x7B;EAAwC;EAAoB;AJyhPt17B;;AIzhP247B;EAAmD;EAAkB;AJ8hPh97B;;AI9hPug8B;EAAyB;IAAY;EJmiP1i8B;EIniPuj8B;IAAY;EJsiPnk8B;EItiP6k8B;IAAiB;EJyiP9l8B;EIziP4o8B;IAAiB;EJ4iP7p8B;AACF;AI7iP8s8B;EAAyB;IAAW;IAAiB;EJkjPjw8B;EIljPmx8B;IAAW;IAAmB;EJsjPjz8B;EItjPi08B;IAAW;EJyjP508B;EIzjP018B;IAAY;EJ4jPt28B;EI5jPm38B;IAAU;EJ+jP738B;EI/jP048B;IAAiB;EJkkP358B;EIlkPy88B;IAAiB;EJqkP198B;EIrkPwg9B;IAAc;EJwkPth9B;EIxkPyi9B;IAAc;EJ2kPvj9B;EI3kP6k9B;IAAW;IAAkB;EJ+kP1m9B;EI/kP6n9B;IAAiB;EJklP9o9B;EIllPgq9B;IAAc;IAAkB;EJslPhs9B;EItlP8s9B;IAAc;IAAiB;EJ0lP7u9B;AACF;AI3lPiw9B;EAA0B;IAAU;EJ+lPny9B;EI/lPgz9B;IAAU;EJkmP1z9B;EIlmP009B;IAAiB;EJqmP319B;EIrmPy49B;IAAiB;EJwmP159B;EIxmPw89B;IAAc;EJ2mPt99B;EI3mPy+9B;IAAe;EJ8mPx/9B;AACF;AI/mP2g+B;EAA0B;IAAU;EJmnP7i+B;EInnPyj+B;IAAW;IAAkB;EJunPtl+B;EIvnPym+B;IAAc;IAAiB;EJ2nPxo+B;EI3nPsp+B;IAAc;IAAmB;EJ+nPvr+B;AACF;AA5nPA;AKiEE;ECmQE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;AP4kPJ;;AKjlPE;EEPI;ECZF;EDwBA;EAZE;ECZF;EDwBA;EE8QA,iBA3RU;EA4RV;EAQA,iCAnSW;EJ6BT;EACA;EACA;EACA;EACA;ALwkPN;;ASp5OE;EFrNI;ECZF;EDwBA;APmmPJ;;AUjmPM;EACE;EHfF;ECZF;EDwBA;EEmNI;EC9MA;AVumPR;;ASp5OE;EFpOI;ECZF;EDwBA;APknPJ;;AUhnPM;EACE;EHfF;ECZF;EDwBA;EEkOI;EC7NA;AVsnPR;;ASp5OE;EFnPI;ECZF;EDwBA;APioPJ;;AU/nPM;EACE;EHfF;ECZF;EDwBA;EEmPI;EC9OA;AVqoPR;;ASl5OE;EFpQI;ECZF;EDwBA;APgpPJ;;AU9oPM;EACE;EHfF;ECZF;EDwBA;EEoQI;EC/PA;AVopPR;;ASnmPE;EFtDE;AP6pPJ;;ASjnPE;EFxDI;ECZF;EDwBA;APmqPJ;;ASnmPE;EFhEE;APuqPJ;;AWrnPE;;;EJlDE;AP6qPJ;;AS9kPE;;EAGI,wCA9HU;AT8sPhB;;AS5kPE;EAEI,qCApIU;ATktPhB;;AStkPE;;EAGI,wBA9IS;EA+IT;ATwkPN;;ASpkPE;EAEI,qBArJS;EAsJT;ATskPN;;ASlkPE;EAEI;ATokPN;;AS5jPE;EFzIE;APysPJ;;AStjPE;EFnJE;AP6sPJ;;AS5iPE;;;EFjKE;APmtPJ;;AS36OE;EAEI,YAkHK;AT2zOX;;ASz6OE;EAEI,gBA4GK;AT+zOX;;AS77OE;EAEI,YAmIuB;AT4zO7B;;ASr5OE;;EAGI;ATu5ON;;ASz3OE;;ED9XE;EDmBA;ECnBA;EDmBA;AP4uPJ;;AU1uPM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVgvPR;;AK/qPE;EAGI;EACA;EACA;ALgrPN;;AK5qPE;EAEI;EACA;EACA;EACA;EACA;;;;;IAAA;EAMA;AL8qPN;;AYnzPE;ENoSE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EKtCE;EACA;EACA;EACA;AZ00PN;;AUryPM;EACE;EFtBJ;EIZI;EFoCA;AVyyPR;;AYx0PE;EAEI;AZ00PN;;AUhzPM;EACE;EFtBJ;EICI;EFuBA;AVozPR;;AYt0PE;EAYE;AZ8zPJ;;Aal2PE;EP+RE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EMjCE;EACA;EACA;EACA;ELWF;EKRE;Abw3PN;;AU31PM;EACE;EFtBJ;EKJI;EH4BA;AV+1PR;;Aat3PE;EDiBE;AZy2PJ;;Aat3PE;EAEI;Abw3PN;;AU12PM;EACE;EFtBJ;EKaI;EHWA;AV82PR;;Aap3PE;ECsEE,WAnBK;EAoBL,YApBK;EAqBL;EDhEE;EL1BF;EDmBA;ECnBA;EDmBA;EMqBE;EAUA;Abi2PN;;ActzPE;EAEI;AdwzPN;;AcnzPI;EAUI;EACA,gBA1CC;EA2CD,eA3CC;Adw1PT;;Ae13PI;EDiEA;IEzFA;IACA;IACA;IACA;IACA;IACA;IRhBA;IQkBA;IRlBA;IQoBA;IACA,YA3BwB;IA4BxB,WAtB0B;EhB66P5B;AACF;Ae34PI;EDiEA;IE3EE;EhBy5PJ;AACF;Aeh5PI;ECPA;IACE;IACA;IACA,kBAhEgB;IAiEhB;IACA;IACA;IRlCF;IQoCE;IRpCF;IQsCE;IACA,wBA/BgB;IAgChB,uBAhCgB;EhB07PpB;AACF;Aeh6PI;ECPA;IAeI;EhB45PN;AACF;Ac10PI;EAEI,WA3DC;EA4DD,YA5DC;EG3BL,eAHsB;EAItB,kBAJsB;EAcpB,iBANwB;EAOxB,gBAPwB;AjBi6P9B;;Acl0PM;EAEI,gBA3ED;EA4EC,eA5ED;Adg5PT;;Ac9zPE;EGhJE;EACA;EACA,YH4DK;ENrEL;ESeE;EACA,WHqDG;EGpDH;AjB88PN;;AU18PM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVg9PR;;Aav8PI;ELjCA;EDmBA;ECnBA;EDmBA;AP49PJ;;AU19PM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVg+PR;;Aa78PI;EAEI;Ab+8PR;;Aav8PI;EAII;Abu8PR;;Aal8PE;EAEI;EACA;EACA;Abo8PN;;Aah8PE;EAEI;Abk8PN;;Aa97PE;EEpEE;EACA;EACA;EACA;EACA;EACA;AfsgQJ;;Aa97PE;EAEI;EACA;EACA;Abg8PN;;ASr/PE;EFjBE;AP0gQJ;;AkB97PI;EXxFE;ECZF;EDwBA;APghQJ;;AkB3jPE;EXjeI;ECZF;EDwBA;APshQJ;;AkBjkPE;EA9QI;EXnNA;ECZF;EDwBA;AP6hQJ;;AkB5zPM;EAEI;AlB8zPV;;AkBzzPQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;APwiQJ;;AkBnzPI;EXrPA;AP4iQJ;;ASjhQE;EF3BE;APgjQJ;;AkBp+PI;EXxFE;ECZF;EDwBA;APsjQJ;;AkBjmPE;EXjeI;ECZF;EDwBA;AP4jQJ;;AkBvmPE;EA9QI;EXnNA;ECZF;EDwBA;APmkQJ;;AkBl2PM;EAEI;AlBo2PV;;AkB/1PQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;AP8kQJ;;AkBz1PI;EXrPA;APklQJ;;AmB/nQE;EAEI;EACA;EACA;AnBioQN;;AmB9nQI;EAEI;AnBgoQR;;AmB3nQE;EZmBI;ECZF;EDwBA;EY3BE;EAGA;EACA;EACA;EACA;AnB4nQN;;AoBpqQE;EduTE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EazDE;EACA;EACA;ApB2rQN;;AoBvrQE;EZgCE;EDmBA;ECnBA;EDmBA;Ea/CE;EACA;EACA;EACA;ApB2rQN;;AU7oQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVmpQR;;AoBhsQE;EAEI;EACA;ApBksQN;;AoB9rQE;EZcE;EDmBA;ECnBA;EDmBA;APoqQJ;;AUlqQM;EACE;EFtBJ;EM8NI;EJtMA;AVsqQR;;AUzqQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AV+qQR;;AoB9sQE;EZOE;EDmBA;ECnBA;EDmBA;EalBE;ApB8sQN;;AU1rQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVgsQR;;AoBntQE;EZLE;EDmBA;ECnBA;EDmBA;EaVE;EACA;ApButQN;;AU5sQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVktQR;;AoB5tQE;EZdE;EDmBA;ECnBA;EDmBA;EaDE;ApBguQN;;AU7tQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVmuQR;;AoBruQE;EbfI;ECZF;EDwBA;EaQE;ApBuuQN;;AqB/nPE;EAEI;EACA,eD/mB+C;ApBgvQrD;;AqBjkOE;EAqBI,YZnsCmC;ATmvQzC;;AsB/oQE;EAcM;AtBqoQR;;AWxgQE;EAEI;AX0gQN;;AsBvpQE;;EAcM;AtB8oQR;;AWjgQI;;EAEI;AXogQR;;AsB1oQE;EAEI;AtB4oQN;;AsBhtQI;EACE;IdlFF;IcoFI;EtBmtQN;EsB/sQI;IACE;IdzFJ;Ic2FI;EtBitQN;EsB7sQI;IACE;IdhGJ;IcuGI;EtB0sQN;EsBtsQI;Id3GF;Ic6GI;EtBwsQN;AACF;AqB1+OE;EAEI,WE52BY;EF62BZ,YE72BY;AvBw1QlB;;AWnhQE;EAEI,4BUowCA;ArBixNN;;AwBvxPE;EAEI,YfjhBmC;AT0yQzC;;AyBnuQI;;;ECxFE;ECZF;EDwBA;A1BuzQJ;;AyBl2PE;;;ECjeI;ECZF;EDwBA;A1B+zQJ;;AyB12PE;;;EA9QI;ECnNA;ECZF;EDwBA;A1Bw0QJ;;AyBvmQM;;EAEI;AzB0mQV;;AyBrmQQ;;EAEI,yBAhRO;EC0Bb;ECZF;EDwBA;A1Bq1QJ;;AyBhmQI;;ECrPA;A1B01QJ;;AyB9wQI;;;;ECxFE;ECZF;EDwBA;A1Bm2QJ;;A4B9qPE;;EFjsBI;ECZF;EDwBA;EAAA;A1B22QJ;;A4BtrPE;;;;;;EFjsBI;ECZF;EDwBA;EAZE;ECZF;EDwBA;A1By3QJ;;A4B7pPE;EACE;IFzuBE;ICZF;IDwBA;IAAA;E1Bi4QF;E4B/pPE;IF9uBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1By4QF;AACF;A4BlqPE;EACE;IFrvBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1Bm5QF;E4BpqPE;IF3vBE;ICZF;IDwBA;IAAA;E1By5QF;AACF;A4Bx+PQ;;;EAEI;A5B2+PZ;;A4Bp+PQ;;;EAEI;A5Bw+PZ;;AA3+QA,sB","sources":["webpack://webpackNumbers/./src/assets/styles/views/wireframe/main.scss","webpack://webpackNumbers/./src/assets/styles/views/admin/register/main.scss","webpack://webpackNumbers/./src/assets/styles/variables/variables.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/wireframe.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_form.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_main.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/typography/_typography.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/rtl/_rtl.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/notched-outline/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-header-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/icon-button/_icon-button-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/dom/_dom.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/focus-ring/_focus-ring.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/touch-target/_touch-target.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-progress-indicator.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-pagination.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/floating-label/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-icon-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/list/_evolution-mixins.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/_checkbox-theme.scss"],"sourcesContent":["body {\r\n    display: block;\r\n    margin: 0px !important;\r\n}\r\n\r\n\r\n/* START :: VARIABLES */\r\n\r\n@import '../../variables/variables.scss';\r\n\r\n/* END :: VARIABLES */\r\n\r\n\r\n/* START :: TAILWIND CSS */\r\n\r\n@import '../tailwind-output/wireframe.scss';\r\n\r\n/* END :: TAILWIND CSS */","@import '../../wireframe/main.scss';\r\n@import '../../tailwind-output/admin_user_form.scss';\r\n@import '../../tailwind-output/admin_user_main.scss';\r\n\r\n/* START :: TABLE CSS */\r\n\r\n@import \"@material/data-table/mdc-data-table\";\r\n\r\n/* END :: TABLE CSS */",":root {\r\n    --theme-default-color: rgba(249, 120, 23);\r\n    --theme-default-color-disabled: rgb(223, 145, 85);\r\n    --theme-gray-color: rgb(175, 175, 175);\r\n    --theme-gray-color-disabled: rgb(216, 215, 215);\r\n    --theme-success-color: rgb(19, 133, 57);\r\n    --theme-success-color-disabled: rgb(107, 190, 135);\r\n    --theme-danger-color: rgb(185, 26, 26);\r\n    --theme-danger-color-disabled: rgb(182, 118, 118);\r\n    --theme-warning-color: rgb(202, 128, 17);\r\n    --theme-warning-color-disabled: rgb(175, 150, 111);\r\n    --theme-info-color: rgb(2, 137, 170);\r\n    --theme-info-color-disabled: rgb(108, 163, 177);\r\n    --theme-primary-color: rgb(11, 59, 216);\r\n    --theme-primary-color-disabled: rgb(76, 93, 146);\r\n}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.m-24{margin:6rem}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mx-12{margin-left:3rem;margin-right:3rem}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-0{padding:0}.p-3{padding:.75rem}.p-2{padding:.5rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new{>[mdc-data-table=data-table]{width:100%!important}}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important;>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient{&.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.gray,&.red{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue,&.green{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.akwaaba,&.yellow{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color);&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}}div[pageLoadingIndicator=on]{display:flex!important;justify-content:center!important;&>img{display:flex!important;height:3rem!important;justify-content:center!important;margin-top:50vh;width:3rem!important}}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.m-24{margin:6rem}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mx-12{margin-left:3rem;margin-right:3rem}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-0{padding:0}.p-3{padding:.75rem}.p-2{padding:.5rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new{>[mdc-data-table=data-table]{width:100%!important}}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important;>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient{&.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.gray,&.red{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue,&.green{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.akwaaba,&.yellow{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color);&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}}div[pageLoadingIndicator=on]{display:flex!important;justify-content:center!important;&>img{display:flex!important;height:3rem!important;justify-content:center!important;margin-top:50vh;width:3rem!important}}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.form-container .header>.label,.form-container .header>label,.form-container header>.label,.form-container header>label{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity));display:block;font-size:1.5rem;font-weight:600;line-height:2rem;margin-top:.75rem;text-align:left;>.icon{--tw-text-opacity:1;color:rgb(249 120 23/var(--tw-text-opacity));display:inline;height:1.5rem;width:1.5rem}>.h1,>h1{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:1.5rem;font-weight:700;line-height:2rem}>.h3,>h3{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:.875rem;font-weight:600;line-height:1.25rem;margin-bottom:1rem}}.form-container .form{margin-top:2.5rem}.form-container .header,.form-container header{&.success .icon{--tw-text-opacity:1!important;color:rgb(21 128 61/var(--tw-text-opacity))!important}&.success .h1,&.success h1{--tw-text-opacity:1!important;color:rgb(22 163 74/var(--tw-text-opacity))!important}&.danger .h3,&.danger h3,&.info .h3,&.info h3,&.primary .h3,&.primary h3,&.success .h3,&.success h3,&.warning .h3,&.warning h3{--tw-text-opacity:1!important;color:rgb(75 85 99/var(--tw-text-opacity))!important}&.info .icon{color:rgb(96 165 250/var(--tw-text-opacity))!important}&.info .h1,&.info .icon,&.info h1{--tw-text-opacity:1!important}&.info .h1,&.info h1{color:rgb(147 197 253/var(--tw-text-opacity))!important}&.warning .icon{--tw-text-opacity:1!important;color:rgb(161 98 7/var(--tw-text-opacity))!important}&.warning .h1,&.warning h1{--tw-text-opacity:1!important;color:rgb(202 138 4/var(--tw-text-opacity))!important}&.danger .icon{--tw-text-opacity:1!important;color:rgb(185 28 28/var(--tw-text-opacity))!important}&.danger .h1,&.danger h1{--tw-text-opacity:1!important;color:rgb(220 38 38/var(--tw-text-opacity))!important}&.primary .icon{--tw-text-opacity:1!important;color:rgb(29 78 216/var(--tw-text-opacity))!important}&.primary .h1,&.primary h1{--tw-text-opacity:1!important;color:rgb(37 99 235/var(--tw-text-opacity))!important}}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color);&.success{--mdc-theme-primary:var(--theme-success-color)}&.info{--mdc-theme-primary:var(--theme-info-color)}&.warning{--mdc-theme-primary:var(--theme-warning-color)}&.danger{--mdc-theme-primary:var(--theme-danger-color)}&.primary{--mdc-theme-primary:var(--theme-primary-color)}}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button{&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(96 165 250/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(249 120 23/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(220 38 38/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray,&.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success,&.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info,&.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning,&.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger,&.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary,&.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}&[data-btn-to=inactive]{&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}&.success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}}}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(96 165 250/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(249 120 23/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(220 38 38/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.m-24{margin:6rem}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mx-12{margin-left:3rem;margin-right:3rem}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-0{padding:0}.p-3{padding:.75rem}.p-2{padding:.5rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}mwc-dialog{z-index:50!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color);&.success{--mdc-theme-primary:var(--theme-success-color)}&.info{--mdc-theme-primary:var(--theme-info-color)}&.warning{--mdc-theme-primary:var(--theme-warning-color)}&.danger{--mdc-theme-primary:var(--theme-danger-color)}&.primary{--mdc-theme-primary:var(--theme-primary-color)}}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button{&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(96 165 250/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(249 120 23/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(220 38 38/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray,&.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success,&.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info,&.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning,&.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger,&.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary,&.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}&[data-btn-to=inactive]{&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}&.success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}}}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(96 165 250/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(249 120 23/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(220 38 38/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include table-styles($query: $query);\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  @include data-table-progress-indicator.core-styles($query: $query);\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n// This API includes only the table styles without the sorting, pagination and\n// loading styles. It is intended to be used by frameworks that only need the\n// table styles.\n@mixin table-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom-color: $color;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      border-top-color: $color;\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-width: $size;\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $size;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading/trailing header cells,\n  // and leading/trailing cells of last row.\n  // Cells that have explicit background color applied require border\n  // radius to take the parents' rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n  $bottom-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 3)\n  );\n  $bottom-left-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 4)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-left-radius, $bottom-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-right-radius,\n          if($rtl-reflexive, $bottom-left-radius, $bottom-right-radius)\n        );\n\n        border-bottom-left-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-right-radius, $bottom-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-left-radius,\n          if($rtl-reflexive, $bottom-right-radius, $bottom-left-radius)\n        );\n\n        border-bottom-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $size;\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: $color;\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $height;\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: math.div($size - $icon-size, 2);\n  }\n\n  .mdc-icon-button__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n\n  @include ripple-theme.focus {\n    .mdc-icon-button__focus-ring {\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        @include focus-ring.focus-ring(\n          $query: $query,\n          $container-outer-padding-vertical: 0,\n          $container-outer-padding-horizontal: 0\n        );\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n        max-height: $size;\n        max-width: $size;\n      }\n    }\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if $size >= 40px and $size <= 48px {\n      $component-size: 40px;\n    }\n\n    .mdc-icon-button__ripple {\n      @include feature-targeting.targets($feat-structure) {\n        width: $component-size;\n        height: $component-size;\n      }\n\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus {\n      .mdc-icon-button__focus-ring {\n        @include feature-targeting.targets($feat-structure) {\n          max-height: $component-size;\n          max-width: $component-size;\n        }\n      }\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $component-width: $width + $padding * 2;\n  $component-height: $height + $padding * 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $component-width;\n    height: $component-height;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  @include theme.property(font-size, $size);\n\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n\n$ring-radius-default: 8px !default;\n$inner-ring-width-default: 2px !default;\n$inner-ring-color-default: transparent !default;\n$outer-ring-width-default: 2px !default;\n$outer-ring-color-default: transparent !default;\n$container-outer-padding-default: 2px !default;\n\n/// Styles applied to the component's inner focus ring element.\n///\n/// @param $ring-radius [$ring-radius-default] - Focus ring radius.\n/// @param $inner-ring-width [$inner-ring-width-default] - Inner focus ring width.\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n/// @param $outer-ring-color [$outer-ring-color-default] - Outer focus ring color.\n/// @param $container-outer-padding [$container-outer-padding-default] - The\n///     distance between the focus ring and the container.\n@mixin focus-ring(\n  $query: feature-targeting.all(),\n  $ring-radius: $ring-radius-default,\n  $inner-ring-width: $inner-ring-width-default,\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-width: $outer-ring-width-default,\n  $outer-ring-color: $outer-ring-color-default,\n  $container-outer-padding-vertical: $container-outer-padding-default,\n  $container-outer-padding-horizontal: $container-outer-padding-default\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $container-size-vertical: 100%;\n  @if $container-outer-padding-vertical != 0 {\n    $container-size-vertical: calc(\n      100% + #{$container-outer-padding-vertical * 2}\n    );\n  }\n  $container-size-horizontal: 100%;\n  @if $container-outer-padding-horizontal != 0 {\n    $container-size-horizontal: calc(\n      100% + #{$container-outer-padding-horizontal * 2}\n    );\n  }\n  $outer-ring-size: 100%;\n  @if $outer-ring-width > 0 {\n    $outer-ring-size: calc(100% + #{$outer-ring-width * 2});\n  }\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n    border: $inner-ring-width solid $inner-ring-color;\n    border-radius: $ring-radius - $outer-ring-width;\n    box-sizing: content-box;\n    position: absolute;\n    top: 50%;\n    @include rtl.ignore-next-line();\n    left: 50%;\n    @include rtl.ignore-next-line();\n    transform: translate(-50%, -50%);\n    height: $container-size-vertical;\n    width: $container-size-horizontal;\n\n    @include dom.forced-colors-mode($exclude-ie11: true) {\n      border-color: CanvasText;\n    }\n\n    &::after {\n      content: '';\n      border: $outer-ring-width solid $outer-ring-color;\n      border-radius: $ring-radius;\n      display: block;\n      position: absolute;\n      top: 50%;\n      @include rtl.ignore-next-line();\n      left: 50%;\n      @include rtl.ignore-next-line();\n      transform: translate(-50%, -50%);\n      height: $outer-ring-size;\n      width: $outer-ring-size;\n\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        border-color: CanvasText;\n      }\n    }\n  }\n}\n/// Customizes the color of the button focus ring.\n///\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n@mixin focus-ring-color(\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-color: $outer-ring-color-default\n) {\n  border-color: $inner-ring-color;\n\n  &::after {\n    border-color: $outer-ring-color;\n  }\n}\n\n/// Customizes the border radius of the button focus ring.\n///\n/// @param {Number} $ring-radius - The border radius of the focus ring.\n/// @param {Number} $outer-ring-width [$outer-ring-width] - Width of the outer\n///     ring, required to compute the radius for the inner ring.\n@mixin focus-ring-radius(\n  $ring-radius,\n  $outer-ring-width: $outer-ring-width-default,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-radius: $ring-radius - $outer-ring-width;\n\n    &::after {\n      border-radius: $ring-radius;\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__progress-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: absolute;\n      width: 100%;\n    }\n\n    .mdc-data-table--in-progress & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  .mdc-data-table__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('background-color', surface);\n\n      height: 100%;\n      // TODO(b/151453287): Set appropriate opacity value once we've a UX\n      // guidance.\n      opacity: 0.32;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n","@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/icon-button/icon-button-theme';\n@use '@material/select/select-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/menu/mixins' as menu-theme;\n@use './data-table-theme';\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n/// Sets core styles for data table pagination.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__pagination {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n\n      align-items: center;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-navigation {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: flex;\n    }\n  }\n\n  .mdc-data-table__pagination-button {\n    @include icon-button-theme.flip-icon-in-rtl($query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 4px);\n    }\n  }\n\n  .mdc-data-table__pagination-total {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(\n        margin,\n        $left-value: 14px,\n        $right-value: 36px\n      );\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 22px);\n\n      align-items: center;\n      display: inline-flex;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 12px);\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.variable-width($min-width: 80px, $query: $query);\n    @include menu-theme.min-width(80px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 8px 0;\n    }\n\n    // TODO(b/158196144): Set it to `-5` density scale using density mixin when\n    // select component supports it.\n    @include select-theme.outlined-height(\n      data-table-theme.$pagination-rows-per-page-select-height,\n      $query: $query\n    );\n    .mdc-list-item {\n      @include list-theme.one-line-item-height(\n        data-table-theme.$pagination-rows-per-page-select-height,\n        $query: $query\n      );\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/tokens/resolvers';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/menu-surface/mixins' as menu-surface-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/gss';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/variables' as theme-variables;\n@use '@material/typography/mixins' as typography-mixins;\n@use '@material/typography/typography';\n@use './select-icon-theme';\n@use './select-helper-text-theme';\n\n$ripple-target: '.mdc-select__ripple';\n\n@function get-outlined-label-position-y($select-anchor-height) {\n  @return math.div($select-anchor-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$arrow-padding: 52px !default;\n$label-padding: 16px !default;\n$height: 56px !default;\n$minimum-height-for-filled-label: 52px !default;\n$filled-baseline-top: 40px !default;\n$selected-text-height: 28px !default;\n$anchor-padding-left: 16px !default;\n$anchor-padding-left-with-leading-icon: 0 !default;\n$anchor-padding-right: 0 !default;\n$outlined-stroke-width: 2px !default;\n$default-width: 200px !default;\n$shape-radius: small !default;\n\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$ink-color: rgba(theme-variables.prop-value(on-surface), 0.87) !default;\n$dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.54\n) !default;\n$label-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$focused-label-color: rgba(theme-variables.prop-value(primary), 0.87) !default;\n$bottom-line-idle-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.42\n) !default;\n$bottom-line-hover-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  4%\n) !default;\n\n// Disabled Styles\n$disabled-label-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-ink-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  2%\n) !default;\n$disabled-fill-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-bottom-line-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-outline-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n\n$outlined-idle-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$outlined-hover-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$label-position-y: 106% !default;\n$outline-label-offset: 16px !default;\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n\n$dropdown-transition-duration: 150ms !default;\n// Transition durartions to active state\n$icon-active-fade-out-duration: 0.33 * $dropdown-transition-duration !default;\n$icon-active-fade-in-duration: 0.67 * $dropdown-transition-duration !default;\n// Transition durartions to inactive state\n$icon-inactive-fade-out-duration: 0.5 * $dropdown-transition-duration !default;\n$icon-inactive-fade-in-duration: 0.5 * $dropdown-transition-duration !default;\n\n// Error colors\n$error-color: error !default;\n\n$_light-theme: (\n  // Implement `menu-cascading-menu-indicator-icon-color` when select supports.\n  // Implement `menu-cascading-menu-indicator-icon-size` when select supports.\n  // Implement `menu-container-surface-tint-layer-color` when select supports.\n  // Implement `text-field-disabled-trailing-icon-color` when select supports.\n  // Implement `text-field-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-error-trailing-icon-color` when select supports.\n  // Implement `text-field-error-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-error-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-size` when select supports.\n  // Implement `text-field-error-hover-state-layer-color` when select supports.\n  // Implement `text-field-error-hover-state-layer-opacity` when select supports.\n  // Implement `text-field-hover-state-layer-color` when select supports.\n  // Implement `text-field-hover-state-layer-opacity` when select supports.\n  menu-container-color: null,\n  menu-container-elevation: null,\n  menu-container-shadow-color: null,\n  menu-container-shape: null,\n  menu-divider-color: null,\n  menu-divider-height: null,\n  menu-list-item-container-height: null,\n  menu-list-item-label-text-color: null,\n  menu-list-item-label-text-font: null,\n  menu-list-item-label-text-line-height: null,\n  menu-list-item-label-text-size: null,\n  menu-list-item-label-text-tracking: null,\n  menu-list-item-label-text-weight: null,\n  menu-list-item-selected-container-color: null,\n  menu-list-item-with-leading-icon-leading-icon-color: null,\n  menu-list-item-with-leading-icon-leading-icon-size: null,\n  menu-list-item-with-trailing-icon-trailing-icon-color: null,\n  menu-list-item-with-trailing-icon-trailing-icon-size: null,\n  text-field-active-indicator-color: null,\n  text-field-active-indicator-height: null,\n  text-field-caret-color: null,\n  // Token key `text-field-hover-caret-color` not available on DSDB.\n  text-field-hover-caret-color: null,\n  // Token key `text-field-focus-caret-color` not available on DSDB.\n  text-field-focus-caret-color: null,\n  text-field-container-color: null,\n  text-field-container-height: null,\n  text-field-container-shape: null,\n  text-field-disabled-active-indicator-color: null,\n  text-field-disabled-active-indicator-height: null,\n  text-field-disabled-active-indicator-opacity: null,\n  text-field-disabled-container-color: null,\n  text-field-disabled-container-opacity: null,\n  text-field-disabled-input-text-color: null,\n  text-field-disabled-input-text-opacity: null,\n  text-field-disabled-label-text-color: null,\n  text-field-disabled-label-text-opacity: null,\n  text-field-disabled-leading-icon-color: null,\n  text-field-disabled-leading-icon-opacity: null,\n  text-field-disabled-outline-color: null,\n  text-field-disabled-outline-opacity: null,\n  text-field-disabled-outline-width: null,\n  text-field-disabled-supporting-text-color: null,\n  text-field-disabled-supporting-text-opacity: null,\n  text-field-disabled-trailing-icon-opacity: null,\n  text-field-error-active-indicator-color: null,\n  text-field-error-focus-active-indicator-color: null,\n  // Token key `text-field-error-caret-color` not available on DSDB.\n  text-field-error-caret-color: null,\n  // Token key `text-field-error-hover-caret-color` not available on DSDB.\n  text-field-error-hover-caret-color: null,\n  text-field-error-focus-caret-color: null,\n  text-field-error-focus-input-text-color: null,\n  text-field-error-focus-label-text-color: null,\n  text-field-error-focus-leading-icon-color: null,\n  text-field-error-focus-outline-color: null,\n  text-field-error-focus-supporting-text-color: null,\n  text-field-error-hover-active-indicator-color: null,\n  text-field-error-hover-input-text-color: null,\n  text-field-error-hover-label-text-color: null,\n  text-field-error-hover-leading-icon-color: null,\n  text-field-error-hover-outline-color: null,\n  text-field-error-hover-supporting-text-color: null,\n  text-field-error-input-text-color: null,\n  text-field-error-label-text-color: null,\n  text-field-error-leading-icon-color: null,\n  text-field-error-outline-color: null,\n  text-field-error-supporting-text-color: null,\n  text-field-focus-active-indicator-color: null,\n  text-field-focus-active-indicator-height: null,\n  text-field-focus-input-text-color: null,\n  text-field-focus-label-text-color: null,\n  text-field-focus-leading-icon-color: null,\n  text-field-focus-outline-color: null,\n  text-field-focus-outline-width: null,\n  text-field-focus-supporting-text-color: null,\n  text-field-hover-active-indicator-color: null,\n  text-field-hover-active-indicator-height: null,\n  text-field-hover-input-text-color: null,\n  text-field-hover-label-text-color: null,\n  text-field-hover-leading-icon-color: null,\n  text-field-hover-outline-color: null,\n  text-field-hover-outline-width: null,\n  text-field-hover-supporting-text-color: null,\n  text-field-input-text-color: null,\n  text-field-input-text-font: null,\n  text-field-input-text-line-height: null,\n  text-field-input-text-size: null,\n  text-field-input-text-tracking: null,\n  text-field-input-text-weight: null,\n  text-field-label-text-color: null,\n  text-field-label-text-font: null,\n  text-field-label-text-line-height: null,\n  text-field-label-text-populated-line-height: null,\n  text-field-label-text-populated-size: null,\n  text-field-label-text-size: null,\n  text-field-label-text-tracking: null,\n  text-field-label-text-weight: null,\n  text-field-leading-icon-color: null,\n  text-field-leading-icon-size: null,\n  text-field-outline-color: null,\n  text-field-outline-width: null,\n  text-field-supporting-text-color: null,\n  text-field-supporting-text-font: null,\n  text-field-supporting-text-line-height: null,\n  text-field-supporting-text-size: null,\n  text-field-supporting-text-tracking: null,\n  text-field-supporting-text-weight: null\n);\n\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme-keys($_light-theme, $theme);\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, text-field-container-color),\n      disabled: map.get($theme, text-field-disabled-container-color),\n    )\n  );\n  @include outline-color(\n    (\n      default: map.get($theme, text-field-outline-color),\n      hover: map.get($theme, text-field-hover-outline-color),\n      focus: map.get($theme, text-field-focus-outline-color),\n      disabled: map.get($theme, text-field-disabled-outline-color),\n    )\n  );\n  @include _error-outline-color(\n    (\n      default: map.get($theme, text-field-error-outline-color),\n      hover: map.get($theme, text-field-error-hover-outline-color),\n      focus: map.get($theme, text-field-error-focus-outline-color),\n    )\n  );\n  @include outline-width(\n    (\n      default: map.get($theme, text-field-outline-width),\n      hover: map.get($theme, text-field-hover-outline-width),\n      focus: map.get($theme, text-field-focus-outline-width),\n    )\n  );\n  @include _menu-container-color(map.get($theme, menu-container-color));\n  @include _menu-container-elevation(\n    map.get($resolvers, elevation),\n    $shadow-color: map.get($theme, menu-container-shadow-color),\n    $elevation: map.get($theme, menu-container-elevation)\n  );\n  @include _menu-container-shape(map.get($theme, menu-container-shape));\n  @include _menu-divider-color(map.get($theme, menu-divider-color));\n  @include _menu-divider-height(map.get($theme, menu-divider-height));\n  @include _menu-list-item-container-height(\n    map.get($theme, menu-list-item-container-height)\n  );\n  @include _menu-list-item-label-text-color(\n    map.get($theme, menu-list-item-label-text-color)\n  );\n  @include _menu-list-item-label-text-typography(\n    (\n      font: map.get($theme, menu-list-item-label-text-font),\n      line-height: map.get($theme, menu-list-item-label-text-line-height),\n      size: map.get($theme, menu-list-item-label-text-size),\n      tracking: map.get($theme, menu-list-item-label-text-tracking),\n      weight: map.get($theme, menu-list-item-label-text-weight),\n    )\n  );\n  @include _menu-list-item-selected-container-color(\n    map.get($theme, menu-list-item-selected-container-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-size)\n  );\n  // TODO: Create new mixin for trailing icon theming when select supports it.\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-size)\n  );\n  @include bottom-line-color(\n    (\n      default: map.get($theme, text-field-active-indicator-color),\n      hover: map.get($theme, text-field-hover-active-indicator-color),\n      focus: map.get($theme, text-field-focus-active-indicator-color),\n      disabled: map.get($theme, text-field-disabled-indicator-color),\n    )\n  );\n  @include _text-field-error-active-indicator-color(\n    (\n      default: map.get($theme, text-field-error-active-indicator-color),\n      hover: map.get($theme, text-field-error-hover-active-indicator-color),\n      focus: map.get($theme, text-field-error-focus-active-indicator-color),\n    )\n  );\n  @include _text-field-active-indicator-height(\n    map.get($theme, text-field-active-indicator-height)\n  );\n  @include _text-field-caret-color(\n    (\n      default: map.get($theme, text-field-caret-color),\n      hover: map.get($theme, text-field-hover-caret-color),\n      focus: map.get($theme, text-field-focus-caret-color),\n    )\n  );\n  @include _text-field-error-caret-color(\n    (\n      default: map.get($theme, text-field-error-caret-color),\n      hover: map.get($theme, text-field-error-hover-caret-color),\n      focus: map.get($theme, text-field-error-focus-caret-color),\n    )\n  );\n  @include ink-color(\n    (\n      default: map.get($theme, text-field-input-text-color),\n      hover: map.get($theme, text-field-hover-input-text-color),\n      focus: map.get($theme, text-field-focus-input-text-color),\n      disabled: map.get($theme, text-field-disabled-input-text-color),\n    )\n  );\n  @include _error-input-text-color(\n    (\n      default: map.get($theme, text-field-error-input-text-color),\n      hover: map.get($theme, text-field-error-hover-input-text-color),\n      focus: map.get($theme, text-field-error-focus-input-text-color),\n    )\n  );\n  @include label-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include label-floating-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include _error-label-text-color(\n    (\n      default: map.get($theme, text-field-error-label-text-color),\n      hover: map.get($theme, text-field-error-hover-label-text-color),\n      focus: map.get($theme, text-field-error-focus-label-text-color),\n    )\n  );\n  @include _text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-leading-icon-color),\n      hover: map.get($theme, text-field-hover-leading-icon-color),\n      focus: map.get($theme, text-field-focus-leading-icon-color),\n      disabled: map.get($theme, text-field-disabled-leading-icon-color),\n    )\n  );\n  @include _error-text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-error-leading-icon-color),\n      hover: map.get($theme, text-field-error-hover-leading-icon-color),\n      focus: map.get($theme, text-field-error-focus-leading-icon-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-color(\n    (\n      default: map.get($theme, text-field-supporting-text-color),\n      disabled: map.get($theme, text-field-disabled-supporting-text-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-validation-color(\n    map.get($theme, text-field-error-supporting-text-color)\n  );\n  @include _text-field-input-text-typography(\n    (\n      font: map.get($theme, text-field-input-text-font),\n      line-height: map.get($theme, text-field-input-text-line-height),\n      size: map.get($theme, text-field-input-text-size),\n      tracking: map.get($theme, text-field-input-text-tracking),\n      weight: map.get($theme, text-field-input-text-weight),\n    )\n  );\n  @include _text-field-label-text-typography(\n    (\n      font: map.get($theme, text-field-label-text-font),\n      line-height: map.get($theme, text-field-label-text-line-height),\n      size: map.get($theme, text-field-label-text-size),\n      tracking: map.get($theme, text-field-label-text-tracking),\n      weight: map.get($theme, text-field-label-text-weight),\n    )\n  );\n  @include _text-field-label-text-populated-typography(\n    (\n      line-height: map.get($theme, text-field-label-text-populated-line-height),\n      size: map.get($theme, text-field-label-text-populated-size),\n    )\n  );\n  @include _text-field-supporting-text-typography(\n    (\n      font: map.get($theme, text-field-supporting-text-font),\n      line-height: map.get($theme, text-field-supporting-text-line-height),\n      size: map.get($theme, text-field-supporting-text-size),\n      tracking: map.get($theme, text-field-supporting-text-tracking),\n      weight: map.get($theme, text-field-supporting-text-weight),\n    )\n  );\n}\n\n@mixin _text-field-supporting-text-typography($typography-theme) {\n  & + .mdc-select-helper-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-input-text-typography($typography-theme) {\n  .mdc-select__selected-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-populated-typography($typography-theme) {\n  .mdc-floating-label--float-above,\n  // Used for CSS specificity to match with selector used in `outlined-height()`.\n  &.mdc-select--with-leading-icon .mdc-select__anchor .mdc-notched-outline .mdc-floating-label.mdc-floating-label--float-above {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-typography($typography-theme) {\n  .mdc-floating-label {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _error-outline-color($color) {\n  &.mdc-select--invalid {\n    @include outline-color($color);\n  }\n}\n\n@mixin _error-text-field-leading-icon-color($color) {\n  &.mdc-select--invalid {\n    @include _text-field-leading-icon-color($color);\n  }\n}\n\n@mixin _text-field-leading-icon-color($color) {\n  @include _if-enabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-default-state($color)\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _set-text-field-leading-icon-color(\n        state.get-hover-state($color)\n      );\n    }\n\n    @include _if-focused {\n      @include _set-text-field-leading-icon-color(\n        state.get-focus-state($color)\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-disabled-state($color)\n    );\n  }\n}\n\n@mixin _set-text-field-leading-icon-color($color) {\n  .mdc-select__anchor .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _error-label-text-color($color) {\n  &.mdc-select--invalid {\n    @include label-floating-color($color);\n  }\n}\n\n@mixin _error-input-text-color($color) {\n  &.mdc-select--invalid {\n    @include ink-color($color);\n  }\n}\n\n@mixin _text-field-caret-color($color) {\n  @include dropdown-icon-color($color);\n}\n\n@mixin _text-field-error-caret-color($color) {\n  &.mdc-select--invalid {\n    @include dropdown-icon-color($color);\n  }\n}\n\n@mixin _text-field-error-active-indicator-color($color) {\n  &.mdc-select--invalid {\n    @include bottom-line-color($color);\n  }\n}\n\n@mixin _text-field-active-indicator-height($height) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.height($height);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-color($color) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-size($size) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(font-size, $size);\n  }\n}\n\n@mixin _menu-list-item-selected-container-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-selected-container-color($color);\n  }\n}\n\n@mixin _menu-list-item-label-text-typography($typography-theme) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n@mixin _menu-list-item-label-text-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-ink-color($color);\n  }\n}\n\n@mixin _menu-list-item-container-height($height) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-height($height);\n  }\n}\n\n@mixin _menu-divider-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-color($color);\n  }\n}\n\n@mixin _menu-divider-height($height) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-height($height);\n  }\n}\n\n@mixin _menu-container-color($color) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.fill-color($color);\n  }\n}\n\n@mixin _menu-container-elevation($resolver, $shadow-color, $elevation) {\n  .mdc-select__menu {\n    @include elevation-theme.with-resolver(\n      $resolver,\n      $elevation: $elevation,\n      $shadow-color: $shadow-color\n    );\n  }\n}\n\n@mixin _menu-container-shape($shape) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.shape-radius($shape);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-ink-color($color);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-typography($typography-theme) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n/// Sets the min-width of the select.\n/// @param {Number} $min-width - The desired min-width.\n/// @deprecated using this mixin is no longer required, and clients may set\n///             the attribute directly\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n/// Sets the select behavior to change width dynamically based on content.\n/// @param {Number} $min-width - The min-width of the select, which should be\n///     large enough to allow the label (if exists) to display in full.\n@mixin variable-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n  }\n\n  @include _if-disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin dropdown-icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _dropdown-icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _dropdown-icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _dropdown-icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _dropdown-icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-floating-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-floating-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-floating-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin bottom-line-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _bottom-line-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // bottom line inactive/active are on different elements, does not need\n    // to check for :not() focused\n    &:hover {\n      @include _bottom-line-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _focused-line-ripple-color(\n      state.get-focus-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _bottom-line-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    @include _if-focused {\n      @include _label-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _label-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _hover-outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _focused-outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-width($width) {\n  @include _if-enabled {\n    @include _outline-width(state.get-default-state($width));\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _outline-width(state.get-hover-state($width));\n    }\n\n    @include _if-focused {\n      .mdc-notched-outline {\n        @include _outline-width(state.get-focus-state($width));\n      }\n    }\n  }\n}\n\n@mixin _outline-width($width) {\n  @if $width {\n    @include notched-outline-mixins.stroke-width($width);\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified size.\n///\n@mixin dropdown-icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n@mixin filled-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-select: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  .mdc-select__anchor {\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all(),\n  $height: null\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if not $height {\n    $height: density-functions.prop-value(\n      $density-config: $density-config,\n      $density-scale: $density-scale,\n      $property-name: height,\n    );\n  }\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    .mdc-select__anchor {\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    + .mdc-select-helper-text {\n      @include _apply-outline-shape-padding(\n        margin-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          margin-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    // Unlike textfield, select does not need to re-apply leading icon padding.\n    // This is because select only has one potential leading class, not two\n    // extra classes like textfield (leading + trailing). Textfield's two extra\n    // classes can cause specificity conflicts, requiring everything to be\n    // re-applied.\n  }\n}\n\n///\n/// Sets density scale for filled select variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for filled select variant with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-with-leading-icon-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-with-leading-icon-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select (Excluding outlined select with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n@mixin _list-density($density-scale, $query) {\n  @include list-mixins.deprecated-single-line-density(\n    $density-scale,\n    $query: $query\n  );\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-density(\n      $density-scale,\n      $exclude-variants: true,\n      $query: $query\n    );\n  }\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-density(\n      $density-scale,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets height of default select variant.\n///\n/// @param {Number} $new-height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n\n    // Filled variant is aligned to baseline...\n    @include typography-mixins.baseline(\n      $top: $filled-baseline-top,\n      $display: flex,\n      $query: $query\n    );\n    // ...unless it is too small to display a label\n    @if $new-height < $minimum-height-for-filled-label {\n      @include center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        .mdc-floating-label {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // No-label variants are always centered\n  &.mdc-select--no-label .mdc-select__anchor {\n    @include center-aligned($query: $query);\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of filled select variant with leading icon.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-with-leading-icon-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include filled-height(\n    $new-height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $filled-baseline-top: $filled-baseline-top,\n    $query: $query\n  );\n\n  @if $new-height < $height {\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    .mdc-select__anchor {\n      @include leading-icon-floating-label-position(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select variant (Excluding outlined select with leading icon).\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-height(\n  $new-height,\n  $keyframe-suffix: select-outlined-#{$new-height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: get-outlined-label-position-y($new-height);\n\n  .mdc-select__anchor {\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      $positionY,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        $positionY,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select with leading icon variant.\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-with-leading-icon-height(\n  $new-height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @if $new-height < $height {\n      @include dropdown-icon-size(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$dense-icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    } @else {\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n// $add-label-padding is copied from textfield's mixin, even though select\n// always sets it to true. This is to try and keep things aligned between select\n// and textfield for when these styles are refactored into shared styles.\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > notched-outline-variables.$leading-width) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @include gss.annotate(\n        (\n          alternate: $padding-is-custom-prop,\n        )\n      );\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      // Interpolation is a workaround for sass/sass#3259.\n      @supports (top: max(#{0%})) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the\n        // calculated custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{$anchor-padding-left}, #{$value});\n      }\n    }\n  }\n}\n\n// Removes filled baseline alignment\n@mixin center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__selected-text {\n    @include typography-mixins.zero-width-prefix($query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons \"controlling\" the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the \"largest\"\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n    //\n    // IE11 does not respect this, and makes the leading icon (if present)\n    // the baseline.\n    .mdc-select__selected-text-container {\n      height: 100%;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets the position of the floating label for a select with leading icon.\n/// @param {number} $icon-size - The size of the leading icon.\n///\n@mixin leading-icon-floating-label-position(\n  $icon-size: select-icon-theme.$icon-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-total-width);\n    }\n  }\n}\n\n///\n/// Sets the floating label position and animations for a given height for an\n/// outlined select with leaing icon.\n/// @param {number} $icon-size - The size of the leading icon.\n/// @param {string} $keyframe-suffix - The suffix for the newly generated keyframes.\n///\n@mixin outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $icon-size,\n  $keyframe-suffix: select-outlined-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n  $resting-position-x: $icon-total-width -\n    select-icon-theme.$icon-horizontal-margin;\n  $float-position-y: get-outlined-label-position-y($height);\n  $float-position-x: $icon-size + select-icon-theme.$icon-horizontal-margin -\n    notched-outline-variables.$notch-gutter-size;\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $resting-position-x);\n    }\n  }\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $float-position-y,\n    $float-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $float-position-y,\n      $float-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $float-position-y,\n      -($float-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the floating label according to sizes of the\n/// leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-floating-label-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin *\n      2 +\n      $leading-icon-size;\n  } @else {\n    $truncation: $truncation + $outline-label-offset;\n  }\n\n  .mdc-floating-label {\n    @include floating-label-mixins.max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n\n  .mdc-floating-label--float-above {\n    $scale: floating-label-variables.$float-scale;\n    @include floating-label-mixins.max-width(\n      calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the notched outline according to the sizes of\n/// the leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-notched-outline-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size + notched-outline-variables.$leading-width;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin +\n      $leading-icon-size;\n  }\n  .mdc-select__anchor {\n    @include notched-outline-mixins.notch-max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n}\n\n/// Selector for focused state\n/// @access private\n@mixin _if-focused {\n  &.mdc-select--focused {\n    @content;\n  }\n}\n\n/// Selector for enabled state\n/// @access private\n@mixin _if-enabled {\n  &:not(.mdc-select--disabled) {\n    @content;\n  }\n}\n\n/// Selector for disabled state\n/// @access private\n@mixin _if-disabled {\n  &.mdc-select--disabled {\n    @content;\n  }\n}\n\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__selected-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__anchor {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(background-color, $color);\n      }\n    }\n  }\n}\n\n@mixin _bottom-line-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.inactive-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-line-ripple-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.active-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin _hover-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.stroke-width(\n        $outlined-stroke-width,\n        $query: $query\n      );\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-floating-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label--float-above {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified color.\n/// @access private\n///\n@mixin _dropdown-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      .mdc-select__dropdown-icon {\n        @include theme-mixins.property(fill, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$icon-size: 24px !default;\n$dense-icon-size: 20px !default;\n$icon-horizontal-margin: 12px !default;\n\n$icon-color: rgba(theme-variables.prop-value(on-surface), 0.54) !default;\n$disabled-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n///\n/// Customizes the size (both width and height) of the icon.\n/// @param {Number} $size - the intended icon size.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-select__icon {\n      width: $size;\n      height: $size;\n      font-size: $size;\n    }\n  }\n}\n\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin icon-horizontal-margins($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './evolution-variables' as variables;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode($query);\n\n  .mdc-list {\n    @include list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n\n    @include _one-line-item-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n    @include _three-line-item-density(\n      variables.$three-line-item-density-scale,\n      $query: $query\n    );\n\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before, // lint-disable-focus-psuedo-selector\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // lint-disable-focus-psuedo-selector\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _two-line-item-end-baseline($top: 28px, $query: $query);\n    @include _three-line-item-end-baseline($top: 28px, $query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    height: $height;\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include _item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin _item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        // Color ensures border is shown, but will be overridden by the browser.\n        @include theme.property(border-bottom-color, white);\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/188529841): `selected-checkmark-color` and `disabled-selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-checkmark-color: $mark-color,\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n$forced-colors-theme: (\n  disabled-selected-checkmark-color: ButtonFace,\n  disabled-selected-icon-color: GrayText,\n  disabled-selected-icon-opacity: 1,\n  disabled-unselected-icon-color: GrayText,\n  disabled-unselected-icon-opacity: 1,\n  selected-checkmark-color: ButtonText,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(\n    map.get($theme, disabled-selected-checkmark-color)\n  );\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @if $unmarked-stroke-color == null {\n    $unmarked-fill-color: null;\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @if $marked-fill-color and\n    custom-properties.get-fallback($marked-fill-color) ==\n    GrayText\n  {\n    // Transparent appears white in HCM\n    $marked-stroke-color: GrayText;\n  }\n\n  @if $marked-fill-color == null {\n    $marked-stroke-color: null;\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}