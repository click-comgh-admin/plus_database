{"version":3,"file":"../../production_public/assets/v2/dev-files/css/src_assets_styles_views_admin_register_main_scss.css","mappings":"AAAA;EACI;EACA;ACCJ;;ADGA;AENA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADOJ;;ADXA;AAGA;AGbA;AAAgE;EAAiB;EAAuB;AF6BxG;;AE7B8H;EAAe;AFiC7I;;AEjC6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AF2C5c;;AE3Cud;EAAK;EAAoB;AFgDhf;;AEhDyf;EAAG;EAAqB;EAAc;AFsD/hB;;AEtDwiB;EAAoB;EAAyC;AF2DrmB;;AE3DsoB;EAAkB;EAAkB;AFgE1qB;;AEhE8rB;EAAE;EAAc;AFqE9sB;;AErEsuB;EAAS;AFyE/uB;;AEzEkwB;EAAkB;EAAoG;AF8Ex3B;;AE9Es4B;EAAM;AFkF54B;;AElF05B;EAAQ;EAAc;EAAc;EAAkB;AFyFh9B;;AEzFw+B;EAAI;AF6F5+B;;AE7F0/B;EAAI;AFiG9/B;;AEjGwgC;EAAM;EAAyB;EAAqB;AFuG5jC;;AEvG0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AFiHltC;;AEjH4tC;EAAc;AFqH1uC;;AErH8vC;EAAgD;EAA0B;EAA6B;AF2Hr2C;;AE3H23C;EAAgB;AF+H34C;;AE/Hw5C;EAAiB;AFmIz6C;;AEnIy7C;EAAS;AFuIl8C;;AEvI09C;EAAwD;AF2IlhD;;AE3I8hD;EAAc;EAA6B;AFgJzkD;;AEhJ6lD;EAA4B;AFoJznD;;AEpJipD;EAA6B;EAA0B;AFyJxsD;;AEzJqtD;EAAQ;AF6J7tD;;AE7J+uD;EAAmD;AFiKlyD;;AEjK2yD;EAAS;AFqKpzD;;AErK6zD;EAAgB;AFyK70D;;AEzKu1D;EAAW;EAAgB;EAAS;AF+K33D;;AE/Kq4D;EAAS;AFmL94D;;AEnL85D;EAAmD;EAAc;AFwL/9D;;AExLy+D;EAAyC;EAAc;AF6LhiE;;AE7L0iE;EAAqB;AFiM/jE;;AEjM8kE;EAAU;AFqMxlE;;AErMumE;EAA+C;EAAc;AF0MpqE;;AE1M0rE;EAAU;EAAY;AF+MhtE;;AE/M+tE;EAAS;AFmNxuE;;AEnNqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFkQjpG;;AElQuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFiT7jI;;AEjTmlI;EAAW;AFqT9lI;;AErTymI;EAAyB;IAAW;EF0T3oI;AACF;AE3T8pI;EAAyB;IAAW;EF+ThsI;AACF;AEhUmtI;EAA0B;IAAW;EFoUtvI;AACF;AErU0wI;EAA0B;IAAW;EFyU7yI;AACF;AE1Ui0I;EAA0B;IAAW;EF8Up2I;AACF;AE/Uw3I;EAA0B;IAAW;EFmV35I;AACF;AEpV+6I;EAAS;AFuVx7I;;AEvV28I;EAAW;AF2Vt9I;;AE3Vw+I;EAAQ;AF+Vh/I;;AE/VggJ;EAAO;AFmWvgJ;;AEnWshJ;EAAU;AFuWhiJ;;AEvWkjJ;EAAU;AF2W5jJ;;AE3W8kJ;EAAS;EAAS;EAAO;EAAQ;AFkX/mJ;;AElXqnJ;EAAQ;AFsX7nJ;;AEtXwoJ;EAAQ;AF0XhpJ;;AE1XupJ;EAAS;AF8XhqJ;;AE9XwqJ;EAAS;AFkYjrJ;;AElY4rJ;EAAW;AFsYvsJ;;AEtYmtJ;EAAO;AF0Y1tJ;;AE1YguJ;EAAO;AF8YvuJ;;AE9YgvJ;EAAS;AFkZzvJ;;AElZmwJ;EAAQ;AFsZ3wJ;;AEtZoxJ;EAAQ;AF0Z5xJ;;AE1ZqyJ;EAAU;AF8Z/yJ;;AE9Z4zJ;EAAS;AFkar0J;;AElam1J;EAAU;AFsa71J;;AEta42J;EAAgB;AF0a53J;;AE1au4J;EAAM;AF8a74J;;AE9aw5J;EAAM;AFkb95J;;AElby6J;EAAM;AFsb/6J;;AEtb07J;EAAK;AF0b/7J;;AE1by8J;EAAK;AF8b98J;;AE9b49J;EAAK;AFkcj+J;;AElc0+J;EAAK;AFsc/+J;;AEtc4/J;EAAO;EAAmB;AF2cthK;;AE3csiK;EAAS;EAAiB;AFgdhkK;;AEhdklK;EAAO;EAAiB;AFqd1mK;;AErd4nK;EAAM;EAAoB;AF0dtpK;;AE1duqK;EAAM;EAAgB;AF+d7rK;;AE/d0sK;EAAM;EAAqB;AFoeruK;;AEpeuvK;EAAM;EAAiB;AFye9wK;;AEzegyK;EAAM;EAAmB;AF8ezzK;;AE9ey0K;EAAM;EAAkB;AFmfj2K;;AEnfo3K;EAAQ;EAA+B;AFwf35K;;AExfu7K;EAAM;EAAmB;AF6fh9K;;AE7fo+K;EAAQ;EAA6B;AFkgBzgL;;AElgBuiL;EAAO;AFsgB9iL;;AEtgBikL;EAAO;AF0gBxkL;;AE1gBwlL;EAAO;AF8gB/lL;;AE9gBknL;EAAM;AFkhBxnL;;AElhB2oL;EAAM;AFshBjpL;;AEthBmqL;EAAM;AF0hBzqL;;AE1hB6rL;EAAM;AF8hBnsL;;AE9hBqtL;EAAM;AFkiB3tL;;AEliB2uL;EAAM;AFsiBjvL;;AEtiBowL;EAAM;AF0iB1wL;;AE1iB4xL;EAAM;AF8iBlyL;;AE9iBmzL;EAAM;AFkjBzzL;;AEljB80L;EAAM;AFsjBp1L;;AEtjBw2L;EAAM;AF0jB92L;;AE1jBi4L;EAAM;AF8jBv4L;;AE9jBo5L;EAAM;AFkkB15L;;AElkB86L;EAAM;AFskBp7L;;AEtkBs8L;EAAM;AF0kB58L;;AE1kB89L;EAAM;AF8kBp+L;;AE9kBk/L;EAAM;AFklBx/L;;AEllBugM;EAAM;AFslB7gM;;AEtlBgiM;EAAO;AF0lBviM;;AE1lByjM;EAAO;AF8lBhkM;;AE9lBmlM;EAAO;AFkmB1lM;;AElmB6mM;EAAM;AFsmBnnM;;AEtmBooM;EAAO;AF0mB3oM;;AE1mB6pM;EAAM;AF8mBnqM;;AE9mBwrM;EAAO;AFknB/rM;;AElnB6sM;EAAS;AFsnBttM;;AEtnB8uM;EAAc;AF0nB5vM;;AE1nBixM;EAAM;AF8nBvxM;;AE9nBoyM;EAAQ;AFkoB5yM;;AEloBm0M;EAAa;AFsoBh1M;;AEtoBo2M;EAAO;AF0oB32M;;AE1oBy3M;EAAY;AF8oBr4M;;AE9oBw5M;EAAoB;AFkpB56M;;AElpBu8M;EAAiB;AFspBx9M;;AEtpBg/M;EAAW;AF0pB3/M;;AE1pB6gN;EAAM;AF8pBnhN;;AE9pBgiN;EAAU;AFkqB1iN;;AElqB2jN;EAAQ;AFsqBnkN;;AEtqBglN;EAAM;AF0qBtlN;;AE1qBmmN;EAAQ;AF8qB3mN;;AE9qBunN;EAAK;AFkrB5nN;;AElrBwoN;EAAM;AFsrB9oN;;AEtrB0pN;EAAM;AF0rBhqN;;AE1rB4qN;EAAM;AF8rBlrN;;AE9rB+rN;EAAM;AFksBrsN;;AElsBktN;EAAK;AFssBvtN;;AEtsBquN;EAAM;AF0sB3uN;;AE1sBwvN;EAAM;AF8sB9vN;;AE9sB2wN;EAAM;AFktBjxN;;AEltB6xN;EAAM;AFstBnyN;;AEttBizN;EAAM;AF0tBvzN;;AE1tBs0N;EAAK;AF8tB30N;;AE9tBw1N;EAAM;AFkuB91N;;AEluB02N;EAAO;EAAwB;AFuuBz4N;;AEvuB45N;EAAa;AF2uBz6N;;AE3uBs7N;EAAU;AF+uBh8N;;AE/uBi9N;EAAQ;AFmvBz9N;;AEnvBo+N;EAAK;AFuvBz+N;;AEvvBo/N;EAAM;AF2vB1/N;;AE3vBqgO;EAAM;AF+vB3gO;;AE/vBshO;EAAO;EAAuB;AFowBpjO;;AEpwBskO;EAAK;AFwwB3kO;;AExwBwlO;EAAK;AF4wB7lO;;AE5wB0mO;EAAK;AFgxB/mO;;AEhxB2nO;EAAQ;AFoxBnoO;;AEpxB8oO;EAAM;AFwxBppO;;AExxBgqO;EAAM;AF4xBtqO;;AE5xBkrO;EAAM;AFgyBxrO;;AEhyBmsO;EAAM;AFoyBzsO;;AEpyBqtO;EAAM;AFwyB3tO;;AExyBuuO;EAAM;AF4yB7uO;;AE5yByvO;EAAmB;EAAuB;AFizBnyO;;AEjzBqzO;EAAa;AFqzBl0O;;AErzB80O;EAAQ;AFyzBt1O;;AEzzB22O;EAAc;AF6zBz3O;;AE7zBk5O;EAAQ;AFi0B15O;;AEj0Bs6O;EAAa;AFq0Bn7O;;AEr0Bi8O;EAAW;AFy0B58O;;AEz0Bw9O;EAAW;AF60Bn+O;;AE70Bq/O;EAAsB;AFi1B3gP;;AEj1BysP;EAAQ;AFq1BjtP;;AEr1B6tP;EAAW;AFy1BxuP;;AEz1B6vP;EAAiB;EAAwB;EAAqB;AF+1B3zP;;AE/1B20P;EAAe;AFm2B11P;;AEn2B62P;EAAa;AFu2B13P;;AEv2Bw6P;EAAU;AF22Bl7P;;AE32Bq8P;EAAkB;AF+2Bv9P;;AE/2Bk/P;EAAU;AFm3B5/P;;AEn3BkhQ;EAAW;AFu3B7hQ;;AEv3B4iQ;EAAa;AF23BzjQ;;AE33B0kQ;EAAgB;AF+3B1lQ;;AE/3B+mQ;EAAiB;AFm4BhoQ;;AEn4B4pQ;EAAgB;AFu4B5qQ;;AEv4BusQ;EAAa;AF24BptQ;;AE34B2uQ;EAAW;AF+4BtvQ;;AE/4B2wQ;EAAc;AFm5BzxQ;;AEn5B4yQ;EAAe;AFu5B3zQ;;AEv5Bs1Q;EAAa;AF25Bn2Q;;AE35B43Q;EAAgB;AF+5B54Q;;AE/5Bm6Q;EAAiB;AFm6Bp7Q;;AEn6Bk9Q;EAAmB;AFu6Br+Q;;AEv6B6gR;EAAgB;AF26B7hR;;AE36B0jR;EAAQ;AF+6BlkR;;AE/6B2kR;EAAO;AFm7BllR;;AEn7B2lR;EAAO;AFu7BlmR;;AEv7B6mR;EAAO;AF27BpnR;;AE37B8nR;EAAyC;EAAuB;EAAqD;AFi8BnvR;;AEj8B2yR;EAAwC;EAAwB;EAAyD;AFu8Bp6R;;AEv8Bg+R;EAA+C;EAAsB;AF48BriS;;AE58B4lS;EAAiB;AFg9B7mS;;AEh9B6nS;EAAiB;AFo9B9oS;;AEp9B8pS;EAAmB;AFw9BjrS;;AEx9BmsS;EAAmB;AF49BttS;;AE59BwuS;EAAmB;AFg+B3vS;;AEh+B6wS;EAAU;EAAgB;EAAuB;AFs+B9zS;;AEt+Bi1S;EAAmB;AF0+Bp2S;;AE1+Bu3S;EAAmB;AF8+B14S;;AE9+B65S;EAAqB;AFk/Bl7S;;AEl/Bu8S;EAAqB;AFs/B59S;;AEt/Bi/S;EAAY;AF0/B7/S;;AE1/BmhT;EAAS;AF8/B5hT;;AE9/BijT;EAAY;AFkgC7jT;;AElgCilT;EAAc;AFsgC/lT;;AEtgConT;EAAc;AF0gCloT;;AE1gCkpT;EAAa;AF8gC/pT;;AE9gCkrT;EAAY;AFkhC9rT;;AElhCmtT;EAAa;AFshChuT;;AEthCqvT;EAAY;AF0hCjwT;;AE1hCuxT;EAAgB;EAA6B;AF+hCp0T;;AE/hC81T;EAAc;EAAkC;AFoiC94T;;AEpiCi7T;EAAU;AFwiC37T;;AExiC48T;EAAQ;AF4iCp9T;;AE5iCq+T;EAAU;AFgjC/+T;;AEhjC8/T;EAAY;AFojC1gU;;AEpjCkiU;EAAY;AFwjC9iU;;AExjCmkU;EAAU;AF4jC7kU;;AE5jCqmU;EAAU;AFgkC/mU;;AEhkCooU;EAAY;AFokChpU;;AEpkCuqU;EAAY;AFwkCnrU;;AExkCysU;EAAc;AF4kCvtU;;AE5kC0uU;EAAa;AFglCvvU;;AEhlCywU;EAAiB;EAAsB;AFqlChzU;;AErlCu2U;EAAmB;EAAsB;AF0lCh5U;;AE1lCq8U;EAA6B;EAAsB;AF+lCx/U;;AE/lC8iV;EAAiB;EAAsB;AFomCrlV;;AEpmC4oV;EAAiB;EAAsB;AFymCnrV;;AEzmC0uV;EAAgB;EAAsB;AF8mChxV;;AE9mCq0V;EAAoB;AFknCz1V;;AElnCk3V;EAA4B;EAAsB;AFunCp6V;;AEvnCw9V;EAAU;EAAkB;AF4nCp/V;;AE5nC2iW;EAAc;EAAkB;AFioC3kW;;AEjoCgoW;EAAc;EAAkB;AFsoChqW;;AEtoCqtW;EAAY;EAAkB;AF2oCnvW;;AE3oC0yW;EAAa;EAAkB;AFgpCz0W;;AEhpCg4W;EAAa;EAAkB;AFqpC/5W;;AErpCs9W;EAAgB;AFypCt+W;;AEzpCmgX;EAAc;EAAkB;AF8pCniX;;AE9pCulX;EAAa;EAAkB;AFmqCtnX;;AEnqC0qX;EAAa;EAAkB;AFwqCzsX;;AExqCgwX;EAAmB;AF4qCnxX;;AE5qC21X;EAAkB;AFgrC72X;;AEhrCi7X;EAAmB;AForCp8X;;AEprC+gY;EAA6B;EAA2B;EAAoC;AF0rC3mY;;AE1rC6qY;EAAc;EAA2B;EAAqC;AFgsC3vY;;AEhsC6zY;EAA2B;EAA2B;EAAoC;AFssCv5Y;;AEtsCy9Y;EAAW;EAAmC;AF2sCvgZ;;AE3sC8kZ;EAAc;EAAqC;AFgtCjoZ;;AEhtC2sZ;EAAwB;AFotCnuZ;;AEptC4vZ;EAAY;AFwtCxwZ;;AExtCgyZ;EAAc;AF4tC9yZ;;AE5tCg0Z;EAAgB;EAAsB;AFiuCt2Z;;AEjuCy3Z;EAAc;EAAoB;AFsuC35Z;;AEtuC46Z;EAAe;EAA0B;AF2uCr9Z;;AE3uC4+Z;EAAK;AF+uCj/Z;;AE/uC+/Z;EAAK;AFmvCpga;;AEnvC8ga;EAAK;AFuvCnha;;AEvvCkia;EAAK;AF2vCvia;;AE3vCsja;EAAK;AF+vC3ja;;AE/vCwka;EAAK;AFmwC7ka;;AEnwC4la;EAAQ;AFuwCpma;;AEvwCona;EAAM;EAAoB;AF4wC9oa;;AE5wCmqa;EAAO;EAAoB;AFixC9ra;;AEjxC+sa;EAAM;EAAqB;AFsxC1ua;;AEtxCgwa;EAAM;EAAsB;AF2xC5xa;;AE3xC+ya;EAAQ;EAAgC;AFgyCv1a;;AEhyCo3a;EAAQ;EAAyB;AFqyCr5a;;AEryC+6a;EAAM;EAAqB;AF0yC18a;;AE1yC49a;EAAM;EAAoB;AF+yCt/a;;AE/yC2gb;EAAM;EAAoB;AFozCrib;;AEpzC0jb;EAAQ;EAA8B;AFyzChmb;;AEzzC2nb;EAAM;EAAmB;AF8zCppb;;AE9zCwqb;EAAM;EAAkB;AFm0Chsb;;AEn0Cmtb;EAAM;EAAqB;AFw0C9ub;;AEx0Cowb;EAAM;EAAoB;AF60C9xb;;AE70C+yb;EAAM;EAAe;AFk1Cp0b;;AEl1Co1b;EAAM;EAAsB;AFu1Ch3b;;AEv1Cm4b;EAAQ;EAA8B;AF41Cz6b;;AE51Cw8b;EAAM;EAAiB;AFi2C/9b;;AEj2C6+b;EAAM;AFq2Cn/b;;AEr2Cugc;EAAM;AFy2C7gc;;AEz2Cgic;EAAM;AF62Ctic;;AE72Cyjc;EAAM;AFi3C/jc;;AEj3Cilc;EAAM;AFq3Cvlc;;AEr3C4mc;EAAM;AFy3Clnc;;AEz3Cyoc;EAAM;AF63C/oc;;AE73Ckqc;EAAM;AFi4Cxqc;;AEj4C4rc;EAAM;AFq4Clsc;;AEr4Citc;EAAM;AFy4Cvtc;;AEz4C2uc;EAAW;AF64Ctvc;;AE74Cswc;EAAa;AFi5Cnxc;;AEj5Cqyc;EAAe;AFq5Cpzc;;AEr5Cg1c;EAAY;AFy5C51c;;AEz5C62c;EAAc;AF65C33c;;AE75Cs5c;EAAc;AFi6Cp6c;;AEj6C07c;EAAY;AFq6Ct8c;;AEr6Cugd;EAAS;EAAkB;AF06Clid;;AE16Csjd;EAAU;EAAe;AF+6C/kd;;AE/6C6ld;EAAS;AFm7Ctmd;;AEn7Cwnd;EAAkB;AFu7C1od;;AEv7C8pd;EAAS;AF27Cvqd;;AE37C0rd;EAAW;EAAe;AFg8Cptd;;AEh8Cuud;EAAU;EAAmB;AFq8Cpwd;;AEr8Cwxd;EAAS;EAAiB;AF08Clzd;;AE18Cm0d;EAAkB;AF88Cr1d;;AE98Cs2d;EAAmB;AFk9Cz3d;;AEl9C24d;EAAa;AFs9Cx5d;;AEt9Cw6d;EAAW;AF09Cn7d;;AE19Cm8d;EAAe;AF89Cl9d;;AE99Ck+d;EAAa;AFk+C/+d;;AEl+C+/d;EAAY;AFs+C3ge;;AEt+C2he;EAAW;AF0+Ctie;;AE1+C+je;EAAY;AF8+C3ke;;AE9+Cqme;EAAQ;AFk/C7me;;AEl/C+ne;EAAc;AFs/C7oe;;AEt/C+pe;EAAe;AF0/C9qe;;AE1/C+re;EAAgB;AF8/C/se;;AE9/Csue;EAAe;AFkgDrve;;AElgD2we;EAAiB;EAA8B;AFugD1ze;;AEvgD+2e;EAAe;EAAoB;AF4gDl5e;;AE5gD67e;EAAY;EAAoB;AFihD79e;;AEjhD2gf;EAAgB;EAA8B;AFshDzjf;;AEthDinf;EAAiB;EAAoB;AF2hDtpf;;AE3hDksf;EAAY;EAAoB;AFgiDluf;;AEhiD0wf;EAAc;EAAoB;AFqiD5yf;;AEriDw1f;EAAiB;EAAoB;AF0iD73f;;AE1iDy6f;EAAe;EAAoB;AF+iD58f;;AE/iD0/f;EAAe;EAAoB;AFojD7hgB;;AEpjDykgB;EAAgB;EAAoB;AFyjD7mgB;;AEzjDypgB;EAAc;EAAoB;AF8jD3rgB;;AE9jDuugB;EAAe;EAAoB;AFmkD1wgB;;AEnkDwzgB;EAAgB;EAAoB;AFwkD51gB;;AExkDw4gB;EAAc;EAAoB;AF6kD16gB;;AE7kDw9gB;EAAe;EAAoB;AFklD3/gB;;AEllDsihB;EAAe;EAAoB;AFulDzkhB;;AEvlDonhB;EAA0B;EAAoB;AF4lDlqhB;;AE5lD6shB;EAAiB;EAAoB;AFimDlvhB;;AEjmD+xhB;EAAiB;EAAoB;AFsmDp0hB;;AEtmDg3hB;EAAgB;EAAoB;AF2mDp5hB;;AE3mDg8hB;EAA2B;EAAoB;AFgnD/+hB;;AEhnD4hiB;EAAe;EAAoB;AFqnD/jiB;;AErnD2miB;EAAe;EAAoB;AF0nD9oiB;;AE1nD2riB;EAAiB;EAAoB;AF+nDhuiB;;AE/nD6wiB;EAAmB;EAAoB;AFooDpziB;;AEpoDg2iB;EAAW;AFwoD32iB;;AExoD04iB;EAAc;AF4oDx5iB;;AE5oDk7iB;EAAW;AFgpD77iB;;AEhpDu8iB;EAAW;EAAwE;AFqpD1hjB;;AErpD0njB;EAAsB;AFypDhpjB;;AEzpDmvjB;EAAW;EAA0E;AF8pDx0jB;;AE9pD06jB;EAAQ;EAAqE;AFmqDv/jB;;AEnqDolkB;EAAmB;AFuqDvmkB;;AEvqD0skB;EAAW;EAAwC;AF4qD7vkB;;AE5qDozkB;EAAW;EAA2E;AFirD14kB;;AEjrD6+kB;EAAyB;AFqrDtglB;;AErrDymlB;EAAc;EAA8C;AF0rDrqlB;;AE1rDkulB;EAAa;EAAsB;EAA8B;AFgsDnylB;;AEhsDs4lB;EAAc;EAA8B;AFqsDl7lB;;AErsDq8lB;EAAQ;EAA2G;AF0sDxjmB;;AE1sD2pmB;EAAc;AF8sDzqmB;;AE9sDkwmB;EAAM;EAA2G;AFmtDn3mB;;AEntD49mB;EAA2B;EAAoB;AFwtD3gnB;;AExtDkknB;EAAM;AF4tDxknB;;AE5tD4lnB;EAAc;AFguD1mnB;;AEhuD2xnB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AFwuD1woB;;AExuD6zoB;EAAoB;EAA4B;AF6uD72oB;;AE7uDg6oB;EAAkC;AFivDl8oB;;AEjvD29oB;EAAc;AFqvDz+oB;;AErvDigpB;EAAa;AFyvD9gpB;;AEzvDikpB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AFowDp5pB;;AEpwDs6pB;EAA6C;EAAe;AFywDl+pB;;AEzwD4+pB;EAAmD;EAAqD;AF8wDplqB;;AE9wDmmqB;EAAmD;EAAyB;AFmxD/qqB;;AEnxD8rqB;EAAW;AFuxDzsqB;;AEvxD8tqB;EAAgC;EAAwB;EAAyB;AF6xD/yqB;;AE7xDs0qB;EAA2C;AFiyDj3qB;;AEjyDs4qB;EAAyD;EAAsB;EAAoB;AFuyDz+qB;;AEvyD8/qB;EAAkB;EAAY;AF4yD5hrB;;AE5yD4irB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AFozD1wrB;;AEpzDyxrB;EAAqH;AFwzD94rB;;AExzDk6rB;EAAyB;IAAgC;EF6zDz9rB;EE7zDq/rB;IAAwF;IAAwB;EFi0DrmsB;EEj0DiosB;IAAkB;IAAa;EFq0DhqsB;AACF;AEt0DqrsB;EAA0B;IAAgC;IAA4B;EF20DzwsB;AACF;AE50DyysB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AFo1D3htB;;AEp1D2ntB;EAA6B;EAAkB;EAA2E;AF01DrvtB;;AE11Dw1tB;EAAc;EAA2B;EAAmC;EAAkE;EAAyB;EAAwE;AFm2DvkuB;;AEn2DuquB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AF42Dz5uB;;AE52Dy/uB;EAA+B;EAAkB;EAA2E;AFk3DrnvB;;AEl3DwtvB;EAAgB;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AF23D38vB;;AE33D2iwB;EAAiB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AFo4D9xwB;;AEp4D83wB;EAAmC;EAAkB;EAA2E;AF04D9/wB;;AE14DimxB;EAAkB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AFm5Dr1xB;;AEn5Dq7xB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AF25D5pyB;;AE35DuqyB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AFo6DnxyB;;AEp6DoyyB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AF86Dx6yB;;AE96Dm7yB;EAAyB;IAAmC;EFm7D7+yB;EEn7D6/yB;IAAuB;EFs7DphzB;EEt7DgizB;IAA4B;IAAc;EF07D1kzB;EE17DqlzB;IAAyB;IAAc;EF87D5nzB;EE97D4ozB;IAAyB;IAAc;EFk8DnrzB;EEl8DoszB;IAAyB;IAAc;EFs8D3uzB;EEt8DqvzB;IAAyB;IAAc;EF08D5xzB;EE18D6yzB;IAAyB;IAAc;EF88Dp1zB;EE98Dq2zB;IAAyB;IAAc;EFk9D54zB;EEl9Ds5zB;IAAyB;IAAc;EFs9D77zB;EEt9D88zB;IAAyB;IAAc;EF09Dr/zB;EE19Dsg0B;IAAyB;IAAc;EF89D7i0B;EE99Duj0B;IAA0B;IAAc;EFk+D/l0B;EEl+Dgn0B;IAA0B;IAAc;EFs+Dxp0B;EEt+Dyq0B;IAA0B;IAAc;EF0+Djt0B;AACF;AE3+D+t0B;EAAyB;IAAsD;EF++D5y0B;EE/+D4z0B;IAAuB;EFk/Dn10B;EEl/D+10B;IAA4B;IAAc;EFs/Dz40B;EEt/Do50B;IAAyB;IAAc;EF0/D370B;EE1/D280B;IAAyB;IAAc;EF8/Dl/0B;EE9/Dmg1B;IAAyB;IAAc;EFkgE1i1B;EElgEoj1B;IAAyB;IAAc;EFsgE3l1B;EEtgE4m1B;IAAyB;IAAc;EF0gEnp1B;EE1gEoq1B;IAAyB;IAAc;EF8gE3s1B;EE9gEqt1B;IAAyB;IAAc;EFkhE5v1B;EElhE6w1B;IAAyB;IAAc;EFshEpz1B;EEthEq01B;IAAyB;IAAc;EF0hE521B;EE1hEs31B;IAA0B;IAAc;EF8hE951B;EE9hE+61B;IAA0B;IAAc;EFkiEv91B;EEliEw+1B;IAA0B;IAAc;EFsiEhh2B;AACF;AEviE8h2B;EAA0B;IAAyE;EF2iE/n2B;EE3iEgp2B;IAAuB;EF8iEvq2B;EE9iEmr2B;IAA4B;IAAc;EFkjE7t2B;EEljEwu2B;IAAyB;IAAc;EFsjE/w2B;EEtjE+x2B;IAAyB;IAAc;EF0jEt02B;EE1jEu12B;IAAyB;IAAc;EF8jE932B;EE9jEw42B;IAAyB;IAAc;EFkkE/62B;EElkEg82B;IAAyB;IAAc;EFskEv+2B;EEtkEw/2B;IAAyB;IAAc;EF0kE/h3B;EE1kEyi3B;IAAyB;IAAc;EF8kEhl3B;EE9kEim3B;IAAyB;IAAc;EFklExo3B;EEllEyp3B;IAAyB;IAAc;EFslEhs3B;EEtlE0s3B;IAA0B;IAAc;EF0lElv3B;EE1lEmw3B;IAA0B;IAAc;EF8lE3y3B;EE9lE4z3B;IAA0B;IAAc;EFkmEp23B;AACF;AEnmEk33B;EAA0B;IAA4F;EFumEt+3B;EEvmEu/3B;IAAuB;EF0mE9g4B;EE1mE0h4B;IAA4B;IAAc;EF8mEpk4B;EE9mE+k4B;IAAyB;IAAc;EFknEtn4B;EElnEso4B;IAAyB;IAAc;EFsnE7q4B;EEtnE8r4B;IAAyB;IAAc;EF0nEru4B;EE1nE+u4B;IAAyB;IAAc;EF8nEtx4B;EE9nEuy4B;IAAyB;IAAc;EFkoE904B;EEloE+14B;IAAyB;IAAc;EFsoEt44B;EEtoEg54B;IAAyB;IAAc;EF0oEv74B;EE1oEw84B;IAAyB;IAAc;EF8oE/+4B;EE9oEgg5B;IAAyB;IAAc;EFkpEvi5B;EElpEij5B;IAA0B;IAAc;EFspEzl5B;EEtpE0m5B;IAA0B;IAAc;EF0pElp5B;EE1pEmq5B;IAA0B;IAAc;EF8pE3s5B;AACF;AE/pEyt5B;EAA0B;IAAgH;EFmqEj25B;EEnqEk35B;IAAwB;EFsqE145B;EEtqEs55B;IAA6B;IAAc;EF0qEj85B;EE1qE485B;IAA0B;IAAc;EF8qEp/5B;EE9qEog6B;IAA0B;IAAc;EFkrE5i6B;EElrE6j6B;IAA0B;IAAc;EFsrErm6B;EEtrE+m6B;IAA0B;IAAc;EF0rEvp6B;EE1rEwq6B;IAA0B;IAAc;EF8rEht6B;EE9rEiu6B;IAA0B;IAAc;EFksEzw6B;EElsEmx6B;IAA0B;IAAc;EFssE3z6B;EEtsE406B;IAA0B;IAAc;EF0sEp36B;EE1sEq46B;IAA0B;IAAc;EF8sE766B;EE9sEu76B;IAA2B;IAAc;EFktEh+6B;EEltEi/6B;IAA2B;IAAc;EFstE1h7B;EEttE2i7B;IAA2B;IAAc;EF0tEpl7B;AACF;AE3tEkm7B;EAA0B;IAAqI;EF+tE/v7B;EE/tEgx7B;IAAyB;EFkuEzy7B;EEluEqz7B;IAA8B;IAAc;EFsuEj27B;EEtuE427B;IAA2B;IAAc;EF0uEr57B;EE1uEq67B;IAA2B;IAAc;EF8uE987B;EE9uE+97B;IAA2B;IAAc;EFkvExg8B;EElvEkh8B;IAA2B;IAAc;EFsvE3j8B;EEtvE4k8B;IAA2B;IAAc;EF0vErn8B;EE1vEso8B;IAA2B;IAAc;EF8vE/q8B;EE9vEyr8B;IAA2B;IAAc;EFkwElu8B;EElwEmv8B;IAA2B;IAAc;EFswE5x8B;EEtwE6y8B;IAA2B;IAAc;EF0wEt18B;EE1wEg28B;IAA4B;IAAc;EF8wE148B;EE9wE258B;IAA4B;IAAc;EFkxEr88B;EElxEs98B;IAA4B;IAAc;EFsxEhg9B;AACF;AEvxE8g9B;EAAsB;EAAyC;AF2xE7k9B;;AE3xE4n9B;EAA2B;EAA4C;AFgyEns9B;;AEhyE+u9B;EAA8B;EAA+C;AFqyE5z9B;;AEryEq29B;EAA2B;EAA4C;AF0yE569B;;AE1yEq99B;EAA8B;EAA+C;AF+yEli+B;;AE/yE2k+B;EAA6B;EAA8C;AFozEtp+B;;AEpzE+r+B;EAA8B;EAA+C;AFyzE5w+B;;AEzzEqz+B;EAAiC;EAAsB;EAAgB;AF+zE53+B;;AE/zEi5+B;EAA8D;EAAuB;AFo0Et++B;;AEp0Eug/B;EAA8B;AFw0Eri/B;;AEx0E4j/B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AFk1Et0/B;;AEl1E61/B;EAAsC;AFs1En4/B;;AEt1Es+/B;EAAsB;EAA0E;AF21EtkgC;;AE31EwqgC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AFm2EhzgC;;AEn2E81gC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AFi3E34hC;;AEj3Ey7hC;EAAiC;EAA6B;AFs3Ev/hC;;AEt3EqhiC;EAA+B;EAAgC;AF23EpliC;;AE33EqniC;EAA0B;EAAkB;AFg4EjqiC;;AEh4EwtiC;EAA8B;EAA8B;AFq4EpxiC;;AEr4Ey0iC;EAA2B;AFy4Ep2iC;;AEz4E83iC;EAAwB;EAA0E;EAAkG;AF+4ElkjC;;AE/4EqqjC;EAAgC;EAAsB;AFo5E3tjC;;AEp5EkxjC;EAAwB;EAA0E;EAAkG;AF05Et9jC;;AE15EyjkC;EAA2B;EAA8B;AF+5ElnkC;;AE/5EqokC;EAAqB;EAA2G;AFo6ErwkC;;AEp6Ew2kC;EAAwC;AFw6Eh5kC;;AEx6Ey+kC;EAAmB;EAA2G;AF66EvmlC;;AE76EgtlC;EAAqB;EAA2G;EAAyG;AFm7Ez7lC;;AEn7EkhmC;EAA8B;EAAoB;AFw7EpkmC;;AEx7E4nmC;EAA4B;EAAoB;AF67E5qmC;;AE77EoumC;EAA8B;AFi8ElwmC;;AEj8EwxmC;EAA0B;EAA0E;EAAkG;AFu8E99mC;;AEv8EiknC;EAAuC;EAAkB;AF48E1nnC;;AE58EirnC;EAA2D;EAAsB;AFi9ElwnC;;AEj9EsznC;EAA6B;EAAsB;AFs9Ez2nC;;AEt9E65nC;EAAyB;EAAkB;AF29Ex8nC;;AE39E4/nC;EAAyB;EAAkB;AFg+EvioC;;AEh+E2loC;EAAyB;EAAkB;AFq+EtooC;;AEr+E0roC;EAAyB;EAAkB;AF0+EruoC;;AE1+E4xoC;EAAwB;EAAoB;AF++Ex0oC;;AE/+Es3oC;EAA2B;EAAoB;AFo/Er6oC;;AEp/Em9oC;EAA2B;EAAoB;AFy/ElgpC;;AEz/E8ipC;EAAsC;EAAkB;AF8/EtmpC;;AE9/E0ppC;EAAwC;EAAoB;AFmgFttpC;;AEngF2wpC;EAAmD;EAAkB;AFwgFh1pC;;AExgFu4pC;EAAyB;IAAY;EF6gF16pC;EE7gFu7pC;IAAY;EFghFn8pC;EEhhF68pC;IAAiB;EFmhF99pC;EEnhF4gqC;IAAiB;EFshF7hqC;AACF;AEvhF8kqC;EAAyB;IAAW;IAAiB;EF4hFjoqC;EE5hFmpqC;IAAW;IAAmB;EFgiFjrqC;EEhiFisqC;IAAW;EFmiF5sqC;EEniF0tqC;IAAY;EFsiFtuqC;EEtiFmvqC;IAAU;EFyiF7vqC;EEziF0wqC;IAAiB;EF4iF3xqC;EE5iFy0qC;IAAiB;EF+iF11qC;EE/iFw4qC;IAAc;EFkjFt5qC;EEljFy6qC;IAAc;EFqjFv7qC;EErjF68qC;IAAW;IAAkB;EFyjF1+qC;EEzjF6/qC;IAAiB;EF4jF9grC;EE5jFgirC;IAAc;IAAkB;EFgkFhkrC;EEhkF8krC;IAAc;IAAiB;EFokF7mrC;AACF;AErkFiorC;EAA0B;IAAU;EFykFnqrC;EEzkFgrrC;IAAU;EF4kF1rrC;EE5kF0srC;IAAiB;EF+kF3trC;EE/kFywrC;IAAiB;EFklF1xrC;EEllFw0rC;IAAc;EFqlFt1rC;EErlFy2rC;IAAe;EFwlFx3rC;AACF;AEzlF24rC;EAA0B;IAAU;EF6lF76rC;EE7lFy7rC;IAAW;IAAkB;EFimFt9rC;EEjmFy+rC;IAAc;IAAiB;EFqmFxgsC;EErmFshsC;IAAc;IAAmB;EFymFvjsC;AACF;ADzlFA;AIjBA;AAAgE;EAAiB;EAAuB;AHgnFxG;;AGhnF8H;EAAe;AHonF7I;;AGpnF6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AH8nF5c;;AG9nFud;EAAK;EAAoB;AHmoFhf;;AGnoFyf;EAAG;EAAqB;EAAc;AHyoF/hB;;AGzoFwiB;EAAoB;EAAyC;AH8oFrmB;;AG9oFsoB;EAAkB;EAAkB;AHmpF1qB;;AGnpF8rB;EAAE;EAAc;AHwpF9sB;;AGxpFsuB;EAAS;AH4pF/uB;;AG5pFkwB;EAAkB;EAAoG;AHiqFx3B;;AGjqFs4B;EAAM;AHqqF54B;;AGrqF05B;EAAQ;EAAc;EAAc;EAAkB;AH4qFh9B;;AG5qFw+B;EAAI;AHgrF5+B;;AGhrF0/B;EAAI;AHorF9/B;;AGprFwgC;EAAM;EAAyB;EAAqB;AH0rF5jC;;AG1rF0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AHosFltC;;AGpsF4tC;EAAc;AHwsF1uC;;AGxsF8vC;EAAgD;EAA0B;EAA6B;AH8sFr2C;;AG9sF23C;EAAgB;AHktF34C;;AGltFw5C;EAAiB;AHstFz6C;;AGttFy7C;EAAS;AH0tFl8C;;AG1tF09C;EAAwD;AH8tFlhD;;AG9tF8hD;EAAc;EAA6B;AHmuFzkD;;AGnuF6lD;EAA4B;AHuuFznD;;AGvuFipD;EAA6B;EAA0B;AH4uFxsD;;AG5uFqtD;EAAQ;AHgvF7tD;;AGhvF+uD;EAAmD;AHovFlyD;;AGpvF2yD;EAAS;AHwvFpzD;;AGxvF6zD;EAAgB;AH4vF70D;;AG5vFu1D;EAAW;EAAgB;EAAS;AHkwF33D;;AGlwFq4D;EAAS;AHswF94D;;AGtwF85D;EAAmD;EAAc;AH2wF/9D;;AG3wFy+D;EAAyC;EAAc;AHgxFhiE;;AGhxF0iE;EAAqB;AHoxF/jE;;AGpxF8kE;EAAU;AHwxFxlE;;AGxxFumE;EAA+C;EAAc;AH6xFpqE;;AG7xF0rE;EAAU;EAAY;AHkyFhtE;;AGlyF+tE;EAAS;AHsyFxuE;;AGtyFqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHq1FjpG;;AGr1FuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHo4F7jI;;AGp4FmlI;EAAW;AHw4F9lI;;AGx4FymI;EAAyB;IAAW;EH64F3oI;AACF;AG94F8pI;EAAyB;IAAW;EHk5FhsI;AACF;AGn5FmtI;EAA0B;IAAW;EHu5FtvI;AACF;AGx5F0wI;EAA0B;IAAW;EH45F7yI;AACF;AG75Fi0I;EAA0B;IAAW;EHi6Fp2I;AACF;AGl6Fw3I;EAA0B;IAAW;EHs6F35I;AACF;AGv6F+6I;EAAS;AH06Fx7I;;AG16F28I;EAAW;AH86Ft9I;;AG96Fw+I;EAAQ;AHk7Fh/I;;AGl7FggJ;EAAO;AHs7FvgJ;;AGt7FshJ;EAAU;AH07FhiJ;;AG17FkjJ;EAAU;AH87F5jJ;;AG97F8kJ;EAAS;EAAS;EAAO;EAAQ;AHq8F/mJ;;AGr8FqnJ;EAAQ;AHy8F7nJ;;AGz8FwoJ;EAAQ;AH68FhpJ;;AG78FupJ;EAAS;AHi9FhqJ;;AGj9FwqJ;EAAS;AHq9FjrJ;;AGr9F4rJ;EAAW;AHy9FvsJ;;AGz9FmtJ;EAAO;AH69F1tJ;;AG79FguJ;EAAO;AHi+FvuJ;;AGj+FgvJ;EAAS;AHq+FzvJ;;AGr+FmwJ;EAAQ;AHy+F3wJ;;AGz+FoxJ;EAAQ;AH6+F5xJ;;AG7+FqyJ;EAAU;AHi/F/yJ;;AGj/F4zJ;EAAS;AHq/Fr0J;;AGr/Fm1J;EAAU;AHy/F71J;;AGz/F42J;EAAgB;AH6/F53J;;AG7/Fu4J;EAAM;AHigG74J;;AGjgGw5J;EAAM;AHqgG95J;;AGrgGy6J;EAAM;AHygG/6J;;AGzgG07J;EAAK;AH6gG/7J;;AG7gGy8J;EAAK;AHihG98J;;AGjhG49J;EAAK;AHqhGj+J;;AGrhG0+J;EAAK;AHyhG/+J;;AGzhG4/J;EAAO;EAAmB;AH8hGthK;;AG9hGsiK;EAAS;EAAiB;AHmiGhkK;;AGniGklK;EAAO;EAAiB;AHwiG1mK;;AGxiG4nK;EAAM;EAAoB;AH6iGtpK;;AG7iGuqK;EAAM;EAAgB;AHkjG7rK;;AGljG0sK;EAAM;EAAqB;AHujGruK;;AGvjGuvK;EAAM;EAAiB;AH4jG9wK;;AG5jGgyK;EAAM;EAAmB;AHikGzzK;;AGjkGy0K;EAAM;EAAkB;AHskGj2K;;AGtkGo3K;EAAQ;EAA+B;AH2kG35K;;AG3kGu7K;EAAM;EAAmB;AHglGh9K;;AGhlGo+K;EAAQ;EAA6B;AHqlGzgL;;AGrlGuiL;EAAO;AHylG9iL;;AGzlGikL;EAAO;AH6lGxkL;;AG7lGwlL;EAAO;AHimG/lL;;AGjmGknL;EAAM;AHqmGxnL;;AGrmG2oL;EAAM;AHymGjpL;;AGzmGmqL;EAAM;AH6mGzqL;;AG7mG6rL;EAAM;AHinGnsL;;AGjnGqtL;EAAM;AHqnG3tL;;AGrnG2uL;EAAM;AHynGjvL;;AGznGowL;EAAM;AH6nG1wL;;AG7nG4xL;EAAM;AHioGlyL;;AGjoGmzL;EAAM;AHqoGzzL;;AGroG80L;EAAM;AHyoGp1L;;AGzoGw2L;EAAM;AH6oG92L;;AG7oGi4L;EAAM;AHipGv4L;;AGjpGo5L;EAAM;AHqpG15L;;AGrpG86L;EAAM;AHypGp7L;;AGzpGs8L;EAAM;AH6pG58L;;AG7pG89L;EAAM;AHiqGp+L;;AGjqGk/L;EAAM;AHqqGx/L;;AGrqGugM;EAAM;AHyqG7gM;;AGzqGgiM;EAAO;AH6qGviM;;AG7qGyjM;EAAO;AHirGhkM;;AGjrGmlM;EAAO;AHqrG1lM;;AGrrG6mM;EAAM;AHyrGnnM;;AGzrGooM;EAAO;AH6rG3oM;;AG7rG6pM;EAAM;AHisGnqM;;AGjsGwrM;EAAO;AHqsG/rM;;AGrsG6sM;EAAS;AHysGttM;;AGzsG8uM;EAAc;AH6sG5vM;;AG7sGixM;EAAM;AHitGvxM;;AGjtGoyM;EAAQ;AHqtG5yM;;AGrtGm0M;EAAa;AHytGh1M;;AGztGo2M;EAAO;AH6tG32M;;AG7tGy3M;EAAY;AHiuGr4M;;AGjuGw5M;EAAoB;AHquG56M;;AGruGu8M;EAAiB;AHyuGx9M;;AGzuGg/M;EAAW;AH6uG3/M;;AG7uG6gN;EAAM;AHivGnhN;;AGjvGgiN;EAAU;AHqvG1iN;;AGrvG2jN;EAAQ;AHyvGnkN;;AGzvGglN;EAAM;AH6vGtlN;;AG7vGmmN;EAAQ;AHiwG3mN;;AGjwGunN;EAAK;AHqwG5nN;;AGrwGwoN;EAAM;AHywG9oN;;AGzwG0pN;EAAM;AH6wGhqN;;AG7wG4qN;EAAM;AHixGlrN;;AGjxG+rN;EAAM;AHqxGrsN;;AGrxGktN;EAAK;AHyxGvtN;;AGzxGquN;EAAM;AH6xG3uN;;AG7xGwvN;EAAM;AHiyG9vN;;AGjyG2wN;EAAM;AHqyGjxN;;AGryG6xN;EAAM;AHyyGnyN;;AGzyGizN;EAAM;AH6yGvzN;;AG7yGs0N;EAAK;AHizG30N;;AGjzGw1N;EAAM;AHqzG91N;;AGrzG02N;EAAO;EAAwB;AH0zGz4N;;AG1zG45N;EAAa;AH8zGz6N;;AG9zGs7N;EAAU;AHk0Gh8N;;AGl0Gi9N;EAAQ;AHs0Gz9N;;AGt0Go+N;EAAK;AH00Gz+N;;AG10Go/N;EAAM;AH80G1/N;;AG90GqgO;EAAM;AHk1G3gO;;AGl1GshO;EAAO;EAAuB;AHu1GpjO;;AGv1GskO;EAAK;AH21G3kO;;AG31GwlO;EAAK;AH+1G7lO;;AG/1G0mO;EAAK;AHm2G/mO;;AGn2G2nO;EAAQ;AHu2GnoO;;AGv2G8oO;EAAM;AH22GppO;;AG32GgqO;EAAM;AH+2GtqO;;AG/2GkrO;EAAM;AHm3GxrO;;AGn3GmsO;EAAM;AHu3GzsO;;AGv3GqtO;EAAM;AH23G3tO;;AG33GuuO;EAAM;AH+3G7uO;;AG/3GyvO;EAAmB;EAAuB;AHo4GnyO;;AGp4GqzO;EAAa;AHw4Gl0O;;AGx4G80O;EAAQ;AH44Gt1O;;AG54G22O;EAAc;AHg5Gz3O;;AGh5Gk5O;EAAQ;AHo5G15O;;AGp5Gs6O;EAAa;AHw5Gn7O;;AGx5Gi8O;EAAW;AH45G58O;;AG55Gw9O;EAAW;AHg6Gn+O;;AGh6Gq/O;EAAsB;AHo6G3gP;;AGp6GysP;EAAQ;AHw6GjtP;;AGx6G6tP;EAAW;AH46GxuP;;AG56G6vP;EAAiB;EAAwB;EAAqB;AHk7G3zP;;AGl7G20P;EAAe;AHs7G11P;;AGt7G62P;EAAa;AH07G13P;;AG17Gw6P;EAAU;AH87Gl7P;;AG97Gq8P;EAAkB;AHk8Gv9P;;AGl8Gk/P;EAAU;AHs8G5/P;;AGt8GkhQ;EAAW;AH08G7hQ;;AG18G4iQ;EAAa;AH88GzjQ;;AG98G0kQ;EAAgB;AHk9G1lQ;;AGl9G+mQ;EAAiB;AHs9GhoQ;;AGt9G4pQ;EAAgB;AH09G5qQ;;AG19GusQ;EAAa;AH89GptQ;;AG99G2uQ;EAAW;AHk+GtvQ;;AGl+G2wQ;EAAc;AHs+GzxQ;;AGt+G4yQ;EAAe;AH0+G3zQ;;AG1+Gs1Q;EAAa;AH8+Gn2Q;;AG9+G43Q;EAAgB;AHk/G54Q;;AGl/Gm6Q;EAAiB;AHs/Gp7Q;;AGt/Gk9Q;EAAmB;AH0/Gr+Q;;AG1/G6gR;EAAgB;AH8/G7hR;;AG9/G0jR;EAAQ;AHkgHlkR;;AGlgH2kR;EAAO;AHsgHllR;;AGtgH2lR;EAAO;AH0gHlmR;;AG1gH6mR;EAAO;AH8gHpnR;;AG9gH8nR;EAAyC;EAAuB;EAAqD;AHohHnvR;;AGphH2yR;EAAwC;EAAwB;EAAyD;AH0hHp6R;;AG1hHg+R;EAA+C;EAAsB;AH+hHriS;;AG/hH4lS;EAAiB;AHmiH7mS;;AGniH6nS;EAAiB;AHuiH9oS;;AGviH8pS;EAAmB;AH2iHjrS;;AG3iHmsS;EAAmB;AH+iHttS;;AG/iHwuS;EAAmB;AHmjH3vS;;AGnjH6wS;EAAU;EAAgB;EAAuB;AHyjH9zS;;AGzjHi1S;EAAmB;AH6jHp2S;;AG7jHu3S;EAAmB;AHikH14S;;AGjkH65S;EAAqB;AHqkHl7S;;AGrkHu8S;EAAqB;AHykH59S;;AGzkHi/S;EAAY;AH6kH7/S;;AG7kHmhT;EAAS;AHilH5hT;;AGjlHijT;EAAY;AHqlH7jT;;AGrlHilT;EAAc;AHylH/lT;;AGzlHonT;EAAc;AH6lHloT;;AG7lHkpT;EAAa;AHimH/pT;;AGjmHkrT;EAAY;AHqmH9rT;;AGrmHmtT;EAAa;AHymHhuT;;AGzmHqvT;EAAY;AH6mHjwT;;AG7mHuxT;EAAgB;EAA6B;AHknHp0T;;AGlnH81T;EAAc;EAAkC;AHunH94T;;AGvnHi7T;EAAU;AH2nH37T;;AG3nH48T;EAAQ;AH+nHp9T;;AG/nHq+T;EAAU;AHmoH/+T;;AGnoH8/T;EAAY;AHuoH1gU;;AGvoHkiU;EAAY;AH2oH9iU;;AG3oHmkU;EAAU;AH+oH7kU;;AG/oHqmU;EAAU;AHmpH/mU;;AGnpHooU;EAAY;AHupHhpU;;AGvpHuqU;EAAY;AH2pHnrU;;AG3pHysU;EAAc;AH+pHvtU;;AG/pH0uU;EAAa;AHmqHvvU;;AGnqHywU;EAAiB;EAAsB;AHwqHhzU;;AGxqHu2U;EAAmB;EAAsB;AH6qHh5U;;AG7qHq8U;EAA6B;EAAsB;AHkrHx/U;;AGlrH8iV;EAAiB;EAAsB;AHurHrlV;;AGvrH4oV;EAAiB;EAAsB;AH4rHnrV;;AG5rH0uV;EAAgB;EAAsB;AHisHhxV;;AGjsHq0V;EAAoB;AHqsHz1V;;AGrsHk3V;EAA4B;EAAsB;AH0sHp6V;;AG1sHw9V;EAAU;EAAkB;AH+sHp/V;;AG/sH2iW;EAAc;EAAkB;AHotH3kW;;AGptHgoW;EAAc;EAAkB;AHytHhqW;;AGztHqtW;EAAY;EAAkB;AH8tHnvW;;AG9tH0yW;EAAa;EAAkB;AHmuHz0W;;AGnuHg4W;EAAa;EAAkB;AHwuH/5W;;AGxuHs9W;EAAgB;AH4uHt+W;;AG5uHmgX;EAAc;EAAkB;AHivHniX;;AGjvHulX;EAAa;EAAkB;AHsvHtnX;;AGtvH0qX;EAAa;EAAkB;AH2vHzsX;;AG3vHgwX;EAAmB;AH+vHnxX;;AG/vH21X;EAAkB;AHmwH72X;;AGnwHi7X;EAAmB;AHuwHp8X;;AGvwH+gY;EAA6B;EAA2B;EAAoC;AH6wH3mY;;AG7wH6qY;EAAc;EAA2B;EAAqC;AHmxH3vY;;AGnxH6zY;EAA2B;EAA2B;EAAoC;AHyxHv5Y;;AGzxHy9Y;EAAW;EAAmC;AH8xHvgZ;;AG9xH8kZ;EAAc;EAAqC;AHmyHjoZ;;AGnyH2sZ;EAAwB;AHuyHnuZ;;AGvyH4vZ;EAAY;AH2yHxwZ;;AG3yHgyZ;EAAc;AH+yH9yZ;;AG/yHg0Z;EAAgB;EAAsB;AHozHt2Z;;AGpzHy3Z;EAAc;EAAoB;AHyzH35Z;;AGzzH46Z;EAAe;EAA0B;AH8zHr9Z;;AG9zH4+Z;EAAK;AHk0Hj/Z;;AGl0H+/Z;EAAK;AHs0Hpga;;AGt0H8ga;EAAK;AH00Hnha;;AG10Hkia;EAAK;AH80Hvia;;AG90Hsja;EAAK;AHk1H3ja;;AGl1Hwka;EAAK;AHs1H7ka;;AGt1H4la;EAAQ;AH01Hpma;;AG11Hona;EAAM;EAAoB;AH+1H9oa;;AG/1Hmqa;EAAO;EAAoB;AHo2H9ra;;AGp2H+sa;EAAM;EAAqB;AHy2H1ua;;AGz2Hgwa;EAAM;EAAsB;AH82H5xa;;AG92H+ya;EAAQ;EAAgC;AHm3Hv1a;;AGn3Ho3a;EAAQ;EAAyB;AHw3Hr5a;;AGx3H+6a;EAAM;EAAqB;AH63H18a;;AG73H49a;EAAM;EAAoB;AHk4Ht/a;;AGl4H2gb;EAAM;EAAoB;AHu4Hrib;;AGv4H0jb;EAAQ;EAA8B;AH44Hhmb;;AG54H2nb;EAAM;EAAmB;AHi5Hppb;;AGj5Hwqb;EAAM;EAAkB;AHs5Hhsb;;AGt5Hmtb;EAAM;EAAqB;AH25H9ub;;AG35Howb;EAAM;EAAoB;AHg6H9xb;;AGh6H+yb;EAAM;EAAe;AHq6Hp0b;;AGr6Ho1b;EAAM;EAAsB;AH06Hh3b;;AG16Hm4b;EAAQ;EAA8B;AH+6Hz6b;;AG/6Hw8b;EAAM;EAAiB;AHo7H/9b;;AGp7H6+b;EAAM;AHw7Hn/b;;AGx7Hugc;EAAM;AH47H7gc;;AG57Hgic;EAAM;AHg8Htic;;AGh8Hyjc;EAAM;AHo8H/jc;;AGp8Hilc;EAAM;AHw8Hvlc;;AGx8H4mc;EAAM;AH48Hlnc;;AG58Hyoc;EAAM;AHg9H/oc;;AGh9Hkqc;EAAM;AHo9Hxqc;;AGp9H4rc;EAAM;AHw9Hlsc;;AGx9Hitc;EAAM;AH49Hvtc;;AG59H2uc;EAAW;AHg+Htvc;;AGh+Hswc;EAAa;AHo+Hnxc;;AGp+Hqyc;EAAe;AHw+Hpzc;;AGx+Hg1c;EAAY;AH4+H51c;;AG5+H62c;EAAc;AHg/H33c;;AGh/Hs5c;EAAc;AHo/Hp6c;;AGp/H07c;EAAY;AHw/Ht8c;;AGx/Hugd;EAAS;EAAkB;AH6/Hlid;;AG7/Hsjd;EAAU;EAAe;AHkgI/kd;;AGlgI6ld;EAAS;AHsgItmd;;AGtgIwnd;EAAkB;AH0gI1od;;AG1gI8pd;EAAS;AH8gIvqd;;AG9gI0rd;EAAW;EAAe;AHmhIptd;;AGnhIuud;EAAU;EAAmB;AHwhIpwd;;AGxhIwxd;EAAS;EAAiB;AH6hIlzd;;AG7hIm0d;EAAkB;AHiiIr1d;;AGjiIs2d;EAAmB;AHqiIz3d;;AGriI24d;EAAa;AHyiIx5d;;AGziIw6d;EAAW;AH6iIn7d;;AG7iIm8d;EAAe;AHijIl9d;;AGjjIk+d;EAAa;AHqjI/+d;;AGrjI+/d;EAAY;AHyjI3ge;;AGzjI2he;EAAW;AH6jItie;;AG7jI+je;EAAY;AHikI3ke;;AGjkIqme;EAAQ;AHqkI7me;;AGrkI+ne;EAAc;AHykI7oe;;AGzkI+pe;EAAe;AH6kI9qe;;AG7kI+re;EAAgB;AHilI/se;;AGjlIsue;EAAe;AHqlIrve;;AGrlI2we;EAAiB;EAA8B;AH0lI1ze;;AG1lI+2e;EAAe;EAAoB;AH+lIl5e;;AG/lI67e;EAAY;EAAoB;AHomI79e;;AGpmI2gf;EAAgB;EAA8B;AHymIzjf;;AGzmIinf;EAAiB;EAAoB;AH8mItpf;;AG9mIksf;EAAY;EAAoB;AHmnIluf;;AGnnI0wf;EAAc;EAAoB;AHwnI5yf;;AGxnIw1f;EAAiB;EAAoB;AH6nI73f;;AG7nIy6f;EAAe;EAAoB;AHkoI58f;;AGloI0/f;EAAe;EAAoB;AHuoI7hgB;;AGvoIykgB;EAAgB;EAAoB;AH4oI7mgB;;AG5oIypgB;EAAc;EAAoB;AHipI3rgB;;AGjpIuugB;EAAe;EAAoB;AHspI1wgB;;AGtpIwzgB;EAAgB;EAAoB;AH2pI51gB;;AG3pIw4gB;EAAc;EAAoB;AHgqI16gB;;AGhqIw9gB;EAAe;EAAoB;AHqqI3/gB;;AGrqIsihB;EAAe;EAAoB;AH0qIzkhB;;AG1qIonhB;EAA0B;EAAoB;AH+qIlqhB;;AG/qI6shB;EAAiB;EAAoB;AHorIlvhB;;AGprI+xhB;EAAiB;EAAoB;AHyrIp0hB;;AGzrIg3hB;EAAgB;EAAoB;AH8rIp5hB;;AG9rIg8hB;EAA2B;EAAoB;AHmsI/+hB;;AGnsI4hiB;EAAe;EAAoB;AHwsI/jiB;;AGxsI2miB;EAAe;EAAoB;AH6sI9oiB;;AG7sI2riB;EAAiB;EAAoB;AHktIhuiB;;AGltI6wiB;EAAmB;EAAoB;AHutIpziB;;AGvtIg2iB;EAAW;AH2tI32iB;;AG3tI04iB;EAAc;AH+tIx5iB;;AG/tIk7iB;EAAW;AHmuI77iB;;AGnuIu8iB;EAAW;EAAwE;AHwuI1hjB;;AGxuI0njB;EAAsB;AH4uIhpjB;;AG5uImvjB;EAAW;EAA0E;AHivIx0jB;;AGjvI06jB;EAAQ;EAAqE;AHsvIv/jB;;AGtvIolkB;EAAmB;AH0vIvmkB;;AG1vI0skB;EAAW;EAAwC;AH+vI7vkB;;AG/vIozkB;EAAW;EAA2E;AHowI14kB;;AGpwI6+kB;EAAyB;AHwwItglB;;AGxwIymlB;EAAc;EAA8C;AH6wIrqlB;;AG7wIkulB;EAAa;EAAsB;EAA8B;AHmxInylB;;AGnxIs4lB;EAAc;EAA8B;AHwxIl7lB;;AGxxIq8lB;EAAQ;EAA2G;AH6xIxjmB;;AG7xI2pmB;EAAc;AHiyIzqmB;;AGjyIkwmB;EAAM;EAA2G;AHsyIn3mB;;AGtyI49mB;EAA2B;EAAoB;AH2yI3gnB;;AG3yIkknB;EAAM;AH+yIxknB;;AG/yI4lnB;EAAc;AHmzI1mnB;;AGnzI2xnB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AH2zI1woB;;AG3zI6zoB;EAAoB;EAA4B;AHg0I72oB;;AGh0Ig6oB;EAAkC;AHo0Il8oB;;AGp0I29oB;EAAc;AHw0Iz+oB;;AGx0IigpB;EAAa;AH40I9gpB;;AG50IikpB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AHu1Ip5pB;;AGv1Is6pB;EAA6C;EAAe;AH41Il+pB;;AG51I4+pB;EAAmD;EAAqD;AHi2IplqB;;AGj2ImmqB;EAAmD;EAAyB;AHs2I/qqB;;AGt2I8rqB;EAAW;AH02IzsqB;;AG12I8tqB;EAAgC;EAAwB;EAAyB;AHg3I/yqB;;AGh3Is0qB;EAA2C;AHo3Ij3qB;;AGp3Is4qB;EAAyD;EAAsB;EAAoB;AH03Iz+qB;;AG13I8/qB;EAAkB;EAAY;AH+3I5hrB;;AG/3I4irB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AHu4I1wrB;;AGv4IyxrB;EAAqH;AH24I94rB;;AG34Ik6rB;EAAyB;IAAgC;EHg5Iz9rB;EGh5Iq/rB;IAAwF;IAAwB;EHo5IrmsB;EGp5IiosB;IAAkB;IAAa;EHw5IhqsB;AACF;AGz5IqrsB;EAA0B;IAAgC;IAA4B;EH85IzwsB;AACF;AG/5IyysB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AHu6I3htB;;AGv6I2ntB;EAA6B;EAAkB;EAA2E;AH66IrvtB;;AG76Iw1tB;EAAc;EAA2B;EAAmC;EAAkE;EAAyB;EAAwE;AHs7IvkuB;;AGt7IuquB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AH+7Iz5uB;;AG/7Iy/uB;EAA+B;EAAkB;EAA2E;AHq8IrnvB;;AGr8IwtvB;EAAgB;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AH88I38vB;;AG98I2iwB;EAAiB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AHu9I9xwB;;AGv9I83wB;EAAmC;EAAkB;EAA2E;AH69I9/wB;;AG79IimxB;EAAkB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AHs+Ir1xB;;AGt+Iq7xB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AH8+I5pyB;;AG9+IuqyB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AHu/InxyB;;AGv/IoyyB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AHigJx6yB;;AGjgJm7yB;EAAyB;IAAmC;EHsgJ7+yB;EGtgJ6/yB;IAAuB;EHygJphzB;EGzgJgizB;IAA4B;IAAc;EH6gJ1kzB;EG7gJqlzB;IAAyB;IAAc;EHihJ5nzB;EGjhJ4ozB;IAAyB;IAAc;EHqhJnrzB;EGrhJoszB;IAAyB;IAAc;EHyhJ3uzB;EGzhJqvzB;IAAyB;IAAc;EH6hJ5xzB;EG7hJ6yzB;IAAyB;IAAc;EHiiJp1zB;EGjiJq2zB;IAAyB;IAAc;EHqiJ54zB;EGriJs5zB;IAAyB;IAAc;EHyiJ77zB;EGziJ88zB;IAAyB;IAAc;EH6iJr/zB;EG7iJsg0B;IAAyB;IAAc;EHijJ7i0B;EGjjJuj0B;IAA0B;IAAc;EHqjJ/l0B;EGrjJgn0B;IAA0B;IAAc;EHyjJxp0B;EGzjJyq0B;IAA0B;IAAc;EH6jJjt0B;AACF;AG9jJ+t0B;EAAyB;IAAsD;EHkkJ5y0B;EGlkJ4z0B;IAAuB;EHqkJn10B;EGrkJ+10B;IAA4B;IAAc;EHykJz40B;EGzkJo50B;IAAyB;IAAc;EH6kJ370B;EG7kJ280B;IAAyB;IAAc;EHilJl/0B;EGjlJmg1B;IAAyB;IAAc;EHqlJ1i1B;EGrlJoj1B;IAAyB;IAAc;EHylJ3l1B;EGzlJ4m1B;IAAyB;IAAc;EH6lJnp1B;EG7lJoq1B;IAAyB;IAAc;EHimJ3s1B;EGjmJqt1B;IAAyB;IAAc;EHqmJ5v1B;EGrmJ6w1B;IAAyB;IAAc;EHymJpz1B;EGzmJq01B;IAAyB;IAAc;EH6mJ521B;EG7mJs31B;IAA0B;IAAc;EHinJ951B;EGjnJ+61B;IAA0B;IAAc;EHqnJv91B;EGrnJw+1B;IAA0B;IAAc;EHynJhh2B;AACF;AG1nJ8h2B;EAA0B;IAAyE;EH8nJ/n2B;EG9nJgp2B;IAAuB;EHioJvq2B;EGjoJmr2B;IAA4B;IAAc;EHqoJ7t2B;EGroJwu2B;IAAyB;IAAc;EHyoJ/w2B;EGzoJ+x2B;IAAyB;IAAc;EH6oJt02B;EG7oJu12B;IAAyB;IAAc;EHipJ932B;EGjpJw42B;IAAyB;IAAc;EHqpJ/62B;EGrpJg82B;IAAyB;IAAc;EHypJv+2B;EGzpJw/2B;IAAyB;IAAc;EH6pJ/h3B;EG7pJyi3B;IAAyB;IAAc;EHiqJhl3B;EGjqJim3B;IAAyB;IAAc;EHqqJxo3B;EGrqJyp3B;IAAyB;IAAc;EHyqJhs3B;EGzqJ0s3B;IAA0B;IAAc;EH6qJlv3B;EG7qJmw3B;IAA0B;IAAc;EHirJ3y3B;EGjrJ4z3B;IAA0B;IAAc;EHqrJp23B;AACF;AGtrJk33B;EAA0B;IAA4F;EH0rJt+3B;EG1rJu/3B;IAAuB;EH6rJ9g4B;EG7rJ0h4B;IAA4B;IAAc;EHisJpk4B;EGjsJ+k4B;IAAyB;IAAc;EHqsJtn4B;EGrsJso4B;IAAyB;IAAc;EHysJ7q4B;EGzsJ8r4B;IAAyB;IAAc;EH6sJru4B;EG7sJ+u4B;IAAyB;IAAc;EHitJtx4B;EGjtJuy4B;IAAyB;IAAc;EHqtJ904B;EGrtJ+14B;IAAyB;IAAc;EHytJt44B;EGztJg54B;IAAyB;IAAc;EH6tJv74B;EG7tJw84B;IAAyB;IAAc;EHiuJ/+4B;EGjuJgg5B;IAAyB;IAAc;EHquJvi5B;EGruJij5B;IAA0B;IAAc;EHyuJzl5B;EGzuJ0m5B;IAA0B;IAAc;EH6uJlp5B;EG7uJmq5B;IAA0B;IAAc;EHivJ3s5B;AACF;AGlvJyt5B;EAA0B;IAAgH;EHsvJj25B;EGtvJk35B;IAAwB;EHyvJ145B;EGzvJs55B;IAA6B;IAAc;EH6vJj85B;EG7vJ485B;IAA0B;IAAc;EHiwJp/5B;EGjwJog6B;IAA0B;IAAc;EHqwJ5i6B;EGrwJ6j6B;IAA0B;IAAc;EHywJrm6B;EGzwJ+m6B;IAA0B;IAAc;EH6wJvp6B;EG7wJwq6B;IAA0B;IAAc;EHixJht6B;EGjxJiu6B;IAA0B;IAAc;EHqxJzw6B;EGrxJmx6B;IAA0B;IAAc;EHyxJ3z6B;EGzxJ406B;IAA0B;IAAc;EH6xJp36B;EG7xJq46B;IAA0B;IAAc;EHiyJ766B;EGjyJu76B;IAA2B;IAAc;EHqyJh+6B;EGryJi/6B;IAA2B;IAAc;EHyyJ1h7B;EGzyJ2i7B;IAA2B;IAAc;EH6yJpl7B;AACF;AG9yJkm7B;EAA0B;IAAqI;EHkzJ/v7B;EGlzJgx7B;IAAyB;EHqzJzy7B;EGrzJqz7B;IAA8B;IAAc;EHyzJj27B;EGzzJ427B;IAA2B;IAAc;EH6zJr57B;EG7zJq67B;IAA2B;IAAc;EHi0J987B;EGj0J+97B;IAA2B;IAAc;EHq0Jxg8B;EGr0Jkh8B;IAA2B;IAAc;EHy0J3j8B;EGz0J4k8B;IAA2B;IAAc;EH60Jrn8B;EG70Jso8B;IAA2B;IAAc;EHi1J/q8B;EGj1Jyr8B;IAA2B;IAAc;EHq1Jlu8B;EGr1Jmv8B;IAA2B;IAAc;EHy1J5x8B;EGz1J6y8B;IAA2B;IAAc;EH61Jt18B;EG71Jg28B;IAA4B;IAAc;EHi2J148B;EGj2J258B;IAA4B;IAAc;EHq2Jr88B;EGr2Js98B;IAA4B;IAAc;EHy2Jhg9B;AACF;AG12J8g9B;EAAsB;EAAyC;AH82J7k9B;;AG92J4n9B;EAA2B;EAA4C;AHm3Jns9B;;AGn3J+u9B;EAA8B;EAA+C;AHw3J5z9B;;AGx3Jq29B;EAA2B;EAA4C;AH63J569B;;AG73Jq99B;EAA8B;EAA+C;AHk4Jli+B;;AGl4J2k+B;EAA6B;EAA8C;AHu4Jtp+B;;AGv4J+r+B;EAA8B;EAA+C;AH44J5w+B;;AG54Jqz+B;EAAiC;EAAsB;EAAgB;AHk5J53+B;;AGl5Ji5+B;EAA8D;EAAuB;AHu5Jt++B;;AGv5Jug/B;EAA8B;AH25Jri/B;;AG35J4j/B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AHq6Jt0/B;;AGr6J61/B;EAAsC;AHy6Jn4/B;;AGz6Js+/B;EAAsB;EAA0E;AH86JtkgC;;AG96JwqgC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AHs7JhzgC;;AGt7J81gC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AHo8J34hC;;AGp8Jy7hC;EAAwH;EAAoB;EAA2C;EAAc;EAAiB;EAAgB;EAAiB;EAAkB;AH+8JlsiC;;AG/8JktiC;EAAgJ;EAAoB;EAA6C;EAAe;EAAc;AHu9Jh8iC;;AGv9J68iC;EAA4Q;EAAoB;EAA6C;EAAiB;EAAgB;AH+9J3zjC;;AG/9J40jC;EAA4Q;EAAoB;EAA6C;EAAkB;EAAgB;EAAoB;AHw+J/skC;;AGx+JkukC;EAAsB;AH4+JxvkC;;AG5+J0wkC;EAA2E;EAA8B;AHi/Jn3kC;;AGj/Jy6kC;EAA4I;EAA8B;AHs/JnllC;;AGt/JyolC;EAA4qB;EAA8B;AH2/Jn1mC;;AG3/Jw4mC;EAAqE;EAA8B;AHggK3+mC;;AGhgKkinC;EAAgI;EAA8B;AHqgKhsnC;;AGrgKwvnC;EAA2E;EAA8B;AH0gKj2nC;;AG1gKs5nC;EAA4I;EAA8B;AH+gKhkoC;;AG/gKsnoC;EAAyE;EAA8B;AHohK7toC;;AGphKmxoC;EAAwI;EAA8B;AHyhKz7oC;;AGzhK++oC;EAA2E;EAA8B;AH8hKxlpC;;AG9hK8opC;EAA4I;EAA8B;AHmiKxzpC;;AGniK82pC;EAAsB;AHuiKp4pC;;AGviKu5pC;EAAkC;AH2iKz7pC;;AG3iKs8pC;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AHojKvmqC;;AGpjKknqC;EAAa;AHwjK/nqC;;AGxjK4oqC;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AHqkKz+qC;;AGrkK2/qC;EAAiD;AHykK5irC;;AGzkK2lrC;EAAiF;AH6kK5qrC;;AG7kK2trC;EAAqE;AHilKhyrC;;AGjlK40rC;EAAiF;AHqlK75rC;;AGrlK48rC;EAA6E;AHylKzhsC;;AGzlKuksC;EAAiF;AH6lKxpsC;;AG7lKussC;EAAsB;EAAa;AHkmK1usC;;AGlmKmwsC;EAAqB;EAAkB;EAAkB;EAAoB;EAAoD;AH0mKp4sC;;AG1mK+6sC;EAAwB;AH8mKv8sC;;AG9mK4/sC;EAA6C;EAAkB;EAAkB;EAAoB;AHqnKjmtC;;AGrnK+otC;EAAqB;AHynKpqtC;;AGznK0ttC;EAAwB;AH6nKlvtC;;AG7nKwytC;EAA+C;EAAkB;EAAkB;EAAoB;AHooK/4tC;;AGpoK67tC;EAAuB;AHwoKp9tC;;AGxoKyguC;EAAwB;EAAkB;EAAkB;EAAoB;EAAqD;AHgpK9ouC;;AGhpK4ruC;EAAmB;EAA+C;AHqpK9vuC;;AGrpK0xuC;EAAkG;EAA4C;AH0pKx6uC;;AG1pKu8uC;EAA8G;EAA+C;AH+pKpmvC;;AG/pKgovC;EAAkG;EAA4C;AHoqK9wvC;;AGpqK0yvC;EAA8G;EAA+C;AHyqKv8vC;;AGzqKm+vC;EAA0G;EAA8C;AH8qK3nwC;;AG9qKupwC;EAA8G;EAA+C;AHmrKpzwC;;AGnrKg1wC;EAAyE;EAA4C;AHwrKr8wC;;AGxrKi+wC;EAA+E;EAAwD;AH6rKxmxC;;AG7rKooxC;EAAyE;EAAqD;AHksKlwxC;;AGlsK8xxC;EAA+E;EAAwD;AHusKr6xC;;AGvsKi8xC;EAA6E;EAAuD;AH4sKrkyC;;AG5sKimyC;EAA+E;EAAwD;AHitKxuyC;;AGjtKowyC;EAAiB;EAAkB;EAAkB;EAAoB;EAAoD;AHytKj4yC;;AGztK46yC;EAAoB;AH6tKh8yC;;AG7tKq/yC;EAAqC;EAAkB;EAAkB;EAAoB;AHouKllzC;;AGpuKgozC;EAAiB;AHwuKjpzC;;AGxuKuszC;EAAoB;AH4uK3tzC;;AG5uKixzC;EAAuC;EAAkB;EAAkB;EAAoB;AHmvKh3zC;;AGnvK85zC;EAAmB;AHuvKj7zC;;AGvvKs+zC;EAAoB;EAAkB;EAAkB;EAAoB;EAAqD;AH+vKvm0C;;AG/vKqp0C;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AHuwKt20C;;AGvwKk40C;EAAiB;EAA4C;EAAgD;EAA2D;AH8wK1i1C;;AG9wKyk1C;EAAoB;EAA+C;EAAmD;EAA8D;AHqxK7v1C;;AGrxKyx1C;EAAiB;EAA4C;EAAgD;EAA2D;AH4xKj81C;;AG5xK691C;EAAoB;EAA+C;EAAmD;EAA8D;AHmyKjp2C;;AGnyK6q2C;EAAmB;EAA8C;EAAkD;EAA6D;AH0yK712C;;AG1yKy32C;EAAoB;EAA+C;EAAmD;EAA8D;AHizK7i3C;;AGjzKyk3C;EAAiC;EAA6B;AHszKvo3C;;AGtzKqq3C;EAA+B;EAAgC;AH2zKpu3C;;AG3zKqw3C;EAA0B;EAAkB;AHg0Kjz3C;;AGh0Kw23C;EAA8B;EAA8B;AHq0Kp63C;;AGr0Ky93C;EAA2B;AHy0Kp/3C;;AGz0K8g4C;EAAwB;EAA0E;EAAkG;AH+0Klt4C;;AG/0Kqz4C;EAAgC;EAAsB;AHo1K324C;;AGp1Kk64C;EAAwB;EAA0E;EAAkG;AH01Ktm5C;;AG11Kys5C;EAA2B;EAA8B;AH+1Klw5C;;AG/1Kqx5C;EAAqB;EAA2G;AHo2Kr55C;;AGp2Kw/5C;EAAwC;AHw2Khi6C;;AGx2Kyn6C;EAAmB;EAA2G;AH62Kvv6C;;AG72Kg26C;EAAqB;EAA2G;EAAyG;AHm3Kzk7C;;AGn3Kkq7C;EAA8B;EAAoB;AHw3Kpt7C;;AGx3K4w7C;EAA4B;EAAoB;AH63K5z7C;;AG73Ko37C;EAA8B;AHi4Kl57C;;AGj4Kw67C;EAA0B;EAA0E;EAAkG;AHu4K9m8C;;AGv4Kit8C;EAAuC;EAAkB;AH44K1w8C;;AG54Ki08C;EAA2D;EAAsB;AHi5Kl58C;;AGj5Ks88C;EAA6B;EAAsB;AHs5Kz/8C;;AGt5K6i9C;EAAyB;EAAkB;AH25Kxl9C;;AG35K4o9C;EAAyB;EAAkB;AHg6Kvr9C;;AGh6K2u9C;EAAyB;EAAkB;AHq6Ktx9C;;AGr6K009C;EAAyB;EAAkB;AH06Kr39C;;AG16K469C;EAAwB;EAAoB;AH+6Kx99C;;AG/6Ksg+C;EAA2B;EAAoB;AHo7Krj+C;;AGp7Kmm+C;EAA2B;EAAoB;AHy7Klp+C;;AGz7K8r+C;EAAsC;EAAkB;AH87Ktv+C;;AG97K0y+C;EAAwC;EAAoB;AHm8Kt2+C;;AGn8K25+C;EAAmD;EAAkB;AHw8Kh++C;;AGx8Kuh/C;EAAyB;IAAY;EH68K1j/C;EG78Kuk/C;IAAY;EHg9Knl/C;EGh9K6l/C;IAAiB;EHm9K9m/C;EGn9K4p/C;IAAiB;EHs9K7q/C;AACF;AGv9K8t/C;EAAyB;IAAW;IAAiB;EH49Kjx/C;EG59Kmy/C;IAAW;IAAmB;EHg+Kj0/C;EGh+Ki1/C;IAAW;EHm+K51/C;EGn+K02/C;IAAY;EHs+Kt3/C;EGt+Km4/C;IAAU;EHy+K74/C;EGz+K05/C;IAAiB;EH4+K36/C;EG5+Ky9/C;IAAiB;EH++K1+/C;EG/+KwhgD;IAAc;EHk/KtigD;EGl/KyjgD;IAAc;EHq/KvkgD;EGr/K6lgD;IAAW;IAAkB;EHy/K1ngD;EGz/K6ogD;IAAiB;EH4/K9pgD;EG5/KgrgD;IAAc;IAAkB;EHggLhtgD;EGhgL8tgD;IAAc;IAAiB;EHogL7vgD;AACF;AGrgLixgD;EAA0B;IAAU;EHygLnzgD;EGzgLg0gD;IAAU;EH4gL10gD;EG5gL01gD;IAAiB;EH+gL32gD;EG/gLy5gD;IAAiB;EHkhL16gD;EGlhLw9gD;IAAc;EHqhLt+gD;EGrhLy/gD;IAAe;EHwhLxghD;AACF;AGzhL2hhD;EAA0B;IAAU;EH6hL7jhD;EG7hLykhD;IAAW;IAAkB;EHiiLtmhD;EGjiLynhD;IAAc;IAAiB;EHqiLxphD;EGriLsqhD;IAAc;IAAmB;EHyiLvshD;AACF,EI1iLA;AAAgE;EAAiB;EAAuB;AJ8iLxG;;AI9iL8H;EAAe;AJkjL7I;;AIljL6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AJ4jL5c;;AI5jLud;EAAK;EAAoB;AJikLhf;;AIjkLyf;EAAG;EAAqB;EAAc;AJukL/hB;;AIvkLwiB;EAAoB;EAAyC;AJ4kLrmB;;AI5kLsoB;EAAkB;EAAkB;AJilL1qB;;AIjlL8rB;EAAE;EAAc;AJslL9sB;;AItlLsuB;EAAS;AJ0lL/uB;;AI1lLkwB;EAAkB;EAAoG;AJ+lLx3B;;AI/lLs4B;EAAM;AJmmL54B;;AInmL05B;EAAQ;EAAc;EAAc;EAAkB;AJ0mLh9B;;AI1mLw+B;EAAI;AJ8mL5+B;;AI9mL0/B;EAAI;AJknL9/B;;AIlnLwgC;EAAM;EAAyB;EAAqB;AJwnL5jC;;AIxnL0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AJkoLltC;;AIloL4tC;EAAc;AJsoL1uC;;AItoL8vC;EAAgD;EAA0B;EAA6B;AJ4oLr2C;;AI5oL23C;EAAgB;AJgpL34C;;AIhpLw5C;EAAiB;AJopLz6C;;AIppLy7C;EAAS;AJwpLl8C;;AIxpL09C;EAAwD;AJ4pLlhD;;AI5pL8hD;EAAc;EAA6B;AJiqLzkD;;AIjqL6lD;EAA4B;AJqqLznD;;AIrqLipD;EAA6B;EAA0B;AJ0qLxsD;;AI1qLqtD;EAAQ;AJ8qL7tD;;AI9qL+uD;EAAmD;AJkrLlyD;;AIlrL2yD;EAAS;AJsrLpzD;;AItrL6zD;EAAgB;AJ0rL70D;;AI1rLu1D;EAAW;EAAgB;EAAS;AJgsL33D;;AIhsLq4D;EAAS;AJosL94D;;AIpsL85D;EAAmD;EAAc;AJysL/9D;;AIzsLy+D;EAAyC;EAAc;AJ8sLhiE;;AI9sL0iE;EAAqB;AJktL/jE;;AIltL8kE;EAAU;AJstLxlE;;AIttLumE;EAA+C;EAAc;AJ2tLpqE;;AI3tL0rE;EAAU;EAAY;AJguLhtE;;AIhuL+tE;EAAS;AJouLxuE;;AIpuLqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJmxLjpG;;AInxLuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJk0L7jI;;AIl0LmlI;EAAW;AJs0L9lI;;AIt0LymI;EAAyB;IAAW;EJ20L3oI;AACF;AI50L8pI;EAAyB;IAAW;EJg1LhsI;AACF;AIj1LmtI;EAA0B;IAAW;EJq1LtvI;AACF;AIt1L0wI;EAA0B;IAAW;EJ01L7yI;AACF;AI31Li0I;EAA0B;IAAW;EJ+1Lp2I;AACF;AIh2Lw3I;EAA0B;IAAW;EJo2L35I;AACF;AIr2L+6I;EAAS;AJw2Lx7I;;AIx2L28I;EAAW;AJ42Lt9I;;AI52Lw+I;EAAQ;AJg3Lh/I;;AIh3LggJ;EAAO;AJo3LvgJ;;AIp3LshJ;EAAU;AJw3LhiJ;;AIx3LkjJ;EAAU;AJ43L5jJ;;AI53L8kJ;EAAS;EAAS;EAAO;EAAQ;AJm4L/mJ;;AIn4LqnJ;EAAQ;AJu4L7nJ;;AIv4LwoJ;EAAQ;AJ24LhpJ;;AI34LupJ;EAAS;AJ+4LhqJ;;AI/4LwqJ;EAAS;AJm5LjrJ;;AIn5L4rJ;EAAW;AJu5LvsJ;;AIv5LmtJ;EAAO;AJ25L1tJ;;AI35LguJ;EAAO;AJ+5LvuJ;;AI/5LgvJ;EAAS;AJm6LzvJ;;AIn6LmwJ;EAAQ;AJu6L3wJ;;AIv6LoxJ;EAAQ;AJ26L5xJ;;AI36LqyJ;EAAU;AJ+6L/yJ;;AI/6L4zJ;EAAS;AJm7Lr0J;;AIn7Lm1J;EAAU;AJu7L71J;;AIv7L42J;EAAgB;AJ27L53J;;AI37Lu4J;EAAM;AJ+7L74J;;AI/7Lw5J;EAAM;AJm8L95J;;AIn8Ly6J;EAAM;AJu8L/6J;;AIv8L07J;EAAK;AJ28L/7J;;AI38Ly8J;EAAK;AJ+8L98J;;AI/8L49J;EAAK;AJm9Lj+J;;AIn9L0+J;EAAK;AJu9L/+J;;AIv9L4/J;EAAO;EAAmB;AJ49LthK;;AI59LsiK;EAAS;EAAiB;AJi+LhkK;;AIj+LklK;EAAO;EAAiB;AJs+L1mK;;AIt+L4nK;EAAM;EAAoB;AJ2+LtpK;;AI3+LuqK;EAAM;EAAgB;AJg/L7rK;;AIh/L0sK;EAAM;EAAqB;AJq/LruK;;AIr/LuvK;EAAM;EAAiB;AJ0/L9wK;;AI1/LgyK;EAAM;EAAmB;AJ+/LzzK;;AI//Ly0K;EAAM;EAAkB;AJogMj2K;;AIpgMo3K;EAAQ;EAA+B;AJygM35K;;AIzgMu7K;EAAM;EAAmB;AJ8gMh9K;;AI9gMo+K;EAAQ;EAA6B;AJmhMzgL;;AInhMuiL;EAAO;AJuhM9iL;;AIvhMikL;EAAO;AJ2hMxkL;;AI3hMwlL;EAAO;AJ+hM/lL;;AI/hMknL;EAAM;AJmiMxnL;;AIniM2oL;EAAM;AJuiMjpL;;AIviMmqL;EAAM;AJ2iMzqL;;AI3iM6rL;EAAM;AJ+iMnsL;;AI/iMqtL;EAAM;AJmjM3tL;;AInjM2uL;EAAM;AJujMjvL;;AIvjMowL;EAAM;AJ2jM1wL;;AI3jM4xL;EAAM;AJ+jMlyL;;AI/jMmzL;EAAM;AJmkMzzL;;AInkM80L;EAAM;AJukMp1L;;AIvkMw2L;EAAM;AJ2kM92L;;AI3kMi4L;EAAM;AJ+kMv4L;;AI/kMo5L;EAAM;AJmlM15L;;AInlM86L;EAAM;AJulMp7L;;AIvlMs8L;EAAM;AJ2lM58L;;AI3lM89L;EAAM;AJ+lMp+L;;AI/lMk/L;EAAM;AJmmMx/L;;AInmMugM;EAAM;AJumM7gM;;AIvmMgiM;EAAO;AJ2mMviM;;AI3mMyjM;EAAO;AJ+mMhkM;;AI/mMmlM;EAAO;AJmnM1lM;;AInnM6mM;EAAM;AJunMnnM;;AIvnMooM;EAAO;AJ2nM3oM;;AI3nM6pM;EAAM;AJ+nMnqM;;AI/nMwrM;EAAO;AJmoM/rM;;AInoM6sM;EAAS;AJuoMttM;;AIvoM8uM;EAAc;AJ2oM5vM;;AI3oMixM;EAAM;AJ+oMvxM;;AI/oMoyM;EAAQ;AJmpM5yM;;AInpMm0M;EAAa;AJupMh1M;;AIvpMo2M;EAAO;AJ2pM32M;;AI3pMy3M;EAAY;AJ+pMr4M;;AI/pMw5M;EAAoB;AJmqM56M;;AInqMu8M;EAAiB;AJuqMx9M;;AIvqMg/M;EAAW;AJ2qM3/M;;AI3qM6gN;EAAM;AJ+qMnhN;;AI/qMgiN;EAAU;AJmrM1iN;;AInrM2jN;EAAQ;AJurMnkN;;AIvrMglN;EAAM;AJ2rMtlN;;AI3rMmmN;EAAQ;AJ+rM3mN;;AI/rMunN;EAAK;AJmsM5nN;;AInsMwoN;EAAM;AJusM9oN;;AIvsM0pN;EAAM;AJ2sMhqN;;AI3sM4qN;EAAM;AJ+sMlrN;;AI/sM+rN;EAAM;AJmtMrsN;;AIntMktN;EAAK;AJutMvtN;;AIvtMquN;EAAM;AJ2tM3uN;;AI3tMwvN;EAAM;AJ+tM9vN;;AI/tM2wN;EAAM;AJmuMjxN;;AInuM6xN;EAAM;AJuuMnyN;;AIvuMizN;EAAM;AJ2uMvzN;;AI3uMs0N;EAAK;AJ+uM30N;;AI/uMw1N;EAAM;AJmvM91N;;AInvM02N;EAAO;EAAwB;AJwvMz4N;;AIxvM45N;EAAa;AJ4vMz6N;;AI5vMs7N;EAAU;AJgwMh8N;;AIhwMi9N;EAAQ;AJowMz9N;;AIpwMo+N;EAAK;AJwwMz+N;;AIxwMo/N;EAAM;AJ4wM1/N;;AI5wMqgO;EAAM;AJgxM3gO;;AIhxMshO;EAAO;EAAuB;AJqxMpjO;;AIrxMskO;EAAK;AJyxM3kO;;AIzxMwlO;EAAK;AJ6xM7lO;;AI7xM0mO;EAAK;AJiyM/mO;;AIjyM2nO;EAAQ;AJqyMnoO;;AIryM8oO;EAAM;AJyyMppO;;AIzyMgqO;EAAM;AJ6yMtqO;;AI7yMkrO;EAAM;AJizMxrO;;AIjzMmsO;EAAM;AJqzMzsO;;AIrzMqtO;EAAM;AJyzM3tO;;AIzzMuuO;EAAM;AJ6zM7uO;;AI7zMyvO;EAAmB;EAAuB;AJk0MnyO;;AIl0MqzO;EAAa;AJs0Ml0O;;AIt0M80O;EAAQ;AJ00Mt1O;;AI10M22O;EAAc;AJ80Mz3O;;AI90Mk5O;EAAQ;AJk1M15O;;AIl1Ms6O;EAAa;AJs1Mn7O;;AIt1Mi8O;EAAW;AJ01M58O;;AI11Mw9O;EAAW;AJ81Mn+O;;AI91Mq/O;EAAsB;AJk2M3gP;;AIl2MysP;EAAQ;AJs2MjtP;;AIt2M6tP;EAAW;AJ02MxuP;;AI12M6vP;EAAiB;EAAwB;EAAqB;AJg3M3zP;;AIh3M20P;EAAe;AJo3M11P;;AIp3M62P;EAAa;AJw3M13P;;AIx3Mw6P;EAAU;AJ43Ml7P;;AI53Mq8P;EAAkB;AJg4Mv9P;;AIh4Mk/P;EAAU;AJo4M5/P;;AIp4MkhQ;EAAW;AJw4M7hQ;;AIx4M4iQ;EAAa;AJ44MzjQ;;AI54M0kQ;EAAgB;AJg5M1lQ;;AIh5M+mQ;EAAiB;AJo5MhoQ;;AIp5M4pQ;EAAgB;AJw5M5qQ;;AIx5MusQ;EAAa;AJ45MptQ;;AI55M2uQ;EAAW;AJg6MtvQ;;AIh6M2wQ;EAAc;AJo6MzxQ;;AIp6M4yQ;EAAe;AJw6M3zQ;;AIx6Ms1Q;EAAa;AJ46Mn2Q;;AI56M43Q;EAAgB;AJg7M54Q;;AIh7Mm6Q;EAAiB;AJo7Mp7Q;;AIp7Mk9Q;EAAmB;AJw7Mr+Q;;AIx7M6gR;EAAgB;AJ47M7hR;;AI57M0jR;EAAQ;AJg8MlkR;;AIh8M2kR;EAAO;AJo8MllR;;AIp8M2lR;EAAO;AJw8MlmR;;AIx8M6mR;EAAO;AJ48MpnR;;AI58M8nR;EAAyC;EAAuB;EAAqD;AJk9MnvR;;AIl9M2yR;EAAwC;EAAwB;EAAyD;AJw9Mp6R;;AIx9Mg+R;EAA+C;EAAsB;AJ69MriS;;AI79M4lS;EAAiB;AJi+M7mS;;AIj+M6nS;EAAiB;AJq+M9oS;;AIr+M8pS;EAAmB;AJy+MjrS;;AIz+MmsS;EAAmB;AJ6+MttS;;AI7+MwuS;EAAmB;AJi/M3vS;;AIj/M6wS;EAAU;EAAgB;EAAuB;AJu/M9zS;;AIv/Mi1S;EAAmB;AJ2/Mp2S;;AI3/Mu3S;EAAmB;AJ+/M14S;;AI//M65S;EAAqB;AJmgNl7S;;AIngNu8S;EAAqB;AJugN59S;;AIvgNi/S;EAAY;AJ2gN7/S;;AI3gNmhT;EAAS;AJ+gN5hT;;AI/gNijT;EAAY;AJmhN7jT;;AInhNilT;EAAc;AJuhN/lT;;AIvhNonT;EAAc;AJ2hNloT;;AI3hNkpT;EAAa;AJ+hN/pT;;AI/hNkrT;EAAY;AJmiN9rT;;AIniNmtT;EAAa;AJuiNhuT;;AIviNqvT;EAAY;AJ2iNjwT;;AI3iNuxT;EAAgB;EAA6B;AJgjNp0T;;AIhjN81T;EAAc;EAAkC;AJqjN94T;;AIrjNi7T;EAAU;AJyjN37T;;AIzjN48T;EAAQ;AJ6jNp9T;;AI7jNq+T;EAAU;AJikN/+T;;AIjkN8/T;EAAY;AJqkN1gU;;AIrkNkiU;EAAY;AJykN9iU;;AIzkNmkU;EAAU;AJ6kN7kU;;AI7kNqmU;EAAU;AJilN/mU;;AIjlNooU;EAAY;AJqlNhpU;;AIrlNuqU;EAAY;AJylNnrU;;AIzlNysU;EAAc;AJ6lNvtU;;AI7lN0uU;EAAa;AJimNvvU;;AIjmNywU;EAAiB;EAAsB;AJsmNhzU;;AItmNu2U;EAAmB;EAAsB;AJ2mNh5U;;AI3mNq8U;EAA6B;EAAsB;AJgnNx/U;;AIhnN8iV;EAAiB;EAAsB;AJqnNrlV;;AIrnN4oV;EAAiB;EAAsB;AJ0nNnrV;;AI1nN0uV;EAAgB;EAAsB;AJ+nNhxV;;AI/nNq0V;EAAoB;AJmoNz1V;;AInoNk3V;EAA4B;EAAsB;AJwoNp6V;;AIxoNw9V;EAAU;EAAkB;AJ6oNp/V;;AI7oN2iW;EAAc;EAAkB;AJkpN3kW;;AIlpNgoW;EAAc;EAAkB;AJupNhqW;;AIvpNqtW;EAAY;EAAkB;AJ4pNnvW;;AI5pN0yW;EAAa;EAAkB;AJiqNz0W;;AIjqNg4W;EAAa;EAAkB;AJsqN/5W;;AItqNs9W;EAAgB;AJ0qNt+W;;AI1qNmgX;EAAc;EAAkB;AJ+qNniX;;AI/qNulX;EAAa;EAAkB;AJorNtnX;;AIprN0qX;EAAa;EAAkB;AJyrNzsX;;AIzrNgwX;EAAmB;AJ6rNnxX;;AI7rN21X;EAAkB;AJisN72X;;AIjsNi7X;EAAmB;AJqsNp8X;;AIrsN+gY;EAA6B;EAA2B;EAAoC;AJ2sN3mY;;AI3sN6qY;EAAc;EAA2B;EAAqC;AJitN3vY;;AIjtN6zY;EAA2B;EAA2B;EAAoC;AJutNv5Y;;AIvtNy9Y;EAAW;EAAmC;AJ4tNvgZ;;AI5tN8kZ;EAAc;EAAqC;AJiuNjoZ;;AIjuN2sZ;EAAwB;AJquNnuZ;;AIruN4vZ;EAAY;AJyuNxwZ;;AIzuNgyZ;EAAc;AJ6uN9yZ;;AI7uNg0Z;EAAgB;EAAsB;AJkvNt2Z;;AIlvNy3Z;EAAc;EAAoB;AJuvN35Z;;AIvvN46Z;EAAe;EAA0B;AJ4vNr9Z;;AI5vN4+Z;EAAK;AJgwNj/Z;;AIhwN+/Z;EAAK;AJowNpga;;AIpwN8ga;EAAK;AJwwNnha;;AIxwNkia;EAAK;AJ4wNvia;;AI5wNsja;EAAK;AJgxN3ja;;AIhxNwka;EAAK;AJoxN7ka;;AIpxN4la;EAAQ;AJwxNpma;;AIxxNona;EAAM;EAAoB;AJ6xN9oa;;AI7xNmqa;EAAO;EAAoB;AJkyN9ra;;AIlyN+sa;EAAM;EAAqB;AJuyN1ua;;AIvyNgwa;EAAM;EAAsB;AJ4yN5xa;;AI5yN+ya;EAAQ;EAAgC;AJizNv1a;;AIjzNo3a;EAAQ;EAAyB;AJszNr5a;;AItzN+6a;EAAM;EAAqB;AJ2zN18a;;AI3zN49a;EAAM;EAAoB;AJg0Nt/a;;AIh0N2gb;EAAM;EAAoB;AJq0Nrib;;AIr0N0jb;EAAQ;EAA8B;AJ00Nhmb;;AI10N2nb;EAAM;EAAmB;AJ+0Nppb;;AI/0Nwqb;EAAM;EAAkB;AJo1Nhsb;;AIp1Nmtb;EAAM;EAAqB;AJy1N9ub;;AIz1Nowb;EAAM;EAAoB;AJ81N9xb;;AI91N+yb;EAAM;EAAe;AJm2Np0b;;AIn2No1b;EAAM;EAAsB;AJw2Nh3b;;AIx2Nm4b;EAAQ;EAA8B;AJ62Nz6b;;AI72Nw8b;EAAM;EAAiB;AJk3N/9b;;AIl3N6+b;EAAM;AJs3Nn/b;;AIt3Nugc;EAAM;AJ03N7gc;;AI13Ngic;EAAM;AJ83Ntic;;AI93Nyjc;EAAM;AJk4N/jc;;AIl4Nilc;EAAM;AJs4Nvlc;;AIt4N4mc;EAAM;AJ04Nlnc;;AI14Nyoc;EAAM;AJ84N/oc;;AI94Nkqc;EAAM;AJk5Nxqc;;AIl5N4rc;EAAM;AJs5Nlsc;;AIt5Nitc;EAAM;AJ05Nvtc;;AI15N2uc;EAAW;AJ85Ntvc;;AI95Nswc;EAAa;AJk6Nnxc;;AIl6Nqyc;EAAe;AJs6Npzc;;AIt6Ng1c;EAAY;AJ06N51c;;AI16N62c;EAAc;AJ86N33c;;AI96Ns5c;EAAc;AJk7Np6c;;AIl7N07c;EAAY;AJs7Nt8c;;AIt7Nugd;EAAS;EAAkB;AJ27Nlid;;AI37Nsjd;EAAU;EAAe;AJg8N/kd;;AIh8N6ld;EAAS;AJo8Ntmd;;AIp8Nwnd;EAAkB;AJw8N1od;;AIx8N8pd;EAAS;AJ48Nvqd;;AI58N0rd;EAAW;EAAe;AJi9Nptd;;AIj9Nuud;EAAU;EAAmB;AJs9Npwd;;AIt9Nwxd;EAAS;EAAiB;AJ29Nlzd;;AI39Nm0d;EAAkB;AJ+9Nr1d;;AI/9Ns2d;EAAmB;AJm+Nz3d;;AIn+N24d;EAAa;AJu+Nx5d;;AIv+Nw6d;EAAW;AJ2+Nn7d;;AI3+Nm8d;EAAe;AJ++Nl9d;;AI/+Nk+d;EAAa;AJm/N/+d;;AIn/N+/d;EAAY;AJu/N3ge;;AIv/N2he;EAAW;AJ2/Ntie;;AI3/N+je;EAAY;AJ+/N3ke;;AI//Nqme;EAAQ;AJmgO7me;;AIngO+ne;EAAc;AJugO7oe;;AIvgO+pe;EAAe;AJ2gO9qe;;AI3gO+re;EAAgB;AJ+gO/se;;AI/gOsue;EAAe;AJmhOrve;;AInhO2we;EAAiB;EAA8B;AJwhO1ze;;AIxhO+2e;EAAe;EAAoB;AJ6hOl5e;;AI7hO67e;EAAY;EAAoB;AJkiO79e;;AIliO2gf;EAAgB;EAA8B;AJuiOzjf;;AIviOinf;EAAiB;EAAoB;AJ4iOtpf;;AI5iOksf;EAAY;EAAoB;AJijOluf;;AIjjO0wf;EAAc;EAAoB;AJsjO5yf;;AItjOw1f;EAAiB;EAAoB;AJ2jO73f;;AI3jOy6f;EAAe;EAAoB;AJgkO58f;;AIhkO0/f;EAAe;EAAoB;AJqkO7hgB;;AIrkOykgB;EAAgB;EAAoB;AJ0kO7mgB;;AI1kOypgB;EAAc;EAAoB;AJ+kO3rgB;;AI/kOuugB;EAAe;EAAoB;AJolO1wgB;;AIplOwzgB;EAAgB;EAAoB;AJylO51gB;;AIzlOw4gB;EAAc;EAAoB;AJ8lO16gB;;AI9lOw9gB;EAAe;EAAoB;AJmmO3/gB;;AInmOsihB;EAAe;EAAoB;AJwmOzkhB;;AIxmOonhB;EAA0B;EAAoB;AJ6mOlqhB;;AI7mO6shB;EAAiB;EAAoB;AJknOlvhB;;AIlnO+xhB;EAAiB;EAAoB;AJunOp0hB;;AIvnOg3hB;EAAgB;EAAoB;AJ4nOp5hB;;AI5nOg8hB;EAA2B;EAAoB;AJioO/+hB;;AIjoO4hiB;EAAe;EAAoB;AJsoO/jiB;;AItoO2miB;EAAe;EAAoB;AJ2oO9oiB;;AI3oO2riB;EAAiB;EAAoB;AJgpOhuiB;;AIhpO6wiB;EAAmB;EAAoB;AJqpOpziB;;AIrpOg2iB;EAAW;AJypO32iB;;AIzpO04iB;EAAc;AJ6pOx5iB;;AI7pOk7iB;EAAW;AJiqO77iB;;AIjqOu8iB;EAAW;EAAwE;AJsqO1hjB;;AItqO0njB;EAAsB;AJ0qOhpjB;;AI1qOmvjB;EAAW;EAA0E;AJ+qOx0jB;;AI/qO06jB;EAAQ;EAAqE;AJorOv/jB;;AIprOolkB;EAAmB;AJwrOvmkB;;AIxrO0skB;EAAW;EAAwC;AJ6rO7vkB;;AI7rOozkB;EAAW;EAA2E;AJksO14kB;;AIlsO6+kB;EAAyB;AJssOtglB;;AItsOymlB;EAAc;EAA8C;AJ2sOrqlB;;AI3sOkulB;EAAa;EAAsB;EAA8B;AJitOnylB;;AIjtOs4lB;EAAc;EAA8B;AJstOl7lB;;AIttOq8lB;EAAQ;EAA2G;AJ2tOxjmB;;AI3tO2pmB;EAAc;AJ+tOzqmB;;AI/tOkwmB;EAAM;EAA2G;AJouOn3mB;;AIpuO49mB;EAA2B;EAAoB;AJyuO3gnB;;AIzuOkknB;EAAM;AJ6uOxknB;;AI7uO4lnB;EAAc;AJivO1mnB;;AIjvO2xnB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AJyvO1woB;;AIzvO6zoB;EAAoB;EAA4B;AJ8vO72oB;;AI9vOg6oB;EAAkC;AJkwOl8oB;;AIlwO29oB;EAAc;AJswOz+oB;;AItwOigpB;EAAa;AJ0wO9gpB;;AI1wOikpB;EAAW;AJ8wO5kpB;;AI9wOimpB;EAAsB;AJkxOvnpB;;AIlxO0opB;EAAkC;AJsxO5qpB;;AItxOyrpB;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AJ+xO11pB;;AI/xOq2pB;EAAa;AJmyOl3pB;;AInyO+3pB;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AJgzO5tqB;;AIhzO8uqB;EAAiD;AJozO/xqB;;AIpzO80qB;EAAiF;AJwzO/5qB;;AIxzO88qB;EAAqE;AJ4zOnhrB;;AI5zO+jrB;EAAiF;AJg0OhprB;;AIh0O+rrB;EAA6E;AJo0O5wrB;;AIp0O0zrB;EAAiF;AJw0O34rB;;AIx0O07rB;EAAsB;EAAa;AJ60O79rB;;AI70Os/rB;EAAqB;EAAkB;EAAkB;EAAoB;EAAoD;AJq1OvnsB;;AIr1OkqsB;EAAwB;AJy1O1rsB;;AIz1O+usB;EAA6C;EAAkB;EAAkB;EAAoB;AJg2Op1sB;;AIh2Ok4sB;EAAqB;AJo2Ov5sB;;AIp2O68sB;EAAwB;AJw2Or+sB;;AIx2O2htB;EAA+C;EAAkB;EAAkB;EAAoB;AJ+2OlotB;;AI/2OgrtB;EAAuB;AJm3OvstB;;AIn3O4vtB;EAAwB;EAAkB;EAAkB;EAAoB;EAAqD;AJ23Oj4tB;;AI33O+6tB;EAAmB;EAA+C;AJg4Oj/tB;;AIh4O6guB;EAAkG;EAA4C;AJq4O3puB;;AIr4O0ruB;EAA8G;EAA+C;AJ04Ov1uB;;AI14Om3uB;EAAkG;EAA4C;AJ+4OjgvB;;AI/4O6hvB;EAA8G;EAA+C;AJo5O1rvB;;AIp5OstvB;EAA0G;EAA8C;AJy5O92vB;;AIz5O04vB;EAA8G;EAA+C;AJ85OviwB;;AI95OmkwB;EAAyE;EAA4C;AJm6OxrwB;;AIn6OotwB;EAA+E;EAAwD;AJw6O31wB;;AIx6Ou3wB;EAAyE;EAAqD;AJ66Or/wB;;AI76OihxB;EAA+E;EAAwD;AJk7OxpxB;;AIl7OorxB;EAA6E;EAAuD;AJu7OxzxB;;AIv7Oo1xB;EAA+E;EAAwD;AJ47O39xB;;AI57Ou/xB;EAAiB;EAAkB;EAAkB;EAAoB;EAAoD;AJo8OpnyB;;AIp8O+pyB;EAAoB;AJw8OnryB;;AIx8OwuyB;EAAqC;EAAkB;EAAkB;EAAoB;AJ+8Or0yB;;AI/8Om3yB;EAAiB;AJm9Op4yB;;AIn9O07yB;EAAoB;AJu9O98yB;;AIv9OogzB;EAAuC;EAAkB;EAAkB;EAAoB;AJ89OnmzB;;AI99OipzB;EAAmB;AJk+OpqzB;;AIl+OytzB;EAAoB;EAAkB;EAAkB;EAAoB;EAAqD;AJ0+O11zB;;AI1+Ow4zB;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AJk/Ozl0B;;AIl/Oqn0B;EAAiB;EAA4C;EAAgD;EAA2D;AJy/O7x0B;;AIz/O4z0B;EAAoB;EAA+C;EAAmD;EAA8D;AJggPh/0B;;AIhgP4g1B;EAAiB;EAA4C;EAAgD;EAA2D;AJugPpr1B;;AIvgPgt1B;EAAoB;EAA+C;EAAmD;EAA8D;AJ8gPp41B;;AI9gPg61B;EAAmB;EAA8C;EAAkD;EAA6D;AJqhPhl2B;;AIrhP4m2B;EAAoB;EAA+C;EAAmD;EAA8D;AJ4hPhy2B;;AI5hP4z2B;EAAiC;EAA6B;AJiiP132B;;AIjiPw52B;EAA+B;EAAgC;AJsiPv92B;;AItiPw/2B;EAA0B;EAAkB;AJ2iPpi3B;;AI3iP2l3B;EAA8B;EAA8B;AJgjPvp3B;;AIhjP4s3B;EAA2B;AJojPvu3B;;AIpjPiw3B;EAAwB;EAA0E;EAAkG;AJ0jPr83B;;AI1jPwi4B;EAAgC;EAAsB;AJ+jP9l4B;;AI/jPqp4B;EAAwB;EAA0E;EAAkG;AJqkPz14B;;AIrkP474B;EAA2B;EAA8B;AJ0kPr/4B;;AI1kPwg5B;EAAqB;EAA2G;AJ+kPxo5B;;AI/kP2u5B;EAAwC;AJmlPnx5B;;AInlP425B;EAAmB;EAA2G;AJwlP1+5B;;AIxlPml6B;EAAqB;EAA2G;EAAyG;AJ8lP5z6B;;AI9lPq56B;EAA8B;EAAoB;AJmmPv86B;;AInmP+/6B;EAA4B;EAAoB;AJwmP/i7B;;AIxmPum7B;EAA8B;AJ4mPro7B;;AI5mP2p7B;EAA0B;EAA0E;EAAkG;AJknPj27B;;AIlnPo87B;EAAuC;EAAkB;AJunP7/7B;;AIvnPoj8B;EAA2D;EAAsB;AJ4nPro8B;;AI5nPyr8B;EAA6B;EAAsB;AJioP5u8B;;AIjoPgy8B;EAAyB;EAAkB;AJsoP308B;;AItoP+38B;EAAyB;EAAkB;AJ2oP168B;;AI3oP898B;EAAyB;EAAkB;AJgpPzg9B;;AIhpP6j9B;EAAyB;EAAkB;AJqpPxm9B;;AIrpP+p9B;EAAwB;EAAoB;AJ0pP3s9B;;AI1pPyv9B;EAA2B;EAAoB;AJ+pPxy9B;;AI/pPs19B;EAA2B;EAAoB;AJoqPr49B;;AIpqPi79B;EAAsC;EAAkB;AJyqPz+9B;;AIzqP6h+B;EAAwC;EAAoB;AJ8qPzl+B;;AI9qP8o+B;EAAmD;EAAkB;AJmrPnt+B;;AInrP0w+B;EAAyB;IAAY;EJwrP7y+B;EIxrP0z+B;IAAY;EJ2rPt0+B;EI3rPg1+B;IAAiB;EJ8rPj2+B;EI9rP+4+B;IAAiB;EJisPh6+B;AACF;AIlsPi9+B;EAAyB;IAAW;IAAiB;EJusPpg/B;EIvsPsh/B;IAAW;IAAmB;EJ2sPpj/B;EI3sPok/B;IAAW;EJ8sP/k/B;EI9sP6l/B;IAAY;EJitPzm/B;EIjtPsn/B;IAAU;EJotPho/B;EIptP6o/B;IAAiB;EJutP9p/B;EIvtP4s/B;IAAiB;EJ0tP7t/B;EI1tP2w/B;IAAc;EJ6tPzx/B;EI7tP4y/B;IAAc;EJguP1z/B;EIhuPg1/B;IAAW;IAAkB;EJouP72/B;EIpuPg4/B;IAAiB;EJuuPj5/B;EIvuPm6/B;IAAc;IAAkB;EJ2uPn8/B;EI3uPi9/B;IAAc;IAAiB;EJ+uPh//B;AACF;AIhvPoggC;EAA0B;IAAU;EJovPtigC;EIpvPmjgC;IAAU;EJuvP7jgC;EIvvP6kgC;IAAiB;EJ0vP9lgC;EI1vP4ogC;IAAiB;EJ6vP7pgC;EI7vP2sgC;IAAc;EJgwPztgC;EIhwP4ugC;IAAe;EJmwP3vgC;AACF;AIpwP8wgC;EAA0B;IAAU;EJwwPhzgC;EIxwP4zgC;IAAW;IAAkB;EJ4wPz1gC;EI5wP42gC;IAAc;IAAiB;EJgxP34gC;EIhxPy5gC;IAAc;IAAmB;EJoxP17gC;AACF;AAjxPA;AKiEE;ECmQE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;APiuPJ;;AKtuPE;EEPI;ECZF;EDwBA;EAZE;ECZF;EDwBA;EE8QA,iBA3RU;EA4RV;EAQA,iCAnSW;EJ6BT;EACA;EACA;EACA;EACA;AL6tPN;;ASziPE;EFrNI;ECZF;EDwBA;APwvPJ;;AUtvPM;EACE;EHfF;ECZF;EDwBA;EEmNI;EC9MA;AV4vPR;;ASziPE;EFpOI;ECZF;EDwBA;APuwPJ;;AUrwPM;EACE;EHfF;ECZF;EDwBA;EEkOI;EC7NA;AV2wPR;;ASziPE;EFnPI;ECZF;EDwBA;APsxPJ;;AUpxPM;EACE;EHfF;ECZF;EDwBA;EEmPI;EC9OA;AV0xPR;;ASviPE;EFpQI;ECZF;EDwBA;APqyPJ;;AUnyPM;EACE;EHfF;ECZF;EDwBA;EEoQI;EC/PA;AVyyPR;;ASxvPE;EFtDE;APkzPJ;;AStwPE;EFxDI;ECZF;EDwBA;APwzPJ;;ASxvPE;EFhEE;AP4zPJ;;AW1wPE;;;EJlDE;APk0PJ;;ASnuPE;;EAGI,wCA9HU;ATm2PhB;;ASjuPE;EAEI,qCApIU;ATu2PhB;;AS3tPE;;EAGI,wBA9IS;EA+IT;AT6tPN;;ASztPE;EAEI,qBArJS;EAsJT;AT2tPN;;ASvtPE;EAEI;ATytPN;;ASjtPE;EFzIE;AP81PJ;;AS3sPE;EFnJE;APk2PJ;;ASjsPE;;;EFjKE;APw2PJ;;AShkPE;EAEI,YAkHK;ATg9OX;;AS9jPE;EAEI,gBA4GK;ATo9OX;;ASllPE;EAEI,YAmIuB;ATi9O7B;;AS1iPE;;EAGI;AT4iPN;;AS9gPE;;ED9XE;EDmBA;ECnBA;EDmBA;APi4PJ;;AU/3PM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVq4PR;;AKp0PE;EAGI;EACA;EACA;ALq0PN;;AKj0PE;EAEI;EACA;EACA;EACA;EACA;;;;;IAAA;EAMA;ALm0PN;;AYx8PE;ENoSE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EKtCE;EACA;EACA;EACA;AZ+9PN;;AU17PM;EACE;EFtBJ;EIZI;EFoCA;AV87PR;;AY79PE;EAEI;AZ+9PN;;AUr8PM;EACE;EFtBJ;EICI;EFuBA;AVy8PR;;AY39PE;EAYE;AZm9PJ;;Aav/PE;EP+RE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EMjCE;EACA;EACA;EACA;ELWF;EKRE;Ab6gQN;;AUh/PM;EACE;EFtBJ;EKJI;EH4BA;AVo/PR;;Aa3gQE;EDiBE;AZ8/PJ;;Aa3gQE;EAEI;Ab6gQN;;AU//PM;EACE;EFtBJ;EKaI;EHWA;AVmgQR;;AazgQE;ECsEE,WAnBK;EAoBL,YApBK;EAqBL;EDhEE;EL1BF;EDmBA;ECnBA;EDmBA;EMqBE;EAUA;Abs/PN;;Ac38PE;EAEI;Ad68PN;;Acx8PI;EAUI;EACA,gBA1CC;EA2CD,eA3CC;Ad6+PT;;Ae/gQI;EDiEA;IEzFA;IACA;IACA;IACA;IACA;IACA;IRhBA;IQkBA;IRlBA;IQoBA;IACA,YA3BwB;IA4BxB,WAtB0B;EhBkkQ5B;AACF;AehiQI;EDiEA;IE3EE;EhB8iQJ;AACF;AeriQI;ECPA;IACE;IACA;IACA,kBAhEgB;IAiEhB;IACA;IACA;IRlCF;IQoCE;IRpCF;IQsCE;IACA,wBA/BgB;IAgChB,uBAhCgB;EhB+kQpB;AACF;AerjQI;ECPA;IAeI;EhBijQN;AACF;Ac/9PI;EAEI,WA3DC;EA4DD,YA5DC;EG3BL,eAHsB;EAItB,kBAJsB;EAcpB,iBANwB;EAOxB,gBAPwB;AjBsjQ9B;;Acv9PM;EAEI,gBA3ED;EA4EC,eA5ED;AdqiQT;;Acn9PE;EGhJE;EACA;EACA,YH4DK;ENrEL;ESeE;EACA,WHqDG;EGpDH;AjBmmQN;;AU/lQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVqmQR;;Aa5lQI;ELjCA;EDmBA;ECnBA;EDmBA;APinQJ;;AU/mQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVqnQR;;AalmQI;EAEI;AbomQR;;Aa5lQI;EAII;Ab4lQR;;AavlQE;EAEI;EACA;EACA;AbylQN;;AarlQE;EAEI;AbulQN;;AanlQE;EEpEE;EACA;EACA;EACA;EACA;EACA;Af2pQJ;;AanlQE;EAEI;EACA;EACA;AbqlQN;;AS1oQE;EFjBE;AP+pQJ;;AkBnlQI;EXxFE;ECZF;EDwBA;APqqQJ;;AkBhtPE;EXjeI;ECZF;EDwBA;AP2qQJ;;AkBttPE;EA9QI;EXnNA;ECZF;EDwBA;APkrQJ;;AkBj9PM;EAEI;AlBm9PV;;AkB98PQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;AP6rQJ;;AkBx8PI;EXrPA;APisQJ;;AStqQE;EF3BE;APqsQJ;;AkBznQI;EXxFE;ECZF;EDwBA;AP2sQJ;;AkBtvPE;EXjeI;ECZF;EDwBA;APitQJ;;AkB5vPE;EA9QI;EXnNA;ECZF;EDwBA;APwtQJ;;AkBv/PM;EAEI;AlBy/PV;;AkBp/PQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;APmuQJ;;AkB9+PI;EXrPA;APuuQJ;;AmBpxQE;EAEI;EACA;EACA;AnBsxQN;;AmBnxQI;EAEI;AnBqxQR;;AmBhxQE;EZmBI;ECZF;EDwBA;EY3BE;EAGA;EACA;EACA;EACA;AnBixQN;;AoBzzQE;EduTE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EazDE;EACA;EACA;ApBg1QN;;AoB50QE;EZgCE;EDmBA;ECnBA;EDmBA;Ea/CE;EACA;EACA;EACA;ApBg1QN;;AUlyQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVwyQR;;AoBr1QE;EAEI;EACA;ApBu1QN;;AoBn1QE;EZcE;EDmBA;ECnBA;EDmBA;APyzQJ;;AUvzQM;EACE;EFtBJ;EM8NI;EJtMA;AV2zQR;;AU9zQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVo0QR;;AoBn2QE;EZOE;EDmBA;ECnBA;EDmBA;EalBE;ApBm2QN;;AU/0QM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVq1QR;;AoBx2QE;EZLE;EDmBA;ECnBA;EDmBA;EaVE;EACA;ApB42QN;;AUj2QM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVu2QR;;AoBj3QE;EZdE;EDmBA;ECnBA;EDmBA;EaDE;ApBq3QN;;AUl3QM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVw3QR;;AoB13QE;EbfI;ECZF;EDwBA;EaQE;ApB43QN;;AqBpxPE;EAEI;EACA,eD/mB+C;ApBq4QrD;;AqBttOE;EAqBI,YZnsCmC;ATw4QzC;;AsBpyQE;EAcM;AtB0xQR;;AW7pQE;EAEI;AX+pQN;;AsB5yQE;;EAcM;AtBmyQR;;AWtpQI;;EAEI;AXypQR;;AsB/xQE;EAEI;AtBiyQN;;AsBr2QI;EACE;IdlFF;IcoFI;EtBw2QN;EsBp2QI;IACE;IdzFJ;Ic2FI;EtBs2QN;EsBl2QI;IACE;IdhGJ;IcuGI;EtB+1QN;EsB31QI;Id3GF;Ic6GI;EtB61QN;AACF;AqB/nPE;EAEI,WE52BY;EF62BZ,YE72BY;AvB6+QlB;;AWxqQE;EAEI,4BUowCA;ArBs6NN;;AwB56PE;EAEI,YfjhBmC;AT+7QzC;;AyBx3QI;;;ECxFE;ECZF;EDwBA;A1B48QJ;;AyBv/PE;;;ECjeI;ECZF;EDwBA;A1Bo9QJ;;AyB//PE;;;EA9QI;ECnNA;ECZF;EDwBA;A1B69QJ;;AyB5vQM;;EAEI;AzB+vQV;;AyB1vQQ;;EAEI,yBAhRO;EC0Bb;ECZF;EDwBA;A1B0+QJ;;AyBrvQI;;ECrPA;A1B++QJ;;AyBn6QI;;;;ECxFE;ECZF;EDwBA;A1Bw/QJ;;A4Bn0PE;;EFjsBI;ECZF;EDwBA;EAAA;A1BggRJ;;A4B30PE;;;;;;EFjsBI;ECZF;EDwBA;EAZE;ECZF;EDwBA;A1B8gRJ;;A4BlzPE;EACE;IFzuBE;ICZF;IDwBA;IAAA;E1BshRF;E4BpzPE;IF9uBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1B8hRF;AACF;A4BvzPE;EACE;IFrvBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1BwiRF;E4BzzPE;IF3vBE;ICZF;IDwBA;IAAA;E1B8iRF;AACF;A4B7nQQ;;;EAEI;A5BgoQZ;;A4BznQQ;;;EAEI;A5B6nQZ;;AAhoRA,sB","sources":["webpack://webpackNumbers/./src/assets/styles/views/wireframe/main.scss","webpack://webpackNumbers/./src/assets/styles/views/admin/register/main.scss","webpack://webpackNumbers/./src/assets/styles/variables/variables.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/wireframe.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_form.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_main.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/typography/_typography.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/rtl/_rtl.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/notched-outline/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-header-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/icon-button/_icon-button-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/dom/_dom.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/focus-ring/_focus-ring.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/touch-target/_touch-target.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-progress-indicator.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-pagination.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/floating-label/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-icon-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/list/_evolution-mixins.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/_checkbox-theme.scss"],"sourcesContent":["body {\r\n    display: block;\r\n    margin: 0px !important;\r\n}\r\n\r\n\r\n/* START :: VARIABLES */\r\n\r\n@import '../../variables/variables.scss';\r\n\r\n/* END :: VARIABLES */\r\n\r\n\r\n/* START :: TAILWIND CSS */\r\n\r\n@import '../tailwind-output/wireframe.scss';\r\n\r\n/* END :: TAILWIND CSS */","@import '../../wireframe/main.scss';\r\n@import '../../tailwind-output/admin_user_form.scss';\r\n@import '../../tailwind-output/admin_user_main.scss';\r\n\r\n/* START :: TABLE CSS */\r\n\r\n@import \"@material/data-table/mdc-data-table\";\r\n\r\n/* END :: TABLE CSS */",":root {\r\n    --theme-default-color: rgba(249, 120, 23);\r\n    --theme-default-color-disabled: rgb(223, 145, 85);\r\n    --theme-gray-color: rgb(175, 175, 175);\r\n    --theme-gray-color-disabled: rgb(216, 215, 215);\r\n    --theme-success-color: rgb(19, 133, 57);\r\n    --theme-success-color-disabled: rgb(107, 190, 135);\r\n    --theme-danger-color: rgb(185, 26, 26);\r\n    --theme-danger-color-disabled: rgb(182, 118, 118);\r\n    --theme-warning-color: rgb(202, 128, 17);\r\n    --theme-warning-color-disabled: rgb(175, 150, 111);\r\n    --theme-info-color: rgb(2, 137, 170);\r\n    --theme-info-color-disabled: rgb(108, 163, 177);\r\n    --theme-primary-color: rgb(11, 59, 216);\r\n    --theme-primary-color-disabled: rgb(76, 93, 146);\r\n}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.m-2{margin:.5rem}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mr-3{margin-right:.75rem}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mb-1{margin-bottom:.25rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.text-\\[1\\.5rem\\]{font-size:1.5rem}.text-\\[1\\.05rem\\]{font-size:1.05rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.text-\\[\\#ca8a04\\]{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new>[mdc-data-table=data-table]{width:100%!important}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important}.main-app-content>[mdc-data-table=data-table],.main-content>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.gray,.gradient.red{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue,.gradient.green{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.akwaaba,.gradient.yellow{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color)}mwc-circular-progress.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}mwc-circular-progress.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}div[pageLoadingIndicator=on]>img{height:3rem!important;margin-top:50vh;width:3rem!important}div[pageLoadingIndicator=on],div[pageLoadingIndicator=on]>img{display:flex!important;justify-content:center!important}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.m-2{margin:.5rem}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mr-3{margin-right:.75rem}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mb-1{margin-bottom:.25rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.text-\\[1\\.5rem\\]{font-size:1.5rem}.text-\\[1\\.05rem\\]{font-size:1.05rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.text-\\[\\#ca8a04\\]{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new>[mdc-data-table=data-table]{width:100%!important}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important}.main-app-content>[mdc-data-table=data-table],.main-content>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.gray,.gradient.red{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue,.gradient.green{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.akwaaba,.gradient.yellow{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color)}mwc-circular-progress.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}mwc-circular-progress.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}div[pageLoadingIndicator=on]>img{height:3rem!important;margin-top:50vh;width:3rem!important}div[pageLoadingIndicator=on],div[pageLoadingIndicator=on]>img{display:flex!important;justify-content:center!important}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.form-container .header>.label,.form-container .header>label,.form-container header>.label,.form-container header>label{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity));display:block;font-size:1.5rem;font-weight:600;line-height:2rem;margin-top:.75rem;text-align:left}.form-container .header>.label>.icon,.form-container .header>label>.icon,.form-container header>.label>.icon,.form-container header>label>.icon{--tw-text-opacity:1;color:rgb(249 120 23/var(--tw-text-opacity));display:inline;height:1.5rem;width:1.5rem}.form-container .header>.label>.h1,.form-container .header>.label>h1,.form-container .header>label>.h1,.form-container .header>label>h1,.form-container header>.label>.h1,.form-container header>.label>h1,.form-container header>label>.h1,.form-container header>label>h1{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:1.5rem;font-weight:700;line-height:2rem}.form-container .header>.label>.h3,.form-container .header>.label>h3,.form-container .header>label>.h3,.form-container .header>label>h3,.form-container header>.label>.h3,.form-container header>.label>h3,.form-container header>label>.h3,.form-container header>label>h3{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:.875rem;font-weight:600;line-height:1.25rem;margin-bottom:1rem}.form-container .form{margin-top:2.5rem}.form-container .header.success .icon,.form-container header.success .icon{--tw-text-opacity:1!important;color:rgb(21 128 61/var(--tw-text-opacity))!important}.form-container .header.success .h1,.form-container .header.success h1,.form-container header.success .h1,.form-container header.success h1{--tw-text-opacity:1!important;color:rgb(22 163 74/var(--tw-text-opacity))!important}.form-container .header.danger .h3,.form-container .header.danger h3,.form-container .header.info .h3,.form-container .header.info h3,.form-container .header.primary .h3,.form-container .header.primary h3,.form-container .header.success .h3,.form-container .header.success h3,.form-container .header.warning .h3,.form-container .header.warning h3,.form-container header.danger .h3,.form-container header.danger h3,.form-container header.info .h3,.form-container header.info h3,.form-container header.primary .h3,.form-container header.primary h3,.form-container header.success .h3,.form-container header.success h3,.form-container header.warning .h3,.form-container header.warning h3{--tw-text-opacity:1!important;color:rgb(75 85 99/var(--tw-text-opacity))!important}.form-container .header.info .icon,.form-container header.info .icon{--tw-text-opacity:1!important;color:rgb(96 165 250/var(--tw-text-opacity))!important}.form-container .header.info .h1,.form-container .header.info h1,.form-container header.info .h1,.form-container header.info h1{--tw-text-opacity:1!important;color:rgb(147 197 253/var(--tw-text-opacity))!important}.form-container .header.warning .icon,.form-container header.warning .icon{--tw-text-opacity:1!important;color:rgb(161 98 7/var(--tw-text-opacity))!important}.form-container .header.warning .h1,.form-container .header.warning h1,.form-container header.warning .h1,.form-container header.warning h1{--tw-text-opacity:1!important;color:rgb(202 138 4/var(--tw-text-opacity))!important}.form-container .header.danger .icon,.form-container header.danger .icon{--tw-text-opacity:1!important;color:rgb(185 28 28/var(--tw-text-opacity))!important}.form-container .header.danger .h1,.form-container .header.danger h1,.form-container header.danger .h1,.form-container header.danger h1{--tw-text-opacity:1!important;color:rgb(220 38 38/var(--tw-text-opacity))!important}.form-container .header.primary .icon,.form-container header.primary .icon{--tw-text-opacity:1!important;color:rgb(29 78 216/var(--tw-text-opacity))!important}.form-container .header.primary .h1,.form-container .header.primary h1,.form-container header.primary .h1,.form-container header.primary h1{--tw-text-opacity:1!important;color:rgb(37 99 235/var(--tw-text-opacity))!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color)}mwc-select.success,mwc-switch.success,mwc-textarea.success,mwc-textfield.success{--mdc-theme-primary:var(--theme-success-color)}mwc-select.info,mwc-switch.info,mwc-textarea.info,mwc-textfield.info{--mdc-theme-primary:var(--theme-info-color)}mwc-select.warning,mwc-switch.warning,mwc-textarea.warning,mwc-textfield.warning{--mdc-theme-primary:var(--theme-warning-color)}mwc-select.danger,mwc-switch.danger,mwc-textarea.danger,mwc-textfield.danger{--mdc-theme-primary:var(--theme-danger-color)}mwc-select.primary,mwc-switch.primary,mwc-textarea.primary,mwc-textfield.primary{--mdc-theme-primary:var(--theme-primary-color)}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-icon-button.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-icon-button.info,mwc-icon-button.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-icon-button.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-icon-button.danger,mwc-icon-button.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-icon-button.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff}.button.gray,.button.gray[data-btn-to=active],mwc-button.gray,mwc-button.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}.button.success,.button.success[data-btn-to=active],mwc-button.success,mwc-button.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}.button.info,.button.info[data-btn-to=active],mwc-button.info,mwc-button.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}.button.warning,.button.warning[data-btn-to=active],mwc-button.warning,mwc-button.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}.button.danger,.button.danger[data-btn-to=active],mwc-button.danger,mwc-button.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}.button.primary,.button.primary[data-btn-to=active],mwc-button.primary,mwc-button.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].gray,mwc-button[data-btn-to=inactive].gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].success,mwc-button[data-btn-to=inactive].success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].info,mwc-button[data-btn-to=inactive].info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].warning,mwc-button[data-btn-to=inactive].warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].danger,mwc-button[data-btn-to=inactive].danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].primary,mwc-button[data-btn-to=inactive].primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-tab-bar.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-tab-bar.info,mwc-tab-bar.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-tab-bar.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-tab-bar.danger,mwc-tab-bar.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-tab-bar.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}mwc-tab-bar.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.m-2{margin:.5rem}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mr-3{margin-right:.75rem}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mb-1{margin-bottom:.25rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.text-\\[1\\.5rem\\]{font-size:1.5rem}.text-\\[1\\.05rem\\]{font-size:1.05rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.text-\\[\\#ca8a04\\]{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}mwc-dialog{z-index:50!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color)}mwc-select.success,mwc-switch.success,mwc-textarea.success,mwc-textfield.success{--mdc-theme-primary:var(--theme-success-color)}mwc-select.info,mwc-switch.info,mwc-textarea.info,mwc-textfield.info{--mdc-theme-primary:var(--theme-info-color)}mwc-select.warning,mwc-switch.warning,mwc-textarea.warning,mwc-textfield.warning{--mdc-theme-primary:var(--theme-warning-color)}mwc-select.danger,mwc-switch.danger,mwc-textarea.danger,mwc-textfield.danger{--mdc-theme-primary:var(--theme-danger-color)}mwc-select.primary,mwc-switch.primary,mwc-textarea.primary,mwc-textfield.primary{--mdc-theme-primary:var(--theme-primary-color)}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-icon-button.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-icon-button.info,mwc-icon-button.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-icon-button.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-icon-button.danger,mwc-icon-button.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-icon-button.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff}.button.gray,.button.gray[data-btn-to=active],mwc-button.gray,mwc-button.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}.button.success,.button.success[data-btn-to=active],mwc-button.success,mwc-button.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}.button.info,.button.info[data-btn-to=active],mwc-button.info,mwc-button.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}.button.warning,.button.warning[data-btn-to=active],mwc-button.warning,mwc-button.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}.button.danger,.button.danger[data-btn-to=active],mwc-button.danger,mwc-button.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}.button.primary,.button.primary[data-btn-to=active],mwc-button.primary,mwc-button.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].gray,mwc-button[data-btn-to=inactive].gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].success,mwc-button[data-btn-to=inactive].success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].info,mwc-button[data-btn-to=inactive].info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].warning,mwc-button[data-btn-to=inactive].warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].danger,mwc-button[data-btn-to=inactive].danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].primary,mwc-button[data-btn-to=inactive].primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-tab-bar.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-tab-bar.info,mwc-tab-bar.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-tab-bar.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-tab-bar.danger,mwc-tab-bar.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-tab-bar.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}mwc-tab-bar.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include table-styles($query: $query);\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  @include data-table-progress-indicator.core-styles($query: $query);\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n// This API includes only the table styles without the sorting, pagination and\n// loading styles. It is intended to be used by frameworks that only need the\n// table styles.\n@mixin table-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom-color: $color;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      border-top-color: $color;\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-width: $size;\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $size;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading/trailing header cells,\n  // and leading/trailing cells of last row.\n  // Cells that have explicit background color applied require border\n  // radius to take the parents' rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n  $bottom-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 3)\n  );\n  $bottom-left-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 4)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-left-radius, $bottom-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-right-radius,\n          if($rtl-reflexive, $bottom-left-radius, $bottom-right-radius)\n        );\n\n        border-bottom-left-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-right-radius, $bottom-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-left-radius,\n          if($rtl-reflexive, $bottom-right-radius, $bottom-left-radius)\n        );\n\n        border-bottom-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $size;\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: $color;\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $height;\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: math.div($size - $icon-size, 2);\n  }\n\n  .mdc-icon-button__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n\n  @include ripple-theme.focus {\n    .mdc-icon-button__focus-ring {\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        @include focus-ring.focus-ring(\n          $query: $query,\n          $container-outer-padding-vertical: 0,\n          $container-outer-padding-horizontal: 0\n        );\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n        max-height: $size;\n        max-width: $size;\n      }\n    }\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if $size >= 40px and $size <= 48px {\n      $component-size: 40px;\n    }\n\n    .mdc-icon-button__ripple {\n      @include feature-targeting.targets($feat-structure) {\n        width: $component-size;\n        height: $component-size;\n      }\n\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus {\n      .mdc-icon-button__focus-ring {\n        @include feature-targeting.targets($feat-structure) {\n          max-height: $component-size;\n          max-width: $component-size;\n        }\n      }\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $component-width: $width + $padding * 2;\n  $component-height: $height + $padding * 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $component-width;\n    height: $component-height;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  @include theme.property(font-size, $size);\n\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n\n$ring-radius-default: 8px !default;\n$inner-ring-width-default: 2px !default;\n$inner-ring-color-default: transparent !default;\n$outer-ring-width-default: 2px !default;\n$outer-ring-color-default: transparent !default;\n$container-outer-padding-default: 2px !default;\n\n/// Styles applied to the component's inner focus ring element.\n///\n/// @param $ring-radius [$ring-radius-default] - Focus ring radius.\n/// @param $inner-ring-width [$inner-ring-width-default] - Inner focus ring width.\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n/// @param $outer-ring-color [$outer-ring-color-default] - Outer focus ring color.\n/// @param $container-outer-padding [$container-outer-padding-default] - The\n///     distance between the focus ring and the container.\n@mixin focus-ring(\n  $query: feature-targeting.all(),\n  $ring-radius: $ring-radius-default,\n  $inner-ring-width: $inner-ring-width-default,\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-width: $outer-ring-width-default,\n  $outer-ring-color: $outer-ring-color-default,\n  $container-outer-padding-vertical: $container-outer-padding-default,\n  $container-outer-padding-horizontal: $container-outer-padding-default\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $container-size-vertical: 100%;\n  @if $container-outer-padding-vertical != 0 {\n    $container-size-vertical: calc(\n      100% + #{$container-outer-padding-vertical * 2}\n    );\n  }\n  $container-size-horizontal: 100%;\n  @if $container-outer-padding-horizontal != 0 {\n    $container-size-horizontal: calc(\n      100% + #{$container-outer-padding-horizontal * 2}\n    );\n  }\n  $outer-ring-size: 100%;\n  @if $outer-ring-width > 0 {\n    $outer-ring-size: calc(100% + #{$outer-ring-width * 2});\n  }\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n    border: $inner-ring-width solid $inner-ring-color;\n    border-radius: $ring-radius - $outer-ring-width;\n    box-sizing: content-box;\n    position: absolute;\n    top: 50%;\n    @include rtl.ignore-next-line();\n    left: 50%;\n    @include rtl.ignore-next-line();\n    transform: translate(-50%, -50%);\n    height: $container-size-vertical;\n    width: $container-size-horizontal;\n\n    @include dom.forced-colors-mode($exclude-ie11: true) {\n      border-color: CanvasText;\n    }\n\n    &::after {\n      content: '';\n      border: $outer-ring-width solid $outer-ring-color;\n      border-radius: $ring-radius;\n      display: block;\n      position: absolute;\n      top: 50%;\n      @include rtl.ignore-next-line();\n      left: 50%;\n      @include rtl.ignore-next-line();\n      transform: translate(-50%, -50%);\n      height: $outer-ring-size;\n      width: $outer-ring-size;\n\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        border-color: CanvasText;\n      }\n    }\n  }\n}\n/// Customizes the color of the button focus ring.\n///\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n@mixin focus-ring-color(\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-color: $outer-ring-color-default\n) {\n  border-color: $inner-ring-color;\n\n  &::after {\n    border-color: $outer-ring-color;\n  }\n}\n\n/// Customizes the border radius of the button focus ring.\n///\n/// @param {Number} $ring-radius - The border radius of the focus ring.\n/// @param {Number} $outer-ring-width [$outer-ring-width] - Width of the outer\n///     ring, required to compute the radius for the inner ring.\n@mixin focus-ring-radius(\n  $ring-radius,\n  $outer-ring-width: $outer-ring-width-default,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-radius: $ring-radius - $outer-ring-width;\n\n    &::after {\n      border-radius: $ring-radius;\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__progress-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: absolute;\n      width: 100%;\n    }\n\n    .mdc-data-table--in-progress & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  .mdc-data-table__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('background-color', surface);\n\n      height: 100%;\n      // TODO(b/151453287): Set appropriate opacity value once we've a UX\n      // guidance.\n      opacity: 0.32;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n","@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/icon-button/icon-button-theme';\n@use '@material/select/select-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/menu/mixins' as menu-theme;\n@use './data-table-theme';\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n/// Sets core styles for data table pagination.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__pagination {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n\n      align-items: center;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-navigation {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: flex;\n    }\n  }\n\n  .mdc-data-table__pagination-button {\n    @include icon-button-theme.flip-icon-in-rtl($query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 4px);\n    }\n  }\n\n  .mdc-data-table__pagination-total {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(\n        margin,\n        $left-value: 14px,\n        $right-value: 36px\n      );\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 22px);\n\n      align-items: center;\n      display: inline-flex;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 12px);\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.variable-width($min-width: 80px, $query: $query);\n    @include menu-theme.min-width(80px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 8px 0;\n    }\n\n    // TODO(b/158196144): Set it to `-5` density scale using density mixin when\n    // select component supports it.\n    @include select-theme.outlined-height(\n      data-table-theme.$pagination-rows-per-page-select-height,\n      $query: $query\n    );\n    .mdc-list-item {\n      @include list-theme.one-line-item-height(\n        data-table-theme.$pagination-rows-per-page-select-height,\n        $query: $query\n      );\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/tokens/resolvers';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/menu-surface/mixins' as menu-surface-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/gss';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/variables' as theme-variables;\n@use '@material/typography/mixins' as typography-mixins;\n@use '@material/typography/typography';\n@use './select-icon-theme';\n@use './select-helper-text-theme';\n\n$ripple-target: '.mdc-select__ripple';\n\n@function get-outlined-label-position-y($select-anchor-height) {\n  @return math.div($select-anchor-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$arrow-padding: 52px !default;\n$label-padding: 16px !default;\n$height: 56px !default;\n$minimum-height-for-filled-label: 52px !default;\n$filled-baseline-top: 40px !default;\n$selected-text-height: 28px !default;\n$anchor-padding-left: 16px !default;\n$anchor-padding-left-with-leading-icon: 0 !default;\n$anchor-padding-right: 0 !default;\n$outlined-stroke-width: 2px !default;\n$default-width: 200px !default;\n$shape-radius: small !default;\n\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$ink-color: rgba(theme-variables.prop-value(on-surface), 0.87) !default;\n$dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.54\n) !default;\n$label-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$focused-label-color: rgba(theme-variables.prop-value(primary), 0.87) !default;\n$bottom-line-idle-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.42\n) !default;\n$bottom-line-hover-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  4%\n) !default;\n\n// Disabled Styles\n$disabled-label-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-ink-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  2%\n) !default;\n$disabled-fill-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-bottom-line-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-outline-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n\n$outlined-idle-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$outlined-hover-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$label-position-y: 106% !default;\n$outline-label-offset: 16px !default;\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n\n$dropdown-transition-duration: 150ms !default;\n// Transition durartions to active state\n$icon-active-fade-out-duration: 0.33 * $dropdown-transition-duration !default;\n$icon-active-fade-in-duration: 0.67 * $dropdown-transition-duration !default;\n// Transition durartions to inactive state\n$icon-inactive-fade-out-duration: 0.5 * $dropdown-transition-duration !default;\n$icon-inactive-fade-in-duration: 0.5 * $dropdown-transition-duration !default;\n\n// Error colors\n$error-color: error !default;\n\n$_light-theme: (\n  // Implement `menu-cascading-menu-indicator-icon-color` when select supports.\n  // Implement `menu-cascading-menu-indicator-icon-size` when select supports.\n  // Implement `menu-container-surface-tint-layer-color` when select supports.\n  // Implement `text-field-disabled-trailing-icon-color` when select supports.\n  // Implement `text-field-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-error-trailing-icon-color` when select supports.\n  // Implement `text-field-error-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-error-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-size` when select supports.\n  // Implement `text-field-error-hover-state-layer-color` when select supports.\n  // Implement `text-field-error-hover-state-layer-opacity` when select supports.\n  // Implement `text-field-hover-state-layer-color` when select supports.\n  // Implement `text-field-hover-state-layer-opacity` when select supports.\n  menu-container-color: null,\n  menu-container-elevation: null,\n  menu-container-shadow-color: null,\n  menu-container-shape: null,\n  menu-divider-color: null,\n  menu-divider-height: null,\n  menu-list-item-container-height: null,\n  menu-list-item-label-text-color: null,\n  menu-list-item-label-text-font: null,\n  menu-list-item-label-text-line-height: null,\n  menu-list-item-label-text-size: null,\n  menu-list-item-label-text-tracking: null,\n  menu-list-item-label-text-weight: null,\n  menu-list-item-selected-container-color: null,\n  menu-list-item-with-leading-icon-leading-icon-color: null,\n  menu-list-item-with-leading-icon-leading-icon-size: null,\n  menu-list-item-with-trailing-icon-trailing-icon-color: null,\n  menu-list-item-with-trailing-icon-trailing-icon-size: null,\n  text-field-active-indicator-color: null,\n  text-field-active-indicator-height: null,\n  text-field-caret-color: null,\n  // Token key `text-field-hover-caret-color` not available on DSDB.\n  text-field-hover-caret-color: null,\n  // Token key `text-field-focus-caret-color` not available on DSDB.\n  text-field-focus-caret-color: null,\n  text-field-container-color: null,\n  text-field-container-height: null,\n  text-field-container-shape: null,\n  text-field-disabled-active-indicator-color: null,\n  text-field-disabled-active-indicator-height: null,\n  text-field-disabled-active-indicator-opacity: null,\n  text-field-disabled-container-color: null,\n  text-field-disabled-container-opacity: null,\n  text-field-disabled-input-text-color: null,\n  text-field-disabled-input-text-opacity: null,\n  text-field-disabled-label-text-color: null,\n  text-field-disabled-label-text-opacity: null,\n  text-field-disabled-leading-icon-color: null,\n  text-field-disabled-leading-icon-opacity: null,\n  text-field-disabled-outline-color: null,\n  text-field-disabled-outline-opacity: null,\n  text-field-disabled-outline-width: null,\n  text-field-disabled-supporting-text-color: null,\n  text-field-disabled-supporting-text-opacity: null,\n  text-field-disabled-trailing-icon-opacity: null,\n  text-field-error-active-indicator-color: null,\n  text-field-error-focus-active-indicator-color: null,\n  // Token key `text-field-error-caret-color` not available on DSDB.\n  text-field-error-caret-color: null,\n  // Token key `text-field-error-hover-caret-color` not available on DSDB.\n  text-field-error-hover-caret-color: null,\n  text-field-error-focus-caret-color: null,\n  text-field-error-focus-input-text-color: null,\n  text-field-error-focus-label-text-color: null,\n  text-field-error-focus-leading-icon-color: null,\n  text-field-error-focus-outline-color: null,\n  text-field-error-focus-supporting-text-color: null,\n  text-field-error-hover-active-indicator-color: null,\n  text-field-error-hover-input-text-color: null,\n  text-field-error-hover-label-text-color: null,\n  text-field-error-hover-leading-icon-color: null,\n  text-field-error-hover-outline-color: null,\n  text-field-error-hover-supporting-text-color: null,\n  text-field-error-input-text-color: null,\n  text-field-error-label-text-color: null,\n  text-field-error-leading-icon-color: null,\n  text-field-error-outline-color: null,\n  text-field-error-supporting-text-color: null,\n  text-field-focus-active-indicator-color: null,\n  text-field-focus-active-indicator-height: null,\n  text-field-focus-input-text-color: null,\n  text-field-focus-label-text-color: null,\n  text-field-focus-leading-icon-color: null,\n  text-field-focus-outline-color: null,\n  text-field-focus-outline-width: null,\n  text-field-focus-supporting-text-color: null,\n  text-field-hover-active-indicator-color: null,\n  text-field-hover-active-indicator-height: null,\n  text-field-hover-input-text-color: null,\n  text-field-hover-label-text-color: null,\n  text-field-hover-leading-icon-color: null,\n  text-field-hover-outline-color: null,\n  text-field-hover-outline-width: null,\n  text-field-hover-supporting-text-color: null,\n  text-field-input-text-color: null,\n  text-field-input-text-font: null,\n  text-field-input-text-line-height: null,\n  text-field-input-text-size: null,\n  text-field-input-text-tracking: null,\n  text-field-input-text-weight: null,\n  text-field-label-text-color: null,\n  text-field-label-text-font: null,\n  text-field-label-text-line-height: null,\n  text-field-label-text-populated-line-height: null,\n  text-field-label-text-populated-size: null,\n  text-field-label-text-size: null,\n  text-field-label-text-tracking: null,\n  text-field-label-text-weight: null,\n  text-field-leading-icon-color: null,\n  text-field-leading-icon-size: null,\n  text-field-outline-color: null,\n  text-field-outline-width: null,\n  text-field-supporting-text-color: null,\n  text-field-supporting-text-font: null,\n  text-field-supporting-text-line-height: null,\n  text-field-supporting-text-size: null,\n  text-field-supporting-text-tracking: null,\n  text-field-supporting-text-weight: null\n);\n\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme-keys($_light-theme, $theme);\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, text-field-container-color),\n      disabled: map.get($theme, text-field-disabled-container-color),\n    )\n  );\n  @include outline-color(\n    (\n      default: map.get($theme, text-field-outline-color),\n      hover: map.get($theme, text-field-hover-outline-color),\n      focus: map.get($theme, text-field-focus-outline-color),\n      disabled: map.get($theme, text-field-disabled-outline-color),\n    )\n  );\n  @include _error-outline-color(\n    (\n      default: map.get($theme, text-field-error-outline-color),\n      hover: map.get($theme, text-field-error-hover-outline-color),\n      focus: map.get($theme, text-field-error-focus-outline-color),\n    )\n  );\n  @include outline-width(\n    (\n      default: map.get($theme, text-field-outline-width),\n      hover: map.get($theme, text-field-hover-outline-width),\n      focus: map.get($theme, text-field-focus-outline-width),\n    )\n  );\n  @include _menu-container-color(map.get($theme, menu-container-color));\n  @include _menu-container-elevation(\n    map.get($resolvers, elevation),\n    $shadow-color: map.get($theme, menu-container-shadow-color),\n    $elevation: map.get($theme, menu-container-elevation)\n  );\n  @include _menu-container-shape(map.get($theme, menu-container-shape));\n  @include _menu-divider-color(map.get($theme, menu-divider-color));\n  @include _menu-divider-height(map.get($theme, menu-divider-height));\n  @include _menu-list-item-container-height(\n    map.get($theme, menu-list-item-container-height)\n  );\n  @include _menu-list-item-label-text-color(\n    map.get($theme, menu-list-item-label-text-color)\n  );\n  @include _menu-list-item-label-text-typography(\n    (\n      font: map.get($theme, menu-list-item-label-text-font),\n      line-height: map.get($theme, menu-list-item-label-text-line-height),\n      size: map.get($theme, menu-list-item-label-text-size),\n      tracking: map.get($theme, menu-list-item-label-text-tracking),\n      weight: map.get($theme, menu-list-item-label-text-weight),\n    )\n  );\n  @include _menu-list-item-selected-container-color(\n    map.get($theme, menu-list-item-selected-container-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-size)\n  );\n  // TODO: Create new mixin for trailing icon theming when select supports it.\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-size)\n  );\n  @include bottom-line-color(\n    (\n      default: map.get($theme, text-field-active-indicator-color),\n      hover: map.get($theme, text-field-hover-active-indicator-color),\n      focus: map.get($theme, text-field-focus-active-indicator-color),\n      disabled: map.get($theme, text-field-disabled-indicator-color),\n    )\n  );\n  @include _text-field-error-active-indicator-color(\n    (\n      default: map.get($theme, text-field-error-active-indicator-color),\n      hover: map.get($theme, text-field-error-hover-active-indicator-color),\n      focus: map.get($theme, text-field-error-focus-active-indicator-color),\n    )\n  );\n  @include _text-field-active-indicator-height(\n    map.get($theme, text-field-active-indicator-height)\n  );\n  @include _text-field-caret-color(\n    (\n      default: map.get($theme, text-field-caret-color),\n      hover: map.get($theme, text-field-hover-caret-color),\n      focus: map.get($theme, text-field-focus-caret-color),\n    )\n  );\n  @include _text-field-error-caret-color(\n    (\n      default: map.get($theme, text-field-error-caret-color),\n      hover: map.get($theme, text-field-error-hover-caret-color),\n      focus: map.get($theme, text-field-error-focus-caret-color),\n    )\n  );\n  @include ink-color(\n    (\n      default: map.get($theme, text-field-input-text-color),\n      hover: map.get($theme, text-field-hover-input-text-color),\n      focus: map.get($theme, text-field-focus-input-text-color),\n      disabled: map.get($theme, text-field-disabled-input-text-color),\n    )\n  );\n  @include _error-input-text-color(\n    (\n      default: map.get($theme, text-field-error-input-text-color),\n      hover: map.get($theme, text-field-error-hover-input-text-color),\n      focus: map.get($theme, text-field-error-focus-input-text-color),\n    )\n  );\n  @include label-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include label-floating-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include _error-label-text-color(\n    (\n      default: map.get($theme, text-field-error-label-text-color),\n      hover: map.get($theme, text-field-error-hover-label-text-color),\n      focus: map.get($theme, text-field-error-focus-label-text-color),\n    )\n  );\n  @include _text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-leading-icon-color),\n      hover: map.get($theme, text-field-hover-leading-icon-color),\n      focus: map.get($theme, text-field-focus-leading-icon-color),\n      disabled: map.get($theme, text-field-disabled-leading-icon-color),\n    )\n  );\n  @include _error-text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-error-leading-icon-color),\n      hover: map.get($theme, text-field-error-hover-leading-icon-color),\n      focus: map.get($theme, text-field-error-focus-leading-icon-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-color(\n    (\n      default: map.get($theme, text-field-supporting-text-color),\n      disabled: map.get($theme, text-field-disabled-supporting-text-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-validation-color(\n    map.get($theme, text-field-error-supporting-text-color)\n  );\n  @include _text-field-input-text-typography(\n    (\n      font: map.get($theme, text-field-input-text-font),\n      line-height: map.get($theme, text-field-input-text-line-height),\n      size: map.get($theme, text-field-input-text-size),\n      tracking: map.get($theme, text-field-input-text-tracking),\n      weight: map.get($theme, text-field-input-text-weight),\n    )\n  );\n  @include _text-field-label-text-typography(\n    (\n      font: map.get($theme, text-field-label-text-font),\n      line-height: map.get($theme, text-field-label-text-line-height),\n      size: map.get($theme, text-field-label-text-size),\n      tracking: map.get($theme, text-field-label-text-tracking),\n      weight: map.get($theme, text-field-label-text-weight),\n    )\n  );\n  @include _text-field-label-text-populated-typography(\n    (\n      line-height: map.get($theme, text-field-label-text-populated-line-height),\n      size: map.get($theme, text-field-label-text-populated-size),\n    )\n  );\n  @include _text-field-supporting-text-typography(\n    (\n      font: map.get($theme, text-field-supporting-text-font),\n      line-height: map.get($theme, text-field-supporting-text-line-height),\n      size: map.get($theme, text-field-supporting-text-size),\n      tracking: map.get($theme, text-field-supporting-text-tracking),\n      weight: map.get($theme, text-field-supporting-text-weight),\n    )\n  );\n}\n\n@mixin _text-field-supporting-text-typography($typography-theme) {\n  & + .mdc-select-helper-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-input-text-typography($typography-theme) {\n  .mdc-select__selected-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-populated-typography($typography-theme) {\n  .mdc-floating-label--float-above,\n  // Used for CSS specificity to match with selector used in `outlined-height()`.\n  &.mdc-select--with-leading-icon .mdc-select__anchor .mdc-notched-outline .mdc-floating-label.mdc-floating-label--float-above {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-typography($typography-theme) {\n  .mdc-floating-label {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _error-outline-color($color) {\n  &.mdc-select--invalid {\n    @include outline-color($color);\n  }\n}\n\n@mixin _error-text-field-leading-icon-color($color) {\n  &.mdc-select--invalid {\n    @include _text-field-leading-icon-color($color);\n  }\n}\n\n@mixin _text-field-leading-icon-color($color) {\n  @include _if-enabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-default-state($color)\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _set-text-field-leading-icon-color(\n        state.get-hover-state($color)\n      );\n    }\n\n    @include _if-focused {\n      @include _set-text-field-leading-icon-color(\n        state.get-focus-state($color)\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-disabled-state($color)\n    );\n  }\n}\n\n@mixin _set-text-field-leading-icon-color($color) {\n  .mdc-select__anchor .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _error-label-text-color($color) {\n  &.mdc-select--invalid {\n    @include label-floating-color($color);\n  }\n}\n\n@mixin _error-input-text-color($color) {\n  &.mdc-select--invalid {\n    @include ink-color($color);\n  }\n}\n\n@mixin _text-field-caret-color($color) {\n  @include dropdown-icon-color($color);\n}\n\n@mixin _text-field-error-caret-color($color) {\n  &.mdc-select--invalid {\n    @include dropdown-icon-color($color);\n  }\n}\n\n@mixin _text-field-error-active-indicator-color($color) {\n  &.mdc-select--invalid {\n    @include bottom-line-color($color);\n  }\n}\n\n@mixin _text-field-active-indicator-height($height) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.height($height);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-color($color) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-size($size) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(font-size, $size);\n  }\n}\n\n@mixin _menu-list-item-selected-container-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-selected-container-color($color);\n  }\n}\n\n@mixin _menu-list-item-label-text-typography($typography-theme) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n@mixin _menu-list-item-label-text-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-ink-color($color);\n  }\n}\n\n@mixin _menu-list-item-container-height($height) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-height($height);\n  }\n}\n\n@mixin _menu-divider-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-color($color);\n  }\n}\n\n@mixin _menu-divider-height($height) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-height($height);\n  }\n}\n\n@mixin _menu-container-color($color) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.fill-color($color);\n  }\n}\n\n@mixin _menu-container-elevation($resolver, $shadow-color, $elevation) {\n  .mdc-select__menu {\n    @include elevation-theme.with-resolver(\n      $resolver,\n      $elevation: $elevation,\n      $shadow-color: $shadow-color\n    );\n  }\n}\n\n@mixin _menu-container-shape($shape) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.shape-radius($shape);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-ink-color($color);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-typography($typography-theme) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n/// Sets the min-width of the select.\n/// @param {Number} $min-width - The desired min-width.\n/// @deprecated using this mixin is no longer required, and clients may set\n///             the attribute directly\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n/// Sets the select behavior to change width dynamically based on content.\n/// @param {Number} $min-width - The min-width of the select, which should be\n///     large enough to allow the label (if exists) to display in full.\n@mixin variable-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n  }\n\n  @include _if-disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin dropdown-icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _dropdown-icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _dropdown-icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _dropdown-icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _dropdown-icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-floating-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-floating-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-floating-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin bottom-line-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _bottom-line-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // bottom line inactive/active are on different elements, does not need\n    // to check for :not() focused\n    &:hover {\n      @include _bottom-line-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _focused-line-ripple-color(\n      state.get-focus-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _bottom-line-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    @include _if-focused {\n      @include _label-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _label-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _hover-outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _focused-outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-width($width) {\n  @include _if-enabled {\n    @include _outline-width(state.get-default-state($width));\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _outline-width(state.get-hover-state($width));\n    }\n\n    @include _if-focused {\n      .mdc-notched-outline {\n        @include _outline-width(state.get-focus-state($width));\n      }\n    }\n  }\n}\n\n@mixin _outline-width($width) {\n  @if $width {\n    @include notched-outline-mixins.stroke-width($width);\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified size.\n///\n@mixin dropdown-icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n@mixin filled-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-select: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  .mdc-select__anchor {\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all(),\n  $height: null\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if not $height {\n    $height: density-functions.prop-value(\n      $density-config: $density-config,\n      $density-scale: $density-scale,\n      $property-name: height,\n    );\n  }\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    .mdc-select__anchor {\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    + .mdc-select-helper-text {\n      @include _apply-outline-shape-padding(\n        margin-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          margin-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    // Unlike textfield, select does not need to re-apply leading icon padding.\n    // This is because select only has one potential leading class, not two\n    // extra classes like textfield (leading + trailing). Textfield's two extra\n    // classes can cause specificity conflicts, requiring everything to be\n    // re-applied.\n  }\n}\n\n///\n/// Sets density scale for filled select variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for filled select variant with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-with-leading-icon-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-with-leading-icon-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select (Excluding outlined select with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n@mixin _list-density($density-scale, $query) {\n  @include list-mixins.deprecated-single-line-density(\n    $density-scale,\n    $query: $query\n  );\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-density(\n      $density-scale,\n      $exclude-variants: true,\n      $query: $query\n    );\n  }\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-density(\n      $density-scale,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets height of default select variant.\n///\n/// @param {Number} $new-height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n\n    // Filled variant is aligned to baseline...\n    @include typography-mixins.baseline(\n      $top: $filled-baseline-top,\n      $display: flex,\n      $query: $query\n    );\n    // ...unless it is too small to display a label\n    @if $new-height < $minimum-height-for-filled-label {\n      @include center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        .mdc-floating-label {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // No-label variants are always centered\n  &.mdc-select--no-label .mdc-select__anchor {\n    @include center-aligned($query: $query);\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of filled select variant with leading icon.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-with-leading-icon-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include filled-height(\n    $new-height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $filled-baseline-top: $filled-baseline-top,\n    $query: $query\n  );\n\n  @if $new-height < $height {\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    .mdc-select__anchor {\n      @include leading-icon-floating-label-position(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select variant (Excluding outlined select with leading icon).\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-height(\n  $new-height,\n  $keyframe-suffix: select-outlined-#{$new-height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: get-outlined-label-position-y($new-height);\n\n  .mdc-select__anchor {\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      $positionY,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        $positionY,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select with leading icon variant.\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-with-leading-icon-height(\n  $new-height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @if $new-height < $height {\n      @include dropdown-icon-size(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$dense-icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    } @else {\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n// $add-label-padding is copied from textfield's mixin, even though select\n// always sets it to true. This is to try and keep things aligned between select\n// and textfield for when these styles are refactored into shared styles.\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > notched-outline-variables.$leading-width) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @include gss.annotate(\n        (\n          alternate: $padding-is-custom-prop,\n        )\n      );\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      // Interpolation is a workaround for sass/sass#3259.\n      @supports (top: max(#{0%})) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the\n        // calculated custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{$anchor-padding-left}, #{$value});\n      }\n    }\n  }\n}\n\n// Removes filled baseline alignment\n@mixin center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__selected-text {\n    @include typography-mixins.zero-width-prefix($query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons \"controlling\" the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the \"largest\"\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n    //\n    // IE11 does not respect this, and makes the leading icon (if present)\n    // the baseline.\n    .mdc-select__selected-text-container {\n      height: 100%;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets the position of the floating label for a select with leading icon.\n/// @param {number} $icon-size - The size of the leading icon.\n///\n@mixin leading-icon-floating-label-position(\n  $icon-size: select-icon-theme.$icon-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-total-width);\n    }\n  }\n}\n\n///\n/// Sets the floating label position and animations for a given height for an\n/// outlined select with leaing icon.\n/// @param {number} $icon-size - The size of the leading icon.\n/// @param {string} $keyframe-suffix - The suffix for the newly generated keyframes.\n///\n@mixin outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $icon-size,\n  $keyframe-suffix: select-outlined-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n  $resting-position-x: $icon-total-width -\n    select-icon-theme.$icon-horizontal-margin;\n  $float-position-y: get-outlined-label-position-y($height);\n  $float-position-x: $icon-size + select-icon-theme.$icon-horizontal-margin -\n    notched-outline-variables.$notch-gutter-size;\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $resting-position-x);\n    }\n  }\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $float-position-y,\n    $float-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $float-position-y,\n      $float-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $float-position-y,\n      -($float-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the floating label according to sizes of the\n/// leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-floating-label-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin *\n      2 +\n      $leading-icon-size;\n  } @else {\n    $truncation: $truncation + $outline-label-offset;\n  }\n\n  .mdc-floating-label {\n    @include floating-label-mixins.max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n\n  .mdc-floating-label--float-above {\n    $scale: floating-label-variables.$float-scale;\n    @include floating-label-mixins.max-width(\n      calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the notched outline according to the sizes of\n/// the leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-notched-outline-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size + notched-outline-variables.$leading-width;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin +\n      $leading-icon-size;\n  }\n  .mdc-select__anchor {\n    @include notched-outline-mixins.notch-max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n}\n\n/// Selector for focused state\n/// @access private\n@mixin _if-focused {\n  &.mdc-select--focused {\n    @content;\n  }\n}\n\n/// Selector for enabled state\n/// @access private\n@mixin _if-enabled {\n  &:not(.mdc-select--disabled) {\n    @content;\n  }\n}\n\n/// Selector for disabled state\n/// @access private\n@mixin _if-disabled {\n  &.mdc-select--disabled {\n    @content;\n  }\n}\n\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__selected-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__anchor {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(background-color, $color);\n      }\n    }\n  }\n}\n\n@mixin _bottom-line-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.inactive-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-line-ripple-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.active-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin _hover-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.stroke-width(\n        $outlined-stroke-width,\n        $query: $query\n      );\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-floating-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label--float-above {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified color.\n/// @access private\n///\n@mixin _dropdown-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      .mdc-select__dropdown-icon {\n        @include theme-mixins.property(fill, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$icon-size: 24px !default;\n$dense-icon-size: 20px !default;\n$icon-horizontal-margin: 12px !default;\n\n$icon-color: rgba(theme-variables.prop-value(on-surface), 0.54) !default;\n$disabled-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n///\n/// Customizes the size (both width and height) of the icon.\n/// @param {Number} $size - the intended icon size.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-select__icon {\n      width: $size;\n      height: $size;\n      font-size: $size;\n    }\n  }\n}\n\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin icon-horizontal-margins($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './evolution-variables' as variables;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode($query);\n\n  .mdc-list {\n    @include list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n\n    @include _one-line-item-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n    @include _three-line-item-density(\n      variables.$three-line-item-density-scale,\n      $query: $query\n    );\n\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before, // lint-disable-focus-psuedo-selector\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // lint-disable-focus-psuedo-selector\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _two-line-item-end-baseline($top: 28px, $query: $query);\n    @include _three-line-item-end-baseline($top: 28px, $query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    height: $height;\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include _item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin _item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        // Color ensures border is shown, but will be overridden by the browser.\n        @include theme.property(border-bottom-color, white);\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/188529841): `selected-checkmark-color` and `disabled-selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-checkmark-color: $mark-color,\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n$forced-colors-theme: (\n  disabled-selected-checkmark-color: ButtonFace,\n  disabled-selected-icon-color: GrayText,\n  disabled-selected-icon-opacity: 1,\n  disabled-unselected-icon-color: GrayText,\n  disabled-unselected-icon-opacity: 1,\n  selected-checkmark-color: ButtonText,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(\n    map.get($theme, disabled-selected-checkmark-color)\n  );\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @if $unmarked-stroke-color == null {\n    $unmarked-fill-color: null;\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @if $marked-fill-color and\n    custom-properties.get-fallback($marked-fill-color) ==\n    GrayText\n  {\n    // Transparent appears white in HCM\n    $marked-stroke-color: GrayText;\n  }\n\n  @if $marked-fill-color == null {\n    $marked-stroke-color: null;\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}