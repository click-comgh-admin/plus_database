{"version":3,"file":"../../public/assets/v2/prod-files/js/attendance/clocking/excuse.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/network/attendance/clocking/index.ts","webpack://webpackNumbers/./src/addons/widgets/buttons/link-buttons/link-button.ts","webpack://webpackNumbers/./src/view/attendance/excuse/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/excuse/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/excuse/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/excuse/put.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/excuse/post.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceClocking<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n@customElement('link-button')\r\nexport class LinkButton extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public aClass?: string;\r\n\r\n  @property({ type: String })\r\n  public bClass?: string;\r\n\r\n  @property({ type: String })\r\n  public icon?: string;\r\n\r\n  @property({ type: String })\r\n  public href?: string;\r\n\r\n  @property({ type: String })\r\n  public label?: string;\r\n\r\n  @property({ type: String })\r\n  public isBlockContent?: \"true\" | \"false\" = \"true\";\r\n\r\n  @property({ type: Boolean })\r\n  public raised?: boolean = false;\r\n  \r\n  render() {\r\n    const _aClass = this.thisIsBlockContent('mdc-deprecated-list-item');\r\n    const _bClass = this.thisIsBlockContent('mdc-deprecated-list-item__ripple');\r\n    if (this.raised === true) {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass} no-underline hover:no-underline\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" raised icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass}\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    }\r\n  }\r\n\r\n  thisIsBlockContent(value: string) {\r\n    return this.isBlockContent === \"true\" ? value : \"\";\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport '@@addons/widgets/alert';\r\nimport '@material/mwc-textarea';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { MemberClockingExcuse_I, MemberClockingExcuse_S } from '@@addons/interfaces/attendance/member_clocking_info/excuse';\r\nimport { GET_AttendanceClockingExcuse } from '@@addons/network/attendance/clocking/excuse';\r\nimport { POST_AttendanceClockingExcuse } from '@@addons/network/attendance/clocking/excuse/post';\r\nimport { PUT_AttendanceClockingExcuse } from '@@addons/network/attendance/clocking/excuse/put';\r\nimport { MemberClockingInfo_I } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { GET_AttendanceClocking } from '@@addons/network/attendance/clocking';\r\n\r\n\r\n@customElement(\"pdb-attendance-clocking-excuse\")\r\nexport class PdbAttendanceClockingExcuse extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private __memberClockingInfo: NetworkCallResponse_I<MemberClockingInfo_I> = null;\r\n\r\n  public set _memberClockingInfo(value: NetworkCallResponse_I<MemberClockingInfo_I>) {\r\n    this.__memberClockingInfo = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _memberClockingInfo(): NetworkCallResponse_I<MemberClockingInfo_I> {\r\n    return this.__memberClockingInfo;\r\n  }\r\n\r\n  @property({ type: Number })\r\n  private clockingId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private clockingIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _clockingExcuse: MemberClockingExcuse_I[] = null;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.getMeetingEventId();\r\n    await this.getAttendanceClocking();\r\n    await this.getAttendanceClockingExcuse();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if ((this.clockingId === 0) || (this.clockingId === null) || (Number.isNaN(this.clockingId))) {\r\n      const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">Clocking ID Not Found!</p>\r\n        </div>\r\n      `;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n      let memberClockingInfo: MemberClockingInfo_I = null;\r\n      // console.log({\"this._memberClockingInfo\": this._memberClockingInfo})\r\n      if (this._memberClockingInfo !== null) {\r\n        if (this._memberClockingInfo.data !== undefined) {\r\n          if (Array.isArray(this._memberClockingInfo.data)) {\r\n            memberClockingInfo = this._memberClockingInfo.data.length > 0 ? this._memberClockingInfo.data[0] : {};\r\n          } else {\r\n            memberClockingInfo = this._memberClockingInfo.data;\r\n          }\r\n        } else {\r\n          memberClockingInfo = null;\r\n        }\r\n      } else {\r\n        memberClockingInfo = null;\r\n      }\r\n      // console.log({memberClockingInfo});\r\n      \r\n      if (memberClockingInfo === undefined) {\r\n        const header = html`<h4 class=\"text-white\">Empty</h4>`;\r\n        const content = html`\r\n          <div>\r\n            <p class=\"text-black mb-2\">Attendance Clocking Not Found!</p>\r\n            <p class=\"text-black mb-2\"><small>Try again later.</small></p>\r\n          </div>\r\n        `;\r\n        return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n      } else if (memberClockingInfo === null) {\r\n        if (this._clockingExcuse === null) {\r\n          return html`\r\n            <div class=\"main-container\">\r\n              <div class=\"flex justify-center\">\r\n                <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n              </div>\r\n            </div>\r\n          `;\r\n        }\r\n      } else {\r\n        if (this._clockingExcuse === null) {\r\n          return html`\r\n            <div class=\"main-container\">\r\n              <div class=\"flex justify-center\">\r\n                <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n              </div>\r\n            </div>\r\n          `;\r\n        } else {          \r\n          const clockingId = memberClockingInfo.id === undefined ? 0 : memberClockingInfo.id;\r\n          const meetingEventId = memberClockingInfo.id === undefined ? 0 : memberClockingInfo.meetingEventId.id;\r\n\r\n          const submitBTN = meetingEventId === 0 ? html`\r\n            <mwc-button label=\"Save Excuse\" raised class=\"button\" @click=\"${this.submitForm}\" disabled>\r\n            </mwc-button>`: html`\r\n            <mwc-button label=\"Save Excuse\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n            </mwc-button>\r\n          `;\r\n          return html`\r\n            <div class=\"shadow bg-white p-2\">\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"add-excuse\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-10 col-lg-10\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Excuse</h4>\r\n                    ${this.excuse}\r\n                  </div>\r\n                  <div class=\"col-md-10 col-lg-10 my-2\">\r\n                    <div class=\"form-input-container\">\r\n                      ${submitBTN}\r\n                    </div>\r\n              \r\n                    <div class=\"flex form-input-container items-center text-center my-2\">\r\n                      <input type=\"hidden\" name=\"meetingEventId\" value=\"${meetingEventId}\" />\r\n                      <input type=\"hidden\" name=\"clockingId\" value=\"${clockingId}\" />\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          `;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private get excuse() {\r\n    // console.log({ \"this._clockingExcuse\": this._clockingExcuse });\r\n    if (this._clockingExcuse.length > 0) {\r\n      const clockingExcuse = this._clockingExcuse[0];\r\n      return html`<mwc-textarea class=\"h-96\" value=\"${clockingExcuse.excuse}\" outlined name=\"excuse\" id=\"excuse\"></mwc-textarea>`;\r\n    } else {\r\n      return html`<mwc-textarea class=\"h-96\" outlined name=\"excuse\" id=\"excuse\"></mwc-textarea>`;\r\n    }\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getMeetingEventId() {\r\n    let clockingId = urlQueryParamsGet('clocking-id');\r\n    // console.log({ userId });\r\n    let _clockingId = clockingId !== null ? base64Decode(clockingId) : null;\r\n    this.clockingId = Number.isNaN(_clockingId) ? null : Number(_clockingId);\r\n    // console.log({ \"this.clockingId\": this.clockingId });\r\n    this.clockingIdEnc = base64Encode(String(this.clockingId), true);\r\n  }\r\n\r\n  private async getAttendanceClockingExcuse() {\r\n    const _networkResponse = await GET_AttendanceClockingExcuse<MemberClockingExcuse_I>(\r\n      null, \"?clockingId=\" + this.clockingId\r\n    );\r\n    // console.log({ _networkResponse });\r\n\r\n    if (_networkResponse !== null) {\r\n      const _clockingExcuse = _networkResponse.paginResponse,\r\n        _clockingExcuseError = _networkResponse.response;\r\n      // console.log({ _clockingExcuseError });\r\n      if (_clockingExcuse !== null) {\r\n        const results = _clockingExcuse.results.map(excuse => {\r\n          return MemberClockingExcuse_S(excuse);\r\n        });\r\n        this._clockingExcuse = results;\r\n      } else {\r\n        this._clockingExcuse = [];\r\n      }\r\n    } else {\r\n      this._clockingExcuse = [];\r\n      // console.error({ _networkResponse })\r\n    }\r\n  }\r\n\r\n  private async getAttendanceClocking() {\r\n    const _networkResponse = await GET_AttendanceClocking<MemberClockingInfo_I>(this.clockingId);\r\n    // console.log({ _networkResponse })\r\n    if (_networkResponse === null) {\r\n      this._memberClockingInfo = undefined;\r\n    } else {\r\n      this._memberClockingInfo = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    \r\n    if (this._clockingExcuse.length > 0) {\r\n      // console.log({\"this._clockingExcuse_excuseId\": this._clockingExcuse});\r\n      const excuseId: number = this._clockingExcuse[0].id;\r\n      await PUT_AttendanceClockingExcuse(excuseId);\r\n    } else {\r\n      // console.log({\"this._clockingExcuse_no_excuse\": this._clockingExcuse});\r\n      await POST_AttendanceClockingExcuse();\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceClockingExcuse<Type>(clockingId: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-excuse'\r\n    + (clockingId === null ? \"\" : \"/\" + clockingId) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { MemberClockingInfo_I, MemberClockingInfo_S } from \"..\";\r\n\r\nexport interface MemberClockingExcuse_I {\r\n  id?: number,\r\n  clockingId?: MemberClockingInfo_I,\r\n  excuse?: string,\r\n  enteredBy?: number,\r\n  date?: Date\r\n}\r\n\r\nexport function MemberClockingExcuse_S(data: any): MemberClockingExcuse_I {\r\n  // console.log({data});\r\n\r\n  const memberClockingExcuse_S: MemberClockingExcuse_I = {\r\n    id: Number(data['id']),\r\n    clockingId: MemberClockingInfo_S(data['clockingId']),\r\n    excuse: String(data['excuse']),\r\n    enteredBy: Number(data['enteredBy']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return memberClockingExcuse_S;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_AttendanceClockingExcuse(excuseId: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-excuse/' + excuseId,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-excuse\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Excuse?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceClockingExcuse(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-excuse',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-excuse\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Enter Excuse?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          console.log({\"VALUE.data\": VALUE.data});\r\n          \r\n          window.location.reload();\r\n        } else {\r\n          window.location.reload();\r\n        }\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","GET_AttendanceClocking","ID","url_params","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","LinkButton","isBlockContent","raised","render","_aClass","this","thisIsBlockContent","_bClass","aClass","href","bClass","icon","label","value","createRenderRoot","type","String","Boolean","PdbAttendanceClockingExcuse","constructor","super","__memberClockingInfo","clockingId","clockingIdEnc","_clockingExcuse","_memberClockingInfo","requestUpdate","connectedCallback","getMeetingEventId","getAttendanceClocking","getAttendanceClockingExcuse","disconnectedCallback","Number","isNaN","header","content","memberClockingInfo","undefined","data","Array","isArray","length","id","meetingEventId","submitBTN","submitForm","excuse","clockingExcuse","firstUpdated","_clockingId","base64","_networkResponse","http","GET_AttendanceClockingExcuse","paginResponse","response","results","map","enteredBy","date","Date","e","preventDefault","excuseId","formContainer","document","querySelector","formData","FormData","title","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","unknownError","errors","forEach","err","errormsg","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","Object","VALUE","message","success","setTimeout","window","location","reload","PUT_AttendanceClockingExcuse","log","POST_AttendanceClockingExcuse","styles"],"sourceRoot":""}