{"version":3,"file":"../../public/assets/v2/prod-files/js/attendance/clocking/clocker.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/network/attendance/clocking/multiple_clocking.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/reset-clocking-list.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { BreakClockingTYPE, GenericMeetingEventClockingTypeInfo_I } from \"@@addons/interfaces/generic/meeting_event/clocking_type\";\r\n\r\n\r\nexport async function PATCH_AttendanceMultipleClockingBreak(meetingEventId: Number, action: string,\r\n  clockingType: BreakClockingTYPE, clockingIds: number[], clockingTypes: GenericMeetingEventClockingTypeInfo_I[]): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  let clockingTypeId = 0;\r\n  clockingTypes.forEach(cT => {\r\n    if (cT.name === clockingType) {\r\n      clockingTypeId = cT.id;\r\n    }\r\n  });\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/bulk-clocking/' + meetingEventId,\r\n    formData = {\r\n      clockingType: clockingTypeId,\r\n      clockingIds: clockingIds\r\n    };\r\n\r\n  return Swal.fire({\r\n    title: `${action} multiple action?`,\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallPaginResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsGet, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport '..';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { POST_AttendanceClockingUpdateClockingList } from '@@addons/network/attendance/clocking/reset-clocking-list';\r\nimport { TextField } from '@material/mwc-textfield';\r\nimport { PATCH_AttendanceMultipleClockingBreak } from '@@addons/network/attendance/clocking/multiple_clocking';\r\nimport { GET_GenericMeetingEventClockingType } from '@@addons/network/generic/meeting_event/clocking_type';\r\nimport { GenericMeetingEventClockingTypeInfo_I, GenericMeetingEventClockingTypeInfo_S } from '@@addons/interfaces/generic/meeting_event/clocking_type';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport '../../../membership/members/select-member-type';\r\nimport { MeetingEventScheduleGroup_I } from '@@addons/interfaces/attendance/meeting_event/group';\r\nimport { GET_AttendanceScheduleGroup } from '@@addons/network/attendance/setup/group';\r\nimport { until } from 'lit/directives/until.js';\r\nimport { GroupingsGroup_I, GroupingsGroup_S } from '@@addons/interfaces/members/groupings/group';\r\nimport { MeetingEventScheduleSubGroup_I } from '@@addons/interfaces/attendance/meeting_event/subgroup';\r\nimport { GroupingsSubGroup_I, GroupingsSubGroup_S } from '@@addons/interfaces/members/groupings/subgroup';\r\nimport { GET_AttendanceScheduleSubGroup } from '@@addons/network/attendance/setup/subgroup';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport './table_parts/first';\r\nimport './table_parts/second';\r\nimport './table_parts/third';\r\nimport { setClockingTimeInfo } from './table_parts/second';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { PageButtonUserAccess, AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '@@views/attendance/page__id';\r\n\r\n@customElement(\"pdb-attendance-clocking-clocker\")\r\nexport class PdbAttendanceClockingClocker extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Number })\r\n  private meetingEventId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private meetingEventIdEnc?: string = null;\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"attendance/meeting-event/attendance\";\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _clockingTypes: GenericMeetingEventClockingTypeInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _scheduleGroups: MeetingEventScheduleGroup_I[]  = [];\r\n\r\n  @property({ type: Array })\r\n  private _scheduleSubGroups: MeetingEventScheduleSubGroup_I[]  = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: String })\r\n  private clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  private clockingTime: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private meetingEventForToday: boolean = false;\r\n\r\n  private __members: NetworkCallPaginResponse_I<MembershipUser_I> = null;\r\n\r\n  public set _members(value: NetworkCallPaginResponse_I<MembershipUser_I>) {\r\n    this.__members = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _members(): NetworkCallPaginResponse_I<MembershipUser_I> {\r\n    return this.__members;\r\n  }\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _pageButtonAccess: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    this.getMeetingEventId();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getGenders();\r\n    await this.getClockingType();\r\n    await this.getClientMemberCategories();\r\n    await this.getAttendanceScheduleGroup();\r\n    await this.getAttendanceScheduleSubGroup();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      this._pageButtonAccess = PageButtonUserAccess(PAGE__IDS.clocking);\r\n      \r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.clocking, viewType: \"Both\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    // console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n    if ((this.meetingEventId === 0) || (this.meetingEventId === null) || (Number.isNaN(this.meetingEventId))) {\r\n      return html`\r\n        <div class=\"shadow bg-white p-2\">\r\n          <pdb-attendance-clocking-meeting-picker\r\n            openContentBaseUrl=\"/attendance/v2/clocking/clocker?meeting-event-id=\">\r\n          </pdb-attendance-clocking-meeting-picker>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"shadow bg-white p-2\">\r\n          <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n          <div class=\"block my-1\">\r\n            <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n              filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n            </mwc-button>\r\n          </div>\r\n          <div class=\"block my-1\">\r\n            ${this.filterForm}\r\n          </div>\r\n          <div class=\"block my-1 overflow-x-scroll\">\r\n            <hr class=\"my-2\"/>\r\n            <div class=\"my-2 flex flex-col items-end\">\r\n              <div class=\"col-md-6 col-lg-4 flex flex-col items-end\">\r\n                <h4 class=\"font-semibold my-2 capitalize\">Override Clocking Time</h4>\r\n                <switch-input class=\"capitalize\" ?isSelected=\"${this.clockingTime}\" name=\"clockingTimeSwitchAction\"\r\n                  label=\"Override Clocking Time\"></switch-input>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            ${this.clockingTimeField}\r\n            ${this.table}\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get clockingTimeField() {\r\n    if (this.clockingTime) {\r\n      return html`\r\n        <div class=\"my-1 flex flex-col items-end\">\r\n          <div class=\"col-md-6 col-lg-4 flex flex-col items-end\">\r\n            <h4 class=\"font-semibold my-2\">Select Date</h4>\r\n            <mwc-textfield name=\"setClockingTimeBtn\" type=\"datetime-local\" step=\"1\" class=\"w-full\" label=\"Select Clocking Time\"\r\n              value=\"${this.clockingTimeValue}\" outlined required>\r\n            </mwc-textfield><br>\r\n            <mwc-button raised label=\"Set Clocking Time\" @click=\"${this.setClockingTimeBtn}\"></mwc-button>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return nothing;\r\n    }\r\n  }\r\n\r\n  private get resetClockingList() {\r\n    // if (this.meetingEventForToday) {\r\n      return html`\r\n        <div class=\"my-1 flex flex-col items-end\">\r\n          <div class=\"col-md-6 col-lg-4 flex flex-col items-end\">\r\n            <mwc-button raised label=\"Refresh Clocking List\" class=\"success\" @click=\"${this.UpdateClockingList}\"></mwc-button>\r\n          </div>\r\n        </div>\r\n      `;\r\n    // } else {\r\n    //   return nothing;\r\n    // }\r\n  }\r\n\r\n  private setClockingTimeBtn(e: any) {\r\n    // console.log({ e });\r\n    document.querySelectorAll('mwc-textfield[name=\"setClockingTimeBtn\"]').forEach((input: TextField) => {\r\n      this.clockingTimeValue = input.value;\r\n    });\r\n    // console.log({ \"this.clockingTimeValue\": this.clockingTimeValue });\r\n  }\r\n\r\n  private clockingTimeSwitchAction() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"clockingTimeSwitchAction\"]').forEach((_switch) => {\r\n      _switch.addEventListener(\"click\", (evt) => {\r\n        // @ts-ignore \r\n        _this.clockingTime = _switch.isSelected;\r\n        // console.log({ \"_this.clockingTime\": _this.clockingTime });\r\n        // @ts-ignore\r\n        // console.log({ \"_switch.isSelected\": _switch.isSelected });\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, unmutableInputNames: [\r\n        { name: 'meeting-event-id', value: this.meetingEventIdEnc },\r\n      ],\r\n    });\r\n    this.clockingTimeSwitchAction();\r\n    setInterval(() => setClockingTimeInfo(this.clockingTime, this.clockingTimeValue)); // this is to change automatically update clocking times since datatabel is not allowing it\r\n  }\r\n\r\n  private getMeetingEventId() {\r\n    let meetingEventId = urlQueryParamsGet('meeting-event-id');\r\n    // console.log({ userId });\r\n    let _meetingEventId = meetingEventId !== null ? base64Decode(meetingEventId) : null;\r\n    this.meetingEventId = Number.isNaN(_meetingEventId) ? null : Number(_meetingEventId);\r\n    // console.log({ \"this.meetingEventId\": this.meetingEventId });\r\n    this.meetingEventIdEnc = base64Encode(String(this.meetingEventId), true);\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_date = \"filter_date\",\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_filter_member_category = \"filter_member_category\",\r\n      filterNameId_filter_group = \"filter_group\",\r\n      filterNameId_filter_subgroup = \"filter_subgroup\",\r\n      filterNameId_filter_from_age = \"filter_from_age\",\r\n      filterNameId_filter_to_age = \"filter_to_age\";\r\n\r\n    let filterNameId_filter_dateVal: string = null,\r\n      filterNameId_filter_genderVal: string = null,\r\n      filterNameId_filter_nameVal:string = null,\r\n      filterNameId_filter_identityVal: string = null,\r\n      filterNameId_filter_member_categoryVal: number = null,\r\n      filterNameId_filter_groupVal: number = null,\r\n      filterNameId_filter_subgroupVal: number = null,\r\n      filterNameId_filter_from_ageVal: number = null,\r\n      filterNameId_filter_to_ageVal: number = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_filter_date) {\r\n          if (value === null) {\r\n            filterNameId_filter_dateVal = \"\";\r\n          } else {\r\n            const date = new Date(value),\r\n              _DATE = date.toLocaleDateString('en-US', {\r\n                day: '2-digit', month: '2-digit', year: 'numeric', formatMatcher: 'best fit',\r\n                // @ts-ignore\r\n              }).split('/'),\r\n              DATE = [_DATE[2], _DATE[0], _DATE[1]].join('-'); \r\n            filterNameId_filter_dateVal = DATE;\r\n          }\r\n        }\r\n        if (key === filterNameId_filter_gender) {\r\n          filterNameId_filter_genderVal = value;\r\n        }\r\n        if (key === filterNameId_filter_name) {\r\n          filterNameId_filter_nameVal = value;\r\n        }\r\n        if (key === filterNameId_filter_identity) {\r\n          filterNameId_filter_identityVal = value;\r\n        }\r\n        if (key === filterNameId_filter_member_category) {\r\n          filterNameId_filter_member_categoryVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_group) {\r\n          filterNameId_filter_groupVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_subgroup) {\r\n          filterNameId_filter_subgroupVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_from_age) {\r\n          filterNameId_filter_from_ageVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_to_age) {\r\n          filterNameId_filter_to_ageVal = Number(value);\r\n        }\r\n      }\r\n    \r\n    const nameField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Search By Name\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_name}\" id=\"${filterNameId_filter_name}\" label=\"Search By Name\" \r\n            value=\"${filterNameId_filter_nameVal === null ? \"\" : filterNameId_filter_nameVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const ageField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Filter Age In Years\r\n          <div class=\"flex\">\r\n            <mwc-textfield type=\"number\" min=\"0\" name=\"${filterNameId_filter_from_age}\" id=\"${filterNameId_filter_from_age}\" label=\"Pick From Age\" \r\n              value=\"${filterNameId_filter_from_ageVal === null ? \"\" : filterNameId_filter_from_ageVal}\" class=\"mx-1\" outlined required>\r\n            </mwc-textfield>\r\n            <mwc-textfield type=\"number\" min=\"0\" name=\"${filterNameId_filter_to_age}\" id=\"${filterNameId_filter_to_age}\" label=\"Pick To Age\" \r\n              value=\"${filterNameId_filter_to_ageVal === null ? \"\" : filterNameId_filter_to_ageVal}\" class=\"mx-1\" outlined required>\r\n            </mwc-textfield>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Member Category\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_filter_member_categoryVal}\" \r\n            name=\"${filterNameId_filter_member_category}\" id=\"${filterNameId_filter_member_category}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const dateField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Pick Date\r\n          <mwc-textfield type=\"date\" name=\"${filterNameId_filter_date}\" id=\"${filterNameId_filter_date}\"\r\n            value=\"${filterNameId_filter_dateVal}\" outlined required></mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const genderField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Gender\r\n          <mwc-select name=\"${filterNameId_filter_gender}\" id=\"${filterNameId_filter_gender}\" label=\"Select Gender\" outlined required>\r\n            ${this._genders.map((item) => {\r\n              // console.log({item});\r\n              if (filterNameId_filter_genderVal === null) {\r\n                return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_genderVal) === item.id) {\r\n                  return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const groupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Meeting/ Event Group\r\n          <mwc-select name=\"${filterNameId_filter_group}\" id=\"${filterNameId_filter_group}\" label=\"Select Meeting/ Event Group\" outlined required>\r\n            ${this._scheduleGroups.map((item) => {\r\n              // console.log({item});\r\n              const groupId = item.groupId;\r\n              const groupName = until(this.getGroup(groupId), html`<span>Loading...</span>`);\r\n              if (filterNameId_filter_groupVal === null) {\r\n                return html`<mwc-list-item value=\"${groupId}\">${groupName}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_groupVal) === groupId) {\r\n                  return html`<mwc-list-item value=\"${groupId}\" selected>${groupName}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${groupId}\">${groupName}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const subGroupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Meeting/ Event Sub-Group\r\n          <mwc-select name=\"${filterNameId_filter_subgroup}\" id=\"${filterNameId_filter_subgroup}\" label=\"Select Meeting/ Event Sub-Group\" outlined required>\r\n            ${this._scheduleSubGroups.map((item) => {\r\n              // console.log({item});\r\n              const subGroupId = item.subGroupId;\r\n              const subGroupName = until(this.getSubGroup(subGroupId), html`<span>Loading...</span>`);\r\n              if (filterNameId_filter_subgroupVal === null) {\r\n                return html`<mwc-list-item value=\"${subGroupId}\">${subGroupName}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_subgroupVal) === subGroupId) {\r\n                  return html`<mwc-list-item value=\"${subGroupId}\" selected>${subGroupName}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${subGroupId}\">${subGroupName}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const identifyField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Search By Member ID\r\n          <mwc-textfield name=\"${filterNameId_filter_identity}\" id=\"${filterNameId_filter_identity}\" label=\"Search By Member ID\"\r\n            value=\"${filterNameId_filter_identityVal === null ? \"\" : filterNameId_filter_identityVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${memberCategoryField} ${nameField} ${genderField} ${ageField} ${identifyField} ${groupField} ${subGroupField} ${dateField}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <input type=\"hidden\" name=\"meeting-event-id\" value=\"${this.meetingEventIdEnc}\" />\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Clock In', },\r\n      { title: 'Clock Out', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Clock In', },\r\n      { title: 'Clock Out', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + \"?branchId=\" + branchId\r\n      + \"&meetingEventId=\" + this.meetingEventId + \"&memberType=\" + memberType + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      ${this._pageButtonAccess? this.resetClockingList: nothing}\r\n      <form>\r\n        <div class=\"my-1 flex flex-col items-end\">\r\n          <div class=\"col-md-6 col-lg-4 flex flex-row-reverse my-1 items-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-danger !mx-1\" multi-break-clocking=\"outTime\">Clock Out Selected</button>\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-success !mx-1\" multi-break-clocking=\"inTime\">Clock In Selected</button>\r\n          </div>\r\n          <div class=\"col-md-6 col-lg-4 flex flex-row-reverse my-1 items-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-danger !mx-1\" multi-break-clocking=\"endBreak\">End Break For Selected</button>\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-success !mx-1\" multi-break-clocking=\"startBreak\">Start Break For Selected</button>\r\n          </div>\r\n        </div>\r\n        <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n          .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n      </form>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, clockingInfo: MemberClockingInfo_I) {\r\n    // console.log({clockingInfo});\r\n    const _clockingInfo = MemberClockingInfo_S(clockingInfo);\r\n    const TODAY = new Date();\r\n    this.meetingEventForToday = _clockingInfo.date.toDateString() === TODAY.toDateString();\r\n    // @ts-ignore\r\n    return `<clocker-table-parts-first data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(_clockingInfo).replaceAll(\"'\", \"&rsquo;\")}' ></clocker-table-parts-first>`;\r\n  }\r\n\r\n  private renderClockInInfo(data: any, type: any, clockingInfo: MemberClockingInfo_I) {\r\n    // console.log({clockingInfo});\r\n      console.log({\"--this._pageButtonAccess--\": this._pageButtonAccess});\r\n      if (this._pageButtonAccess) {\r\n        // @ts-ignore\r\n        return `<clocker-table-parts-second clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n          ?clockingtime=\"${this.clockingTime}\" pageButtonAccess clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n        </clocker-table-parts-second>`;\r\n      } else {\r\n        // @ts-ignore\r\n        return `<clocker-table-parts-second clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n          ?clockingtime=\"${this.clockingTime}\" clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n        </clocker-table-parts-second>`;\r\n      }\r\n  }\r\n\r\n  private renderClockOutInfo(data: any, type: any, clockingInfo: MemberClockingInfo_I) {\r\n    // console.log({clockingInfo});\r\n    if (this._pageButtonAccess) {\r\n      // @ts-ignore\r\n      return `<clocker-table-parts-third clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n        ?clockingtime=\"${this.clockingTime}\" pageButtonAccess clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n      </clocker-table-parts-third>`;\r\n    } else {\r\n      // @ts-ignore\r\n      return `<clocker-table-parts-third clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n        ?clockingtime=\"${this.clockingTime}\" clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n      </clocker-table-parts-third>`;\r\n    }\r\n  }\r\n\r\n  private multiBreakClocking() {\r\n    const selectorString = 'multi-break-clocking';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(break_clocking => {\r\n      break_clocking.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.multiBreakClockingSubmit(break_clocking, selectorString, e);\r\n      });\r\n    });\r\n  }\r\n\r\n  async multiBreakClockingSubmit(element: Element, selectorString: string, e: any) {\r\n    e.preventDefault();\r\n    // @ts-ignore \r\n    const break_clockingTYPE: BreakClockingTYPE = element.getAttribute(selectorString);\r\n    // console.log({ e, element, break_clockingTYPE });\r\n    const IN = document.querySelectorAll('input[type=\"checkbox\"][multi-break-check-in]');\r\n    const OUT = document.querySelectorAll('input[type=\"checkbox\"][multi-break-check-out]');\r\n\r\n    let checkedIn: Array<number> = [],\r\n      checkedOut: Array<number> = [];\r\n    IN.forEach((checkbox: HTMLInputElement) => {\r\n      // console.log({\"IN - checkbox\": checkbox});\r\n      if (checkbox.checked) {\r\n        const memberId = Number(checkbox.getAttribute(\"multi-break-check-in\"));\r\n        if (!checkedIn.includes(memberId)) {\r\n          checkedIn.push(memberId)\r\n        }\r\n      }\r\n    });\r\n    OUT.forEach((checkbox: HTMLInputElement) => {\r\n      // console.log({\"OUT - checkbox\": checkbox});\r\n      if (checkbox.checked) {\r\n        const memberId = Number(checkbox.getAttribute(\"multi-break-check-out\"));\r\n        if (!checkedOut.includes(memberId)) {\r\n          checkedOut.push(memberId)\r\n        }\r\n      }\r\n    });\r\n    if (break_clockingTYPE === \"inTime\" || break_clockingTYPE === \"startBreak\") {\r\n      // console.log({ break_clockingTYPE, \"checkedIn\": checkedIn });      \r\n      let action: string = \"Initiate\";\r\n      if (break_clockingTYPE === \"inTime\") {\r\n        action = \"Clock In\";\r\n      }\r\n      if (break_clockingTYPE === \"startBreak\") {\r\n        action = \"Start Break\";\r\n      }\r\n      await PATCH_AttendanceMultipleClockingBreak(\r\n        this.meetingEventId, action, break_clockingTYPE, checkedIn, this._clockingTypes\r\n      );\r\n    } else if (break_clockingTYPE === \"outTime\" || break_clockingTYPE === \"endBreak\") {\r\n      // console.log({break_clockingTYPE, \"checkedOut\": checkedOut});        \r\n      let action: string = \"Initiate\";\r\n      if (break_clockingTYPE === \"outTime\") {\r\n        action = \"Clock Out\";\r\n      }\r\n      if (break_clockingTYPE === \"endBreak\") {\r\n        action = \"End Break\";\r\n      }\r\n      await PATCH_AttendanceMultipleClockingBreak(\r\n        this.meetingEventId, action, break_clockingTYPE, checkedOut, this._clockingTypes\r\n      );\r\n    }\r\n  }\r\n\r\n  async UpdateClockingList(e: any) {\r\n    e.preventDefault();\r\n\r\n    let today_date = new Date(),\r\n      year = today_date.toLocaleString('default', { year: \"numeric\" }),\r\n      month = today_date.toLocaleString('default', { month: \"2-digit\" }),\r\n      day = today_date.toLocaleString('default', { day: \"2-digit\" }),\r\n      filter_date = year + \"-\" + month + \"-\" + day;\r\n    \r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_date = \"filter_date\";\r\n    \r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if (key === filterNameId_filter_date) {\r\n        // console.log({value, });\r\n        \r\n        filter_date = value;\r\n      }\r\n    } \r\n    // console.log({ \"filter_date\": filter_date });\r\n    \r\n    await POST_AttendanceClockingUpdateClockingList(this.meetingEventId, filter_date);\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n    filterNameId_filter_date = \"filter_date\",\r\n    filterNameId_filter_gender = \"filter_gender\",\r\n    filterNameId_filter_name = \"filter_name\",\r\n    filterNameId_filter_identity = \"filter_identity\",\r\n    filterNameId_filter_member_category = \"filter_member_category\",\r\n    filterNameId_filter_group = \"filter_group\",\r\n    filterNameId_filter_subgroup = \"filter_subgroup\",\r\n    filterNameId_filter_from_age = \"filter_from_age\",\r\n    filterNameId_filter_to_age = \"filter_to_age\";\r\n\r\n    let newObject:any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_date) || (key === filterNameId_filter_gender) || (key === filterNameId_filter_name)\r\n        || (key === filterNameId_filter_identity) || (key === filterNameId_filter_member_category)\r\n        || (key === filterNameId_filter_group) || (key === filterNameId_filter_subgroup)\r\n        || (key === filterNameId_filter_from_age) || (key === filterNameId_filter_to_age)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n      }\r\n    } \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getClockingType() {\r\n    const _networkResponse = await GET_GenericMeetingEventClockingType<GenericMeetingEventClockingTypeInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let ___clockingTypes: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      ___clockingTypes.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericMeetingEventClockingTypeInfo_I[] = data.map(value => {\r\n          return GenericMeetingEventClockingTypeInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        ___clockingTypes = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GenericMeetingEventClockingTypeInfo_I> = [];\r\n    new_data.push(...this._clockingTypes, ...___clockingTypes);\r\n    this._clockingTypes = new_data;\r\n  }\r\n\r\n  private async getAttendanceScheduleGroup() {\r\n    if (this.meetingEventId === 0) return;\r\n    const _networkResponse = await GET_AttendanceScheduleGroup<MeetingEventScheduleGroup_I>(\r\n      null, \"?meetingEventId=\" + this.meetingEventId\r\n    );\r\n    // console.log({ _networkResponse });\r\n    if (_networkResponse !== null) {\r\n      const _scheduleGroups = _networkResponse.paginResponse;\r\n      if (_scheduleGroups.results.length > 0) {\r\n        this._scheduleGroups = _scheduleGroups.results;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getGroup(ID: number) {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n    if (_networkResponse === null) {\r\n      return \"???\";\r\n    } else {\r\n      if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n        \r\n        const group: GroupingsGroup_I = GroupingsGroup_S(_networkResponse.response.data);\r\n        return group.group;\r\n      } else {\r\n        return _networkResponse.response.message;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getAttendanceScheduleSubGroup() {\r\n    if (this.meetingEventId === 0) return;\r\n    const _networkResponse = await GET_AttendanceScheduleSubGroup<MeetingEventScheduleSubGroup_I>(\r\n      null, \"?meetingEventId=\" + this.meetingEventId\r\n    );\r\n    // console.log({ _networkResponse });\r\n    if (_networkResponse !== null) {\r\n      const _scheduleSubGroups = _networkResponse.paginResponse;\r\n      if (_scheduleSubGroups.results.length > 0) {\r\n        this._scheduleSubGroups = _scheduleSubGroups.results;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getSubGroup(ID: number) {\r\n    // console.log({subgroup_ID: ID})\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<GroupingsSubGroup_I>(ID);\r\n    if (_networkResponse === null) {\r\n      return \"???\";\r\n    } else {\r\n      if (_networkResponse.response.success && 'subgroup' in _networkResponse.response.data) {\r\n        \r\n        const subgroup: GroupingsSubGroup_I = GroupingsSubGroup_S(_networkResponse.response.data);\r\n        // console.log({subgroup})\r\n        return subgroup.subgroup;\r\n      } else {\r\n        return _networkResponse.response.message;\r\n      }\r\n    }\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    \r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, clockingInfo: MemberClockingInfo_I) => __this.renderMemberInfo(data, type, clockingInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, clockingInfo: MemberClockingInfo_I) => __this.renderClockInInfo(data, type, clockingInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'outTime',\r\n          render: (data: any, type: any, clockingInfo: MemberClockingInfo_I) => __this.renderClockOutInfo(data, type, clockingInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.multiBreakClocking();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceClockingUpdateClockingList(meetingEventId: Number, date: string): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/reset-clocking-list/' + meetingEventId,\r\n    formData = {\"time\": date};\r\n\r\n  return Swal.fire({\r\n    title: 'Update Clocking List?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return Swal.fire({\r\n        title: 'Update Clocking List?',\r\n        // text: \"You won't be able to revert this!\",\r\n        icon: 'info',\r\n        iconColor: '#f97817',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'Cancel',\r\n        confirmButtonColor: '#f97817',\r\n        cancelButtonColor: '#ddd',\r\n        reverseButtons: true,\r\n        showLoaderOnConfirm: true,\r\n        backdrop: true,\r\n        preConfirm: async (login) => {\r\n          return await http(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n              Authorization: \"Token \" + _get_cookie.token\r\n            }\r\n          }, true, false).then((HTTP) => {\r\n            // console.log({ HTTP });\r\n    \r\n            const networkCallRes = new NetWorkCallResponses<string>(\"post\", HTTP, false);\r\n            const _RESPONSE = networkCallRes.response;\r\n            // console.log({\"_RESPONSE\": _RESPONSE});\r\n            if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n              if (_RESPONSE.unknownError.length > 0) {\r\n                // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n    \r\n                let errors: Array<{ error: string }> = [];\r\n                _RESPONSE.unknownError.forEach(e => {\r\n                  const _errors = e.errors;\r\n                  _errors.forEach(err => {\r\n                    let errormsg = { error: e.id + \": \" + err };\r\n                    if (e.id === \"non_field_errors\") {\r\n                      errormsg = { error: err };\r\n                    }\r\n    \r\n                    errors.push(errormsg);\r\n                  });\r\n                });\r\n    \r\n                const res = https_swal_error_format(errors);\r\n                Swal.showValidationMessage(\r\n                  `${res}`\r\n                );\r\n              }\r\n            }\r\n            return networkCallRes;\r\n          }).catch(error => {\r\n            Swal.showValidationMessage(\r\n              `${String(error)}`\r\n            );\r\n          });\r\n        },\r\n        allowOutsideClick: () => !Swal.isLoading()\r\n      }).then((result) => {\r\n        // console.log({ result });\r\n        if (result.isConfirmed) {\r\n          let successMsg = \"Success\";\r\n          const _VALUE = result.value;\r\n    \r\n          if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n            const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n            successMsg = String(VALUE.message);\r\n          }\r\n    \r\n          if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n            Swal.fire({\r\n              title: successMsg,\r\n              icon: 'success',\r\n              iconColor: '#f97817',\r\n              confirmButtonColor: '#f97817',\r\n            });\r\n            setTimeout(() => {\r\n              window.location.reload();\r\n            }, 500);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","PATCH_AttendanceMultipleClockingBreak","meetingEventId","action","clockingType","clockingIds","clockingTypes","_get_cookie","clockingTypeId","forEach","cT","name","id","url","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","_RESPONSE","response","unknownError","length","errors","e","err","errormsg","error","push","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","value","Object","VALUE","message","setTimeout","window","location","reload","PdbAttendanceClockingClocker","constructor","super","meetingEventIdEnc","datatablePathUrl","_genders","_clockingTypes","_memberCategories","_scheduleGroups","_scheduleSubGroups","_activeBranchId","_memberType","clockingTimeValue","clockingTime","meetingEventForToday","__members","_hasSetup","_pageButtonAccess","_members","this","requestUpdate","connectedCallback","getMeetingEventId","activeBranchId","filterBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGenders","getClockingType","getClientMemberCategories","getAttendanceScheduleGroup","getAttendanceScheduleSubGroup","disconnectedCallback","render","expiration_date","expired","pageId","viewType","Number","isNaN","toggleFilterFields","filterForm","clockingTimeField","table","setClockingTimeBtn","resetClockingList","UpdateClockingList","document","querySelectorAll","input","clockingTimeSwitchAction","_this","_switch","addEventListener","evt","isSelected","firstUpdated","unmutableInputNames","setInterval","_meetingEventId","base64","returnHtml","_urlQueryParams","filterNameId_filter_date","filterNameId_filter_gender","filterNameId_filter_name","filterNameId_filter_identity","filterNameId_filter_member_category","filterNameId_filter_group","filterNameId_filter_subgroup","filterNameId_filter_from_age","filterNameId_filter_to_age","filterNameId_filter_dateVal","filterNameId_filter_genderVal","filterNameId_filter_nameVal","filterNameId_filter_identityVal","filterNameId_filter_member_categoryVal","filterNameId_filter_groupVal","filterNameId_filter_subgroupVal","filterNameId_filter_from_ageVal","filterNameId_filter_to_ageVal","key","_DATE","Date","toLocaleDateString","day","month","year","formatMatcher","split","join","nameField","ageField","memberCategoryField","dateField","genderField","map","item","groupField","groupId","groupName","until","getGroup","subGroupField","subGroupId","subGroupName","getSubGroup","identifyField","clear_filter","submit","__tableHeaders","__tableBody","__tableFoot","memberType","branchId","URL","urlQueryString","__dataTable","ajaxHeader","renderMemberInfo","data","type","clockingInfo","_clockingInfo","TODAY","date","toDateString","replaceAll","renderClockInInfo","console","log","renderClockOutInfo","multiBreakClocking","selectorString","break_clocking","preventDefault","multiBreakClockingSubmit","element","break_clockingTYPE","getAttribute","IN","OUT","checkedIn","checkedOut","checkbox","checked","memberId","includes","today_date","filter_date","toLocaleString","POST_AttendanceClockingUpdateClockingList","newObject","_urlQueryParamsJoin","_networkResponse","__genders","success","new_data","___clockingTypes","paginResponse","results","ID","group","subgroup","__memberCategories","category","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","buttons","select","createRenderRoot","styles","Element","HTMLFormElement","Array","Boolean"],"sourceRoot":""}