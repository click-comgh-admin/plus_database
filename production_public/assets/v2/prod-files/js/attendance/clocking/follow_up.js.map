{"version":3,"file":"../../public/assets/v2/prod-files/js/attendance/clocking/follow_up.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index_full.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/index.ts","webpack://webpackNumbers/./src/addons/widgets/buttons/link-buttons/link-button.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/messaging_type/index.ts","webpack://webpackNumbers/./src/view/attendance/follow_up/index.ts","webpack://webpackNumbers/./src/addons/network/generic/messaging_type/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/follow_up/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/follow_up/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/follow_up/delete.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/follow_up/resend.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/follow_up/post.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \".\";\r\n\r\nexport interface MemberClockingInfoFull_I {\r\n  attendance?: MemberClockingInfo_I,\r\n  additionalInfo?: MemberClockingAdditionalInfo_I,\r\n  lastSeen?: Date,\r\n  status?: String,\r\n}\r\nexport interface MemberClockingAdditionalInfo_I {\r\n  id?: number,\r\n  memberId?: number,\r\n  memberInfo?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  phone?: string,\r\n  email?: string,\r\n  placeOfWork?: string,\r\n  whatsapp?: string,\r\n  facebook?: string,\r\n  twitter?: string,\r\n  instagram?: string,\r\n  businessHashtag?: string,\r\n  businessDescription?: string,\r\n  profession?: string,\r\n  dateJoined?: Date,\r\n  date?: Date\r\n}\r\n\r\nexport const InstanceOfOrganizationMember = (data: any) => {\r\n  return \"organizationName\" in data && \"organizationType\" in data && \"businessRegistered\" in data && \"organizationPhone\" in data && \"dateOfIncorporation\" in data;\r\n}\r\n\r\nexport function MemberClockingAdditionalInfo_S(data: any, accountType?: number): MemberClockingAdditionalInfo_I {\r\n  // console.log({data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (accountType === 1) {\r\n    memberInfo = MembershipUser_S(data['memberInfo']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberInfo']))\r\n  }\r\n  \r\n  const MemberClockingAdditionalInfo_S: MemberClockingAdditionalInfo_I = {\r\n    id: Number(data['id']),\r\n    memberId: Number(data['memberId']),\r\n    memberInfo: memberInfo,\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    facebook: String(data['facebook']),\r\n    instagram: String(data['instagram']),\r\n    placeOfWork: String(data['placeOfWork']),\r\n    profession: String(data['profession']),\r\n    twitter: String(data['twitter']),\r\n    whatsapp: String(data['whatsapp']),\r\n    businessHashtag: String(data['businessHashtag']),\r\n    businessDescription: String(data['businessDescription']),\r\n    dateJoined: Date_I(data['dateJoined']),\r\n    date: Date_I(data['date']),\r\n  };\r\n\r\n  return MemberClockingAdditionalInfo_S;\r\n}\r\n\r\nexport function MemberClockingInfoFull_S(data: any): MemberClockingInfoFull_I {\r\n  // console.log({data});\r\n  const ATTENDANCE = MemberClockingInfo_S(data['attendance']);\r\n  \r\n  const MemberClockingInfoFull_S: MemberClockingInfoFull_I = {\r\n    attendance: ATTENDANCE,\r\n    additionalInfo: MemberClockingAdditionalInfo_S(data['additionalInfo'], ATTENDANCE.accountType),\r\n    lastSeen: Date_I(data['lastSeen']),\r\n    status: String(data['status']),\r\n  };\r\n\r\n  return MemberClockingInfoFull_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceClocking<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n@customElement('link-button')\r\nexport class LinkButton extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public aClass?: string;\r\n\r\n  @property({ type: String })\r\n  public bClass?: string;\r\n\r\n  @property({ type: String })\r\n  public icon?: string;\r\n\r\n  @property({ type: String })\r\n  public href?: string;\r\n\r\n  @property({ type: String })\r\n  public label?: string;\r\n\r\n  @property({ type: String })\r\n  public isBlockContent?: \"true\" | \"false\" = \"true\";\r\n\r\n  @property({ type: Boolean })\r\n  public raised?: boolean = false;\r\n  \r\n  render() {\r\n    const _aClass = this.thisIsBlockContent('mdc-deprecated-list-item');\r\n    const _bClass = this.thisIsBlockContent('mdc-deprecated-list-item__ripple');\r\n    if (this.raised === true) {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass} no-underline hover:no-underline\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" raised icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <a class=\"${_aClass} ${this.aClass}\" href=\"${this.href}\">\r\n          <mwc-button class=\"${_bClass} mt-1 text-left ${this.bClass}\" icon=\"${this.icon}\"\r\n            label=\"${this.label}\">\r\n          </mwc-button>\r\n        </a>\r\n      `;\r\n    }\r\n  }\r\n\r\n  thisIsBlockContent(value: string) {\r\n    return this.isBlockContent === \"true\" ? value : \"\";\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","// To parse this data:\n//\n//   import { Convert, GenericMessagingTypeModel } from \"./file\";\n//\n//   const genericMessagingTypeModel = Convert.toGenericMessagingTypeModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface GenericMessagingTypeModel {\n    id?:   number;\n    name?: string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toGenericMessagingTypeModel(json: string): GenericMessagingTypeModel {\n        return cast(JSON.parse(json), r(\"GenericMessagingTypeModel\"));\n    }\n\n    public static genericMessagingTypeModelToJson(value: GenericMessagingTypeModel): string {\n        return JSON.stringify(uncast(value, r(\"GenericMessagingTypeModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n  // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"GenericMessagingTypeModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"name\", js: \"name\", typ: u(null, \"\") },\n    ], false),\n};\n","import '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport '@@addons/widgets/alert';\r\nimport '@material/mwc-textarea';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-circular-progress';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { MemberClockingFollowUp_I, MemberClockingFollowUp_S } from '@@addons/interfaces/attendance/member_clocking_info/follow_up';\r\nimport { GET_AttendanceClockingFollowUp } from '@@addons/network/attendance/clocking/follow_up';\r\nimport { POST_AttendanceClockingFollowUp } from '@@addons/network/attendance/clocking/follow_up/post';\r\nimport { MemberClockingInfo_I } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { GenericMessagingTypeModel, Convert as gmtmConvert } from '@@addons/interfaces/generic/messaging_type';\r\nimport { GET_GenericMessagingType } from '@@addons/network/generic/messaging_type';\r\nimport { GET_AttendanceClocking } from '@@addons/network/attendance/clocking';\r\nimport { DELETE_AttendanceClockingFollowUp } from '@@addons/network/attendance/clocking/follow_up/delete';\r\nimport { PATCH_AttendanceClockingFollowUp_Resend } from '@@addons/network/attendance/clocking/follow_up/resend';\r\nimport { InstanceOfOrganizationMember } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { MembershipOrganizationUserModel } from '@@addons/interfaces/members/user/organization_model';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\n\r\n\r\n@customElement(\"pdb-attendance-clocking-follow_up\")\r\nexport class PdbAttendanceClockingFollowUp extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private __memberClockingInfo: NetworkCallResponse_I<MemberClockingInfo_I> = null;\r\n\r\n  public set _memberClockingInfo(value: NetworkCallResponse_I<MemberClockingInfo_I>) {\r\n    this.__memberClockingInfo = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _memberClockingInfo(): NetworkCallResponse_I<MemberClockingInfo_I> {\r\n    return this.__memberClockingInfo;\r\n  }\r\n\r\n  @property({ type: Array })\r\n  private _messagingTypes: GenericMessagingTypeModel[] = [];\r\n\r\n  @property({ type: Number })\r\n  private clockingId?: number = 0;\r\n\r\n  @property({ type: Boolean })\r\n  private showingForm?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private toggleFollowUpFormCalled?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private toggleMessageMetadatFormCalled?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clockingIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _clockingFollowUp: MemberClockingFollowUp_I[] = null;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    document.onreadystatechange = (event) => {\r\n      setInterval(() => {\r\n        if (!this.toggleFollowUpFormCalled) {\r\n          if (document.readyState == \"complete\") this.toggleFollowUpForm(event);\r\n        }\r\n        if (!this.toggleMessageMetadatFormCalled) {\r\n          if (document.readyState == \"complete\") this.toggleMessageMetadatForm(event);\r\n        }\r\n      },);\r\n    }  \r\n\r\n    this.getMeetingEventId();\r\n    await this.getMessagingTypes();\r\n    await this.getAttendanceClocking();\r\n    await this.getAttendanceClockingFollowUp();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if ((this.clockingId === 0) || (this.clockingId === null) || (Number.isNaN(this.clockingId))) {\r\n      const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">Clocking ID Not Found!</p>\r\n        </div>\r\n      `;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n      let memberClockingInfo: MemberClockingInfo_I = null;\r\n      // console.log({\"this._memberClockingInfo\": this._memberClockingInfo})\r\n      if (this._memberClockingInfo !== null) {\r\n        if (this._memberClockingInfo.data !== undefined) {\r\n          if (Array.isArray(this._memberClockingInfo.data)) {\r\n            memberClockingInfo = this._memberClockingInfo.data.length > 0 ? this._memberClockingInfo.data[0] : {};\r\n          } else {\r\n            memberClockingInfo = this._memberClockingInfo.data;\r\n          }\r\n        } else {\r\n          memberClockingInfo = null;\r\n        }\r\n      } else {\r\n        memberClockingInfo = null;\r\n      }\r\n      // console.log({memberClockingInfo});\r\n      \r\n      if (memberClockingInfo === undefined) {\r\n        const header = html`<h4 class=\"text-white\">Empty</h4>`;\r\n        const content = html`\r\n          <div>\r\n            <p class=\"text-black mb-2\">Attendance Clocking Not Found!</p>\r\n            <p class=\"text-black mb-2\"><small>Try again later.</small></p>\r\n          </div>\r\n        `;\r\n        return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n      } else if (memberClockingInfo === null) {\r\n        if (this._clockingFollowUp === null) {\r\n          return html`\r\n            <div class=\"main-container\">\r\n              <div class=\"flex justify-center\">\r\n                <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n              </div>\r\n            </div>\r\n          `;\r\n        }\r\n      } else {\r\n        if (this._clockingFollowUp === null) {\r\n          return html`\r\n            <div class=\"main-container\">\r\n              <div class=\"flex justify-center\">\r\n                <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n              </div>\r\n            </div>\r\n          `;\r\n        } else {  \r\n          return html`\r\n            <div class=\"shadow bg-white p-2\">\r\n              <div class=\"block\">\r\n                <div class=\"my-1\">${this.form(memberClockingInfo)}</div>\r\n                <div class=\"my-1\">${this.messages}</div>\r\n              </div>\r\n            </div>\r\n          `;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private get messages() {  \r\n    // console.log({ \"this._clockingFollowUp\": this._clockingFollowUp })\r\n    \r\n    if (this._clockingFollowUp.length > 0) {\r\n      return this._clockingFollowUp.map(message => {\r\n        return html`<div class=\"border rounded-none my-1\">\r\n          <div class=\"border-b flex justify-end p-1\">\r\n            <div class=\"flex flex-col items-center pl-4\">\r\n              <mwc-icon-button class=\"bg-grow-early text-white\" icon=\"forward\" resend-this-item=\"${message.id}\" @click=\"${this.resendFollowUpMessage}\"></mwc-icon-button>\r\n              <small class=\"block\">Resend</small>\r\n            </div>\r\n            <div class=\"flex flex-col items-center pl-2\">\r\n              <mwc-icon-button class=\"bg-love-kiss text-white\" icon=\"delete\" delete-this-item=\"${message.id}\" @click=\"${this.deleteFollowUpMessage}\"></mwc-icon-button>\r\n              <small class=\"block\">Delete</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"border-0 p-1\">\r\n            <div class=\"flex flex-col justify-end items-end relative\">\r\n              ${this.messageMetaData(message)}\r\n            </div>\r\n            <div class=\"whitespace-pre-line\">\r\n              ${message.followUp}\r\n            </div>\r\n          </div>\r\n          <div class=\"border-t flex justify-end p-1\">\r\n            <div>${getDateTime(message.date, { dateStyle: \"medium\", timeStyle: \"short\" })}</div>\r\n          </div>\r\n        </div>`;\r\n      });\r\n\r\n    } else {\r\n      const header = html`<h4 class=\"text-white\">Empty</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">No Follow-Ups sent yet!</p>\r\n          <p class=\"text-black mb-2\"><small>Click on \"Send Follow-Up\" button to send one.</small></p>\r\n        </div>\r\n      `;\r\n      return html`<alert-card info .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    }\r\n  }\r\n\r\n  private messageMetaData(message: MemberClockingFollowUp_I) {\r\n    let name__ = \" - \",\r\n      phone__ = \" - \" ,\r\n      email__ = \" - \" ;\r\n    if (InstanceOfOrganizationMember(message.clockingId.memberId)) {\r\n      const member:MembershipOrganizationUserModel = message.clockingId.memberId;\r\n      name__ = `${member.organizationName}`;\r\n      phone__ = `${member.organizationPhone}`;\r\n      email__ = `${member.organizationEmail}`;\r\n    } else {\r\n      const member: MembershipUser_I = message.clockingId.memberId;\r\n      name__ = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n      phone__ = `${member.phone}`;\r\n      email__ = `${member.email}`;\r\n    }\r\n\r\n    return html`\r\n      <mwc-button class=\"button info w-max block\" message-meta-data-btn-id=\"${message.id}\" outlined show_message_metadata disabled>\r\n        <mwc-icon>visibility</mwc-icon> Show MetaData \r\n        <mwc-circular-progress indeterminate show_message_metadata_loading class=\"w-6\"></mwc-circular-progress>\r\n      </mwc-button>\r\n      <div class=\"sm:w-2/5 w-full absolute top-10 z-10\">\r\n        <div class=\"mdc-data-table w-full shadow border\" hidden mdc-data-table=\"data-table\" message-meta-data-id=\"${message.id}\">\r\n          <div class=\"mdc-data-table__table-container\">\r\n            <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Member\">\r\n              <thead>\r\n                <tr class=\"mdc-data-table__header-row\">\r\n                  <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>Meta-Data</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                  <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>...</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"mdc-data-table__content\">\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Sent To</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${ html`${name__}`}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Message Type</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"uppercase\">\r\n                      <p>${this._messagingTypes.map(mt => message.messagingType === mt.id? mt.name: \"\")}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Status</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"flex flex-row-reverse items-center\">\r\n                      <mwc-icon class=\"${message.sent?'text-green-700': 'text-red-700'}\">${message.sent? \"check\": \"close\"}</mwc-icon>\r\n                      <small class=\"${message.sent?'text-green-700': 'text-red-700'}\">${message.sent? \"Sent\": \"Pending...\"}</small>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Phone</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${ html`<a href=\"tel:${phone__}\" type=\"tel\">${phone__}</a>`}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Email</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${html`<a href=\"mailto:${email__}\" type=\"email\">${email__}</a>`}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private form(memberClockingInfo: MemberClockingInfo_I) {   \r\n    const clockingId = memberClockingInfo.id === undefined ? 0 : memberClockingInfo.id;\r\n    const meetingEventId = memberClockingInfo.id === undefined ? 0 : memberClockingInfo.meetingEventId.id;\r\n\r\n    const submitBTN = meetingEventId === 0 ? html`\r\n      <mwc-button label=\"Send Follow Up\" raised class=\"w-full button\" @click=\"${this.submitForm}\" disabled>\r\n      </mwc-button>`: html`\r\n      <mwc-button label=\"Send Follow Up\" raised class=\"w-full button\" @click=\"${this.submitForm}\">\r\n      </mwc-button>\r\n    `;\r\n\r\n    return html`\r\n      <mwc-button class=\"button success\" outlined show_follow_up_form disabled>\r\n        <mwc-icon>send</mwc-icon> Send Follow-Up \r\n        <mwc-circular-progress indeterminate show_follow_up_form_loading class=\"w-6\"></mwc-circular-progress>\r\n      </mwc-button>\r\n      ${(this.showingForm)? html`\r\n        <div class=\"flex flex-col m-1 justify-evenly whitespace-normal\">\r\n          <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"add-follow-up\">\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-md-12 col-lg-12\">\r\n                <h4 class=\"font-semibold my-2\">Select Messaging Type</h4>\r\n                <mwc-select name=\"messagingType\" id=\"messagingType\" label=\"Select Messaging Type\" outlined required>\r\n                  ${this._messagingTypes.map((item) => {\r\n                    // console.log({item});\r\n                    return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                  })}\r\n                </mwc-select>\r\n              </div>\r\n              <div class=\"col-md-12 col-lg-12\">\r\n                <h4 class=\"font-semibold my-2\">Enter Follow Up</h4>\r\n                ${this.followUp}\r\n              </div>\r\n              <div class=\"col-md-12 col-lg-12 my-2 z-10\">\r\n                <div class=\"form-input-container z-10\">\r\n                  ${submitBTN}\r\n                </div>\r\n          \r\n                <div class=\"flex form-input-container items-center text-center my-2\">\r\n                  <input type=\"hidden\" name=\"meetingEventId\" value=\"${meetingEventId}\" />\r\n                  <input type=\"hidden\" name=\"clockingId\" value=\"${clockingId}\" />\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <hr class=\"my-2\">\r\n        </div>\r\n      `:\r\n      nothing}\r\n    `;\r\n  }\r\n\r\n  private get followUp() {\r\n    return html`<mwc-textarea class=\"h-44\" outlined name=\"followUp\" id=\"followUp\"></mwc-textarea>`;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n    // document.onreadystatechange = (event) => {\r\n    //   setInterval(() => {\r\n    //     if (document.querySelectorAll('mwc-button[show_message_metadata]') !== null) {\r\n    //       console.log({ \"document.readyState\": document.readyState })\r\n    //       if (document.readyState == \"complete\") this.toggleFollowUpForm(event);\r\n    //       if (document.readyState == \"complete\") this.toggleMessageMetadatForm(event);\r\n    //     }\r\n    //   }, 5000);\r\n    // }  \r\n  }\r\n\r\n  private toggleMessageMetadatForm(e: any) {\r\n    // console.log(e)\r\n    \r\n    const messageBtnNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-button[show_message_metadata]');\r\n    const messageBtnLoadingNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-button>[show_message_metadata_loading]');\r\n    // console.log({ messageBtnNodes,messageBtnLoadingNodes })\r\n    messageBtnLoadingNodes.forEach(messageBtnLoadingNode => {\r\n      messageBtnLoadingNode.setAttribute('hidden', \"true\");\r\n    });\r\n    messageBtnNodes.forEach((messageBtnNode) => {\r\n      messageBtnNode.removeAttribute('disabled');\r\n      // console.log({ \"messageBtnNode\": messageBtnNode })\r\n      // console.log({ \"messageBtnNode.currentValue\": messageBtnNode.getAttribute(\"currentValue\") })\r\n      messageBtnNode.onclick = async (event) => {\r\n        // console.log({ event, })\r\n\r\n        // @ts-ignore\r\n        const metaDataId = event.target.getAttribute(\"message-meta-data-btn-id\"),\r\n          table = this.querySelector('[message-meta-data-id=\"' + metaDataId + '\"]');\r\n        \r\n        // console.log({ \"[message-meta-data-id=' + metaDataId + ']\": '[message-meta-data-id=\"' + metaDataId + '\"]', table });\r\n        (table.hasAttribute('hidden')) ? table.removeAttribute('hidden') :\r\n          table.setAttribute('hidden', '');\r\n      };\r\n    });\r\n    // console.log({'messageBtnNodes': messageBtnNodes.length});\r\n    if (messageBtnNodes.length > 0) {\r\n      this.toggleMessageMetadatFormCalled = true; \r\n    }\r\n  }\r\n\r\n  private toggleFollowUpForm(e: any) {\r\n    // console.log(\"toggleFollowUpForm\", e)\r\n    const followUpFormBtnNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-button[show_follow_up_form]');\r\n    const followUpFormBtnLoadingNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-button>[show_follow_up_form_loading]');\r\n    // console.log({ followUpFormBtnNodes, followUpFormBtnLoadingNodes })\r\n    followUpFormBtnLoadingNodes.forEach(followUpFormBtnLoadingNode => {\r\n      followUpFormBtnLoadingNode.setAttribute('hidden', \"true\");\r\n    });\r\n    followUpFormBtnNodes.forEach(followUpFormBtnNode => {\r\n      followUpFormBtnNode.removeAttribute('disabled');\r\n      // console.log({ \"followUpFormBtnNode\": followUpFormBtnNode })\r\n      // console.log({ \"followUpFormBtnNodes.currentValue\": followUpFormBtnNodes.getAttribute(\"currentValue\") })\r\n      followUpFormBtnNode.onclick = async (event) => {\r\n        // console.log({ event, })\r\n        this.showingForm = !this.showingForm;\r\n      };\r\n    });\r\n    // console.log({'followUpFormBtnNodes': followUpFormBtnNodes.length});\r\n    if (followUpFormBtnNodes.length > 0) {\r\n      this.toggleFollowUpFormCalled = true; \r\n    }\r\n  }\r\n\r\n  private getMeetingEventId() {\r\n    let clockingId = urlQueryParamsGet('clocking-id');\r\n    // console.log({ userId });\r\n    let _clockingId = clockingId !== null ? base64Decode(clockingId) : null;\r\n    this.clockingId = Number.isNaN(_clockingId) ? null : Number(_clockingId);\r\n    // console.log({ \"this.clockingId\": this.clockingId });\r\n    this.clockingIdEnc = base64Encode(String(this.clockingId), true);\r\n  }\r\n\r\n  private async getMessagingTypes() {\r\n    const _networkResponse = await GET_GenericMessagingType<GenericMessagingTypeModel>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __messagingTypes: GenericMessagingTypeModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __messagingTypes.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericMessagingTypeModel[] = data.map(value => {\r\n          return gmtmConvert.toGenericMessagingTypeModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        const mt: GenericMessagingTypeModel = {id: 0, name: \"Select Meeting Type\"}\r\n        __messagingTypes = [...[mt], ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<GenericMessagingTypeModel> = [];\r\n    new_data.push(...this._messagingTypes, ...__messagingTypes);\r\n    this._messagingTypes = new_data;\r\n  }\r\n\r\n  private async getAttendanceClockingFollowUp() {\r\n    const _networkResponse = await GET_AttendanceClockingFollowUp<MemberClockingFollowUp_I>(\r\n      null, \"?clockingId=\" + this.clockingId\r\n    );\r\n    // console.log({ _networkResponse });\r\n\r\n    if (_networkResponse !== null) {\r\n      const _clockingFollowUp = _networkResponse.paginResponse,\r\n        _clockingFollowUpError = _networkResponse.response;\r\n      // console.log({ _clockingFollowUpError });\r\n      if (_clockingFollowUp !== null) {\r\n        const results = _clockingFollowUp.results.map(followUp => {\r\n          return MemberClockingFollowUp_S(followUp);\r\n        });\r\n        this._clockingFollowUp = results;\r\n      } else {\r\n        this._clockingFollowUp = [];\r\n      }\r\n    } else {\r\n      this._clockingFollowUp = [];\r\n      // console.error({ _networkResponse })\r\n    }\r\n  }\r\n\r\n  private async getAttendanceClocking() {\r\n    const _networkResponse = await GET_AttendanceClocking<MemberClockingInfo_I>(this.clockingId);\r\n    // console.log({ _networkResponse })\r\n    if (_networkResponse === null) {\r\n      this._memberClockingInfo = undefined;\r\n    } else {\r\n      this._memberClockingInfo = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  async deleteFollowUpMessage(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userUserId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_AttendanceClockingFollowUp(userUserId);\r\n  }\r\n\r\n  async resendFollowUpMessage(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userUserId = Number(e.currentTarget.getAttribute('resend-this-item'));\r\n\r\n    await PATCH_AttendanceClockingFollowUp_Resend(userUserId);\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    \r\n    // console.log({\"this._clockingFollowUp_no_followUp\": this._clockingFollowUp});\r\n    await POST_AttendanceClockingFollowUp();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericMessagingType<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/messaging-type'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceClockingFollowUp<Type>(clockingId: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-follow-up'\r\n    + (clockingId === null ? \"\" : \"/\" + clockingId) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { Boolean_I } from \"@@addons/interfaces/boolean\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \"..\";\r\n\r\nexport interface MemberClockingFollowUp_I {\r\n  id?: number,\r\n  clockingId?: MemberClockingInfo_I,\r\n  followUp?: string,\r\n  messagingType?: number,\r\n  sent?: boolean,\r\n  enteredBy?: number,\r\n  date?: Date\r\n}\r\n\r\nexport function MemberClockingFollowUp_S(data: any): MemberClockingFollowUp_I {\r\n  // console.log({data});\r\n\r\n  const memberClockingFollowUp_S: MemberClockingFollowUp_I = {\r\n    id: Number(data['id']),\r\n    clockingId: MemberClockingInfo_S(data['clockingId']),\r\n    followUp: String(data['followUp']),\r\n    messagingType: Number(data['messagingType']),\r\n    sent: Boolean_I(data['sent']),\r\n    enteredBy: Number(data['enteredBy']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return memberClockingFollowUp_S;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_AttendanceClockingFollowUp(clockingId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-follow-up/' + clockingId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Follow-Up?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingFollowUp_Resend(followUpId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-follow-up/resend/' + followUpId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Resend Follow-Up?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"PATCH\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"patch\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceClockingFollowUp(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance-follow-up',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-follow-up\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Send Follow-Up?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          console.log({\"VALUE.data\": VALUE.data});\r\n          \r\n          window.location.reload();\r\n        } else {\r\n          window.location.reload();\r\n        }\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","getDateTime","date","options","Date","toLocaleString","InstanceOfOrganizationMember","data","MemberClockingAdditionalInfo_S","accountType","memberInfo","JSON","stringify","id","Number","memberId","phone","String","email","facebook","instagram","placeOfWork","profession","twitter","whatsapp","businessHashtag","businessDescription","dateJoined","MemberClockingInfoFull_S","ATTENDANCE","attendance","additionalInfo","lastSeen","status","GET_AttendanceClocking","ID","url_params","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","LinkButton","isBlockContent","raised","render","_aClass","this","thisIsBlockContent","_bClass","aClass","href","bClass","icon","label","value","createRenderRoot","type","Boolean","Convert","static","json","transform","parse","r","jsonToJSProps","jsToJSONProps","typ","undefined","jsonToJS","map","props","forEach","p","key","js","jsToJSON","val","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","PdbAttendanceClockingFollowUp","constructor","super","__memberClockingInfo","_messagingTypes","clockingId","showingForm","toggleFollowUpFormCalled","toggleMessageMetadatFormCalled","clockingIdEnc","_clockingFollowUp","_memberClockingInfo","requestUpdate","connectedCallback","document","onreadystatechange","event","setInterval","readyState","toggleFollowUpForm","toggleMessageMetadatForm","getMeetingEventId","getMessagingTypes","getAttendanceClocking","getAttendanceClockingFollowUp","disconnectedCallback","header","content","memberClockingInfo","form","messages","message","resendFollowUpMessage","deleteFollowUpMessage","messageMetaData","followUp","dateStyle","timeStyle","name__","phone__","email__","member","organizationName","organizationPhone","organizationEmail","firstname","middlename","surname","mt","messagingType","sent","meetingEventId","submitBTN","submitForm","item","firstUpdated","e","messageBtnNodes","querySelectorAll","messageBtnLoadingNode","setAttribute","messageBtnNode","removeAttribute","onclick","metaDataId","target","getAttribute","table","querySelector","hasAttribute","followUpFormBtnNodes","followUpFormBtnLoadingNode","followUpFormBtnNode","_clockingId","base64","_networkResponse","http","GET_GenericMessagingType","__messagingTypes","push","response","success","new_data","GET_AttendanceClockingFollowUp","paginResponse","results","enteredBy","preventDefault","userUserId","currentTarget","formData","title","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","res","https_swal_error_format","postForm","catch","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","setTimeout","window","location","reload","DELETE_AttendanceClockingFollowUp","followUpId","PATCH_AttendanceClockingFollowUp_Resend","formContainer","FormData","errormsg","log","POST_AttendanceClockingFollowUp","styles"],"sourceRoot":""}