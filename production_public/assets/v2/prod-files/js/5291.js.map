{"version":3,"file":"../../production_public/assets/v2/prod-files/js/5291.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/classes/network_calls/response.ts","webpack://webpackNumbers/./src/addons/functions/form_data_to_object/index.ts","webpack://webpackNumbers/./src/addons/constants/settings.ts","webpack://webpackNumbers/./src/addons/constants/urls.ts","webpack://webpackNumbers/./src/addons/constants/index.ts","webpack://webpackNumbers/./src/addons/constants/service_worker/messenger_types.ts","webpack://webpackNumbers/./src/addons/functions/base64/index.ts","webpack://webpackNumbers/./src/addons/functions/cookies/index.ts","webpack://webpackNumbers/./src/addons/functions/https/http.ts","webpack://webpackNumbers/./src/addons/functions/https/time_out.ts","webpack://webpackNumbers/./src/addons/functions/login/index.ts","webpack://webpackNumbers/./src/addons/interfaces/network_calls/login/index.ts"],"sourcesContent":["// import { set_cookies_minutes } from '@@addons/functions/cookies';\r\nimport { formDataToJson } from '@@addons/functions/form_data_to_object';\r\nimport { NetworkCallHttp_I } from '@@addons/interfaces/network_calls/http';\r\nimport {\r\n  NetworkCallDatatableResponse_I, NetworkCallError_I,\r\n  NetworkCallNonFieldErrors_I,\r\n  NetworkCallPaginResponse_I, NetworkCallPostResponse_I,\r\n  NetworkCallResponseMethod_I, NetworkCallResponse_I,\r\n} from '@@addons/interfaces/network_calls/response';\r\n\r\nexport class NetWorkCallResponses<Type> {\r\n  constructor(method: NetworkCallResponseMethod_I, httpResponse: NetworkCallHttp_I, error: boolean = false, postForm: HTMLFormElement = null) {\r\n    const response = httpResponse.jsonData,\r\n      rawResponse = httpResponse.response;\r\n    this.postForm = postForm;\r\n    // console.log({'method === \"post\"': method === \"post\", method, response, rawResponse, error});\r\n\r\n    // if (httpResponse.response.ok) {\r\n    //   try {\r\n    //     // @ts-ignore\r\n    //     const cookieName = String(window.supersecret.unknowable.ops.cookieName);\r\n    //     set_cookies_minutes(`${cookieName}_date`, new Date().toUTCString(), 10);\r\n    //   } catch (error) {\r\n    //     console.log(error);\r\n    //   }\r\n    // }\r\n    if (error) {\r\n      // console.log({'method === \"post1\"': method === \"post\", method, response, rawResponse, error});\r\n      this.error(httpResponse.error);\r\n    } else {\r\n      // console.log({'method === \"post\"': method === \"post\", method, response, rawResponse, error});\r\n      if (method === \"get\") {\r\n        this.get(response, rawResponse);\r\n      } else if (method === \"post\") {\r\n        // console.log({method, response, rawResponse});\r\n        this.post(response, rawResponse);\r\n      } else if (method === \"post-file\") {\r\n        this.postFile(response, rawResponse);\r\n      } else if (method === \"put\") {\r\n        this.put(response, rawResponse);\r\n      } else if (method === \"patch\") {\r\n        this.patch(response, rawResponse);\r\n      } else if (method === \"delete\") {\r\n        this.delete(response, rawResponse);\r\n      }\r\n    }\r\n  }\r\n\r\n  public response: NetworkCallResponse_I<Type> | NetworkCallPostResponse_I = null;\r\n\r\n  public nonFieldErrorResponse: NetworkCallNonFieldErrors_I<Type> = null;\r\n\r\n  public multipleResponse: Array<NetworkCallPostResponse_I> = null;\r\n\r\n  public paginResponse: NetworkCallPaginResponse_I<Type> = null;\r\n\r\n  public databaseResponse: NetworkCallDatatableResponse_I<Type> = null;\r\n\r\n  public postForm: HTMLFormElement = null;\r\n\r\n  private error(response: any | object) {\r\n    this.response = response;\r\n    // this.nonFieldErrorResponse = response;\r\n  }\r\n\r\n  private outputResponse(success: boolean, message: string | Array<any>,\r\n    data: Array<Type> | Type): NetworkCallResponse_I<Type> {\r\n    return { success: success, message: message, data: data };\r\n  }\r\n\r\n  private outputResponsePagin(output: any): NetworkCallPaginResponse_I<Type> {\r\n    return {\r\n      count: output.count, next: output.next, previous: output.previous,\r\n      results: output.results,\r\n    };\r\n  }\r\n\r\n  private outputResponseDatatable(output: any): NetworkCallDatatableResponse_I<Type> {\r\n    return {\r\n      data: output.data, datatable_plugin: output.datatable_plugin,\r\n      draw: output.draw, recordsFiltered: output.recordsFiltered,\r\n      recordsTotal: output.recordsTotal,\r\n    };\r\n  }\r\n\r\n  private outputErrorResponse(success: boolean, message: string | Array<NetworkCallError_I>,\r\n    nameError: Array<NetworkCallError_I>, unknownError: Array<NetworkCallError_I>, data: Array<any>): NetworkCallPostResponse_I {\r\n    return {\r\n      success: success, message: message, nameError: nameError,\r\n      unknownError: unknownError, data: data\r\n    };\r\n  }\r\n\r\n  private get(response: any | object, rawResponse: Response) {\r\n    let newResponse: NetworkCallResponse_I<Type>;\r\n    if (response.hasOwnProperty('success') && response.hasOwnProperty('message')\r\n      && response.hasOwnProperty('data')) {\r\n      newResponse = response;\r\n    } else if (response.hasOwnProperty('count') && response.hasOwnProperty('next')\r\n      && response.hasOwnProperty('previous') && response.hasOwnProperty('results')) {\r\n      this.paginResponse = this.outputResponsePagin(response);\r\n      return this.paginResponse;\r\n    } else if (response.hasOwnProperty('draw') && response.hasOwnProperty('recordsTotal')\r\n      && response.hasOwnProperty('recordsFiltered') && response.hasOwnProperty('data')) {\r\n      this.databaseResponse = this.outputResponseDatatable(response);\r\n      return this.databaseResponse;\r\n    } else if (response.hasOwnProperty('detail') && (rawResponse.status === 404)) {\r\n      newResponse = { data: [], message: response['detail'], success: false };\r\n    }\r\n\r\n    // console.log({ newResponse });\r\n\r\n\r\n    this.response = this.outputResponse(newResponse.success, newResponse.message, newResponse.data);\r\n  }\r\n  \r\n  postFile(response: any, rawResponse: Response) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  private post(response: any | object, rawResponse: Response) {\r\n    // console.log({response, rawResponse});\r\n\r\n    let newResponse: NetworkCallPostResponse_I;\r\n    if (response.hasOwnProperty('success') && response.hasOwnProperty('message')\r\n      && response.hasOwnProperty('data')) {\r\n      newResponse = response;\r\n    } else if (Array.isArray(response)) {\r\n      // console.log({\"rawResponse.ok1\": rawResponse.ok});\r\n      if (rawResponse.ok) {\r\n        const SUCCESS_RESPONSE_MESSAGE = response[0]['SUCCESS_RESPONSE_MESSAGE'];\r\n        response.map((_response) => {\r\n          delete _response['SUCCESS_RESPONSE_MESSAGE'];\r\n          return _response;\r\n        });\r\n\r\n        this.response = this.outputResponse(true, SUCCESS_RESPONSE_MESSAGE, response);\r\n      } else {\r\n        let newResponses: NetworkCallPostResponse_I[] = [];\r\n        response.forEach((_response) => {\r\n          newResponse = this.postError(_response);\r\n          const _newResponse = this.outputErrorResponse(\r\n            newResponse.success, newResponse.message, newResponse.nameError,\r\n            newResponse.unknownError, newResponse.data\r\n          );\r\n          if (!newResponses.includes(_newResponse)) {\r\n            newResponses.push(_newResponse);\r\n          }\r\n        });\r\n        this.multipleResponse = newResponses;\r\n      }\r\n    } else {\r\n      // console.log({\"rawResponse.ok2\": rawResponse.ok});\r\n      if (rawResponse.ok) {\r\n        const SUCCESS_RESPONSE_MESSAGE = response['SUCCESS_RESPONSE_MESSAGE'];\r\n        delete response['SUCCESS_RESPONSE_MESSAGE'];\r\n\r\n        this.response = this.outputResponse(true, SUCCESS_RESPONSE_MESSAGE, response);\r\n      } else {\r\n        newResponse = this.postError(response);\r\n        this.response = this.outputErrorResponse(\r\n          newResponse.success, newResponse.message, newResponse.nameError,\r\n          newResponse.unknownError, newResponse.data\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private postError(response: any | object): NetworkCallPostResponse_I {\r\n    const errorFields = this.postErrorFields(response),\r\n      nameErrorFields = this.postNamedErrorFields(errorFields),\r\n      nonNameErrorFields = this.postNonNamedErrorFields(errorFields);\r\n\r\n    const postErrorInputs = this.postErrorInputs(nameErrorFields, nonNameErrorFields);\r\n    return {\r\n      success: false, message: errorFields, nameError: postErrorInputs.nameErrorFields,\r\n      unknownError: postErrorInputs.nonNameErrorFields, data: response\r\n    }\r\n  }\r\n\r\n  private postErrorFields(response: any | object) {\r\n    // console.log({response});\r\n\r\n    let errors: Array<NetworkCallError_I> = [];\r\n    for (const key in response) {\r\n      if (Object.prototype.hasOwnProperty.call(response, key)) {\r\n        const RES = response[key];\r\n        const error: NetworkCallError_I = {\r\n          id: key, errors: RES\r\n        };\r\n\r\n        if (!errors.includes(error)) {\r\n          errors.push(error);\r\n        }\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  private postNamedErrorFields(errorFields: NetworkCallError_I[]) {\r\n    let errors: Array<NetworkCallError_I> = [];\r\n\r\n    errorFields.forEach((error) => {\r\n      if (error.id !== \"non_field_errors\") {\r\n        if (!errors.includes(error)) {\r\n          errors.push(error);\r\n        }\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n\r\n  private postNonNamedErrorFields(errorFields: NetworkCallError_I[]) {\r\n    let errors: Array<NetworkCallError_I> = [];\r\n\r\n    errorFields.forEach((error) => {\r\n      if (error.id === \"non_field_errors\") {\r\n        if (!errors.includes(error)) {\r\n          errors.push(error);\r\n        }\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n\r\n  private validateInput(input: Element) {\r\n    // console.log({ input, });\r\n    // console.log({ \"input.hasOwnProperty('mdcFoundation')\": input.hasOwnProperty('mdcFoundation') });\r\n\r\n    if (input.hasOwnProperty('mdcFoundation')) {\r\n      if (input.hasOwnProperty('setCustomValidity')) {\r\n        // @ts-ignore\r\n        input.setCustomValidity(\"\");\r\n      }\r\n      // @ts-ignore\r\n      input.isUiValid = true;\r\n      // @ts-ignore\r\n      input.validityTransform = (newValue, nativeValidity) => {\r\n        // console.log({ newValue, nativeValidity, });\r\n        if (nativeValidity.valid) {\r\n          return {};\r\n        } else {\r\n          return {\r\n            valid: false,\r\n            customError: true,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private postErrorInputs(nameErrorFields: NetworkCallError_I[], nonNameErrorFields: NetworkCallError_I[]) {\r\n    // console.log({ \"this.postForm\": this.postForm });\r\n    // console.log({ \"this.postForm.elements\": this.postForm.elements });\r\n    if (this.postForm !== null) {\r\n      const _formDataToJson = JSON.parse(formDataToJson(new FormData(this.postForm)));\r\n      // console.log({ _formDataToJson });\r\n      for (const key in _formDataToJson) {\r\n        let input: Element;\r\n        try {\r\n          input = document.querySelector('[name=\"' + key + '\"]');\r\n        } catch (error) {\r\n          const newKey = key.replace('[]', '');\r\n          // console.log({key,newKey});\r\n          \r\n          input = document.querySelector('[id=\"' + newKey + '\"]');\r\n        }\r\n        this.validateInput(input);\r\n        input.addEventListener('change', (event) => {\r\n          this.validateInput(input);\r\n        });\r\n      }\r\n    }\r\n\r\n    nameErrorFields.forEach((error) => {\r\n      const inputs = document.querySelectorAll('[id=\"' + error.id + '\"]');\r\n      // console.log({ error, inputs });\r\n\r\n      inputs.forEach((input) => {\r\n        if (input.hasOwnProperty('mdcFoundation')) {\r\n          try {\r\n            // console.log({ input, \"error.errors\": error.errors, });\r\n            // console.log({\"_____typeof error.errors_____\": Array.isArray(error.errors) });\r\n            const errorErrors = error.errors;\r\n            if (Array.isArray(errorErrors)) {\r\n              // @ts-ignore\r\n              input.setCustomValidity(errorErrors.join('\\n'));\r\n            } else {\r\n              let _errorErrors: Array<string> = [];\r\n              // @ts-ignore\r\n              for (const key in errorErrors) {\r\n                if (Object.prototype.hasOwnProperty.call(errorErrors, key)) {\r\n                  const element: Array<string> = errorErrors[key];\r\n                  // console.log({ element })\r\n                  element.forEach(elem => {\r\n                    _errorErrors.push(`Item ${key}: ${elem}`)\r\n                  });\r\n                }\r\n              }\r\n              // @ts-ignore\r\n              input.setCustomValidity(_errorErrors.join('\\n'));\r\n            }\r\n            // @ts-ignore\r\n            input.reportValidity();\r\n            // @ts-ignore\r\n            input.isUiValid = false;\r\n          } catch (error) {\r\n            \r\n          }\r\n          // if (input.hasOwnProperty('setCustomValidity')) {\r\n          //   console.log({ input, });\r\n          //   // @ts-ignore\r\n          //   input.setCustomValidity(error.errors.join('\\n'));\r\n          //   // @ts-ignore\r\n          //   input.reportValidity();\r\n          //   // @ts-ignore\r\n          //   input.isUiValid = false;\r\n          // }\r\n        } else {\r\n          if (!nonNameErrorFields.includes(error)) {\r\n            nonNameErrorFields.push(error);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return { nameErrorFields, nonNameErrorFields }\r\n  }\r\n\r\n  private put(response: any | object, rawResponse: Response) {\r\n    // this.response = response;\r\n    // this.nonFieldErrorResponse = response;\r\n    this.post(response, rawResponse);\r\n  }\r\n\r\n  private patch(response: any | object, rawResponse: Response) {\r\n    // this.response = response;\r\n    // this.nonFieldErrorResponse = response;\r\n    this.post(response, rawResponse);\r\n  }\r\n\r\n  private delete(response: any | object, rawResponse: Response) {\r\n\r\n    let newResponse: NetworkCallResponse_I<string>;\r\n    if (response.hasOwnProperty('success') && response.hasOwnProperty('message')\r\n      && response.hasOwnProperty('data')) {\r\n      newResponse = response;\r\n    } else {\r\n      // console.log({\"rawResponse.ok\": rawResponse.ok});\r\n      if (rawResponse.ok) {\r\n        const SUCCESS_RESPONSE_MESSAGE = \"Deleted\";\r\n\r\n        this.response = this.outputResponse(true, SUCCESS_RESPONSE_MESSAGE, response);\r\n      } else if (response.hasOwnProperty('detail') && (rawResponse.status === 404)) {\r\n        newResponse = { data: [], message: response['detail'], success: false, };\r\n        this.response = this.outputResponse(newResponse.success, newResponse.message, []);\r\n      }\r\n    }\r\n  }\r\n}","export const formDataToJson = (formData: FormData) => {\r\n  let object: object = {};\r\n  formData.forEach((value, key) => {\r\n    // Reflect.has in favor of: object.hasOwnProperty(key)\r\n    if (!Reflect.has(object, key)) {\r\n      // @ts-ignore\r\n      object[key] = value;\r\n      return;\r\n    }\r\n    // @ts-ignore\r\n    if (!Array.isArray(object[key])) {\r\n      // @ts-ignore\r\n      object[key] = [object[key]];\r\n    }\r\n    // @ts-ignore\r\n    object[key].push(value);\r\n  });\r\n  return JSON.stringify(object);\r\n}","// console.log({ \"window.location.href\": window.location.href });\r\n\r\n// const PRODUCTION = false;\r\nconst PRODUCTION = true;\r\nlet _HOME_PAGE_BASE_URL: string;\r\n\r\nlet _isClientApp: boolean;\r\nif (window.location.href.includes(_HOME_PAGE_BASE_URL)) {\r\n  _isClientApp = true;\r\n} else {\r\n  _isClientApp = false;\r\n}\r\n\r\n// console.log({ _isClientApp });\r\n\r\nexport const APP_SETTINGS = {\r\n  production: PRODUCTION,\r\n  isClientApp: _isClientApp,\r\n}\r\n","import { APP_SETTINGS } from \"./settings\";\r\n\r\nlet _BASE_URL: string, _API_BASE_URL: string,\r\n  _AKWAABA_API_BASE_URL: string, _FILE_BUCKET_BASE_URL: string,\r\n  _HOME_PAGE_BASE_URL: string, _LOGIN_PAGE_BASE_URL: string,\r\n  _PUBLIC_BASE_URL: string, _PUBLIC_PAGE_BASE_URL: string,\r\n  _PUBLIC_LOGIN_PAGE_BASE_URL: string, _REGISTRATION_BASE_URL: string,\r\n  _REG_CONNECTION_BASE_URL: string, __clientIdentifier: string,\r\n  _pdb_client: string;\r\n\r\nif (APP_SETTINGS.production) {\r\n  const DOMAIN_ADDRESS = window.location.origin.replace(/^https?:\\/\\//, '');\r\n  console.log({DOMAIN_ADDRESS, 'DOMAIN_ADDRESS.includes(\"-2.akwaabasoftware.com\")': DOMAIN_ADDRESS.includes(\"-2.akwaabasoftware.com\")})\r\n\r\n  const BaseUrl = \"akwaabasoftware.com/\";\r\n  _API_BASE_URL = \"https://db-api.akwaabasoftware.com/\";\r\n  _AKWAABA_API_BASE_URL = DOMAIN_ADDRESS.includes(\"-2.akwaabasoftware.com\")\r\n    ? \"https://db-api-v2-2.\" + BaseUrl : \"https://db-api-v2.\" + BaseUrl;\r\n\r\n  _REGISTRATION_BASE_URL = \"https://register.\" + BaseUrl;\r\n  _REG_CONNECTION_BASE_URL = \"https://connect.\" + BaseUrl;\r\n\r\n  __clientIdentifier = \"akwaabaclients.\" + BaseUrl;\r\n  _BASE_URL = \"https://\" + __clientIdentifier;\r\n  _PUBLIC_BASE_URL = \"https://akwaabaapp.\" + BaseUrl;\r\n  _FILE_BUCKET_BASE_URL = \"https://file-bucket.akwaabasoftware.com/\";\r\n  _HOME_PAGE_BASE_URL = _BASE_URL + \"\";\r\n  _PUBLIC_PAGE_BASE_URL = _PUBLIC_BASE_URL + \"\";\r\n\r\n  _pdb_client = DOMAIN_ADDRESS.includes(\"-2.akwaabasoftware.com\")\r\n    ? \"https://database-2.akwaabasoftware.com/\" : \"https://database.akwaabasoftware.com/\";\r\n\r\n  _LOGIN_PAGE_BASE_URL = _pdb_client + \"login\";\r\n} else {\r\n  __clientIdentifier = \"akwaaba-forms/\";\r\n  // const IP_ADDRESS = '192.168.43.161';\r\n  // const IP_ADDRESS = '192.168.173.1';\r\n  const IP_ADDRESS = '192.168.0.124';\r\n  _BASE_URL = \"http://127.0.0.1:9001/\";\r\n  // _BASE_URL = \"http://192.168.173.172:9001/\";\r\n  _API_BASE_URL = \"http://\" + IP_ADDRESS + \"/AMG/plus_db/api/\";\r\n  _AKWAABA_API_BASE_URL = _BASE_URL + \"api/\";\r\n  // _pdb_client = \"http://\" + IP_ADDRESS + \"/AMG/plus_db/client_dashboard/\";\r\n  _pdb_client = \"http://\" + IP_ADDRESS + \":84/\";\r\n\r\n  _FILE_BUCKET_BASE_URL = \"http://\" + IP_ADDRESS + \"/AMG/plus_db/file_bucket/\";\r\n  _HOME_PAGE_BASE_URL = _BASE_URL + __clientIdentifier;\r\n  _PUBLIC_PAGE_BASE_URL = _BASE_URL + \"akwaaba-forms-public/\";\r\n  _LOGIN_PAGE_BASE_URL = _pdb_client + \"login\";\r\n  _REGISTRATION_BASE_URL = \"http://localhost:3000/\";\r\n  _REG_CONNECTION_BASE_URL = \"http://localhost:3001/\";\r\n}\r\n\r\nexport const URLS = {\r\n  BASE_URL: _BASE_URL,\r\n  API_BASE_URL: _API_BASE_URL,\r\n  PDB_CLIENT: _pdb_client,\r\n  AKWAABA_API_BASE_URL: _AKWAABA_API_BASE_URL,\r\n  FILE_BUCKET_BASE_URL: _FILE_BUCKET_BASE_URL,\r\n  HOME_PAGE_BASE_URL: _HOME_PAGE_BASE_URL,\r\n  PUBLIC_PAGE_BASE_URL: _PUBLIC_PAGE_BASE_URL,\r\n  LOGIN_PAGE_BASE_URL: _LOGIN_PAGE_BASE_URL,\r\n  PUBLIC_LOGIN_PAGE_BASE_URL: _PUBLIC_LOGIN_PAGE_BASE_URL,\r\n  REGISTRATION_BASE_URL: _REGISTRATION_BASE_URL,\r\n  REG_CONNECTION_BASE_URL: _REG_CONNECTION_BASE_URL,\r\n  FORGOT_PASSWORD_URL: \"https://password-reset.akwaabasoftware.com/client-user/forgot-password\",\r\n  PUBLIC_BASE_URL: \"https://akwaabasoftware.com/\",\r\n  CLICK_COM_BASE_URL: \"https://clickcomgh.com/\",\r\n  // SERVICE_WORKER: SERVICE_WORKER\r\n}\r\n","import { SERVICE_WORKER_TYPES } from \"./service_worker/messenger_types\";\r\nimport { APP_SETTINGS } from \"./settings\";\r\nimport { URLS } from \"./urls\";\r\n\r\nexport const CONSTANTS = {\r\n  URLS,\r\n  APP_SETTINGS,\r\n  SERVICE_WORKER_TYPES,\r\n}\r\n// console.log({ CONSTANTS });\r\n// @ts-ignore\r\nwindow['CONSTANTS'] = CONSTANTS;\r\n","export const SERVICE_WORKER_TYPES = {\r\n  postAction: \"POST_ACTION\",\r\n  networkStatus: \"NETWORK_STATUS\",\r\n\r\n}\r\n","import { Buffer } from 'buffer';\r\n\r\nexport const base64Encode = (obj: any, removeTrail: boolean = false) => {\r\n  const rawEncode = Buffer.from(obj).toString('base64');\r\n  if (removeTrail) {\r\n    // @ts-ignore\r\n    return rawEncode.replaceAll(\"=\", '');\r\n  }\r\n  return rawEncode;\r\n}\r\nexport const base64Decode = (str: string) => {\r\n  return Buffer.from(str, 'base64').toString();\r\n}","export function set_cookies($name: string, $value: string, $time = 1, $path = \"/\") {\r\n    let d = new Date();\r\n    d.setHours(d.getHours() + (3 * 1 * 1 * 1 * $time));\r\n    let expires = \"expires=\" + d.toUTCString();\r\n    // console.log(get_cookie($name))\r\n    if (get_cookie($name) != $value) {\r\n        document.cookie = $name + '=' + $value + \"; \" + expires + \"; path=\" + $path;\r\n    }\r\n}\r\n\r\nexport function set_cookies_minutes($name: string, $value: string, $time = 1, $path = \"/\") {\r\n    let d = new Date();\r\n    d.setMinutes(d.getMinutes() + ($time));\r\n    let expires = \"expires=\" + d.toUTCString();\r\n    // console.log(get_cookie($name))\r\n    if (get_cookie($name) != $value) {\r\n        document.cookie = $name + '=' + $value + \"; \" + expires + \"; path=\" + $path;\r\n    }\r\n}\r\n\r\nexport function get_cookie($name: string | any[]) {\r\n    $name = $name + \"=\";\r\n    let decode = decodeURIComponent(document.cookie);\r\n    let ca = decode.split(\";\");\r\n    // console.log({ \"decode\": decode, \"ca\": ca });\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf($name) == 0) {\r\n            return c.substring($name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import fetch from './time_out';\r\nimport { NetworkCallHttp_I } from '@@addons/interfaces/network_calls/http';\r\n\r\nexport async function http(input: RequestInfo, init?: RequestInit, jsonData: boolean = true, addSuccessMsgFormat: boolean = false) {\r\n  let rawResponse = null;\r\n  const status = (response: any) => {\r\n    rawResponse = response;\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.resolve(response);\r\n      // return Promise.reject(new Error(response))\r\n    }\r\n  }\r\n\r\n  const json = async (response: Response): Promise<NetworkCallHttp_I> => {\r\n    const _JSON = response.status === 204 ? {} : await response.json();\r\n    // console.log({\"addSuccessMsgFormat\": addSuccessMsgFormat})\r\n    if (addSuccessMsgFormat) {\r\n      const new_JSON = {\r\n        \"success\": true,\r\n        \"message\": \"\",\r\n        \"data\": _JSON\r\n      };\r\n      // console.log({\"new_JSON\": new_JSON})\r\n      return { jsonData: new_JSON, response, error: \"\" };\r\n    } else {\r\n      return { jsonData: _JSON, response, error: \"\" };\r\n    }\r\n  }\r\n  // console.log({init});\r\n\r\n  var _init: RequestInit = { method: \"GET\" };\r\n\r\n  init = (init === null) || (init === undefined) ? _init : init;\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Access-Control-Allow-Origin\", \"*/*\");\r\n  myHeaders.append(\"Accept\", \"application/json, text/plain, */*\");\r\n  // myHeaders.append(\"Authorization\", CONSTANTS.AUTHORIZATION.pdbApi);\r\n  // console.log({\"jsonData\": jsonData})\r\n  if (jsonData) {\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n  }\r\n\r\n  if (init.headers === undefined) {\r\n    init.headers = myHeaders;\r\n  } else {\r\n    for (const iterator of myHeaders.keys()) {\r\n      // @ts-ignore\r\n      init.headers[iterator] = myHeaders.get(iterator);\r\n    }\r\n    // for (const header in myHeaders) {\r\n    //   // @ts-ignore\r\n    //   init.headers[header] = myHeaders[header];\r\n    // }\r\n  }\r\n  init.mode = \"cors\";\r\n  init.redirect = 'follow';\r\n  // console.log({ init });\r\n\r\n  return await fetch(input, init, 300000)\r\n    .then(status)\r\n    .then(json)\r\n    .then(async (data) => {\r\n      // console.log({ data });\r\n      return data;\r\n    }).catch(function (error) {\r\n      console.error('Request failed', error);\r\n      throw error;\r\n    });\r\n}","export default async function http(input: RequestInfo, init?: RequestInit, timeOut: number = 7000) {\r\n  return Promise.race([\r\n    fetch(input, init),\r\n    new Promise((_, reject) => {\r\n      setTimeout(() => reject(new Error('Connection timeout, check network for internet access')), timeOut)\r\n    })\r\n  ])\r\n}","import { UserLoginInfo_I, userLoginInfo_S } from \"@@addons/interfaces/network_calls/login\";\r\nimport { base64Decode, base64Encode } from \"../base64\";\r\nimport { get_cookie, set_cookies } from \"../cookies\";\r\n\r\nconst userLoginInfo = 'pdb-client-user';\r\n\r\nexport const setUserLoginInfoCookie = (data: UserLoginInfo_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // @ts-ignore\r\n  window['supersecret'] = {\r\n    unknowable: {\r\n      ops: {\r\n        email: data.user.email, id: data.user.id, cookieName: userLoginInfo\r\n      }\r\n    }\r\n  };\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport const LogUserOut = () => {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getUserLoginInfoCookie = (): UserLoginInfo_I => {\r\n  // console.log({ \"get_cookie(userLoginInfo)\": get_cookie(userLoginInfo) });\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n  \r\n    return userLoginInfo_S(cookie);\r\n  }\r\n}\r\n","import { ClientUserShort_I } from \"@@addons/interfaces/clients/users\";\r\n\r\nexport interface UserLoginInfo_I {\r\n  expiry: Date,\r\n  token: string,\r\n  user: ClientUserShort_I,\r\n}\r\n\r\nexport function userLoginInfo_S(data: any): UserLoginInfo_I {\r\n  const user = data['user'];\r\n  const userLoginInfo_S = {\r\n    expiry: new Date(data['expiry']),\r\n    token: String(data['token']),\r\n    user: {\r\n      id: Number(user['id']),\r\n      accountId: Number(user['accountId']),\r\n      branchId: Number(user['branchId']),\r\n      firstname: String(user['firstname']),\r\n      surname: String(user['surname']),\r\n      phone: String(user['phone']),\r\n      email: String(user['email']),\r\n      profilePicture: String(user['profilePicture']),\r\n    },\r\n  };\r\n\r\n  return userLoginInfo_S;\r\n}\r\n"],"names":["NetWorkCallResponses","constructor","method","httpResponse","error","postForm","response","nonFieldErrorResponse","multipleResponse","paginResponse","databaseResponse","jsonData","rawResponse","this","get","post","postFile","put","patch","delete","outputResponse","success","message","data","outputResponsePagin","output","count","next","previous","results","outputResponseDatatable","datatable_plugin","draw","recordsFiltered","recordsTotal","outputErrorResponse","nameError","unknownError","newResponse","hasOwnProperty","status","Error","Array","isArray","ok","SUCCESS_RESPONSE_MESSAGE","map","_response","newResponses","forEach","postError","_newResponse","includes","push","errorFields","postErrorFields","nameErrorFields","postNamedErrorFields","nonNameErrorFields","postNonNamedErrorFields","postErrorInputs","errors","key","Object","prototype","call","id","validateInput","input","setCustomValidity","isUiValid","validityTransform","newValue","nativeValidity","valid","customError","_formDataToJson","JSON","parse","formData","object","value","Reflect","has","stringify","formDataToJson","FormData","document","querySelector","newKey","replace","addEventListener","event","querySelectorAll","errorErrors","join","_errorErrors","elem","reportValidity","_isClientApp","window","location","href","_HOME_PAGE_BASE_URL","APP_SETTINGS","production","isClientApp","_BASE_URL","_API_BASE_URL","_AKWAABA_API_BASE_URL","_FILE_BUCKET_BASE_URL","_LOGIN_PAGE_BASE_URL","_PUBLIC_BASE_URL","_PUBLIC_PAGE_BASE_URL","_REGISTRATION_BASE_URL","_REG_CONNECTION_BASE_URL","__clientIdentifier","_pdb_client","DOMAIN_ADDRESS","origin","console","log","BaseUrl","IP_ADDRESS","CONSTANTS","URLS","BASE_URL","API_BASE_URL","PDB_CLIENT","AKWAABA_API_BASE_URL","FILE_BUCKET_BASE_URL","HOME_PAGE_BASE_URL","PUBLIC_PAGE_BASE_URL","LOGIN_PAGE_BASE_URL","PUBLIC_LOGIN_PAGE_BASE_URL","_PUBLIC_LOGIN_PAGE_BASE_URL","REGISTRATION_BASE_URL","REG_CONNECTION_BASE_URL","FORGOT_PASSWORD_URL","PUBLIC_BASE_URL","CLICK_COM_BASE_URL","SERVICE_WORKER_TYPES","postAction","networkStatus","base64Encode","obj","removeTrail","rawEncode","toString","replaceAll","base64Decode","str","set_cookies","$name","$value","$time","$path","d","Date","setHours","getHours","expires","toUTCString","get_cookie","cookie","set_cookies_minutes","setMinutes","getMinutes","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","http","init","addSuccessMsgFormat","myHeaders","Headers","append","undefined","headers","iterator","keys","mode","redirect","then","Promise","resolve","_JSON","json","catch","timeOut","race","fetch","_","reject","setTimeout","userLoginInfo","setUserLoginInfoCookie","stringData","unknowable","ops","email","user","cookieName","LogUserOut","getUserLoginInfoCookie","_cookie","userLoginInfo_S","expiry","token","String","Number","accountId","branchId","firstname","surname","phone","profilePicture"],"sourceRoot":""}