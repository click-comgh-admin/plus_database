{"version":3,"file":"../../production_public/assets/v2/prod-files/js/7250.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/toggle_pswd_visibility/index.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/select.ts","webpack://webpackNumbers/./src/view/admin/user/form/index.ts","webpack://webpackNumbers/./src/addons/network/clients/users/put.ts","webpack://webpackNumbers/./src/addons/network/clients/users/access_update.ts","webpack://webpackNumbers/./src/addons/network/clients/users/put_password.ts","webpack://webpackNumbers/./src/addons/network/clients/users/post.ts","webpack://webpackNumbers/./node_modules/lit-html/directive-helpers.js","webpack://webpackNumbers/./node_modules/lit-html/directives/live.js"],"sourcesContent":["import '@material/mwc-icon-button';\r\nimport { TextField } from '@material/mwc-textfield';\r\n\r\nlet showingCheckBoxes: { id: string, showing: boolean, elem: HTMLInputElement | TextField, span: HTMLSpanElement }[] = [];\r\nconst labelTextShow = \"Show Password\", labelTextHide = \"Hide Password\";\r\n\r\nexport const togglePswdVisibility = (type: \"mwc-textfield\" | \"input\" = \"input\") => {\r\n  const PSWDs = document.querySelectorAll(type + '[type=\"password\"]');\r\n  // console.log({ PSWDs });\r\n\r\n  PSWDs.forEach((PSWD: HTMLInputElement | TextField, i) => {\r\n    // console.log({ PSWD });\r\n    const parentElement = PSWD.parentElement;\r\n    parentElement.setAttribute('style', parentElement.getAttribute('style') + \"; flex-direction: column !important;\")\r\n    const label = document.createElement('label');\r\n    label.setAttribute('style', label.getAttribute('style') + \"; display: inline-flex;\" +\r\n      \"width: 100%; cursor: pointer; align-items: center; margin-top: 10px; margin-bottom: 0;\"\r\n    );\r\n\r\n    const span = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n    span.innerText = labelTextShow;\r\n\r\n    const spanDummy = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.id = \"pswd-visibility-btn--\" + i;\r\n    checkbox.setAttribute('style', checkbox.getAttribute('style') + \"; -moz-appearance: auto !important;\" +\r\n      \"-webkit-appearance: auto !important; -ms-appearance: auto !important; appearance: auto !important;\" +\r\n      \"opacity: 1; margin-right: 0; z-index: 10;\"\r\n    );\r\n\r\n    label.appendChild(spanDummy);\r\n    label.appendChild(checkbox);\r\n    label.appendChild(span);\r\n\r\n    PSWD.after(label);\r\n\r\n    const showingCheckBox = { id: checkbox.id, showing: false, elem: PSWD, span: span };\r\n    if (!showingCheckBoxes.includes(showingCheckBox)) {\r\n      showingCheckBoxes.push(showingCheckBox);\r\n    }\r\n    checkbox.addEventListener('change', __toggleVisibility)\r\n  });\r\n}\r\n\r\nconst __toggleVisibility = (e: { preventDefault: () => void; currentTarget: any; }) => {\r\n  e.preventDefault();\r\n  const checkbox: HTMLInputElement = e.currentTarget;\r\n  // console.log({ checkbox, e })\r\n  checkbox.checked\r\n  showingCheckBoxes.forEach(showingCheckBox => {\r\n    if (checkbox.id === showingCheckBox.id) {\r\n      if (showingCheckBox.showing === false) {\r\n        showingCheckBox.elem.type = \"text\";\r\n        showingCheckBox.span.innerText = labelTextHide;\r\n        showingCheckBox.showing = true;\r\n      } else {\r\n        showingCheckBox.elem.type = \"password\";\r\n        showingCheckBox.span.innerText = labelTextShow;\r\n        showingCheckBox.showing = false;\r\n      }\r\n      // console.log({ showingCheckBox, button });\r\n    }\r\n  });\r\n}","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { SelectInputOptions_I, SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport * as $ from 'jquery'\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport 'select2';\r\nimport { ProcessedResult, QueryOptions, DataParams, Event } from 'select2';\r\nimport '../../../../assets/styles/views/widget/select_input/select_input.scss';\r\n\r\n\r\n@customElement('select-input')\r\nexport class SelectInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  public value: SelectInputOptions_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private randomID: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: String })\r\n  public input_id?: string = this.id + \"_\" + this.randomID;\r\n\r\n  @property({ type: Array })\r\n  public options?: { id: number, name: string, isSelected?: \"true\" | \"false\", selected: boolean }[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public required?: boolean;\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchToken?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchUrl?: string = null;\r\n\r\n  @property({attribute: false})\r\n  public currentValue: any | any[];\r\n\r\n  // @property({ type: Object })\r\n  // public ajaxHeader: object = {};\r\n\r\n  private _ajaxHeader: any = null;\r\n\r\n  public set ajaxHeader(value: any) {\r\n    this._ajaxHeader = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get ajaxHeader(): any {\r\n    return this._ajaxHeader;\r\n  }\r\n\r\n  @property({ type: Object })\r\n  public ajaxFetchProcessResponse?: (data: any, params: QueryOptions) => SelectInputProcessedAjaxResponse_I = null;\r\n\r\n  @property({ type: Array })\r\n  public ajaxFetchUrlParams?: SelectInputProcessedAjaxUrlParam_I[] = [];\r\n  \r\n  @property({ type: Number })\r\n  public startSearchPage?: number = 0\r\n\r\n  @property({ type: Boolean })\r\n  /** For multiple image selection */\r\n  public multiple?: boolean;\r\n\r\n  private selectSelector: NodeListOf<HTMLSelectElement>;\r\n  private $selectSelector: JQuery<HTMLSelectElement>;\r\n\r\n  @property({ type: Number })\r\n  public startNumber: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public rowsPerPage: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public totalShowing: number = 10;\r\n\r\n  @property({ type: Boolean })\r\n  private showSelectorLoaded?: boolean = false;\r\n\r\n  static styles = [\r\n    css`\r\n      .select2-container {\r\n        pointer-events: auto !important;\r\n      }\r\n    `\r\n  ];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();  \r\n    this.value = Array.isArray(this.value) ? this.value : [];\r\n\r\n    setInterval(() => {\r\n      if (this.selectSelector === undefined) {\r\n        // console.log({ \"this.selectSelector\": this.selectSelector });\r\n        // console.log({ \"this.input_id\": this.input_id, \"'select-input>select[input_id='+ this.input_id +']\": 'select-input>select[input_id='+ this.input_id +']' });\r\n        this.selectSelector = document.querySelectorAll('select-input>select[input_id='+ this.input_id +']');\r\n        // console.log({\"this.selectSelector\": this.selectSelector});\r\n        \r\n        this.$selectSelector = $(this.selectSelector)\r\n        // console.log({\"this.$selectSelector\": this.$selectSelector});\r\n      } else {\r\n        this.showDropdownAlt();\r\n      }\r\n    });\r\n\r\n    this.options = this.options.map((option) => {\r\n      const optionId = option.id;\r\n      let isSelected = false;\r\n\r\n      // console.log({\"this.value\": this.value});\r\n\r\n      this.value.forEach((val) => {\r\n        const valId = val.id;\r\n\r\n        isSelected = optionId === valId;\r\n      });\r\n      option.selected = isSelected;\r\n      return option;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log({\"this.options\": this.options});\r\n    \r\n    if (this.multiple) {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple required>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    } else {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\" required>\r\n            ${this.options.map(option => {\r\n              \r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                // console.log(\"option_option-option_option - \" + this.label + \" :\", {option});\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\">\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    // this.showDropdown();\r\n  }\r\n\r\n  formatRepo(repo: { loading: boolean; text: string; id: string; }) {\r\n    // console.log({ \"smbfl-repo\": repo });\r\n    if (repo.loading) {\r\n      return repo.text;\r\n    }\r\n\r\n    // console.log({ \"this.value\": this.value });\r\n    var $container = $(\r\n      this.value.map((val) => {\r\n        const _selected = Number(repo.id) === val.id,\r\n          selected = _selected ? \"selected='true'\" : \"\";\r\n        // console.log({ _selected, selected });\r\n\r\n        return '<option value=\"' + repo.id + '\" ' + selected + '>' + repo.text + '</option>'\r\n      })\r\n    );\r\n    return $container;\r\n  }\r\n\r\n  formatRepoSelection(repo: { full_name: string; text: string; }) {\r\n    return repo.full_name || repo.text;\r\n  }\r\n\r\n  _start(params: any, totalShowing: number) {\r\n    const _this = this;\r\n    // console.log({ _this });\r\n\r\n    // _this.totalShowing = 10;\r\n\r\n    this.startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n    this.startSearchPage = this.startSearchPage === 0 ? this.startSearchPage : this.startSearchPage * totalShowing;\r\n    $('.select2-search__field').on('keyup', function ($this) {\r\n      $(_this.selectSelector).empty();\r\n      _this.startSearchPage = 0\r\n      // _this.totalShowing = 10;\r\n      // console.log({ _this });\r\n    });\r\n\r\n    return _this.startSearchPage;\r\n  }\r\n\r\n  private showDropdownAlt() {\r\n    const _this = this;\r\n    let totalShowing = this.totalShowing,\r\n      startSearchPage = this.startSearchPage;\r\n\r\n      function _start(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n        startSearchPage = startSearchPage === 0 ? startSearchPage : startSearchPage * totalShowing;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n      function _page(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        let startSearchPage = isNaN(params.page) ? 1 : params.page + 1;\r\n        startSearchPage = startSearchPage === 0? 1 : startSearchPage;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n    if (this.showSelectorLoaded === false) {\r\n      this.showSelectorLoaded = true;\r\n      if (this.ajaxFetchUrl === null) {\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-1\": selectSelector})\r\n          $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            // @ts-ignore\r\n            placeholder: this.label,\r\n          });\r\n          $(selectSelector).on('select2:select', (e) => {\r\n            this.changeAction(e)\r\n          })\r\n        });\r\n      } else {\r\n        let _headers = {\r\n          \"Access-Control-Allow-Origin\": \"*/*\",\r\n          \"Accept\": \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        };\r\n        // console.log({\"this.ajaxHeader\": this.ajaxHeader})\r\n        \r\n        for (const header in this.ajaxHeader) {\r\n          // console.log({header})\r\n          // @ts-ignore\r\n          _headers[header] = this.ajaxHeader[header];\r\n        }\r\n\r\n        // console.log({ _headers });\r\n        // console.log({\"this.selectSelector\": this.selectSelector})\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-2\": selectSelector})\r\n          const S2: JQuery<HTMLSelectElement> = $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            ajax: {\r\n              url: _this.ajaxFetchUrl,\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params: { term: any; }) {\r\n                const start = _start(params, S2);\r\n                const page = _page(params, S2);\r\n                // let page = start / 10;\r\n                // page = page === 0 ? 1 : page;\r\n                let finalParams: any = {\r\n                  \"search\": params.term, // search term\r\n                  \"start\": start,\r\n                  \"page\": page,\r\n                };\r\n\r\n                _this.ajaxFetchUrlParams.forEach((param) => {\r\n                  finalParams[param.param] = param.value;\r\n                });\r\n                // console.log({finalParams});\r\n                return finalParams;\r\n              },\r\n              headers: _headers,\r\n              processResults: (data: any, params: any) => {\r\n                // return _this.ajaxFetchProcessResponse(data, params);\r\n                const processedResponse = this.ajaxFetchProcessResponse === null\r\n                  ? this._processResults(data, params)\r\n                  : this.ajaxFetchProcessResponse(data, params);\r\n\r\n                // console.log({ \"totalShowing-1\": totalShowing });\r\n                totalShowing += processedResponse.results.length;\r\n                // console.log({ \"totalShowing-2\": totalShowing });\r\n\r\n                return {\r\n                  results: processedResponse.results,\r\n                  pagination: {\r\n                    // @ts-ignore\r\n                    more: totalShowing < processedResponse.total\r\n                  }\r\n                };\r\n              },\r\n              cache: true\r\n            },\r\n            placeholder: this.label,\r\n          });\r\n          S2.on('select2:opening', (e) => {\r\n            // console.log({ e });\r\n            startSearchPage = 0\r\n            totalShowing = 0;\r\n          });\r\n        });\r\n      }\r\n\r\n      const SELECT2s = this.querySelectorAll('.select2-container');\r\n      // console.log({SELECT2s})\r\n      SELECT2s.forEach(SELECT2 => {\r\n        SELECT2.setAttribute('style', 'width: 100% !important; pointer-events: auto !important;');\r\n      });\r\n    }\r\n  }\r\n\r\n  private _processResults(data: any, params: any): SelectInputProcessedAjaxResponse_I {\r\n    const response = data;\r\n    params.page = params.page || 0;\r\n    // console.log({ \"smbfl-response\": response, \"check\": response.error === false });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (response.error === false) {\r\n      var _data = response['data'];\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['fullName'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n          // $($select).append($('<option>', { fullName: id }).text(fullName));\r\n        }\r\n      }\r\n    }\r\n    this.totalShowing += processedData.length;\r\n    return {\r\n      results: processedData,\r\n      total: response.total,\r\n      totalShowing: this.totalShowing\r\n    };\r\n  }\r\n\r\n  // @ts-ignore\r\n  private changeAction(changeActionEvent: Event<HTMLSelectElement, DataParams>) {\r\n    // // console.log({ changeActionEvent });\r\n    // // @ts-ignore\r\n    // const selectedOptions = changeActionEvent.target.selectedOptions;\r\n    // let currentValue: number[] = [];\r\n    // for (const iterator of selectedOptions) {\r\n    //   let selectedOption: HTMLOptionElement = iterator;\r\n    //   // console.log({ iterator, selectedOption });\r\n    //   const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n    //   if (!currentValue.includes(value)) {\r\n    //     currentValue.push(value);\r\n    //   }\r\n    // }\r\n    // this.currentValue = currentValue;\r\n    // // console.log({'this.querySelector(`[input_id=\"${this.input_id}\"]`)': this.querySelector(`[input_id=\"${this.input_id}\"]`)})\r\n    // @ts-ignore\r\n    const selectedOptions2 = this.querySelector(`[input_id=\"${this.input_id}\"]`).selectedOptions;\r\n    let currentValue2: number[] = [];\r\n    for (const iterator of selectedOptions2) {\r\n      let selectedOption: HTMLOptionElement = iterator;\r\n      // console.log({ iterator, selectedOption });\r\n      const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n      if (!currentValue2.includes(value)) {\r\n        currentValue2.push(value);\r\n      }\r\n    }\r\n    // console.log({ currentValue, currentValue2 });\r\n    this.currentValue = currentValue2;\r\n    // @ts-ignore\r\n    this.querySelector(`[input_id=\"${this.input_id}\"]`).setAttribute(\"currentValue\", currentValue2)\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/admin/user/form.scss';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-tab';\r\nimport '@material/mwc-tab-bar';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { GET_ClientPageAccess } from '@@addons/network/clients/users/page_access';\r\nimport { POST_ClientUser } from '@@addons/network/clients/users/post';\r\nimport { togglePswdVisibility } from '@@addons/functions/toggle_pswd_visibility';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { QueryOptions } from 'select2';\r\nimport { ClientUsers_I } from '@@addons/interfaces/clients/users';\r\nimport { Button } from '@material/mwc-button';\r\nimport { PUT_ClientUserAccess } from '@@addons/network/clients/users/access_update';\r\nimport { PUT_ClientUser } from '@@addons/network/clients/users/put';\r\nimport { PUT_ClientUserPassword } from '@@addons/network/clients/users/put_password';\r\nimport '../access_card';\r\nimport { ClientPageAccessModel, Convert as cpamConvert } from '@@addons/interfaces/clients/users/page_access';\r\n// import { ClientUserAccess_S } from '@@addons/interfaces/clients/users/access';\r\nimport { ClientUserPageAccessModel, Convert as cupamConvert } from '@@addons/interfaces/clients/users/page_access/user_access';\r\nimport { setAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\n\r\n\r\n@customElement(\"pdb-admin-user-form\")\r\nexport class PdbAdminUserForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public edit: \"true\" | \"false\" = \"false\";\r\n\r\n  @property({ type: Boolean })\r\n  public editAccess?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public isEditable?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public page_type: \"mine\" | \"not-mine\" = \"mine\";\r\n\r\n  @property({ type: String })\r\n  private registrationType: \"from-members\" | \"new-entry\" | \"none\" = \"none\";\r\n\r\n  @property({ type: Number })\r\n  private formId: 1 | 2 | 3 = 1;\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranchId: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _pageAccesses: ClientPageAccessModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  private get _clientUserDefault(): NetworkCallResponse_I<ClientUsers_I>{\r\n    const user: ClientUsers_I = {};\r\n    return {data: user, message: \"\", success: false}\r\n  }\r\n\r\n  private _clientUser: NetworkCallResponse_I<ClientUsers_I> = this._clientUserDefault;\r\n\r\n  public set clientUser(value: NetworkCallResponse_I<ClientUsers_I>) {\r\n    this._clientUser = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUser(): NetworkCallResponse_I<ClientUsers_I> {\r\n    return this._clientUser;\r\n  }\r\n\r\n  private get _clientUserAccessDefault(): NetworkCallResponse_I<ClientUserPageAccessModel>{\r\n    const access: ClientUserPageAccessModel = {};\r\n    return {data: access, message: \"\", success: false}\r\n  }\r\n\r\n  private _clientUserAccess: NetworkCallResponse_I<ClientUserPageAccessModel> = this._clientUserAccessDefault;\r\n\r\n  public set clientUserAccess(value: NetworkCallResponse_I<ClientUserPageAccessModel>) {\r\n    this._clientUserAccess = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUserAccess(): NetworkCallResponse_I<ClientUserPageAccessModel> {\r\n    return this._clientUserAccess;\r\n  }\r\n\r\n  @query('#mainAccountFormBtn')\r\n  private mainAccountFormBtn: Button;\r\n\r\n  @query('#accessPagesFormBtn')\r\n  private accessPagesFormBtn: Button;\r\n\r\n  @query('#passwordFormBtn')\r\n  private passwordFormBtn: Button;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    await this.getPageAccesses();\r\n    await this.getBranches();\r\n    await this.getGenders();\r\n    // await this.getMembers();\r\n\r\n    if (this.edit == \"true\") {\r\n      this.registrationType = \"new-entry\";\r\n    }\r\n\r\n    // console.log({\"clientUser\": this.clientUser});\r\n    // console.log({\"clientUserAccess\": this.clientUserAccess});\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.edit === \"true\") {\r\n      if (this.page_type === \"mine\") {\r\n        this.isEditable = true;\r\n      } else {\r\n        if (this.editAccess) {\r\n          this.isEditable = true;\r\n        } else {\r\n          this.isEditable = false;\r\n        }\r\n      }\r\n      return html`\r\n        <div class=\"\">\r\n          <div class=\"shadow bg-white p-2 my-2\">\r\n            <div class=\"md:hidden block\">\r\n              <mwc-tab-bar activeIndex=\"0\">\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"person\" id=\"mainAccountFormBtn\"\r\n                  label=\"User\" @click=\"${this.displayMainAccountFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"business_center\" id=\"accessPagesFormBtn\"\r\n                  label=\"Access\" @click=\"${this.displayAccessPagesFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"lock\" id=\"passwordFormBtn\"\r\n                  class=\"!w-28 !px-1\" label=\"Password\" @click=\"${this.displayPasswordForm}\"></mwc-tab>\r\n              </mwc-tab-bar>\r\n            </div>\r\n            <div class=\"md:block hidden\">\r\n              <mwc-tab-bar activeIndex=\"0\">\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"person\" id=\"mainAccountFormBtn\"\r\n                  label=\"User Information\" @click=\"${this.displayMainAccountFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"business_center\" id=\"accessPagesFormBtn\"\r\n                  label=\"Access Page(s)\" @click=\"${this.displayAccessPagesFormBtn}\"></mwc-tab>\r\n                <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth icon=\"lock\" id=\"passwordFormBtn\"\r\n                  class=\"!w-28 !px-1\" label=\"Password\" @click=\"${this.displayPasswordForm}\"></mwc-tab>\r\n              </mwc-tab-bar>\r\n            </div>\r\n          </div>\r\n          <div class=\"shadow bg-white p-2 my-2\">\r\n            ${this.getEditForm}\r\n          </div>\r\n          \r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"shadow bg-white p-2\">\r\n          <div class=\"p-1\">\r\n            <mwc-button class=\"primary\" setFormMembersField label=\"From Member List\" @click=\"${this.setFormMembersField}\"></mwc-button>\r\n            <mwc-button class=\"primary\" setNewEntryField label=\"New Entry\" @click=\"${this.setNewEntryField}\"></mwc-button>\r\n          </div>\r\n          ${this.form}\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get getEditForm() {\r\n    if (this.formId === 1) {\r\n      return html`\r\n        ${this.profileForm}\r\n      `;\r\n    } else if (this.formId === 2) {\r\n      return html`\r\n        ${this.pageAccessForm}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.passwordForm}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private displayMainAccountFormBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 1;\r\n    this.mainAccountFormBtn.setAttribute('raised', \"true\");\r\n    this.accessPagesFormBtn.removeAttribute('raised');\r\n    this.passwordFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private displayAccessPagesFormBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 2;\r\n    this.accessPagesFormBtn.setAttribute('raised', \"true\");\r\n    this.mainAccountFormBtn.removeAttribute('raised');\r\n    this.passwordFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private displayPasswordForm(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 3;\r\n    this.passwordFormBtn.setAttribute('raised', \"true\");\r\n    this.accessPagesFormBtn.removeAttribute('raised');\r\n    this.mainAccountFormBtn.removeAttribute('raised');\r\n    \r\n    setTimeout(() => {\r\n      this.firstUpdated();\r\n    }, 500);\r\n  }\r\n\r\n  private setFormMembersField(e: any) {\r\n    e.preventDefault();\r\n    this.registrationType = \"from-members\";\r\n    this.querySelectorAll('[setFormMembersField]').forEach((btn) => {\r\n      btn.setAttribute('raised', '');\r\n      btn.setAttribute('class', 'warning');\r\n    });\r\n    this.querySelectorAll('[setNewEntryField]').forEach((btn) => {\r\n      btn.removeAttribute('raised');\r\n      btn.setAttribute('class', 'primary');\r\n    });\r\n  }\r\n\r\n  private setNewEntryField(e: any) {\r\n    e.preventDefault();\r\n    this.registrationType = \"new-entry\";\r\n    this.querySelectorAll('[setNewEntryField]').forEach((btn) => {\r\n      btn.setAttribute('raised', '');\r\n      btn.setAttribute('class', 'warning');\r\n    });\r\n    this.querySelectorAll('[setFormMembersField]').forEach((btn) => {\r\n      btn.removeAttribute('raised');\r\n      btn.setAttribute('class', 'primary');\r\n    });\r\n  }\r\n  \r\n  private setSelectedBranchId(e: any) {\r\n    e.preventDefault();\r\n    const registrationType = this.registrationType;\r\n    this.registrationType = \"none\";\r\n    this.querySelectorAll('[setSelectedBranchId]').forEach((selectField) => {\r\n      // @ts-ignore\r\n      this.selectedBranchId = selectField.value;\r\n      // console.log({\"this.selectedBranchId\": this.selectedBranchId});\r\n    });\r\n    this.registrationType = registrationType;\r\n  }\r\n\r\n  private get profileForm() {\r\n    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User</h1>\r\n                  <h3 class=\"h3\">Update User Profile!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.branchField}\r\n\r\n                  ${this.newEntryFields}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Update User Profile\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get pageAccessForm() {    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User</h1>\r\n                  <h3 class=\"h3\">Edit User Page Access!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.accessFieldTickBox}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Edit User Page Access\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get passwordForm() {\r\n    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User Password</h1>\r\n                  <h3 class=\"h3\">Set New Password!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.passwordFields}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Set New Password\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get form() {\r\n    \r\n    let clientId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      clientId = this._activeBranchId[0].accountId;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Admin User</h1>\r\n                  <h3 class=\"h3\">Add Admin User!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-user\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.branchField}\r\n\r\n                  ${this.registrationType === \"new-entry\"? html`${this.newEntryFields}`: nothing}\r\n                  ${this.registrationType === \"from-members\"? html`${this.fromMembersField}`: nothing}\r\n                  \r\n                  <!-- ${this.accessFieldSelectBox} -->\r\n                  \r\n                  <div class=\"col-md-12 col-lg-12 my-2\"><hr/></div>\r\n\r\n                  ${this.passwordFields}\r\n\r\n                  <div class=\"col-md-12 col-lg-12 my-2\"><hr/></div>\r\n                  ${this.accessFieldTickBox}\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${clientId}\"/>\r\n                    <input type=\"hidden\" name=\"fromMember\" id=\"fromMember\" value=\"${this.registrationType === \"new-entry\"? false: true}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Add Admin User\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get branchField() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    const clientUser = this.clientUser,\r\n      _data = clientUser.data,\r\n      DATA = Array.isArray(_data)? _data[0]: _data,\r\n      SUCCESS = clientUser.success;\r\n    return html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n        <mwc-select name=\"branchId\" class=\"w-full\" id=\"branchId\" setSelectedBranchId label=\"Select Branch\" @change=\"${this.setSelectedBranchId}\" outlined required>\r\n          ${userBranch === 1 ? html`\r\n            <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n            ${this._branches.map((value) => {\r\n              if (SUCCESS) {\r\n                if (DATA.branchId === value.id) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                }\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          `: html`\r\n            ${this._branches.map((value) => {\r\n              if (value.id === userBranch) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          `}\r\n        </mwc-select>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get passwordFields() {\r\n    return html`\r\n      ${this.edit === \"true\" ? html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Old Password</h4> \r\n        <mwc-textfield name=\"old_password\" id=\"old_password\" label=\"Enter Old Password\" outlined type=\"password\" required>\r\n        </mwc-textfield>\r\n      </div>`: nothing}\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Password</h4> \r\n        <mwc-textfield name=\"password\" id=\"password\" label=\"Enter Password\" outlined type=\"password\" required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Password Confirmation</h4> \r\n        <mwc-textfield name=\"confirm_password\" id=\"confirm_password\" label=\"Enter Password Confirmation\" outlined type=\"password\"\r\n          required>\r\n        </mwc-textfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get fromMembersField() {\r\n    let token = \"\";\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        token = this._userLoginInfo[0].token;\r\n      }\r\n    }\r\n    let ajaxHeader: {Authorization?: string} = {};\r\n    ajaxHeader.Authorization = \"Token \" + token;\r\n    \r\n    return html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Member</h4> \r\n        <select-input class=\"w-100\" id=\"member\" name=\"member\" label=\"Select Member\"\r\n          .ajaxFetchProcessResponse=\"${this.processClientUserSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n          .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n          ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search?\"></select-input>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get pageAccesses() {\r\n    type pageAccessType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; }\r\n    let pageAccesses: pageAccessType[] = [];\r\n\r\n    this._pageAccesses.forEach(page => {\r\n      const pageAccess: pageAccessType = {\r\n        id: page.id, name: page.page, isSelected: \"false\", selected: false,\r\n      };\r\n\r\n      if (!pageAccesses.includes(pageAccess)) {\r\n        pageAccesses.push(pageAccess);\r\n      }\r\n    });\r\n    return pageAccesses;\r\n  }\r\n\r\n  private get accessFieldSelectBox() {\r\n    const pageAccesses = this.pageAccesses;\r\n    return html`\r\n      <div class=\"col-md-6 col-lg-8\">\r\n        <h4 class=\"font-semibold my-2\">Select User Access</h4> \r\n        <select-input name=\"access\" multiple class=\"w-full\" id=\"access\"\r\n          label=\"Select User Access\" .options=\"${pageAccesses}\" outlined required>\r\n        </select-input>\r\n      </div>\r\n    `;    \r\n  }\r\n\r\n  private get accessFieldTickBox() {\r\n    const pageAccesses = this.pageAccesses;\r\n    // console.log({pageAccesses});\r\n    // console.log({\"this.clientUserAccess\": this.clientUserAccess});\r\n    const clientUserAccess = this.clientUserAccess,\r\n      _data = clientUserAccess.data,\r\n      PAGES = Array.isArray(_data)? _data: [_data],\r\n      SUCCESS = clientUserAccess.success;\r\n      \r\n    let accessIDs: Array<ClientUserPageAccessModel> = [];\r\n    if (SUCCESS) {\r\n      PAGES.forEach((PAGE) => {\r\n        PAGE = cupamConvert.toClientUserPageAccessModel(JSON.stringify(PAGE));\r\n        // console.log({ PAGE });\r\n      \r\n        if (!accessIDs.includes(PAGE)) {\r\n          accessIDs.push(PAGE);\r\n        }\r\n      });\r\n    }\r\n    // console.log({accessIDs});\r\n\r\n    // console.log({\"this._pageAccesses\": this._pageAccesses});\r\n    \r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12\">\r\n        <client-user-access-card ?isActive=\"${true}\" .available_access=\"${this._pageAccesses}\" .user_access=\"${accessIDs}\"></client-user-access-card>\r\n      </div>\r\n    `;\r\n    \r\n    // return html`\r\n    //   <div class=\"col-md-6 col-lg-8\">\r\n    //     <h4 class=\"font-semibold my-2\">Select User Access</h4> \r\n    //     <input type=\"hidden\" id=\"${this.edit === \"true\"? 'pageId': 'access'}\" />\r\n        \r\n    //     <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n    //       <div class=\"mdc-data-table__table-container\">\r\n    //         <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Member\">\r\n    //           <thead>\r\n    //             <tr class=\"mdc-data-table__header-row\">\r\n    //               <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n    //                 <div class=\"mdc-data-table__header-cell-wrapper\">\r\n    //                   <div class=\"mdc-data-table__header-cell-label\">\r\n    //                     <b>Page(s)</b>\r\n    //                   </div>\r\n    //                   <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n    //                 </div>\r\n    //               </th>\r\n    //               <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n    //                 <div class=\"mdc-data-table__header-cell-wrapper\">\r\n    //                   <div class=\"mdc-data-table__header-cell-label\">\r\n    //                     <mwc-icon>tune</mwc-icon>\r\n    //                   </div>\r\n    //                   <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n    //                 </div>\r\n    //               </th>\r\n    //             </tr>\r\n    //           </thead>\r\n    //           <tbody class=\"mdc-data-table__content\">\r\n    //             ${pageAccesses.map((pageAccess, i) => {\r\n    //               let access_id: string = \"access_\" + i,\r\n    //                 access_name = \"access[]\";\r\n    //               if (this.edit === \"true\") {\r\n    //                 access_id = \"pageId_\" + i,\r\n    //                 access_name = \"pageId[]\";\r\n    //               }\r\n    //               let checked = false;\r\n    //               if (SUCCESS) {\r\n    //                 accessIDs.forEach((accessID) => {\r\n    //                   if (pageAccess.id === accessID) {\r\n    //                     checked = true;\r\n    //                   }\r\n    //                 });\r\n    //               }\r\n                  \r\n    //               return html`\r\n    //                 <tr class=\"mdc-data-table__row\">\r\n    //                   <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n    //                     <div class=\"flex items-center\">\r\n    //                       <label for=\"${access_id}\">${pageAccess.name}</label>\r\n    //                     </div>\r\n    //                   </th>\r\n    //                   <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n    //                     <div class=\"\">\r\n    //                       ${checked? html`\r\n    //                         <input id=\"${access_id}\" name=\"${access_name}\" type=\"checkbox\" value=\"${pageAccess.id}\" checked\r\n    //                           class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"/>\r\n    //                       `:html`\r\n    //                         <input id=\"${access_id}\" name=\"${access_name}\" type=\"checkbox\" value=\"${pageAccess.id}\"\r\n    //                           class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"/>\r\n    //                       `\r\n    //                       }\r\n    //                     </div>\r\n    //                   </td>\r\n    //                 </tr>\r\n    //               `;\r\n    //             })}\r\n    //           </tbody>\r\n    //         </table>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // `;    \r\n  }\r\n\r\n  private get newEntryFields() {\r\n    const clientUser = this.clientUser,\r\n      _data = clientUser.data,\r\n      DATA = Array.isArray(_data)? _data[0]: _data,\r\n      SUCCESS = clientUser.success;\r\n    \r\n    let birthDate = \"\";\r\n    if (SUCCESS) {\r\n      const _birthDate = new Date(DATA.dateOfBirth),\r\n        __TO_DATE = _birthDate.toLocaleDateString('en-US', {\r\n          day: '2-digit', month: '2-digit', year: 'numeric', formatMatcher: 'best fit',\r\n          // @ts-ignore\r\n        }).split('/');\r\n      birthDate = [__TO_DATE[2], __TO_DATE[0], __TO_DATE[1]].join('-');\r\n    }\r\n    return html`\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Firstname</h4> \r\n        <mwc-textfield name=\"firstname\" type=\"text\" class=\"w-full\" id=\"firstname\" \r\n          value=\"${SUCCESS? DATA.firstname: ''}\" label=\"Enter Firstname\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Surname</h4> \r\n        <mwc-textfield name=\"surname\" type=\"text\" class=\"w-full\" id=\"surname\" \r\n          value=\"${SUCCESS? DATA.surname: ''}\" label=\"Enter Surname\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n        <mwc-select name=\"gender\" class=\"w-full\" id=\"gender\" label=\"Select Gender\" outlined required>\r\n          <mwc-list-item value=\"0\">Select Gender</mwc-list-item>\r\n          ${this._genders.map((value) => {\r\n            if (SUCCESS) {\r\n              if (DATA.gender === value.id) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n              }\r\n            } else {\r\n              return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n            }\r\n          })}\r\n        </mwc-select>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Select Date of Birth</h4> \r\n        <mwc-textfield name=\"dateOfBirth\" type=\"date\" class=\"w-full\" id=\"dateOfBirth\"\r\n          label=\"Select Date of Birth\" value=\"${birthDate}\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <!-- <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Add Profile Picture</h4> \r\n        <file-input id=\"profilePicture\" name=\"profilePicture\" hasLabel label=\"Add Profile Picture\"></file-input>\r\n      </div> -->\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Phone Number</h4> \r\n        <mwc-textfield name=\"phone\" multiple type=\"tel\" class=\"w-full\" id=\"phone\"\r\n          label=\"Enter Phone Number\" value=\"${SUCCESS? DATA.phone: ''}\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-4\">\r\n        <h4 class=\"font-semibold my-2\">Enter Email Address</h4> \r\n        <mwc-textfield name=\"email\" multiple type=\"email\" class=\"w-full\" id=\"email\"\r\n          label=\"Enter Email Address\" value=\"${SUCCESS? DATA.email: ''}\" outlined required>\r\n        </mwc-textfield>\r\n      </div>\r\n    `;\r\n  }\r\n  // ('id', '-- firstname --', '-- surname --', '-- gender --', '-- profilePicture --',\r\n  //   '-- dateOfBirth --', '-- phone --', '-- email --', 'role', 'accountId', '-- branchId --',\r\n  //   'access'\r\n  // )\r\n  firstUpdated() {\r\n    togglePswdVisibility();\r\n    togglePswdVisibility(\"mwc-textfield\");\r\n  }\r\n\r\n  private processClientUserSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"member\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['firstname'] + \" \" + item['surname'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n    \r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams(): SelectInputProcessedAjaxUrlParam_I[] {\r\n\r\n    // console.log({\"this.selectedBranchId--\": this.selectedBranchId});\r\n    return [\r\n      { param: \"branchId\", value: String(this.selectedBranchId) }\r\n    ]\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getPageAccesses() {\r\n    const _networkResponse = await GET_ClientPageAccess<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __pageAccesses: ClientPageAccessModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __pageAccesses.push({ id: 0, page: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientPageAccessModel[] = data.map(value => {\r\n          return cpamConvert.toClientPageAccessModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __pageAccesses = DATA;\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<ClientPageAccessModel> = [];\r\n    new_data.push(...this._pageAccesses, ...__pageAccesses);\r\n    this._pageAccesses = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n\r\n    if (this.edit === \"true\") {\r\n      if (this.isEditable) {\r\n        const clientUser = this.clientUser,\r\n          _data = clientUser.data,\r\n          DATA = Array.isArray(_data) ? _data[0] : _data,\r\n          SUCCESS = clientUser.success;\r\n        if (SUCCESS) {\r\n          if (this.formId === 1) {\r\n            await PUT_ClientUser(DATA.id)\r\n          } else if (this.formId === 2) {\r\n            await PUT_ClientUserAccess(DATA.id);\r\n            await setAppSettingsExtraSettings(true)\r\n          } else {\r\n            await PUT_ClientUserPassword(DATA.id);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      await POST_ClientUser();\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientUser(ID: Number): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update user profile?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientUserAccess(ID: Number): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user-access/setup/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Setup user page access?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              const _errors_name = e.id;\r\n\r\n              if (Array.isArray(_errors)) {\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n  \r\n                  errors.push(errormsg);\r\n                });\r\n              } else {\r\n                // console.log({ \"_RESPONSE.unknownError--e.errors\": e.errors, \"typeof e.errors\": typeof e.errors });\r\n                for (const key in e.errors) {\r\n                  if (Object.prototype.hasOwnProperty.call(e.errors, key)) {\r\n                    const _error = e.errors[key];\r\n\r\n                    if (Array.isArray(_error)) {\r\n                      _error.forEach(_err => {\r\n                        // console.log({ _err, \"_err_err\": typeof _err, });\r\n                        let errormsg2 = { error: _errors_name + \": \" + _err };\r\n  \r\n                        errors.push(errormsg2);\r\n                      })\r\n                      // console.log({key,  \"_RESPONSE.unknownError--e.errors--error\": typeof _error, _error });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientUserPassword(ID: Number): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user/change-password/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update user password?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_ClientUser(): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-user\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Admin User?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              const _errors_name = e.id;\r\n\r\n              if (Array.isArray(_errors)) {\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n  \r\n                  errors.push(errormsg);\r\n                });\r\n              } else {\r\n                // console.log({ \"_RESPONSE.unknownError--e.errors\": e.errors, \"typeof e.errors\": typeof e.errors });\r\n                for (const key in e.errors) {\r\n                  if (Object.prototype.hasOwnProperty.call(e.errors, key)) {\r\n                    const _error = e.errors[key];\r\n\r\n                    if (Array.isArray(_error)) {\r\n                      _error.forEach(_err => {\r\n                        // console.log({ _err, \"_err_err\": typeof _err, });\r\n                        let errormsg2 = { error: _errors_name + \": \" + _err };\r\n  \r\n                        errors.push(errormsg2);\r\n                      })\r\n                      // console.log({key,  \"_RESPONSE.unknownError--e.errors--error\": typeof _error, _error });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import{_$LH as o}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{I:l}=o,t=o=>null===o||\"object\"!=typeof o&&\"function\"!=typeof o,i={HTML:1,SVG:2},n=(o,l)=>void 0===l?void 0!==(null==o?void 0:o._$litType$):(null==o?void 0:o._$litType$)===l,d=o=>void 0!==(null==o?void 0:o._$litDirective$),v=o=>null==o?void 0:o._$litDirective$,e=o=>void 0===o.strings,c=()=>document.createComment(\"\"),r=(o,t,i)=>{var n;const d=o._$AA.parentNode,v=void 0===t?o._$AB:t._$AA;if(void 0===i){const t=d.insertBefore(c(),v),n=d.insertBefore(c(),v);i=new l(t,n,o,o.options)}else{const l=i._$AB.nextSibling,t=i._$AM,e=t!==o;if(e){let l;null===(n=i._$AQ)||void 0===n||n.call(i,o),i._$AM=o,void 0!==i._$AP&&(l=o._$AU)!==t._$AU&&i._$AP(l)}if(l!==v||e){let o=i._$AA;for(;o!==l;){const l=o.nextSibling;d.insertBefore(o,v),o=l}}}return i},u=(o,l,t=o)=>(o._$AI(l,t),o),f={},s=(o,l=f)=>o._$AH=l,m=o=>o._$AH,p=o=>{var l;null===(l=o._$AP)||void 0===l||l.call(o,!1,!0);let t=o._$AA;const i=o._$AB.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},a=o=>{o._$AR()};export{i as TemplateResultType,a as clearPart,m as getCommittedValue,v as getDirectiveClass,r as insertPart,d as isDirectiveResult,t as isPrimitive,e as isSingleExpression,n as isTemplateResult,p as removePart,u as setChildPartValue,s as setCommittedValue};\n//# sourceMappingURL=directive-helpers.js.map\n","import{noChange as r,nothing as e}from\"../lit-html.js\";import{directive as i,Directive as t,PartType as n}from\"../directive.js\";import{isSingleExpression as o,setCommittedValue as s}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=i(class extends t{constructor(r){if(super(r),r.type!==n.PROPERTY&&r.type!==n.ATTRIBUTE&&r.type!==n.BOOLEAN_ATTRIBUTE)throw Error(\"The `live` directive is not allowed on child or event bindings\");if(!o(r))throw Error(\"`live` bindings can only contain a single expression\")}render(r){return r}update(i,[t]){if(t===r||t===e)return t;const o=i.element,l=i.name;if(i.type===n.PROPERTY){if(t===o[l])return r}else if(i.type===n.BOOLEAN_ATTRIBUTE){if(!!t===o.hasAttribute(l))return r}else if(i.type===n.ATTRIBUTE&&o.getAttribute(l)===t+\"\")return r;return s(i),t}});export{l as live};\n//# sourceMappingURL=live.js.map\n"],"names":["showingCheckBoxes","labelTextShow","togglePswdVisibility","type","document","querySelectorAll","forEach","PSWD","i","parentElement","setAttribute","getAttribute","label","createElement","span","innerText","spanDummy","checkbox","id","appendChild","after","showingCheckBox","showing","elem","includes","push","addEventListener","__toggleVisibility","e","preventDefault","currentTarget","checked","GenericGenderInfo_S","data","Number","name","GET_ClientBranches","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","GET_GenericGender","SelectInput","value","randomID","Math","floor","random","input_id","this","options","ajaxFetchToken","ajaxFetchUrl","_ajaxHeader","ajaxFetchProcessResponse","ajaxFetchUrlParams","startSearchPage","startNumber","rowsPerPage","totalShowing","showSelectorLoaded","ajaxHeader","requestUpdate","connectedCallback","super","Array","isArray","setInterval","undefined","selectSelector","$selectSelector","showDropdownAlt","map","option","optionId","isSelected","val","valId","selected","render","multiple","required","firstUpdated","formatRepo","repo","loading","text","formatRepoSelection","full_name","_start","params","_this","isNaN","page","on","$this","empty","select2","closeOnSelect","placeholder","changeAction","_headers","header","ajax","dataType","delay","start","S2","_page","finalParams","term","param","processResults","processedResponse","_processResults","results","length","pagination","more","total","cache","SELECT2","response","processedData","_data","item","_new","changeActionEvent","selectedOptions2","querySelector","selectedOptions","currentValue2","iterator","selectedOption","currentValue","createRenderRoot","styles","String","Boolean","attribute","Object","PdbAdminUserForm","constructor","edit","editAccess","isEditable","page_type","registrationType","formId","selectedBranchId","_branches","_genders","_pageAccesses","_activeBranchId","_userLoginInfo","_clientUser","_clientUserDefault","_clientUserAccess","_clientUserAccessDefault","message","success","clientUser","clientUserAccess","activeBranchId","getPageAccesses","getBranches","getGenders","disconnectedCallback","displayMainAccountFormBtn","displayAccessPagesFormBtn","displayPasswordForm","getEditForm","setFormMembersField","setNewEntryField","form","profileForm","pageAccessForm","passwordForm","mainAccountFormBtn","accessPagesFormBtn","removeAttribute","passwordFormBtn","setTimeout","btn","setSelectedBranchId","selectField","clientId","accountId","branchField","newEntryFields","submitForm","accessFieldTickBox","passwordFields","fromMembersField","accessFieldSelectBox","userBranch","user","branchId","DATA","SUCCESS","processClientUserSearch","pageAccesses","pageAccess","PAGES","accessIDs","PAGE","JSON","stringify","birthDate","__TO_DATE","Date","dateOfBirth","toLocaleDateString","day","month","year","formatMatcher","split","join","firstname","surname","gender","phone","email","TOTAL","count","RESULTS","SELECTOR","_networkResponse","__branches","new_data","__genders","__pageAccesses","ID","formContainer","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","window","location","reload","PUT_ClientUser","_errors","_errors_name","key","prototype","hasOwnProperty","call","_error","_err","errormsg2","PUT_ClientUserAccess","PUT_ClientUserPassword","POST_ClientUser","I","l","t","o","strings","f","s","_$AH","r","Error","update","element","hasAttribute"],"sourceRoot":""}