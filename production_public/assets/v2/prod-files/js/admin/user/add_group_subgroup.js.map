{"version":3,"file":"../../production_public/assets/v2/prod-files/js/admin/user/add_group_subgroup.js","mappings":"cAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,GAC1B,CATD,CASGK,MAAM,K,wsBCOF,IAAMC,EAAN,cAA+C,KACpDC,cAAgBC,QAGR,KAAAC,OAAkB,EAGlB,KAAAC,gBAA0C,KAG1C,KAAAC,WAAqB,CATJ,CAWnBC,oB,uHACJ,EAAMA,kBAAiB,YACvB,SAAWC,MAAK,IAAMC,KAAKH,WAAY,IAEvCG,KAAKC,YACL,MAAMC,GAAiB,UACvBF,KAAKJ,gBAAsC,OAAnBM,EAA2B,KAAO,CAACA,EAC7D,E,+RAEAC,uBAAyB,CAOzBC,S,MACE,GAAIJ,KAAKH,UAAW,CAClB,GAAiC,QAA7B,mBAA6B,eAAEQ,gBAAgBC,QACjD,OAAO,IAAI,0DAEb,KAAK,OAA2B,CAACC,OAAQ,WAAkBC,SAAU,SAAS,GAC5E,OAAO,IAAI,qD,CAGf,OAAO,IAAI;;uDAEwCR,KAAKL;;KAG1D,CAEAc,eAAiB,CAETR,YACN,IAAIN,GAAS,QAAkB,WAE3Be,EAAqB,OAAXf,GAAkB,OAAaA,GAAU,KACvDK,KAAKL,OAASgB,OAAOC,MAAMF,GAAW,KAAOC,OAAOD,EAEtD,CAEAG,mBACE,OAAOb,IACT,GAlCO,EAAAc,OAAS,CACd,IAAG;;KApBL,IAAC,QAAS,CAAEC,KAAMJ,S,sDAGlB,IAAC,QAAS,CAAEI,KAAMC,Q,8DAGlB,IAAC,QAAS,CAAED,KAAME,U,0DATPzB,EAAgC,IAD5C,QAAc,0C,2BACFA,E","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/view/admin/user/add_group_subgroup.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport './form/group_subgroup';\r\nimport { base64Decode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from './page__id';\r\n\r\n\r\n@customElement(\"pdb-admin-user-add-group-subgroup-form\")\r\nexport class PdbAdminUserAddGroupSubgroupForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private userId?: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    this.getUserId();\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.create, viewType: \"Both\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 my-2\">\r\n        <pdb-admin-user-group-subgroup-form .userId=\"${this.userId}\"></pdb-admin-user-group-subgroup-form>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getUserId() {\r\n    let userId = urlQueryParamsGet('user-id');\r\n    // console.log({ userId });\r\n    let _userId = userId !== null ? base64Decode(userId) : null;\r\n    this.userId = Number.isNaN(_userId) ? null : Number(_userId);\r\n    // console.log({ \"this.userId\": this.userId });\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","PdbAdminUserAddGroupSubgroupForm","constructor","super","userId","_activeBranchId","_hasSetup","connectedCallback","then","this","getUserId","activeBranchId","disconnectedCallback","render","expiration_date","expired","pageId","viewType","firstUpdated","_userId","Number","isNaN","createRenderRoot","styles","type","Array","Boolean"],"sourceRoot":""}