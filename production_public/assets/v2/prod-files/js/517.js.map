{"version":3,"file":"../../public/assets/v2/prod-files/js/517.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index_full.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__individual.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__organization.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-out.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/end-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/third.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/cancel-clocking.ts","webpack://webpackNumbers/./node_modules/lit-html/async-directive.js","webpack://webpackNumbers/./node_modules/lit-html/directives/private-async-helpers.js","webpack://webpackNumbers/./node_modules/lit-html/directives/until.js"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \".\";\r\n\r\nexport interface MemberClockingInfoFull_I {\r\n  attendance?: MemberClockingInfo_I,\r\n  additionalInfo?: MemberClockingAdditionalInfo_I,\r\n  lastSeen?: Date,\r\n  status?: String,\r\n}\r\nexport interface MemberClockingAdditionalInfo_I {\r\n  id?: number,\r\n  memberId?: number,\r\n  memberInfo?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  phone?: string,\r\n  email?: string,\r\n  placeOfWork?: string,\r\n  whatsapp?: string,\r\n  facebook?: string,\r\n  twitter?: string,\r\n  instagram?: string,\r\n  businessHashtag?: string,\r\n  businessDescription?: string,\r\n  profession?: string,\r\n  dateJoined?: Date,\r\n  date?: Date\r\n}\r\n\r\nexport const InstanceOfOrganizationMember = (data: any) => {\r\n  return \"organizationName\" in data && \"organizationType\" in data && \"businessRegistered\" in data && \"organizationPhone\" in data && \"dateOfIncorporation\" in data;\r\n}\r\n\r\nexport function MemberClockingAdditionalInfo_S(data: any, accountType?: number): MemberClockingAdditionalInfo_I {\r\n  // console.log({data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (accountType === 1) {\r\n    memberInfo = MembershipUser_S(data['memberInfo']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberInfo']))\r\n  }\r\n  \r\n  const MemberClockingAdditionalInfo_S: MemberClockingAdditionalInfo_I = {\r\n    id: Number(data['id']),\r\n    memberId: Number(data['memberId']),\r\n    memberInfo: memberInfo,\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    facebook: String(data['facebook']),\r\n    instagram: String(data['instagram']),\r\n    placeOfWork: String(data['placeOfWork']),\r\n    profession: String(data['profession']),\r\n    twitter: String(data['twitter']),\r\n    whatsapp: String(data['whatsapp']),\r\n    businessHashtag: String(data['businessHashtag']),\r\n    businessDescription: String(data['businessDescription']),\r\n    dateJoined: Date_I(data['dateJoined']),\r\n    date: Date_I(data['date']),\r\n  };\r\n\r\n  return MemberClockingAdditionalInfo_S;\r\n}\r\n\r\nexport function MemberClockingInfoFull_S(data: any): MemberClockingInfoFull_I {\r\n  // console.log({data});\r\n  const ATTENDANCE = MemberClockingInfo_S(data['attendance']);\r\n  \r\n  const MemberClockingInfoFull_S: MemberClockingInfoFull_I = {\r\n    attendance: ATTENDANCE,\r\n    additionalInfo: MemberClockingAdditionalInfo_S(data['additionalInfo'], ATTENDANCE.accountType),\r\n    lastSeen: Date_I(data['lastSeen']),\r\n    status: String(data['status']),\r\n  };\r\n\r\n  return MemberClockingInfoFull_S;\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-individual\")\r\nexport class ClockerTablePartsFirstIndividual extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  private _memberData: MembershipUser_I = null;\r\n\r\n  public set memberData(value: MembershipUser_I) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipUser_I {\r\n    return this._memberData;\r\n  }\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true);\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n            click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n            url=\"${this._memberData.profilePicture}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.firstname} ${this._memberData.middlename} ${this._memberData.surname}\r\n          </span>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MembershipOrganizationUserModel } from '@@addons/interfaces/members/user/organization_model';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-organization\")\r\nexport class ClockerTablePartsFirstOrganization extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  private _memberData: MembershipOrganizationUserModel = null;\r\n\r\n  public set memberData(value: MembershipOrganizationUserModel) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipOrganizationUserModel {\r\n    return this._memberData;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true);\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded type=\"member\"\r\n            url=\"${this._memberData.logo}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.organizationName}\r\n          </span>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\nimport './first__individual';\r\nimport './first__organization';\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"this.clocking_info\": this.clocking_info });\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n  \r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n  \r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() { \r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      // console.log({ \"clockingInfo\": clockingInfo });\r\n      // console.log({ \"clockingInfoFull\": clockingInfoFull });\r\n      const clockingMethodName = fullInfo ? clockingInfoFull.attendance.clockingMethodName : clockingInfo.clockingMethodName;\r\n      if (fullInfo ? InstanceOfOrganizationMember(clockingInfoFull.additionalInfo.memberInfo): InstanceOfOrganizationMember(clockingInfo.memberId)) {\r\n        return html`<clocker-table-parts-first-organization clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-organization>`;\r\n      } else {\r\n        return html`<clocker-table-parts-first-individual clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-individual>`;\r\n      }\r\n      \r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport '@material/mwc-icon-button';\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    if ('clockingTime' in CTI) return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public pageButtonAccess: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    console.log({\"this.pageButtonAccess\": this.pageButtonAccess});\r\n    \r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const inTime = fullInfo ? clockingInfoFull.attendance.inTime : clockingInfo.inTime;\r\n      // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const startBreak = fullInfo ? clockingInfoFull.attendance.startBreak : clockingInfo.startBreak;\r\n      // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const TODAY = new Date();\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n      const IS_TODAY = (fullInfo ? clockingInfoFull.attendance.date.toDateString() : clockingInfo.date.toDateString()) === TODAY.toDateString();\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\"\r\n              id=\"member_check_in_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n          ${CLOCKED ? html`\r\n          <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n          <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n          `}\r\n        </div>\r\n        `: html`\r\n          <div class=\"text-center flex justify-evenly whitespace-nowrap\">\r\n            <a href=\"tel://${clockingInfoFull.additionalInfo.phone}\">\r\n              <mwc-icon-button class=\"bg-sunny-morning text-white\" icon=\"call\"></mwc-icon-button>\r\n            </a>\r\n            <a href=\"https://api.whatsapp.com/send?phone=+${clockingInfoFull.additionalInfo.whatsapp}&amp;text=\">\r\n              <mwc-icon-button class=\"bg-grow-early text-white\" icon=\"whatsapp\"></mwc-icon-button>\r\n            </a>\r\n          </div>\r\n        `}\r\n        ${CLOCKED && (inTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock in Time</b>: ${atInTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n          ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n              icon=\"check\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n          }\r\n        `: nothing}\r\n        ${(startBreak !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break Start Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    // console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e,element,CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockOut(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-out/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock Out?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingEndBreak(clockId: Number, time: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/end-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'End Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceCancelClocking } from '@@addons/network/attendance/clocking/cancel-clocking';\r\nimport { PATCH_AttendanceClockingClockOut } from '@@addons/network/attendance/clocking/clock-out';\r\nimport { PATCH_AttendanceClockingEndBreak } from '@@addons/network/attendance/clocking/end-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport { getClockingTimeInfo } from './second';\r\n\r\n\r\n@customElement(\"clocker-table-parts-third\")\r\nexport class ClockerTablePartsThird extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private excuseBaseUrl: string = \"/attendance/v2/clocking/excuse?clocking-id=\";\r\n\r\n  @property({ type: String })\r\n  private followUpBaseUrl: string = \"/attendance/v2/clocking/follow-up?clocking-id=\";\r\n\r\n  @property({ type: Boolean })\r\n  public pageButtonAccess: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const outTime = fullInfo ? clockingInfoFull.attendance.outTime : clockingInfo.outTime;\r\n      // const atOutTime = outTime !== null ? getLocalTime(outTime, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atOutTime = outTime !== null ? getDateTime(outTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atOutTime, \"clockingInfo.outTime\": clockingInfo.outTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const endBreak = fullInfo ? clockingInfoFull.attendance.endBreak : clockingInfo.endBreak;\r\n      // const atBreakTime = endBreak !== null ? getLocalTime(endBreak, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atBreakTime = endBreak !== null ? getDateTime(endBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      const CLOCK_ID_ENC = base64Encode(String(CLOCK_ID), true);\r\n      // console.log({ HAS_BREAKTIME, clockingInfo });\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-out=\"${CLOCK_ID}\" name=\"member_check_out_${CLOCK_ID}\"\r\n              id=\"member_check_out_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_out_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" clock-user=\"out\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\"\r\n            cancel-user-clock=\"true\">\r\n            <span class=\"pe-7s-close-circle bg-love-kiss fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-warning\">'X' to Cancel Attendance</span>\r\n        </div>\r\n        `: nothing}\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <a href=\"${this.excuseBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-info btn-sm\" target=\"_blank\" type=\"button\">Enter/ View\r\n            Excuse</a>\r\n          <a href=\"${this.followUpBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-primary btn-sm\" target=\"_blank\" type=\"button\">Follow-Up</a>\r\n        </div>\r\n        ${CLOCKED && (outTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock out Time</b>: ${atOutTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n        <hr class=\"whitespace-nowrap\">\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <mwc-button raised class=\"shadow-sm info button\" label=\"End Break\" clock-id=\"${CLOCK_ID}\" user-break=\"end\"\r\n            icon=\"close\">\r\n          </mwc-button>\r\n        </div>\r\n        `: ''\r\n        }\r\n        `: nothing}\r\n        ${(endBreak !== null) ? html`\r\n        <div class=\"text-center\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break End Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n    this.cancelClocking();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private cancelClocking() {\r\n    const selectorString = 'cancel-user-clock=\"true\"';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(cancelClock => {\r\n      cancelClock.addEventListener('click', async (e) => {\r\n        e.preventDefault();\r\n        if (this.pageButtonAccess) {\r\n          const CLOCK_ID = Number(cancelClock.getAttribute('clock-id'));\r\n          await PATCH_AttendanceCancelClocking(CLOCK_ID);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"out\") {\r\n        // console.log({ \"clock out\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockOutUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async clockOutUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingClockOut(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingClockOut(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"end\") {\r\n        // console.log({ \"end break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.endUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async endUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingEndBreak(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingEndBreak(CLOCK_ID);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceCancelClocking(clockId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/cancel-clocking/' + clockId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Cancel Clocking?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import{isSingleExpression as i}from\"./directive-helpers.js\";import{Directive as t,PartType as e}from\"./directive.js\";export{Directive,PartType,directive}from\"./directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=(i,t)=>{var e,o;const r=i._$AN;if(void 0===r)return!1;for(const i of r)null===(o=(e=i)._$AO)||void 0===o||o.call(e,t,!1),s(i,t);return!0},o=i=>{let t,e;do{if(void 0===(t=i._$AM))break;e=t._$AN,e.delete(i),i=t}while(0===(null==e?void 0:e.size))},r=i=>{for(let t;t=i._$AM;i=t){let e=t._$AN;if(void 0===e)t._$AN=e=new Set;else if(e.has(i))break;e.add(i),l(t)}};function n(i){void 0!==this._$AN?(o(this),this._$AM=i,r(this)):this._$AM=i}function h(i,t=!1,e=0){const r=this._$AH,n=this._$AN;if(void 0!==n&&0!==n.size)if(t)if(Array.isArray(r))for(let i=e;i<r.length;i++)s(r[i],!1),o(r[i]);else null!=r&&(s(r,!1),o(r));else s(this,i)}const l=i=>{var t,s,o,r;i.type==e.CHILD&&(null!==(t=(o=i)._$AP)&&void 0!==t||(o._$AP=h),null!==(s=(r=i)._$AQ)&&void 0!==s||(r._$AQ=n))};class c extends t{constructor(){super(...arguments),this._$AN=void 0}_$AT(i,t,e){super._$AT(i,t,e),r(this),this.isConnected=i._$AU}_$AO(i,t=!0){var e,r;i!==this.isConnected&&(this.isConnected=i,i?null===(e=this.reconnected)||void 0===e||e.call(this):null===(r=this.disconnected)||void 0===r||r.call(this)),t&&(s(this,i),o(this))}setValue(t){if(i(this._$Ct))this._$Ct._$AI(t,this);else{const i=[...this._$Ct._$AH];i[this._$Ci]=t,this._$Ct._$AI(i,this,0)}}disconnected(){}reconnected(){}}export{c as AsyncDirective};\n//# sourceMappingURL=async-directive.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=async(t,s)=>{for await(const i of t)if(!1===await s(i))return};class s{constructor(t){this.Y=t}disconnect(){this.Y=void 0}reconnect(t){this.Y=t}deref(){return this.Y}}class i{constructor(){this.Z=void 0,this.q=void 0}get(){return this.Z}pause(){var t;null!==(t=this.Z)&&void 0!==t||(this.Z=new Promise((t=>this.q=t)))}resume(){var t;null===(t=this.q)||void 0===t||t.call(this),this.Z=this.q=void 0}}export{i as Pauser,s as PseudoWeakRef,t as forAwaitOf};\n//# sourceMappingURL=private-async-helpers.js.map\n","import{noChange as t}from\"../lit-html.js\";import{isPrimitive as s}from\"../directive-helpers.js\";import{AsyncDirective as i}from\"../async-directive.js\";import{PseudoWeakRef as r,Pauser as e}from\"./private-async-helpers.js\";import{directive as o}from\"../directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const n=t=>!s(t)&&\"function\"==typeof t.then;class h extends i{constructor(){super(...arguments),this._$Cwt=1073741823,this._$Cyt=[],this._$CK=new r(this),this._$CX=new e}render(...s){var i;return null!==(i=s.find((t=>!n(t))))&&void 0!==i?i:t}update(s,i){const r=this._$Cyt;let e=r.length;this._$Cyt=i;const o=this._$CK,h=this._$CX;this.isConnected||this.disconnected();for(let t=0;t<i.length&&!(t>this._$Cwt);t++){const s=i[t];if(!n(s))return this._$Cwt=t,s;t<e&&s===r[t]||(this._$Cwt=1073741823,e=0,Promise.resolve(s).then((async t=>{for(;h.get();)await h.get();const i=o.deref();if(void 0!==i){const r=i._$Cyt.indexOf(s);r>-1&&r<i._$Cwt&&(i._$Cwt=r,i.setValue(t))}})))}return t}disconnected(){this._$CK.disconnect(),this._$CX.pause()}reconnected(){this._$CK.reconnect(this),this._$CX.resume()}}const c=o(h);export{h as UntilDirective,c as until};\n//# sourceMappingURL=until.js.map\n"],"names":["getDateTime","date","options","Date","toLocaleString","InstanceOfOrganizationMember","data","MemberClockingAdditionalInfo_S","accountType","memberInfo","JSON","stringify","id","Number","memberId","phone","String","email","facebook","instagram","placeOfWork","profession","twitter","whatsapp","businessHashtag","businessDescription","dateJoined","MemberClockingInfoFull_S","ATTENDANCE","attendance","additionalInfo","lastSeen","status","ClockerTablePartsFirstIndividual","constructor","super","clockingMethodName","_memberData","memberProfileBaseUrl","memberData","value","this","requestUpdate","connectedCallback","disconnectedCallback","render","MEMBER_ID","base64","profilePicture","firstname","middlename","surname","firstUpdated","createRenderRoot","styles","type","ClockerTablePartsFirstOrganization","logo","organizationName","ClockerTablePartsFirst","_data","_type","clockingInfo","fullInfo","clocking_info","_clockingInfo","parse","getClockingInfo","getClockingInfoFull","clockingInfoFull","Boolean","PATCH_AttendanceClockingClockIn","clockId","time","_get_cookie","url","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","error","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingStartBreak","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","pageButtonAccess","console","log","atDate","dateStyle","timeStyle","inTime","atInTime","CLOCK_ID","CLOCKED","inOrOut","startBreak","atBreakTime","TODAY","HAS_BREAKTIME","meetingEventId","hasBreakTime","IS_TODAY","toDateString","clockUser","userBreak","setInterval","selectorString","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","startUserBreak","PATCH_AttendanceClockingClockOut","PATCH_AttendanceClockingEndBreak","ClockerTablePartsThird","excuseBaseUrl","followUpBaseUrl","outTime","atOutTime","endBreak","CLOCK_ID_ENC","cancelClocking","cancelClock","PATCH_AttendanceCancelClocking","clockOutUser","endUserBreak","s","i","t","o","r","_$AN","_$AO","call","_$AM","delete","size","Set","has","add","l","n","h","_$AH","Array","isArray","_$AP","_$AQ","c","arguments","_$AT","isConnected","_$AU","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","Y","disconnect","reconnect","deref","Z","q","get","pause","Promise","resume","_$Cwt","_$Cyt","_$CK","_$CX","find","update","resolve","async","indexOf"],"sourceRoot":""}