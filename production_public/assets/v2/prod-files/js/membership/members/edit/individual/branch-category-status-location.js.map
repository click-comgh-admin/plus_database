{"version":3,"file":"../../production_public/assets/v2/prod-files/js/membership/members/edit/individual/branch-category-status-location.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/members/user/status/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/education/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/marital/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/occupation/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/profession/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/view/membership/members/edit/pages/extras/status.ts","webpack://webpackNumbers/./src/addons/network/members/status/post.ts","webpack://webpackNumbers/./src/addons/network/members/status/patch.ts","webpack://webpackNumbers/./src/view/membership/members/edit/individual/branch-category-status-location.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","// To parse this data:\n//\n//   import { Convert, UserStatusModel } from \"./file\";\n//\n//   const userStatusModel = Convert.toUserStatusModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nimport { MembershipMixedUserModel, typeMap as mmumTypeMap } from \"../mixed\";\nimport { EducationStatusModel, typeMap as esmTypeMap } from \"./education_status\";\nimport { MaritalStatusModel, typeMap as msmTypeMap } from \"./marital_status\";\nimport { OccupationStatusModel, typeMap as osmTypeMap } from \"./occupation_status\";\nimport { ProfessionStatusModel, typeMap as psmTypeMap } from \"./profession_status\";\n\nexport interface UserStatusModel {\n    id?: number;\n    disability?: boolean;\n    maritalStatus?: MaritalStatusModel;\n    occupationalStatus?: OccupationStatusModel;\n    professionStatus?: ProfessionStatusModel;\n    educationalStatus?: EducationStatusModel;\n    religion?: string;\n    languages?: string;\n    memberId?: MembershipMixedUserModel;\n    date?: Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toUserStatusModel(json: string): UserStatusModel {\n        return cast(JSON.parse(json), r(\"UserStatusModel\"));\n    }\n\n    public static userStatusModelToJson(value: UserStatusModel): string {\n        return JSON.stringify(uncast(value, r(\"UserStatusModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`,);\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) { }\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\") ? transformArray(typ.arrayItems, val)\n                : typ.hasOwnProperty(\"props\") ? transformObject(getProps(typ), typ.additional, val)\n                    : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"UserStatusModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"disability\", js: \"disability\", typ: u(null, true) },\n        { json: \"maritalStatus\", js: \"maritalStatus\", typ: u(null, r(\"MaritalStatusModel\")) },\n        { json: \"occupationalStatus\", js: \"occupationalStatus\", typ: u(null, r(\"OccupationStatusModel\")) },\n        { json: \"professionStatus\", js: \"professionStatus\", typ: u(null, r(\"ProfessionStatusModel\")) },\n        { json: \"educationalStatus\", js: \"educationalStatus\", typ: u(null, r(\"EducationStatusModel\")) },\n        { json: \"religion\", js: \"religion\", typ: u(null, \"\") },\n        { json: \"languages\", js: \"languages\", typ: u(null, \"\") },\n        { json: \"memberId\", js: \"memberId\", typ: u(null, r(\"MembershipMixedUserModel\")) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n    \"MaritalStatusModel\": msmTypeMap['MaritalStatusModel'],\n    \"OccupationStatusModel\": osmTypeMap['OccupationStatusModel'],\n    \"ProfessionStatusModel\": psmTypeMap['ProfessionStatusModel'],\n    \"EducationStatusModel\": esmTypeMap['EducationStatusModel'],\n    \"MembershipMixedUserModel\": mmumTypeMap['MembershipMixedUserModel'],\n    \"GroupingsMemberCategoryModel\": mmumTypeMap['GroupingsMemberCategoryModel'],\n    \"BranchInfo\": mmumTypeMap['BranchInfo'],\n    \"GroupingsOrganizationTypeModel\": mmumTypeMap['GroupingsOrganizationTypeModel'],\n    \"Certificate\": mmumTypeMap['Certificate'],\n    \"Attachment\": mmumTypeMap['Attachment'],\n    \"FolderID\": mmumTypeMap['FolderID'],\n    \"RegionInfo\": mmumTypeMap['RegionInfo'],\n    \"CountryInfo\": mmumTypeMap['CountryInfo'],\n    \"DistrictConstituencyElectoralAreaInfo\": mmumTypeMap['DistrictConstituencyElectoralAreaInfo'],\n};\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipUsers<Type>(ID: Number = null, url_params: string = \"\", withLocation: boolean = false) {\r\n\r\n  const raw_url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params);\r\n  const location_url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/location'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params);\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = withLocation ? location_url : raw_url,\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_EducationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/education'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_UserStatusInfo<Account>(ID: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/info'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MaritalStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/marital'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_OccupationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/occupation'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ProfessionStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/profession'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@material/mwc-circular-progress';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@@addons/widgets/alert';\r\nimport { UserStatusModel } from '@@addons/interfaces/members/user/status';\r\nimport { PATCH_UserStatusInfo } from '@@addons/network/members/status/patch';\r\nimport { POST_UserStatusInfo } from '@@addons/network/members/status/post';\r\nimport { EducationStatusModel } from '@@addons/interfaces/members/user/status/education_status';\r\nimport { MaritalStatusModel } from '@@addons/interfaces/members/user/status/marital_status';\r\nimport { OccupationStatusModel } from '@@addons/interfaces/members/user/status/occupation_status';\r\nimport { ProfessionStatusModel } from '@@addons/interfaces/members/user/status/profession_status';\r\n\r\n\r\n@customElement(\"pdb-membership-update-view-status\")\r\nexport class PdbMembershipUpdateViewStatus extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public memberId?: number;\r\n\r\n  @property({ type: Array })\r\n  public memberStatusInfo: UserStatusModel[] = null;\r\n\r\n  @property({ type: Array })\r\n  public maritalStatusInfo: MaritalStatusModel[] = [];\r\n  \r\n  @property({ type: Number })\r\n  private selectedMaritalStatus: number | \"other_value\" = 0;\r\n\r\n  @property({ type: Array })\r\n  public occupationStatusInfo: OccupationStatusModel[] = [];\r\n  \r\n  @property({ type: Number })\r\n  private selectedOccupationStatus: number | \"other_value\" = 0;\r\n\r\n  @property({ type: Array })\r\n  public professionStatusInfo: ProfessionStatusModel[] = [];\r\n  \r\n  @property({ type: Number })\r\n  private selectedProfessionStatus: number | \"other_value\" = 0;\r\n\r\n  @property({ type: Array })\r\n  public educationStatusInfo: EducationStatusModel[] = [];\r\n  \r\n  @property({ type: Number })\r\n  private selectedEducationStatus: number | \"other_value\" = 0;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this.memberStatusInfo === null) return this.pageLoading;\r\n    if (this.memberStatusInfo.length < 1) this.memberStatusInfo.push(null);\r\n    return this.memberStatusInfo.map(status => {   \r\n      return html`\r\n      <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-status-info\" enctype=\"multipart/form-data\">\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mt-1 mb-2\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 grid-flow-row gap-4\">\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Has Disability</h4>\r\n              <switch-input name=\"disability\" class=\"w-full\" id=\"disability\" ?selected=\"${status?.disability}\"\r\n                label=\"Has Disability?\" outlined>\r\n              </switch-input>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Marital Status</h4>\r\n              <mwc-select name=\"maritalStatus\" id=\"maritalStatus\" outlined required @change=\"${this.maritalStatusChanged}\">\r\n                ${this.maritalStatusInfo.map((item) => {\r\n                  // console.log({item});\r\n                  if (status?.maritalStatus.id === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                })}\r\n                <mwc-list-item value=\"other_value\">Other Marital Status</mwc-list-item>\r\n              </mwc-select>\r\n            </div>\r\n            ${this.selectedMaritalStatus === \"other_value\" ? html`\r\n              <div class=\"p-2\">\r\n                <h4 class=\"font-semibold my-2\">Enter Other Marital Status</h4>\r\n                <mwc-textfield name=\"other_maritalStatus\" id=\"other_maritalStatus\" label=\"Enter Other Marital Status\" outlined type=\"text\">\r\n                </mwc-textfield>\r\n              </div>\r\n            `: nothing}\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Occupational Status</h4>\r\n              <mwc-select name=\"occupationalStatus\" id=\"occupationalStatus\" outlined required @change=\"${this.occupationStatusChanged}\">\r\n                ${this.occupationStatusInfo.map((item) => {\r\n                  // console.log({item});\r\n                  if (status?.occupationalStatus.id === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                })}\r\n                <mwc-list-item value=\"other_value\">Other Occupational Status</mwc-list-item>\r\n              </mwc-select>\r\n            </div>\r\n            ${this.selectedOccupationStatus === \"other_value\" ? html`\r\n              <div class=\"p-2\">\r\n                <h4 class=\"font-semibold my-2\">Enter Other Occupational Status</h4>\r\n                <mwc-textfield name=\"other_occupationalStatus\" id=\"other_occupationalStatus\" label=\"Enter Other Occupational Status\" outlined type=\"text\">\r\n                </mwc-textfield>\r\n              </div>\r\n            `: nothing}\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Profession Status</h4>\r\n              <mwc-select name=\"professionStatus\" id=\"professionStatus\" outlined required @change=\"${this.professionStatusChanged}\">\r\n                ${this.professionStatusInfo.map((item) => {\r\n                  // console.log({item});\r\n                  if (status?.professionStatus.id === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                })}\r\n                <mwc-list-item value=\"other_value\">Other Profession Status</mwc-list-item>\r\n              </mwc-select>\r\n            </div>\r\n            ${this.selectedProfessionStatus === \"other_value\" ? html`\r\n              <div class=\"p-2\">\r\n                <h4 class=\"font-semibold my-2\">Enter Other Profession Status</h4>\r\n                <mwc-textfield name=\"other_professionStatus\" id=\"other_professionStatus\" label=\"Enter Other Profession Status\" outlined type=\"text\">\r\n                </mwc-textfield>\r\n              </div>\r\n            `: nothing}\r\n            <div class=\"p-2\">\r\n              <h4 class=\"font-semibold my-2\">Select Educational Status</h4>\r\n              <mwc-select name=\"educationalStatus\" id=\"educationalStatus\" outlined required @change=\"${this.educationStatusChanged}\">\r\n                ${this.educationStatusInfo.map((item) => {\r\n                  // console.log({item});\r\n                  if (status?.educationalStatus.id === item.id) {\r\n                    return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                  }\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                })}\r\n                <mwc-list-item value=\"other_value\">Other Educational Status</mwc-list-item>\r\n              </mwc-select>\r\n            </div>\r\n            ${this.selectedEducationStatus === \"other_value\" ? html`\r\n              <div class=\"p-2\">\r\n                <h4 class=\"font-semibold my-2\">Enter Other Educational Status</h4>\r\n                <mwc-textfield name=\"other_educationalStatus\" id=\"other_educationalStatus\" label=\"Enter Other Educational Status\" outlined type=\"text\">\r\n                </mwc-textfield>\r\n              </div>\r\n            `: nothing}\r\n            <input type=\"hidden\" name=\"memberId\" id=\"memberId\" value=\"${this.memberId}\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-1\">\r\n          <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" @click=\"${this.submitForm}\">\r\n          </mwc-button>\r\n        </div>\r\n      </form>\r\n     `;\r\n    });\r\n  }\r\n\r\n  private get pageLoading() {\r\n    return html`\r\n    <div class=\"main-container\">\r\n      <div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>\r\n    </div>\r\n   `;\r\n  }\r\n\r\n  // private get pageError() {\r\n  //   const header = html`<h4 class=\"text-gray-600\">No Data Found!</h4>`,\r\n  //     content = nothing;\r\n  //   return html`\r\n  //   <div class=\"col-md-12\">\r\n  //     <alert-card info .header=\"${header}\" .content=\"${content}\" extra_class=\"!max-w-full\"></alert-card>\r\n  //   </div>\r\n  //  `;\r\n  // }\r\n\r\n  maritalStatusChanged(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedMaritalStatus = e.currentTarget.value;\r\n  }\r\n\r\n  occupationStatusChanged(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedOccupationStatus = e.currentTarget.value;\r\n  }\r\n\r\n  professionStatusChanged(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedProfessionStatus = e.currentTarget.value;\r\n  }\r\n\r\n  educationStatusChanged(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedEducationStatus = e.currentTarget.value;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    let isNew: boolean, updateId: number;\r\n\r\n    if (this.memberStatusInfo.length < 1) {\r\n      isNew = true;\r\n    } else {\r\n      if (this.memberStatusInfo[0] === null) {\r\n        isNew = true;\r\n      } else {\r\n        isNew = false;\r\n        updateId = this.memberStatusInfo[0].id;\r\n      }\r\n    }\r\n\r\n    if (isNew) {\r\n      await POST_UserStatusInfo();\r\n    } else {\r\n      await PATCH_UserStatusInfo(updateId);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_UserStatusInfo(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/info',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-status-info\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add User Status Info?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_UserStatusInfo(ID: Number,): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/info/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-status-info\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update User Status Info?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/admin/user/form.scss';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators.js';\r\nimport '@material/mwc-tab';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-tab-bar';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { base64Decode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { GET_MembershipUsers } from '@@addons/network/members/membership/users';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../../page__id';\r\nimport '@@addons/widgets/alert';\r\nimport '../../../../no_access/no_page_entry';\r\nimport '../../../../no_access/account_expired';\r\nimport { Button } from '@material/mwc-button';\r\nimport { LocationCountryModel, Convert as lcmConvert } from '@@addons/interfaces/location/country_model';\r\nimport { GET_LocationCountry } from '@@addons/network/location/country';\r\nimport '../pages/extras/branch_category';\r\nimport '../pages/extras/location';\r\nimport '../pages/extras/status';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { ClientBranchModel, Convert as cbmConvert } from '@@addons/interfaces/clients/branches/model';\r\nimport { EducationStatusModel, Convert as esmConvert } from '@@addons/interfaces/members/user/status/education_status';\r\nimport { MaritalStatusModel, Convert as msmConvert } from '@@addons/interfaces/members/user/status/marital_status';\r\nimport { OccupationStatusModel, Convert as osmConvert } from '@@addons/interfaces/members/user/status/occupation_status';\r\nimport { ProfessionStatusModel, Convert as psmConvert } from '@@addons/interfaces/members/user/status/profession_status';\r\nimport { GET_EducationStatus } from '@@addons/network/members/status/education';\r\nimport { GET_MaritalStatus } from '@@addons/network/members/status/marital';\r\nimport { GET_OccupationStatus } from '@@addons/network/members/status/occupation';\r\nimport { GET_ProfessionStatus } from '@@addons/network/members/status/profession';\r\nimport { GET_UserStatusInfo } from '@@addons/network/members/status';\r\nimport { UserStatusModel, Convert as usmConvert } from '@@addons/interfaces/members/user/status';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport { GroupingsMemberCategoryModel, Convert as gmcmConvert } from '@@addons/interfaces/members/groupings/member_categories/model';\r\n\r\n\r\n@customElement(\"pdb-membership-update-branch-category-status-location\")\r\nexport class PdbMembershipUpdateBranchCategoryStatusLocation extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('#mainSectionFormBtn')\r\n  private mainSectionFormBtn: Button;\r\n\r\n  @query('#statusSectionFormBtn')\r\n  private statusSectionFormBtn: Button;\r\n\r\n  @query('#locationSectionFormBtn')\r\n  private locationSectionFormBtn: Button;\r\n\r\n  @property({ type: Number })\r\n  private memberId?: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n\r\n  private _pdbBranchMember: NetworkCallResponse_I<MembershipMixedUserModel> = null;\r\n\r\n  public set pdbBranchMember(value: NetworkCallResponse_I<MembershipMixedUserModel>) {\r\n    this._pdbBranchMember = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get pdbBranchMember(): NetworkCallResponse_I<MembershipMixedUserModel> {\r\n    return this._pdbBranchMember;\r\n  }\r\n\r\n  @property({ type: Number })\r\n  private formId: 1 | 2 | 3 = 1;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _accountCategories: GroupingsMemberCategoryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranchModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _maritalStatuses: MaritalStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _occupationStatuses: OccupationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _professionStatuses: ProfessionStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _educationStatuses: EducationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private memberStatusInfo: UserStatusModel[] = [];\r\n  \r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    this.getUserId();\r\n\r\n    if ((this.memberId === 0) || (this.memberId === null) || (Number.isNaN(this.memberId))) { } else {\r\n      await this.getMember();\r\n      await this.getClientBranch()\r\n      await this.getGroupingsMemberCategory();\r\n      await this.getUserStatusInfo();\r\n      await this.getMaritalStatus();\r\n      await this.getOccupationStatus();\r\n      await this.getProfessionStatus();\r\n      await this.getEducationStatus();\r\n      await this.getLocationCountry();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({ pageId: PAGE__IDS.edit, viewType: \"Edit\" }, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    if ((this.memberId === 0) || (this.memberId === null) || (Number.isNaN(this.memberId))) {\r\n      const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">Member Not Found!</p>\r\n          <p class=\"text-black mb-2\"><small>Follow the link back to members page.</small></p>\r\n          <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n            href=\"${CONSTANTS.URLS.PDB_CLIENT}member/members\" label=\"Members Page\"></link-button>\r\n        </div>\r\n      `;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n\r\n      if (this.pdbBranchMember === null) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n      if (this.pdbBranchMember === undefined) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <h4 class=\"text-red-600 text-lg\">\r\n                <span class=\"font-bold\">Member </span>: undefined error</h4>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n\r\n      if (this.pdbBranchMember.success === false) {\r\n        const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n        const content = html`\r\n          <div>\r\n            <p class=\"text-black mb-2\">Member Not Found!</p>\r\n            <p class=\"text-black mb-2\"><small>Follow the link back to users page.</small></p>\r\n            <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n              href=\"${CONSTANTS.URLS.PDB_CLIENT}member/members\" label=\"Members Page\"></link-button>\r\n          </div>\r\n        `;\r\n        return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n      }\r\n      const pdbBranchMember = this.pdbBranchMember,\r\n        _data = pdbBranchMember.data,\r\n        DATA = mmumConvert.toMembershipMixedUserModel(\r\n          JSON.stringify(Array.isArray(_data) ? _data[0] : _data)\r\n        );\r\n      return html`\r\n        <div class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2\">\r\n          <mwc-tab-bar activeIndex=\"0\">\r\n            <mwc-tab isMinWidthIndicator isFadingIndicator minWidth id=\"mainSectionFormBtn\"\r\n              label=\"Branch/ Category\" @click=\"${this.displayMainSectionBtn}\"></mwc-tab>\r\n            <mwc-tab isMinWidthIndicator isFadingIndicator minWidth\r\n              id=\"statusSectionFormBtn\" label=\"Status\" @click=\"${this.statusSectionSectionBtn}\"></mwc-tab>\r\n            <mwc-tab isMinWidthIndicator isFadingIndicator minWidth\r\n              id=\"locationSectionFormBtn\" label=\"Location\" @click=\"${this.locationSectionSectionBtn}\"></mwc-tab>\r\n          </mwc-tab-bar>\r\n        </div>\r\n        <div class=\"py-0\">\r\n          ${this.getMainStatusLocationSection(DATA)}\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private displayMainSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 1;\r\n    this.mainSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.statusSectionFormBtn.removeAttribute('raised');\r\n    this.locationSectionFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private statusSectionSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 2;\r\n    this.statusSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.mainSectionFormBtn.removeAttribute('raised');\r\n    this.locationSectionFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private locationSectionSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 3;\r\n    this.locationSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.mainSectionFormBtn.removeAttribute('raised');\r\n    this.statusSectionFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private getMainStatusLocationSection(member: MembershipMixedUserModel) {\r\n    // console.log({\"this.memberGroups\": this.memberGroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    \r\n    if (this.formId === 1) {\r\n      return html`\r\n        ${this.mainForm(member)}\r\n      `;\r\n    } else if (this.formId === 2) {\r\n      return html`\r\n        ${this.statusForm(member)}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.locationForm(member)}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private mainForm(member: MembershipMixedUserModel) {       \r\n    return html`\r\n      <div\r\n        class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Member</h1>\r\n                    <h3 class=\"h3\">Update Contact Data!</h3>\r\n                  </label>\r\n                </header>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <pdb-membership-update-view-branch-category memberId=\"${member.id}\" \r\n        .memberInfo=\"${[member]}\" updateType=\"member\" .categories=\"${this._accountCategories}\" .branches=\"${this._branches}\">\r\n      </pdb-membership-update-view-branch-category>\r\n    `;\r\n  }\r\n\r\n  private statusForm(member: MembershipMixedUserModel) { \r\n    return html`\r\n      <div\r\n        class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Member</h1>\r\n                    <h3 class=\"h3\">Update Status Data!</h3>\r\n                  </label>\r\n                </header>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <pdb-membership-update-view-status memberId=\"${member.id}\" \r\n        .memberStatusInfo=\"${this.memberStatusInfo}\" .maritalStatusInfo=\"${this._maritalStatuses}\"\r\n        .occupationStatusInfo=\"${this._occupationStatuses}\" .professionStatusInfo=\"${this._professionStatuses}\"\r\n        .educationStatusInfo=\"${this._educationStatuses}\">\r\n      </pdb-membership-update-view-status>\r\n    `;\r\n  }\r\n\r\n  private locationForm(member: MembershipMixedUserModel) { \r\n    return html`\r\n      <div\r\n        class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Member</h1>\r\n                    <h3 class=\"h3\">Update Location Data!</h3>\r\n                  </label>\r\n                </header>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <pdb-membership-update-view-location memberId=\"${member.id}\" \r\n        .memberInfo=\"${[member]}\" updateType=\"member\" .countries=\"${this._countries}\">\r\n      </pdb-membership-update-view-location>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getUserId() {\r\n    let memberId = urlQueryParamsGet('member-id');\r\n    // console.log({ memberId });\r\n    let _memberId = memberId !== null ? base64Decode(memberId) : null;\r\n    this.memberId = Number.isNaN(_memberId) ? null : Number(_memberId);\r\n    // console.log({ \"this.memberId\": this.memberId });\r\n  }\r\n\r\n  private async getMember() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    const _networkResponse = await GET_MembershipUsers<any>(this.memberId, \"?branchId=\" + branchId, true);\r\n    if (_networkResponse === null) {\r\n      this.pdbBranchMember = undefined;\r\n    } else {\r\n      this.pdbBranchMember = _networkResponse.response;\r\n      // console.log({\"this.pdbBranchMember\": this.pdbBranchMember})\r\n    }\r\n  }\r\n\r\n  private async getGroupingsMemberCategory() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategoryModel>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __accountCategories: GroupingsMemberCategoryModel[] = [\r\n      {category: \"Select Member Category\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __accountCategories.push({ id: 0, category: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GroupingsMemberCategoryModel[] = data.map(value => {\r\n          return gmcmConvert.toGroupingsMemberCategoryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __accountCategories = [...__accountCategories, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<GroupingsMemberCategoryModel> = [];\r\n    new_data.push(...this._accountCategories, ...__accountCategories);\r\n    this._accountCategories = new_data;\r\n  }\r\n\r\n  private async getClientBranch() {\r\n    const _networkResponse = await GET_ClientBranches<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __branches: ClientBranchModel[] = [\r\n      {name: \"Select Branch\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientBranchModel[] = data.map(value => {\r\n          return cbmConvert.toClientBranchModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __branches = [...__branches, ...DATA];\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranchModel> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getMaritalStatus() {\r\n    const _networkResponse = await GET_MaritalStatus<any>(null, \"?memberId=\" + this.memberId);\r\n    // console.log({_networkResponse});\r\n    \r\n    let __maritalStatuses: MaritalStatusModel[] = [\r\n      {name: \"Select Marital Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __maritalStatuses.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: MaritalStatusModel[] = data.map(value => {\r\n          return msmConvert.toMaritalStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __maritalStatuses = [...__maritalStatuses, ...DATA];\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<MaritalStatusModel> = [];\r\n    new_data.push(...this._maritalStatuses, ...__maritalStatuses);\r\n    this._maritalStatuses = new_data;\r\n  }\r\n\r\n  private async getOccupationStatus() {\r\n    const _networkResponse = await GET_OccupationStatus<any>(null, \"?memberId=\" + this.memberId);\r\n    // console.log({_networkResponse});\r\n    \r\n    let __occupationStatuses: OccupationStatusModel[] = [\r\n      {name: \"Select Occupation Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __occupationStatuses.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: OccupationStatusModel[] = data.map(value => {\r\n          return osmConvert.toOccupationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __occupationStatuses = [...__occupationStatuses, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<OccupationStatusModel> = [];\r\n    new_data.push(...this._occupationStatuses, ...__occupationStatuses);\r\n    this._occupationStatuses = new_data;\r\n  }\r\n\r\n  private async getProfessionStatus() {\r\n    const _networkResponse = await GET_ProfessionStatus<any>(null, \"?memberId=\" + this.memberId);\r\n    // console.log({_networkResponse});\r\n    \r\n    let __professionStatuses: ProfessionStatusModel[] = [\r\n      {name: \"Select Profession Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __professionStatuses.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ProfessionStatusModel[] = data.map(value => {\r\n          return psmConvert.toProfessionStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __professionStatuses = [...__professionStatuses, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ProfessionStatusModel> = [];\r\n    new_data.push(...this._professionStatuses, ...__professionStatuses);\r\n    this._professionStatuses = new_data;\r\n  }\r\n\r\n  private async getEducationStatus() {\r\n    const _networkResponse = await GET_EducationStatus<any>(null, \"?memberId=\" + this.memberId);\r\n    // console.log({_networkResponse});\r\n    \r\n    let __educationStatuses: EducationStatusModel[] = [\r\n      {name: \"Select Education Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __educationStatuses.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: EducationStatusModel[] = data.map(value => {\r\n          return esmConvert.toEducationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __educationStatuses = [...__educationStatuses, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<EducationStatusModel> = [];\r\n    new_data.push(...this._educationStatuses, ...__educationStatuses);\r\n    this._educationStatuses = new_data;\r\n  }\r\n\r\n  private async getUserStatusInfo() {\r\n    const _networkResponse = await GET_UserStatusInfo<any>(null, \"?memberId=\" + this.memberId);\r\n    if (_networkResponse === null) {\r\n      this.memberStatusInfo = [];\r\n    } else {\r\n      const memberStatusInfo = Array.isArray(_networkResponse.paginResponse.results)? _networkResponse.paginResponse.results: [_networkResponse.paginResponse.results]\r\n      this.memberStatusInfo = memberStatusInfo.map(memberStatus => usmConvert.toUserStatusModel(JSON.stringify(memberStatus)));\r\n    }\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationCountryModel> = [];\r\n    new_data.push(...this._countries, ...__countries);\r\n    this._countries = new_data;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","typ","undefined","jsonToJS","map","props","forEach","p","key","js","jsToJSON","val","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","GET_MembershipUsers","ID","url_params","withLocation","raw_url","location_url","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","GET_EducationStatus","type","GET_UserStatusInfo","GET_MaritalStatus","GET_OccupationStatus","GET_ProfessionStatus","SwitchInput","label","selected","isSelected","this","render","switch","switchAction","switchActionEvent","target","querySelectorAll","input","createRenderRoot","styles","String","Boolean","PdbMembershipUpdateViewStatus","constructor","super","memberStatusInfo","maritalStatusInfo","selectedMaritalStatus","occupationStatusInfo","selectedOccupationStatus","professionStatusInfo","selectedProfessionStatus","educationStatusInfo","selectedEducationStatus","connectedCallback","disconnectedCallback","pageLoading","push","status","disability","maritalStatusChanged","item","maritalStatus","id","occupationStatusChanged","occupationalStatus","professionStatusChanged","professionStatus","educationStatusChanged","educationalStatus","memberId","submitForm","e","currentTarget","firstUpdated","isNew","updateId","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","response","unknownError","errors","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","window","location","reload","POST_UserStatusInfo","PATCH_UserStatusInfo","Number","PdbMembershipUpdateBranchCategoryStatusLocation","_activeBranchId","_pdbBranchMember","formId","_userLoginInfo","_hasSetup","_countries","_accountCategories","_branches","_maritalStatuses","_occupationStatuses","_professionStatuses","_educationStatuses","pdbBranchMember","requestUpdate","activeBranchId","getUserId","getMember","getClientBranch","getGroupingsMemberCategory","getUserStatusInfo","getMaritalStatus","getOccupationStatus","getProfessionStatus","getEducationStatus","getLocationCountry","expiration_date","expired","pageId","viewType","header","content","_data","data","DATA","displayMainSectionBtn","statusSectionSectionBtn","locationSectionSectionBtn","getMainStatusLocationSection","preventDefault","mainSectionFormBtn","setAttribute","statusSectionFormBtn","removeAttribute","locationSectionFormBtn","member","mainForm","statusForm","locationForm","_memberId","base64","branchId","_networkResponse","__accountCategories","category","new_data","__branches","__maritalStatuses","__occupationStatuses","__professionStatuses","__educationStatuses","paginResponse","results","memberStatus","__countries","code","short"],"sourceRoot":""}