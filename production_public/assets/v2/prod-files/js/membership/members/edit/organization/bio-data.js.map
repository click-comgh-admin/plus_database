{"version":3,"file":"../../production_public/assets/v2/prod-files/js/membership/members/edit/organization/bio-data.js","mappings":"cAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,GAC1B,CATD,CASGK,MAAM,K,kGCJF,SAASC,EAAoBC,GAQlC,MALiD,CAC/CC,GAAIC,OAAOF,EAAS,IACpBG,KAAMH,EAAW,KAIrB,C,4FCTO,SAAeI,EAAwBC,EAAe,M,qCAE3D,MAAMC,GAAc,UACdC,EAAM,8BAAsC,kBACpC,OAATF,EAAgB,GAAK,IAAMA,GAC9BG,QAAa,OAAKD,EAAK,CACrBE,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GACL,IACE,OAAO,IAAI,IAA2B,MAAOJ,E,CAC7C,MAAOK,GACPC,QAAQD,MAAM,CAAEA,UAChB,IAAIE,EAAYP,EAEhB,OADAO,EAAiB,MAAIF,EACd,IAAI,IAA2B,MAAOE,GAAW,E,CAE5D,E,2WCnBO,SAAeC,EAAsCC,EAAa,KAAMC,EAAqB,GAAIC,GAAwB,G,qCAE9H,MAAMC,EAAU,8BAAsC,6BAC1C,OAAPH,EAAc,GAAK,IAAMA,GAAM,EAC9BI,EAAe,8BAAsC,sCAC/C,OAAPJ,EAAc,GAAK,IAAMA,GAAM,EAC9BX,GAAc,UACdC,EAAMY,EAAeE,EAAeD,EAIxCZ,QAAa,OAAKD,EAAK,CACrBE,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GACL,IACE,OAAO,IAAI,IAA2B,MAAOJ,E,CAC7C,MAAOK,GACPC,QAAQD,MAAM,CAAEA,UAChB,IAAIE,EAAYP,EAEhB,OADAO,EAAiB,MAAIF,EACd,IAAI,IAA2B,MAAOE,GAAW,E,CAE5D,E,8qBCrBO,SAAeO,EAAiCL,EAAYM,EAAkB,M,yCACnF,MAAMjB,GAAc,UAEdC,EAAM,8BAAsC,6BAA+BU,EAC/EO,EAAiCC,SAASC,cAAc,oDACxDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAON,QAAAA,EAAW,sBAElBO,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,OAAKlC,EAAK,CACrBE,OAAQ,QACRiC,KAAMf,EACNjB,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GAAO+B,MAAMnC,IAGd,MAAMoC,EAAiB,IAAI,IAAqB,OAAQpC,GAAM,EAAOgB,GAC/DqB,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAExC,MAAOsC,EAAElD,GAAK,KAAOmD,GACzB,qBAATD,EAAElD,KACJoD,EAAW,CAAExC,MAAOuC,IAGtBH,EAAOK,KAAKD,EAAS,GACrB,IAGJ,MAAME,GAAM,OAAwBN,GACpC,0BACE,GAAGM,I,CAIT,OAAOX,CAAc,IACpBY,OAAM3C,IACP,0BACE,GAAG4C,OAAO5C,KACX,GAEL,IACA6C,kBAAmB,KAAO,kBACzBf,MAAMgB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOjB,SACrDe,EAAaJ,OAAOS,EAAM3C,SAE1BuC,EAAYC,EAAOjB,SAASqB,O,CAE9BL,GAAY,SAAU,CACpBjC,MAAOgC,EACP/B,KAAMgC,EAAY,UAAY,QAC9B/B,UAAW+B,EAAY,UAAY,UACnC3B,mBAAoB,YAEtB2B,GAAYM,YAAW,KACrBC,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,ylCClFO,IAAMC,EAAN,cAAyD,KAC9DC,cAAgBC,QAGT,KAAAC,SAAoB,EAGpB,KAAAC,WAAyC,IANvB,CAQnBC,oB,2HACJ,EAAMA,kBAAiB,UACzB,G,CAEAC,uBAAyB,CAOzBC,SACE,OAAOC,KAAKJ,WAAWK,KAAIC,GAClB,IAAI;;;;;;;;;;;;;;;;;qEAiBoDA,EAAOC;;2CAElC,oBAAuBD,EAAOE;;;;kGAI0BJ,KAAKK;;;;;;;;;;SAYrG,CAEAC,eAAiB,CAEXD,WAAWlC,G,yCACfA,EAAEoC,iBACFzE,QAAQ0E,IAAI,CAAErC,UACR,OAAiC6B,KAAKL,SAAU,8BACxD,G,CAEAc,mBACE,OAAOT,IACT,GAvDO,EAAAU,OAAS,CACd,IAAG;;KAZL,IAAC,QAAS,CAAErF,KAAMH,S,wDAGlB,IAAC,QAAS,CAAEG,KAAMsF,Q,yDANPnB,EAA0C,IADtD,QAAc,mD,2BACFA,G,YC2BRoB,E,+0CAAL,SAAKA,GAAc,iBAAO,mDAAwB,iDAAuB,oCAAiB,CAA1F,CAAKA,IAAAA,EAAW,KAET,IAAMC,EAAN,cAAqD,KAC1DpB,cAAgBC,QAeR,KAAAC,SAAoB,EASpB,KAAAmB,gBAA0C,KAG1C,KAAAC,iBAAoE,KAYpE,KAAAC,WAAyC,KAGzC,KAAAC,OAAwB,EAGxB,KAAAC,eAAqC,KAGrC,KAAAC,SAAkC,GAGlC,KAAAC,mBAAuD,GAGvD,KAAAC,WAAqB,CAtDJ,CA6BdC,oBAAgBtC,GACzBgB,KAAKe,iBAAmB/B,EACxBgB,KAAKuB,eACP,CAEWD,sBACT,OAAOtB,KAAKe,gBACd,CAoBMlB,oB,2HACJ,EAAMA,kBAAiB,YACvB,SAAWlC,MAAK,IAAMqC,KAAKqB,WAAY,IAEvC,MAAMG,GAAiB,UACvBxB,KAAKc,gBAAsC,OAAnBU,EAA2B,KAAO,CAACA,GAC3DxB,KAAKkB,eAAiB,EAAC,WAEvBlB,KAAKyB,YAEkB,IAAlBzB,KAAKL,UAAsC,OAAlBK,KAAKL,UAAuBzE,OAAOwG,MAAM1B,KAAKL,kBACpEK,KAAK2B,mBACL3B,KAAK4B,kBACL5B,KAAK6B,sBAEf,G,CAEA/B,uBAAyB,CAOzBC,S,MACE,GAAIC,KAAKqB,UAAW,CAClB,GAAiC,QAA7B,mBAA6B,eAAES,gBAAgBC,QACjD,OAAO,IAAI,0DAEb,KAAK,OAA2B,CAAEC,OAAQ,yBAAgCC,SAAU,SAAU,GAC5F,OAAO,IAAI,qD,CAGf,GAAuB,IAAlBjC,KAAKL,UAAsC,OAAlBK,KAAKL,UAAuBzE,OAAOwG,MAAM1B,KAAKL,UAAY,CACtF,MAAMuC,EAAS,IAAI,oCACbC,EAAU,IAAI;;;;oGAI0E;;;QAI9F,OAAO,IAAI,gCAAgCD,gBAAqBC,kB,CAC3D,CAEL,GAA6B,OAAzBnC,KAAKsB,gBACP,OAAO,IAAI;;;;;;UAQb,QAA6Bc,IAAzBpC,KAAKsB,gBACP,OAAO,IAAI;;;;;;;UAUb,IAAqC,IAAjCtB,KAAKsB,gBAAgBnC,QAAmB,CAC1C,MAAM+C,EAAS,IAAI,oCACbC,EAAU,IAAI;;;;sGAI0E;;;UAI9F,OAAO,IAAI,gCAAgCD,gBAAqBC,kB,CAElE,MACEE,EADsBrC,KAAKsB,gBACHtG,KACxBsH,EAAO,+BACLC,KAAKC,UAAU7B,MAAM8B,QAAQJ,GAASA,EAAM,GAAKA,IAGrD,OADArC,KAAKgB,WAAa,CAACsB,GACZ,IAAI;;;;qCAIoBtC,KAAK0C;;qEAE2B1C,KAAK2C;;+EAEK3C,KAAK4C;;gFAEJ5C,KAAK6C;;;;YAIzE7C,KAAK8C,iDAAiDR;;QAIhE,CAEQI,sBAAsBvE,GAC5BA,EAAEoC,iBACFP,KAAKiB,OAAS,EACdjB,KAAK+C,mBAAmBC,aAAa,SAAU,QAC/ChD,KAAKiD,uBAAuBC,gBAAgB,UAC5ClD,KAAKmD,4BAA4BD,gBAAgB,UACjDlD,KAAKoD,4BAA4BF,gBAAgB,UACjD9D,YAAW,KACTY,KAAKqD,8BAA8B,GAClC,IACL,CAEQV,0BAA0BxE,GAChCA,EAAEoC,iBACFP,KAAKiB,OAAS,EACdjB,KAAKiD,uBAAuBD,aAAa,SAAU,QACnDhD,KAAK+C,mBAAmBG,gBAAgB,UACxClD,KAAKmD,4BAA4BD,gBAAgB,UACjDlD,KAAKoD,4BAA4BF,gBAAgB,SACnD,CAEQN,+BAA+BzE,GACrCA,EAAEoC,iBACFP,KAAKiB,OAAS,EACdjB,KAAKmD,4BAA4BH,aAAa,SAAU,QACxDhD,KAAKiD,uBAAuBC,gBAAgB,UAC5ClD,KAAK+C,mBAAmBG,gBAAgB,UACxClD,KAAKoD,4BAA4BF,gBAAgB,UAEjD9D,YAAW,KACTY,KAAKsD,gCAAgC,GACpC,IACL,CAEQT,+BAA+B1E,GACrCA,EAAEoC,iBACFP,KAAKiB,OAAS,EACdjB,KAAKoD,4BAA4BJ,aAAa,SAAU,QACxDhD,KAAKiD,uBAAuBC,gBAAgB,UAC5ClD,KAAK+C,mBAAmBG,gBAAgB,UACxClD,KAAKmD,4BAA4BD,gBAAgB,SACnD,CAEQJ,iDAAiD5C,GAGvD,OAAoB,IAAhBF,KAAKiB,OACA,IAAI;UACPjB,KAAKuD,SAASrD;QAEO,IAAhBF,KAAKiB,OACP,IAAI;UACPjB,KAAKwD,aAAatD;QAEG,IAAhBF,KAAKiB,OACP,IAAI;UACPjB,KAAKyD,kBAAkBvD;QAGpB,IAAI;UACPF,KAAK0D,kBAAkBxD;OAG/B,CAEQqD,SAASrD,GACf,OAAO,IAAI;;;;;;;;;;;;;;gIAciHU,EAAY+C;;;;;iJAKKzD,EAAO0D;;;;;;;;0BAQ9H5D,KAAKoB,mBAAmBnB,KAAKjB,GAGzBkB,EAAO2D,iBAAiB5I,KAAO+D,EAAM/D,GAChC,IAAI,yBAAyB+D,EAAM/D,gBAAgB+D,EAAM3D,uBAEzD,IAAI,yBAAyB2D,EAAM/D,OAAO+D,EAAM3D;;;;sBAM3B,gBAAlC2E,KAAK8D,yBAA6C,IAAI;;;;;;sBAMrD;;;;4DAIqC5D,EAAO6D;;;;;;6DAMN7D,EAAO8D;;;;;;4DAMR9D,EAAO+D;;;;;;0IAMuErD,EAAY+C,gBAAgB3D,KAAKK;;;;;;;;;;;;;;;;;KAkBzK,CAEQmD,aAAatD,GACnB,OAAO,IAAI;yDAC0CA,EAAOjF,2BAA2BiF,EAAOgE;KAEhG,CAEQT,kBAAkBvD,GACxB,IAAIiE,EAAmB,GACvB,MACEC,EADwB,IAAIC,KAAKnE,EAAOoE,qBACVC,mBAAmB,QAAS,CACxDC,IAAK,UAAWC,MAAO,UAAWC,KAAM,UAAWC,cAAe,aAEjEC,MAAM,KAGX,OAFAT,EAAmB,CAACC,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAAIS,KAAK,KAE5D,IAAI;;;;;;;;;;;;;;gIAciHjE,EAAYkE;;;;;kHAK1B5E,EAAO6E;;;;sBAInG/E,KAAKgF,6BAA+B,IAAI;;;;wEAIUb;;;sBAGjD;;;;mJAI4HvD,EAAYkE,0BAA0B9E,KAAKK;;;;;;;;;;;;;;;;;;;;QAoBtLL,KAAKgF,6BAA+B,IAAI;;;;;;;;;;;;;;;;;;;;;;;8IAuB8FpE,EAAYkE;;;;;;wCAMnH,kBAAoB;oFACyB5E,EAAOjF;;;;;;yGAMc2F,EAAY+C,gBAAgB3D,KAAKiF;;;;;;;;;;;;;;;wBAelH/E,EAAOgF,aAAajF,KAAI,CAACkF,EAAaC,IAC/B,IAAI;;uCAEID,EAAYE,WAAWA,oBAAoBD,EAAI;;;oDAGlCD,EAAYlK,eAAe+E,KAAKsF;;;;;;;;;;;;;QAc1E;KAER,CAEQ5B,kBAAkBxD,GACxB,OAAO,IAAI;;;;;;;;;;oCAUqBA,EAAOjF,oBAAoB,CAACiF;;;;;;;;;;;;;;;;;;;;;sIAqBsEU,EAAY2E;;;;;;6JAMWrF,EAAOC;;;;;;;;kCAQlIH,KAAKmB,SAASlB,KAAKjB,GACfkB,EAAOsF,sBAAwBxG,EAAM/D,GAChC,IAAI,yBAAyB+D,EAAM/D,gBAAgB+D,EAAM7D,uBAEzD,IAAI,yBAAyB6D,EAAM/D,OAAO+D,EAAM7D;;;;;;oEAQvB+E,EAAOuF;;;;;;qEAMNvF,EAAOwF;;;;;;;8IAOkE9E,EAAY2E,gCAAgCvF,KAAKK;;;;;;;;;;;;KAa7L,CAEQgD,+BACN,MAAMsC,EAAQ3F,KAEdvD,SAASmJ,iBAAiB,6BAA6B1H,SAAS2H,IAE9DF,EAAM7B,yBAA2B6B,EAAM3E,WAAW,GAAG6C,iBAAiB5I,GAGtE4K,EAAWC,iBAAiB,UAAWC,IAErCJ,EAAM7B,yBAA2BiC,EAAIC,cAAchH,KAAK,GAIxD,GAEN,CAEQsE,iCACN,MAAMqC,EAAQ3F,KAEdvD,SAASmJ,iBAAiB,+BAA+B1H,SAAS+H,IAGhEN,EAAMX,6BAA+BW,EAAM3E,WAAW,GAAG+D,mBAGzDkB,EAAQH,iBAAiB,SAAUC,IAEjCJ,EAAMX,6BAA+BiB,EAAQC,UAAU,GAIvD,GAEN,CAEA5F,eACE6F,aAAY,UAC4B/D,IAAlCpC,KAAK8D,0BACP9D,KAAKqD,8B,GAEN,IACL,CAEQ5B,YACN,IAAI9B,GAAW,QAAkB,aAE7ByG,EAAyB,OAAbzG,GAAoB,EAAA0G,EAAA,GAAa1G,GAAY,KAC7DK,KAAKL,SAAWzE,OAAOwG,MAAM0E,GAAa,KAAOlL,OAAOkL,EAE1D,CAEMd,kBAAkBnH,G,yCACtBA,EAAEoC,iBAIF,MAAM+F,EAAgBpL,OAAOiD,EAAE6H,cAAcO,aAAa,2BC5nBvD,SAA6DtK,G,yCAElE,MAAMX,GAAc,UAGdC,EAAM,8BAAsC,yCAA2CU,EAC3FU,EAAW,CAAC,EAEd,OAAO,SAAU,CACfE,MAAO,mCACPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,kCAC3B,aAAa,EAAA+I,EAAA,GAAKjL,EAAK,CACnBE,OAAQ,SACRiC,KAAM6E,KAAKC,UAAU7F,GACvBjB,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GAAO+B,MAAMnC,IAGd,IACE,MAAMoC,EAAiB,IAAI,IAAqB,SAAUpC,GAAM,GAC1DqC,EAAYD,EAAeE,SACjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACdH,EAAOK,KAAK,CAAEzC,MAAOuC,GAAM,GAC3B,IAGJ,MAAMG,GAAM,EAAAkI,EAAA,GAAwBxI,GACpC,0BACE,GAAGM,I,CAIT,OAAOX,C,CACP,MAAO/B,GACPC,QAAQD,MAAM,CAAEA,UAChB,IAAIE,EAAYP,EAChBO,EAAiB,MAAIF,EACrB,MAAM+B,EAAiB,IAAI,IAAqB,SAAU7B,GAAW,GAErE,OADA6B,EAAe8I,SACR9I,C,KAERY,OAAM3C,IACP,0BACE,GAAG4C,OAAO5C,KACX,GAEL,IACA6C,kBAAmB,KAAO,kBACzBf,MAAMgB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOjB,SACrDe,EAAaJ,OAAOS,EAAM3C,SAE1BuC,EAAYC,EAAOjB,SAASqB,O,CAE9B,SAAU,CACRtC,MAAOgC,EACP/B,KAAMgC,EAAW,UAAW,QAC5B/B,UAAW,UACXI,mBAAoB,YAEtB2B,GAAWM,YAAW,KACpBC,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,CDoiBUoH,CAA8CL,EACtD,G,CAEc1E,Y,yCACZ,IAAIgF,EAAW,EACc,OAAzB5G,KAAKc,kBACP8F,EAAW5G,KAAKc,gBAAgB,GAAG7F,IAErC,MAAM4L,QAAyB,OAAqC7G,KAAKL,SAAU,aAAeiH,GAAU,GAE1G5G,KAAKsB,gBADkB,OAArBuF,OACqBzE,EAEAyE,EAAiB/I,QAG5C,G,CAEc6D,a,yCACZ,MAAMkF,QAAyB,SAG/B,IAAIC,EAAmC,GAEd,OAArBD,EACFC,EAAUxI,KAAK,CAAErD,GAAI,EAAGE,KAAM,mBAEa,IAAtC0L,EAAiB/I,SAASqB,SAAsB,WAAY0H,EAAiB/I,SAAS9C,OAOzF8L,EANoBD,EAAiB/I,SAAS9C,KAELiF,KAAIjB,IACpC,OAAoBA,MAMjC,MAAM+H,EAAuC,GAC7CA,EAASzI,QAAQ0B,KAAKmB,YAAa2F,GACnC9G,KAAKmB,SAAW4F,CAClB,G,CAEclF,sB,yCACZ,MAAMgF,QE5qBH,SAA0DxL,EAAe,M,qCAE9E,MAAMC,GAAc,UACdC,EAAM,8BAAsC,8CACpC,OAATF,EAAgB,GAAK,IAAMA,GAC9BG,QAAa,EAAAgL,EAAA,GAAKjL,EAAK,CACrBE,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GACL,IACE,OAAO,IAAI,IAA2B,MAAOJ,E,CAC7C,MAAOK,GACPC,QAAQD,MAAM,CAAEA,UAChB,IAAIE,EAAYP,EAEhB,OADAO,EAAiB,MAAIF,EACd,IAAI,IAA2B,MAAOE,GAAW,E,CAE5D,E,+RFypBmCiL,GAG/B,IAAIC,EAAwD,GAEnC,OAArBJ,EACFI,EAAoB3I,KAAK,CAAErD,GAAI,EAAGI,KAAM,mBAEG,IAAtCwL,EAAiB/I,SAASqB,SAAsB,WAAY0H,EAAiB/I,SAAS9C,OAOzFiM,EANoBJ,EAAiB/I,SAAS9C,KAEMiF,KAAIjB,GAC/C,qCAA6CuD,KAAKC,UAAUxD,OAOzE,MAAM+H,EAAkD,GACxDA,EAASzI,QAAQ0B,KAAKoB,sBAAuB6F,GAC7CjH,KAAKoB,mBAAqB2F,CAC5B,G,CAEM1G,WAAWlC,G,yCACfA,EAAEoC,iBAIF,MAAMhE,EAAmB4B,EAAE6H,cAAcO,aAAa,WAEhDW,EAAa/I,EAAE6H,cAAcO,aAAa,eAE1CY,EAAsCnH,KAAKoH,qCACjDD,EAAoCE,OAAOH,SAErC,OAAiClH,KAAKL,SAAUpD,GACtD4K,EAAoCG,OAItC,G,CAEMrC,sBAAsB9G,G,yCAC1BA,EAAEoC,uBGptBC,W,yCAEL,MAAMjF,GAAc,UAGdC,EAAM,8BAAsC,wCAClDiB,EAAiCC,SAASC,cAAc,gEACtDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAO,mBAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,kCAC3B,aAAa,EAAA+I,EAAA,GAAKjL,EAAK,CACrBE,OAAQ,OACRiC,KAAMf,EACNjB,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GAAO+B,MAAMnC,IAGd,MAAMoC,EAAiB,IAAI,IAAqB,OAAQpC,GAAM,EAAOgB,GAC/DqB,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAExC,MAAOsC,EAAElD,GAAK,KAAOmD,GACzB,qBAATD,EAAElD,KACJoD,EAAW,CAAExC,MAAOuC,IAGtBH,EAAOK,KAAKD,EAAS,GACrB,IAGJ,MAAME,GAAM,EAAAkI,EAAA,GAAwBxI,GACpC,0BACE,GAAGM,I,CAIT,OAAOX,CAAc,IACpBY,OAAM3C,IACP,0BACE,GAAG4C,OAAO5C,KACX,GAEL,IACA6C,kBAAmB,KAAO,kBACzBf,MAAMgB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOjB,SACrDe,EAAaJ,OAAOS,EAAM3C,SAE1BuC,EAAYC,EAAOjB,SAASqB,O,CAE9BL,GAAY,SAAU,CACpBjC,MAAOgC,EACP/B,KAAMgC,EAAY,UAAY,QAC9B/B,UAAW+B,EAAY,UAAY,UACnC3B,mBAAoB,YAEtB2B,GAAYM,YAAW,KACrBC,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,CH8nBUgI,EACR,G,CAEAH,qCACE,MAAO,CACLC,OAASH,IAGPzK,SAASmJ,iBAAiB,oDAAoD1H,SAAQsJ,IACpF,GAAIA,EAAKC,aAAa,sBAAuB,CAC3C,MAAMC,EAAiBF,EAAKjB,aAAa,eAErCW,EAAWS,aAAeD,GAC5BF,EAAKxE,aAAa,qBAAsB,sC,IAG5C,EAEJsE,MAAO,KACL7K,SAASmJ,iBAAiB,8DAA8D1H,SAAQsJ,IAC9FA,EAAKxE,aAAa,qBAAsB,4BAA4B,GACpE,EAGR,CAEAvC,mBACE,OAAOT,IACT,GAtoBO,EAAAU,OAAS,CACd,IAAG;;KAzEL,IAAC,QAAM,uB,gBAC2B,mB,OAAA,IAAN,UAAM,W,yCAElC,IAAC,QAAM,2B,gBAC+B,mB,OAAA,IAAN,UAAM,W,6CAEtC,IAAC,QAAM,gC,gBACoC,mB,OAAA,IAAN,UAAM,W,kDAE3C,IAAC,QAAM,gC,gBACoC,mB,OAAA,IAAN,UAAM,W,kDAE3C,IAAC,QAAS,CAAErF,KAAMH,S,wDAGlB,IAAC,QAAS,CAAEG,KAAMH,S,wEAGlB,IAAC,QAAS,CAAEG,KAAMuM,U,6EAGlB,IAAC,QAAS,CAAEvM,KAAMsF,Q,8DAelB,IAAC,QAAS,CAAEtF,KAAMsF,Q,yDAGlB,IAAC,QAAS,CAAEtF,KAAMH,S,sDAGlB,IAAC,QAAS,CAAEG,KAAMsF,Q,6DAGlB,IAAC,QAAS,CAAEtF,KAAMsF,Q,uDAGlB,IAAC,QAAS,CAAEtF,KAAMsF,Q,iEAGlB,IAAC,QAAS,CAAEtF,KAAMuM,U,0DAtDP/G,EAAsC,IADlD,QAAc,+C,2BACFA,E,seIrCN,IAAMgH,EAAN,cAA2C,KAChDpI,cAAgBC,QAeT,KAAAoI,WAAqB,EAfH,CAoBnBjI,oB,uHACJ,EAAMA,kBAAiB,UACzB,E,+RAEAC,uBAAyB,CAOzBC,SACE,OAAO,IAAI;;;6EAG8DC,KAAK+H;;0DAExB/H,KAAKgI;;;;4BAInChI,KAAKiI,kBAAkBjI,KAAKkI,qBAAqBlI,KAAK8H;yBACzD9H,KAAKmI,8BAA6B;;;KAIzD,CAEAC,oBAEE3L,SAASmJ,iBAAiB,uBAAuB1H,SAASmK,IACxDA,EAAMvC,iBAAiB,UAAWC,IAChCjK,QAAQ0E,IAAI,CAAC6H,UAGb,IAAIC,EAAUjJ,OAAOkJ,IAAIC,gBAAgBH,EAAMI,aAAoB,MAAE,IAErEhM,SAASmJ,iBAAiB,2BAA2B1H,SAASwK,IAC5DA,EAAUC,UAAY,6EAA6EL,KAAW,GAC9G,GACF,GAEN,CAEAhI,eACEN,KAAKoI,mBACP,CAEA3H,mBACE,OAAOT,IACT,GA7CO,EAAAU,OAAS,CACd,IAAG;;KAxBL,IAAC,QAAS,CAAErF,KAAMoD,S,yDAGlB,IAAC,QAAS,CAAEpD,KAAMoD,S,4DAGlB,IAAC,QAAS,CAAEpD,KAAMH,S,uDAGlB,IAAC,QAAS,CAAEG,KAAMoD,S,yDAGlB,IAAC,QAAS,CAAEpD,KAAMoD,S,0DAGlB,IAAC,QAAS,CAAEpD,KAAMuM,U,8DAlBPC,EAA4B,IADxC,QAAc,oC,2BACFA,E","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/organization/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/organization/patch.ts","webpack://webpackNumbers/./src/view/membership/members/edit/organization/contact-person-photo.ts","webpack://webpackNumbers/./src/view/membership/members/edit/organization/bio-data.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/organization/certificate/delete.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/member_organization_type/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/organization/certificate/post.ts","webpack://webpackNumbers/./src/view/membership/members/edit/pages/photo.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipOrganizationUsers<Type>(ID: Number = null, url_params: string = \"\", withLocation: boolean = false) {\r\n\r\n  const raw_url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params);\r\n  const location_url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization/location'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params);\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = withLocation ? location_url : raw_url,\r\n  // const _get_cookie = getUserLoginInfoCookie();\r\n  // const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization'\r\n    // + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_MembershipOrganizationUser(ID: Number, message: string = null): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-organization\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: message ?? 'Update Member Data?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/admin/user/form.scss';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport '../pages/photo';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { MembershipMixedUserModel, } from '@@addons/interfaces/members/user/mixed';\r\nimport '@@addons/widgets/alert';\r\nimport '../../../../no_access/no_page_entry';\r\nimport '../../../../no_access/account_expired';\r\nimport { PATCH_MembershipOrganizationUser } from '@@addons/network/members/membership/users/organization/patch';\r\n\r\n\r\n@customElement(\"pdb-membership-member-organization-update-photo\")\r\nexport class PdbMembershipMemberOrganizationUpdatePhoto extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public memberId?: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public memberInfo: MembershipMixedUserModel[] = null;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return this.memberInfo.map(member => {\r\n      return html`\r\n        <div class=\"w-full\">\r\n          <div class=\"flex justify-center my-1\">\r\n            <div class=\"form-container flex justify-center\">\r\n              <div class=\"app-container- !px-0\">\r\n                <div class=\"app-container--row !px-0\">\r\n                  <div class=\"app-container--col-md-12\">\r\n                    <header\r\n                      class=\"header warning app-container--col-md-12 flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mb-2\">\r\n                      <label for=\"\" class=\"label\">\r\n                        <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                        <h1 class=\"h1 !text-red-400\">Organization</h1>\r\n                        <h3 class=\"h3\">Update Contact Person Photo!</h3>\r\n                      </label>\r\n                    </header>\r\n                    <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-organization\"\r\n                      enctype=\"multipart/form-data\">\r\n                      <pdb-membership-update-view-photo headTitle=\"${member.contactPersonName}'s Photo\"\r\n                        inputId=\"contactPersonPhoto\" inputName=\"contactPersonPhoto\" inputLabel=\"Update Contact Person Photo\"\r\n                        ?inputRequired=\"${true}\" currentImage=\"${member.contactPersonPhoto}\">\r\n                      </pdb-membership-update-view-photo>\r\n                      <div\r\n                        class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-1\">\r\n                        <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" @click=\"${this.submitForm}\">\r\n                        </mwc-button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    });\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    console.log({ e });\r\n    await PATCH_MembershipOrganizationUser(this.memberId, \"Update Contact Person Photo\")\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/admin/user/form.scss';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators.js';\r\nimport '@material/mwc-tab';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-tab-bar';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { base64Decode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../../page__id';\r\nimport '@@addons/widgets/alert';\r\nimport '../../../../no_access/no_page_entry';\r\nimport '../../../../no_access/account_expired';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { Button } from '@material/mwc-button';\r\nimport '../pages/editablity';\r\nimport '../pages/photo';\r\nimport { GET_MemberGroupingsOrganizationTypes } from '@@addons/network/members/groupings/member_organization_type';\r\nimport { GroupingsOrganizationTypeModel, Convert as gotmConvert } from '@@addons/interfaces/members/groupings/organization_type';\r\nimport './contact-person-photo';\r\nimport { GET_MembershipOrganizationUsers } from '@@addons/network/members/membership/users/organization';\r\nimport { PATCH_MembershipOrganizationUser } from '@@addons/network/members/membership/users/organization/patch';\r\nimport { DELETE_MembershipOrganizationCertificateUsers } from '@@addons/network/members/membership/users/organization/certificate/delete';\r\nimport { POST_MembershipOrganizationCertificateUser } from '@@addons/network/members/membership/users/organization/certificate/post';\r\n\r\nenum submit_type { \"bio\", \"contact_person_photo\", \"contact_person_info\", \"certification\" } \r\n@customElement(\"pdb-membership-update-organization-bio-data\")\r\nexport class PdbMembershipUpdateOrganizationBioData extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('#mainSectionFormBtn')\r\n  private mainSectionFormBtn: Button;\r\n\r\n  @query('#editableSectionFormBtn')\r\n  private editableSectionFormBtn: Button;\r\n\r\n  @query('#contactPersonSectionFormBtn')\r\n  private contactPersonSectionFormBtn: Button;\r\n\r\n  @query('#certificationSectionFormBtn')\r\n  private certificationSectionFormBtn: Button;\r\n\r\n  @property({ type: Number })\r\n  private memberId?: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedOrganizationType?: number | \"other_value\";\r\n\r\n  @property({ type: Boolean })\r\n  private selectedBusinessRegistration?: boolean;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n\r\n  private _pdbBranchMember: NetworkCallResponse_I<MembershipMixedUserModel> = null;\r\n\r\n  public set pdbBranchMember(value: NetworkCallResponse_I<MembershipMixedUserModel>) {\r\n    this._pdbBranchMember = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get pdbBranchMember(): NetworkCallResponse_I<MembershipMixedUserModel> {\r\n    return this._pdbBranchMember;\r\n  }\r\n\r\n  @property({ type: Array })\r\n  private memberData: MembershipMixedUserModel[] = null;\r\n\r\n  @property({ type: Number })\r\n  private formId: 1 | 2 | 3 | 4 = 1;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _organizationTypes: GroupingsOrganizationTypeModel[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    this.getUserId();\r\n\r\n    if ((this.memberId === 0) || (this.memberId === null) || (Number.isNaN(this.memberId))) { } else {\r\n      await this.getGenders();\r\n      await this.getMember();\r\n      await this.getOrganizationType();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({ pageId: PAGE__IDS['edit-organization'], viewType: \"Edit\" }, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    if ((this.memberId === 0) || (this.memberId === null) || (Number.isNaN(this.memberId))) {\r\n      const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">Organization Not Found!</p>\r\n          <p class=\"text-black mb-2\"><small>Follow the link back to organizations page.</small></p>\r\n          <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\" href=\"${CONSTANTS.URLS.PDB_CLIENT}member/organization/members\"\r\n            label=\"Organizations Page\"></link-button>\r\n        </div>\r\n      `;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n\r\n      if (this.pdbBranchMember === null) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n      if (this.pdbBranchMember === undefined) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <h4 class=\"text-red-600 text-lg\">\r\n                <span class=\"font-bold\">Organization </span>: undefined error</h4>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n\r\n      if (this.pdbBranchMember.success === false) {\r\n        const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n        const content = html`\r\n          <div>\r\n            <p class=\"text-black mb-2\">Organization Not Found!</p>\r\n            <p class=\"text-black mb-2\"><small>Follow the link back to users page.</small></p>\r\n            <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\" href=\"${CONSTANTS.URLS.PDB_CLIENT}member/organization/members\"\r\n              label=\"Organizations Page\"></link-button>\r\n          </div>\r\n        `;\r\n        return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n      }\r\n      const pdbBranchMember = this.pdbBranchMember,\r\n        _data = pdbBranchMember.data,\r\n        DATA = mmumConvert.toMembershipMixedUserModel(\r\n          JSON.stringify(Array.isArray(_data) ? _data[0] : _data)\r\n        );\r\n      this.memberData = [DATA];\r\n      return html`\r\n        <div class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2\">\r\n          <mwc-tab-bar activeIndex=\"0\">\r\n            <mwc-tab isMinWidthIndicator isFadingIndicator minWidth id=\"mainSectionFormBtn\"\r\n              label=\"Main\" @click=\"${this.displayMainSectionBtn}\"></mwc-tab>\r\n            <mwc-tab isMinWidthIndicator isFadingIndicator minWidth\r\n              id=\"editableSectionFormBtn\" label=\"Editable\" @click=\"${this.displayEditableSectionBtn}\"></mwc-tab>\r\n            <mwc-tab isMinWidthIndicator isFadingIndicator minWidth\r\n              id=\"contactPersonSectionFormBtn\" label=\"Certification\" @click=\"${this.displayCertificationSectionBtn}\"></mwc-tab>\r\n            <mwc-tab isMinWidthIndicator isFadingIndicator minWidth\r\n              id=\"certificationSectionFormBtn\" label=\"Contact Person\" @click=\"${this.displayContactPersonSectionBtn}\"></mwc-tab>\r\n          </mwc-tab-bar>\r\n        </div>\r\n        <div class=\"py-0\">\r\n          ${this.getMainEditableCertificationContactPersonSection(DATA)}\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private displayMainSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 1;\r\n    this.mainSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.editableSectionFormBtn.removeAttribute('raised');\r\n    this.certificationSectionFormBtn.removeAttribute('raised');\r\n    this.contactPersonSectionFormBtn.removeAttribute('raised');\r\n    setTimeout(() => {\r\n      this.organizationTypeSelectAction();\r\n    }, 100);\r\n  }\r\n\r\n  private displayEditableSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 2;\r\n    this.editableSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.mainSectionFormBtn.removeAttribute('raised');\r\n    this.certificationSectionFormBtn.removeAttribute('raised');\r\n    this.contactPersonSectionFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private displayCertificationSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 3;\r\n    this.certificationSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.editableSectionFormBtn.removeAttribute('raised');\r\n    this.mainSectionFormBtn.removeAttribute('raised');\r\n    this.contactPersonSectionFormBtn.removeAttribute('raised');\r\n\r\n    setTimeout(() => {\r\n      this.businessRegisteredSwitchAction();\r\n    }, 100);\r\n  }\r\n\r\n  private displayContactPersonSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 4;\r\n    this.contactPersonSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.editableSectionFormBtn.removeAttribute('raised');\r\n    this.mainSectionFormBtn.removeAttribute('raised');\r\n    this.certificationSectionFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private getMainEditableCertificationContactPersonSection(member: MembershipMixedUserModel) {\r\n    // console.log({\"this.memberGroups\": this.memberGroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    \r\n    if (this.formId === 1) {\r\n      return html`\r\n        ${this.mainForm(member)}\r\n      `;\r\n    } else if (this.formId === 2) {\r\n      return html`\r\n        ${this.editableForm(member)}\r\n      `;\r\n    } else if (this.formId === 3) {\r\n      return html`\r\n        ${this.certificationForm(member)}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.contactPersonForm(member)}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private mainForm(member: MembershipMixedUserModel) {\r\n    return html`\r\n      <div\r\n        class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Organization</h1>\r\n                    <h3 class=\"h3\">Update Profile Bio-Data!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-organization\" submit_type=\"${submit_type.bio}\"\r\n                  enctype=\"multipart/form-data\">\r\n                  <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4\">\r\n                    <div class=\"p-2\">\r\n                      <h4 class=\"font-semibold my-2\">Enter Organization Name</h4>\r\n                      <mwc-textfield name=\"organizationName\" id=\"organizationName\" label=\"Enter Organization Name\" outlined type=\"text\" value=\"${member.organizationName}\"\r\n                        required>\r\n                      </mwc-textfield>\r\n                    </div>\r\n                    <div class=\"p-2\">\r\n                      <h4 class=\"font-semibold my-2\">Select Organization Type</h4>\r\n                      <mwc-select name=\"organizationType\" class=\"w-full\" id=\"organizationType\" label=\"Select Organization Type\" outlined required>\r\n                        <mwc-list-item value=\"0\">Select Organization Type</mwc-list-item>\r\n                        ${this._organizationTypes.map((value) => {\r\n                          // console.log({\"member.organizationType.id\": member.organizationType.id, \"value.id\": value.id});\r\n                          \r\n                          if (member.organizationType.id === value.id) {\r\n                            return html`<mwc-list-item value=\"${value.id}\" selected>${value.type}</mwc-list-item>`;\r\n                          } else {\r\n                            return html`<mwc-list-item value=\"${value.id}\">${value.type}</mwc-list-item>`;\r\n                          }\r\n                        })}\r\n                        <mwc-list-item value=\"other_value\">Other Organization Type</mwc-list-item>\r\n                      </mwc-select>\r\n                    </div>\r\n                    ${this.selectedOrganizationType === \"other_value\" ? html`\r\n                      <div class=\"p-2\">\r\n                        <h4 class=\"font-semibold my-2\">Enter Other Organization Type</h4>\r\n                        <mwc-textfield name=\"other_organizationType\" id=\"other_organizationType\" label=\"Enter Other Organization Type\" outlined type=\"text\">\r\n                        </mwc-textfield>\r\n                      </div>\r\n                    `: nothing}\r\n                    <div class=\"p-2\">\r\n                      <h4 class=\"font-semibold my-2\">Enter Phone Number</h4> \r\n                      <mwc-textfield name=\"organizationPhone\" multiple type=\"tel\" class=\"w-full\" id=\"organizationPhone\"\r\n                        label=\"Enter Phone Number\" value=\"${member.organizationPhone}\" outlined required>\r\n                      </mwc-textfield>\r\n                    </div>\r\n                    <div class=\"p-2\">\r\n                      <h4 class=\"font-semibold my-2\">Enter Email Address</h4> \r\n                      <mwc-textfield name=\"organizationEmail\" multiple type=\"email\" class=\"w-full\" id=\"organizationEmail\"\r\n                        label=\"Enter Email Address\" value=\"${member.organizationEmail}\" outlined required>\r\n                      </mwc-textfield>\r\n                    </div>\r\n                    <div class=\"p-2\">\r\n                      <h4 class=\"font-semibold my-2\">Enter Reference ID</h4> \r\n                      <mwc-textfield name=\"referenceId\" multiple type=\"text\" class=\"w-full\" id=\"referenceId\"\r\n                        label=\"Enter Reference ID\" value=\"${member.referenceId}\" outlined>\r\n                      </mwc-textfield>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"p-2\">\r\n                      <div class=\"form-input-container\">\r\n                        <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" message=\"Update Organization Data\" submit_type=\"${submit_type.bio}\" @click=\"${this.submitForm}\">\r\n                        </mwc-button>\r\n                      </div>\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private editableForm(member: MembershipMixedUserModel) {      \r\n    return html`\r\n      <pdb-membership-update-view-editabilty memberId=\"${member.id}\" ?currentEditabilty=\"${member.editable}\"></pdb-membership-update-view-editabilty>\r\n    `;\r\n  }\r\n\r\n  private certificationForm(member: MembershipMixedUserModel) {    \r\n    let registrationDate = \"\";\r\n    const _registrationDate = new Date(member.dateOfIncorporation),\r\n      __TO_DATE = _registrationDate.toLocaleDateString('en-US', {\r\n        day: '2-digit', month: '2-digit', year: 'numeric', formatMatcher: 'best fit',\r\n        // @ts-ignore\r\n      }).split(\"/\");\r\n    registrationDate = [__TO_DATE[2], __TO_DATE[0], __TO_DATE[1]].join('-');\r\n\r\n    return html`\r\n      <div\r\n        class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Organization</h1>\r\n                    <h3 class=\"h3\">Update Organization Certification!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-organization\" submit_type=\"${submit_type.certification}\"\r\n                  enctype=\"multipart/form-data\">\r\n                  <div class=\"grid grid-cols-1 md:grid-cols-2 grid-flow-row gap-4\">\r\n                    <div class=\"p-2\">\r\n                      <h4 class=\"font-semibold my-2\">Is Organization Registered?</h4>\r\n                      <switch-input name=\"businessRegistered\" class=\"w-full\" id=\"businessRegistered\" ?selected=\"${member.businessRegistered}\"\r\n                        label=\"Organization Registered?\" outlined>\r\n                      </switch-input>\r\n                    </div>\r\n                    ${this.selectedBusinessRegistration ? html`\r\n                      <div class=\"p-2\">\r\n                        <h4 class=\"font-semibold my-2\">Select Date of Incorporation</h4> \r\n                        <mwc-textfield name=\"dateOfIncorporation\" type=\"date\" class=\"w-full\" id=\"dateOfIncorporation\"\r\n                          label=\"Select Date of Incorporation\" value=\"${registrationDate}\" outlined required>\r\n                        </mwc-textfield>\r\n                      </div>\r\n                    `: nothing}\r\n                    <div class=\"p-2 hidden md:block\"></div>\r\n                    <div class=\"p-2\">\r\n                      <div class=\"form-input-container\">\r\n                        <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" message=\"Update Organization Certification\" submit_type=\"${submit_type.certification}\" @click=\"${this.submitForm}\">\r\n                        </mwc-button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"p-2\">\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      ${this.selectedBusinessRegistration ? html`\r\n        <div class=\"block md:hidden\">\r\n          <div class=\"flex form-input-container items-center text-center\">\r\n            <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n            <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n              ...\r\n            </label>\r\n            <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-2\">\r\n          <div class=\"form-container flex justify-center\">\r\n            <div class=\"app-container- !px-0\">\r\n              <div class=\"app-container--row !px-0\">\r\n                <div class=\"app-container--col-md-12\">\r\n                  <header class=\"header warning app-container--col-md-12\">\r\n                    <label for=\"\" class=\"label\">\r\n                      <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                      <h1 class=\"h1 !text-red-400\">Organization</h1>\r\n                      <h3 class=\"h3\">Business Registration Certificate(s)!</h3>\r\n                    </label>\r\n                  </header>\r\n                  <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-organization-certificate\" submit_type=\"${submit_type.certification}\"\r\n                    enctype=\"multipart/form-data\">\r\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 grid-flow-row gap-4\">\r\n                      <div class=\"p-2\">\r\n                        <h4 class=\"font-semibold my-2\">Is Organization Registered?</h4>\r\n                        <file-input id=\"attachment\" name=\"attachment\" label=\"Select Attachment\" accept=\"*\"\r\n                          ?required=\"${true}\" ?hasLabel=\"${true}\" fileSelectorInput></file-input>\r\n                        <input type=\"hidden\" name=\"memberId\" id=\"memberId\" value=\"${member.id}\" />\r\n                      </div>\r\n                      <div class=\"p-2 hidden md:block\"></div>\r\n                      <div class=\"p-2 hidden md:block\"></div>\r\n                      <div class=\"p-2\">\r\n                        <div class=\"form-input-container\">\r\n                          <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" submit_type=\"${submit_type.bio}\" @click=\"${this.submitCertificateForm}\">\r\n                          </mwc-button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"p-2\">\r\n                      <div class=\"flex form-input-container items-center text-center\">\r\n                        <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                        <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                          Lets go digital...\r\n                        </label>\r\n                        <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4\">\r\n                      ${member.certificates.map((certificate, i) => {\r\n                        return html`\r\n                          <div class=\"flex justify-between p-2 shadow border border-gray-200\">\r\n                            <a href=\"${certificate.attachment.attachment}\">FILE ${i + 1}</a>\r\n                            <div class=\"flex flex-col items-center pl-2\">\r\n                              <mwc-icon-button class=\"bg-love-kiss text-white\" icon=\"delete\"\r\n                                delete-this-item=\"${certificate.id}\" @click=\"${this.deleteCertificate}\">\r\n                              </mwc-icon-button>\r\n                              <small class=\"block\">Delete</small>\r\n                            </div>\r\n                          </div>\r\n                        `;\r\n                      })}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ` : nothing}\r\n    `;\r\n  }\r\n\r\n  private contactPersonForm(member: MembershipMixedUserModel) {\r\n    return html`\r\n      <div class=\"w-full\">\r\n        <div class=\"flex justify-center my-1\">\r\n          <div class=\"form-container flex justify-center\">\r\n            <div class=\"app-container- !px-0\">\r\n              <div class=\"app-container--row !px-0\">\r\n                <div class=\"app-container--col-md-12\">\r\n                  <div class=\"grid grid-cols-1 sm:grid-cols-2 grid-flow-row gap-4\">\r\n                    <div class=\"px-1 border border-gray-200\" style=\"height: fit-content\">\r\n                      <pdb-membership-member-organization-update-photo\r\n                        memberId=\"${member.id}\" .memberInfo=\"${[member]}\">\r\n                      </pdb-membership-member-organization-update-photo>\r\n                    </div>\r\n                    <div class=\"block sm:hidden\">\r\n                      <div class=\"flex form-input-container items-center text-center\">\r\n                        <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                        <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                          ...\r\n                        </label>\r\n                        <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"px-1 border border-gray-200\" style=\"height: fit-content\">\r\n                      <header\r\n                        class=\"header warning app-container--col-md-12 flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mt-1 mb-2\">\r\n                        <label for=\"\" class=\"label\">\r\n                          <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                          <h1 class=\"h1 !text-red-400\">Organization</h1>\r\n                        <h3 class=\"h3\">Update Contact Person!</h3>\r\n                        </label>\r\n                      </header> \r\n                      <form method=\"post\" action=\"#\" class=\"form !my-1\" make-general-posts=\"members-user-organization\" submit_type=\"${submit_type.contact_person_info}\"\r\n                        enctype=\"multipart/form-data\">\r\n                        <div class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col px-2 mt-1 mb-2\">\r\n                          <div class=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 grid-flow-row gap-4\">\r\n                            <div class=\"p-2\">\r\n                              <h4 class=\"font-semibold my-2\">Enter Contact Person Name</h4>\r\n                              <mwc-textfield name=\"contactPersonName\" id=\"contactPersonName\" label=\"Enter Contact Person Name\" outlined type=\"text\" value=\"${member.contactPersonName}\"\r\n                                required>\r\n                              </mwc-textfield>\r\n                            </div>\r\n                            <div class=\"p-2\">\r\n                              <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n                              <mwc-select name=\"contactPersonGender\" class=\"w-full\" id=\"contactPersonGender\" label=\"Select Gender\" outlined required>\r\n                                <mwc-list-item value=\"0\">Select Gender</mwc-list-item>\r\n                                ${this._genders.map((value) => {\r\n                                  if (member.contactPersonGender === value.id) {\r\n                                    return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                                  } else {\r\n                                    return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                                  }\r\n                                })}\r\n                              </mwc-select>\r\n                            </div>\r\n                            <div class=\"p-2\">\r\n                              <h4 class=\"font-semibold my-2\">Enter Phone Number</h4> \r\n                              <mwc-textfield name=\"contactPersonPhone\" multiple type=\"tel\" class=\"w-full\" id=\"contactPersonPhone\"\r\n                                label=\"Enter Phone Number\" value=\"${member.contactPersonPhone}\" outlined required>\r\n                              </mwc-textfield>\r\n                            </div>\r\n                            <div class=\"p-2\">\r\n                              <h4 class=\"font-semibold my-2\">Enter Email Address</h4> \r\n                              <mwc-textfield name=\"contactPersonEmail\" multiple type=\"email\" class=\"w-full\" id=\"contactPersonEmail\"\r\n                                label=\"Enter Email Address\" value=\"${member.contactPersonEmail}\" outlined required>\r\n                              </mwc-textfield>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col my-2 p-1\">\r\n                          <mwc-button class=\"primary\" raised type=\"submit\" label=\"Submit\" message=\"Update Contact Person Info\" submit_type=\"${submit_type.contact_person_info}\" @click=\"${this.submitForm}\">\r\n                          </mwc-button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private organizationTypeSelectAction() {\r\n    const _this = this;\r\n\r\n    document.querySelectorAll('[name=\"organizationType\"]').forEach((_selection) => {\r\n      // console.log({ _selection });\r\n      _this.selectedOrganizationType = _this.memberData[0].organizationType.id;\r\n      // console.log({ \"_this.selectedOrganizationType--1\": _this.selectedOrganizationType });\r\n\r\n      _selection.addEventListener(\"change\", (evt) => {\r\n        // @ts-ignore \r\n        _this.selectedOrganizationType = evt.currentTarget.value;\r\n        // console.log({ \"_this.selectedOrganizationType--2\": _this.selectedOrganizationType });\r\n        // @ts-ignore\r\n        // console.log({ \"_switch.isSelected\": _selection.value });\r\n      });\r\n    });\r\n  }\r\n\r\n  private businessRegisteredSwitchAction() {\r\n    const _this = this;\r\n\r\n    document.querySelectorAll('[name=\"businessRegistered\"]').forEach((_switch) => {\r\n      // console.log({ _switch });\r\n      \r\n      _this.selectedBusinessRegistration = _this.memberData[0].businessRegistered;\r\n      // console.log({ \"_this.selectedBusinessRegistration--1\": _this.selectedBusinessRegistration });\r\n\r\n      _switch.addEventListener(\"click\", (evt) => {\r\n        // @ts-ignore \r\n        _this.selectedBusinessRegistration = _switch.isSelected;\r\n        // console.log({ \"_this.selectedBusinessRegistration--2\": _this.selectedBusinessRegistration });\r\n        // @ts-ignore\r\n        // console.log({ \"_switch.isSelected\": _switch.isSelected });\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    setInterval(() => {\r\n      if (this.selectedOrganizationType === undefined) {\r\n        this.organizationTypeSelectAction();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  private getUserId() {\r\n    let memberId = urlQueryParamsGet('member-id');\r\n    // console.log({ memberId });\r\n    let _memberId = memberId !== null ? base64Decode(memberId) : null;\r\n    this.memberId = Number.isNaN(_memberId) ? null : Number(_memberId);\r\n    // console.log({ \"this.memberId\": this.memberId });\r\n  }\r\n\r\n  async deleteCertificate(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const certificateId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_MembershipOrganizationCertificateUsers(certificateId);\r\n  }\r\n\r\n  private async getMember() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    const _networkResponse = await GET_MembershipOrganizationUsers<any>(this.memberId, \"?branchId=\" + branchId, true);\r\n    if (_networkResponse === null) {\r\n      this.pdbBranchMember = undefined;\r\n    } else {\r\n      this.pdbBranchMember = _networkResponse.response;\r\n      // console.log({\"this.pdbBranchMember\": this.pdbBranchMember})\r\n    }\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getOrganizationType() {\r\n    const _networkResponse = await GET_MemberGroupingsOrganizationTypes<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __organizationTypes: GroupingsOrganizationTypeModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __organizationTypes.push({ id: 0, type: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GroupingsOrganizationTypeModel[] = data.map(value => {\r\n          return gotmConvert.toGroupingsOrganizationTypeModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __organizationTypes = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<GroupingsOrganizationTypeModel> = [];\r\n    new_data.push(...this._organizationTypes, ...__organizationTypes);\r\n    this._organizationTypes = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const message: string =  e.currentTarget.getAttribute('message');\r\n    // @ts-ignore\r\n    const submitType = e.currentTarget.getAttribute('submit_type');\r\n\r\n    const _handleMultitpleSubmitFormSelectors = this.handleMultitpleSubmitFormSelectors();\r\n    _handleMultitpleSubmitFormSelectors.handle(submitType);\r\n\r\n    await PATCH_MembershipOrganizationUser(this.memberId, message);\r\n    _handleMultitpleSubmitFormSelectors.reset();\r\n\r\n    \r\n    // console.log({ \"PATCH_MembershipUser\": \"done\" });\r\n  }\r\n\r\n  async submitCertificateForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    await POST_MembershipOrganizationCertificateUser();\r\n  }\r\n\r\n  handleMultitpleSubmitFormSelectors() {\r\n    return {\r\n      handle: (submitType: submit_type) => {\r\n        // console.log({submitType});\r\n        \r\n        document.querySelectorAll('[make-general-posts=\"members-user-organization\"]').forEach(form => {\r\n          if (form.hasAttribute(\"make-general-posts\")) {\r\n            const formSubmitType = form.getAttribute(\"submit_type\");\r\n            // console.log({formSubmitType});\r\n            if (submitType.toString() !== formSubmitType) {\r\n              form.setAttribute(\"make-general-posts\", \"members-user-organization--disabled\")\r\n            }\r\n          }\r\n        });\r\n      },\r\n      reset: () => {\r\n        document.querySelectorAll('[make-general-posts=\"members-user-organization--disabled\"]').forEach(form => {\r\n          form.setAttribute(\"make-general-posts\", \"members-user-organization\")\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_MembershipOrganizationCertificateUsers(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization-certificate/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Organization Certificate?',\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsOrganizationTypes<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/member-organization-type'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_MembershipOrganizationCertificateUser(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-organization-certificate',\r\n  formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-user-organization-certificate\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Certificate?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@addons/widgets/form/new/file-select';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\n\r\n\r\n@customElement(\"pdb-membership-update-view-photo\")\r\nexport class PdbMembershipUpdateViewPhoto extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public headTitle: string;\r\n\r\n  @property({ type: String })\r\n  public currentImage: string;\r\n\r\n  @property({ type: Number })\r\n  public inputId: number;\r\n\r\n  @property({ type: String })\r\n  public inputName: string;\r\n\r\n  @property({ type: String })\r\n  public inputLabel: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public inputRequired?: boolean;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col\">\r\n        <div class=\"flex h-full flex-col justify-center gap-4 p-3\">\r\n          <h5 class=\"text-xl font-medium text-gray-500 dark:text-gray-400\">${this.headTitle}</h5>\r\n          <div fileSelectorPreviewer class=\"h-[400px] flex justify-center\">\r\n            <img class=\"object-contain bg-contain\" src=\"${this.currentImage}\">\r\n          </div>\r\n        </div>\r\n        <div class=\"flex h-full flex-col justify-center gap-4 p-3 border border-gray-200\">\r\n          <file-input id=\"${this.inputId}\" name=\"${this.inputName}\" label=\"${this.inputLabel}\" accept=\"image/jpg,image/jpeg,image/png\"\r\n            ?required=\"${this.inputRequired}\" ?hasLabel=\"${true}\" fileSelectorInput></file-input>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  updateImageAction() {\r\n    const _this = this; \r\n    document.querySelectorAll('[fileSelectorInput]').forEach((input) => {\r\n      input.addEventListener(\"change\", (evt) => {\r\n        console.log({input});\r\n        \r\n        // @ts-ignore\r\n        var fileUrl = window.URL.createObjectURL(input.fileSelector['files'][0]);\r\n\r\n        document.querySelectorAll('[fileSelectorPreviewer]').forEach((previewer) => {\r\n          previewer.innerHTML = `<img class=\"object-contain bg-contain h-[400px] flex justify-center\" src=\"${fileUrl}\">`;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.updateImageAction();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","GenericGenderInfo_S","data","id","Number","name","GET_GenericGender","type","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","GET_MembershipOrganizationUsers","ID","url_params","withLocation","raw_url","location_url","PATCH_MembershipOrganizationUser","message","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","push","res","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","success","setTimeout","window","location","reload","PdbMembershipMemberOrganizationUpdatePhoto","constructor","super","memberId","memberInfo","connectedCallback","disconnectedCallback","render","this","map","member","contactPersonName","contactPersonPhoto","submitForm","firstUpdated","preventDefault","log","createRenderRoot","styles","Array","submit_type","PdbMembershipUpdateOrganizationBioData","_activeBranchId","_pdbBranchMember","memberData","formId","_userLoginInfo","_genders","_organizationTypes","_hasSetup","pdbBranchMember","requestUpdate","activeBranchId","getUserId","isNaN","getGenders","getMember","getOrganizationType","expiration_date","expired","pageId","viewType","header","content","undefined","_data","DATA","JSON","stringify","isArray","displayMainSectionBtn","displayEditableSectionBtn","displayCertificationSectionBtn","displayContactPersonSectionBtn","getMainEditableCertificationContactPersonSection","mainSectionFormBtn","setAttribute","editableSectionFormBtn","removeAttribute","certificationSectionFormBtn","contactPersonSectionFormBtn","organizationTypeSelectAction","businessRegisteredSwitchAction","mainForm","editableForm","certificationForm","contactPersonForm","bio","organizationName","organizationType","selectedOrganizationType","organizationPhone","organizationEmail","referenceId","editable","registrationDate","__TO_DATE","Date","dateOfIncorporation","toLocaleDateString","day","month","year","formatMatcher","split","join","certification","businessRegistered","selectedBusinessRegistration","submitCertificateForm","certificates","certificate","i","attachment","deleteCertificate","contact_person_info","contactPersonGender","contactPersonPhone","contactPersonEmail","_this","querySelectorAll","_selection","addEventListener","evt","currentTarget","_switch","isSelected","setInterval","_memberId","base64","certificateId","getAttribute","http","https_swal_error_format","postForm","DELETE_MembershipOrganizationCertificateUsers","branchId","_networkResponse","__genders","new_data","GET_MemberGroupingsOrganizationTypes","__organizationTypes","submitType","_handleMultitpleSubmitFormSelectors","handleMultitpleSubmitFormSelectors","handle","reset","POST_MembershipOrganizationCertificateUser","form","hasAttribute","formSubmitType","toString","Boolean","PdbMembershipUpdateViewPhoto","inputLabel","headTitle","currentImage","inputId","inputName","inputRequired","updateImageAction","input","fileUrl","URL","createObjectURL","fileSelector","previewer","innerHTML"],"sourceRoot":""}