{"version":3,"file":"../../production_public/assets/v2/prod-files/js/membership/members/all.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/education/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/marital/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/occupation/index.ts","webpack://webpackNumbers/./src/addons/network/members/status/profession/index.ts","webpack://webpackNumbers/./src/view/membership/members/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/download.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_EducationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/education'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MaritalStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/marital'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_OccupationStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/occupation'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ProfessionStatus<Account>(type: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-status/profession'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Account>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Account>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/branch/main.scss';\r\nimport \"@@assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/select';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallPaginResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport './select-member-type';\r\nimport '../../no_access/account_expired';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport '../../no_access/no_page_entry';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from './page__id';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { GroupModel, Convert as gmConvert } from '@@addons/interfaces/members/groupings/group/models';\r\nimport { SubGroupModel, Convert as sgmConvert } from '@@addons/interfaces/members/groupings/subgroup/models';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport { EducationStatusModel, Convert as esmConvert } from '@@addons/interfaces/members/user/status/education_status';\r\nimport { MaritalStatusModel, Convert as msmConvert } from '@@addons/interfaces/members/user/status/marital_status';\r\nimport { OccupationStatusModel, Convert as osmConvert } from '@@addons/interfaces/members/user/status/occupation_status';\r\nimport { ProfessionStatusModel, Convert as psmConvert } from '@@addons/interfaces/members/user/status/profession_status';\r\nimport { GET_EducationStatus } from '@@addons/network/members/status/education';\r\nimport { GET_MaritalStatus } from '@@addons/network/members/status/marital';\r\nimport { GET_OccupationStatus } from '@@addons/network/members/status/occupation';\r\nimport { GET_ProfessionStatus } from '@@addons/network/members/status/profession';\r\nimport { GET_MembershipUserDownload } from '@@addons/network/members/membership/users/download';\r\n\r\n\r\ntype filterSelectType = { id: number|\"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-members\")\r\nexport class PdbMembershipMembers extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  // @property({ type: String })\r\n  // private memberProfileEditBaseUrl: string = \"/member/update-profile?edit=\";\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: SubGroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public maritalStatusInfo: MaritalStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public occupationStatusInfo: OccupationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public professionStatusInfo: ProfessionStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public educationStatusInfo: EducationStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Boolean })\r\n  private downloadingFile: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  private __members: NetworkCallPaginResponse_I<MembershipMixedUserModel> = null;\r\n\r\n  public set _members(value: NetworkCallPaginResponse_I<MembershipMixedUserModel>) {\r\n    this.__members = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _members(): NetworkCallPaginResponse_I<MembershipMixedUserModel> {\r\n    return this.__members;\r\n  }\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => {\r\n      if (this._hasSetup !== null) {\r\n        return this._hasSetup = true;\r\n      }\r\n    });\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getGenders();\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n    await this.getMaritalStatus();\r\n    await this.getEducationStatus();\r\n    await this.getOccupationStatus();\r\n    await this.getProfessionStatus();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.view, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.downloadBtns}\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n  }\r\n\r\n  private get downloadBtns() {\r\n    return html`\r\n      <div class=\"flex mb-4\">\r\n        <mwc-button icon=\"download\" class=\"success mr-2\" \r\n          label=\"Download Excel File\" raised @click=\"${this.downloadMemberExcel}\">\r\n        </mwc-button> \r\n        ${this.downloadingFile? html`<mwc-circular-progress indeterminate></mwc-circular-progress>`: nothing}\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\",\r\n      filterNameId_maritalStatus = \"maritalStatus\",\r\n      filterNameId_occupationalStatus = \"occupationalStatus\",\r\n      filterNameId_educationalStatus = \"educationalStatus\",\r\n      filterNameId_professionStatus = \"professionStatus\";\r\n\r\n    let filterNameId_filter_genderVal: string = null,\r\n      filterNameId_filter_nameVal:string = null,\r\n      filterNameId_filter_identityVal: string = null,\r\n      filterNameId_memberTypeVal: string = null,\r\n      filterNameId_groupIdVal: string = null,\r\n      filterNameId_subgroupIdVal: string = null,\r\n      filterNameId_maritalStatusVal: string = null,\r\n      filterNameId_occupationalStatusVal: string = null,\r\n      filterNameId_educationalStatusVal: string = null,\r\n      filterNameId_professionStatusVal: string = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_filter_gender) {\r\n          filterNameId_filter_genderVal = value;\r\n        }\r\n        if (key === filterNameId_filter_name) {\r\n          filterNameId_filter_nameVal = value;\r\n        }\r\n        if (key === filterNameId_filter_identity) {\r\n          filterNameId_filter_identityVal = value;\r\n        }\r\n        if (key === filterNameId_memberType) {\r\n          filterNameId_memberTypeVal = value;\r\n        }\r\n        if (key === filterNameId_groupId) {\r\n          filterNameId_groupIdVal = value;\r\n        }\r\n        if (key === filterNameId_subgroupId) {\r\n          filterNameId_subgroupIdVal = value;\r\n        }\r\n        if (key === filterNameId_maritalStatus) {\r\n          filterNameId_maritalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_occupationalStatus) {\r\n          filterNameId_occupationalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_educationalStatus) {\r\n          filterNameId_educationalStatusVal = value;\r\n        }\r\n        if (key === filterNameId_professionStatus) {\r\n          filterNameId_professionStatusVal = value;\r\n        }\r\n      }\r\n    \r\n    const nameField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Name</h4>\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_name}\" id=\"${filterNameId_filter_name}\" label=\"Search By Name\" \r\n            value=\"${filterNameId_filter_nameVal === null ? \"\" : filterNameId_filter_nameVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const genderField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n          <mwc-select name=\"${filterNameId_filter_gender}\" id=\"${filterNameId_filter_gender}\" label=\"Select Gender\" outlined required>\r\n            ${this._genders.map((item) => {\r\n              // console.log({item});\r\n              if (filterNameId_filter_genderVal === null) {\r\n                return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_genderVal) === item.id) {\r\n                  return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const identifyField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Member ID</h4>\r\n          <mwc-textfield name=\"${filterNameId_filter_identity}\" id=\"${filterNameId_filter_identity}\" label=\"Search By Member ID\"\r\n            value=\"${filterNameId_filter_identityVal === null ? \"\" : filterNameId_filter_identityVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_memberTypeVal}\" \r\n            name=\"${filterNameId_memberType}\" id=\"${filterNameId_memberType}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n\r\n    const selectedGroupID = Number.isNaN(filterNameId_groupIdVal) ? 0 : Number(filterNameId_groupIdVal),\r\n      selectedSubGroupID = Number.isNaN(filterNameId_subgroupIdVal) ? 0 : Number(filterNameId_subgroupIdVal);\r\n    const groupsSubgroups = this.groupsSubgroups(selectedGroupID, selectedSubGroupID);\r\n    // console.log({groupsSubgroups});\r\n    \r\n    \r\n    const groupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <select-input name=\"groupId\" class=\"w-full\" id=\"groupId\" label=\"Select Group\"\r\n            .options=\"${groupsSubgroups.groups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const subGroupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Group</h4>\r\n          <select-input name=\"subgroupId\" class=\"w-full\" id=\"subgroupId\" label=\"Select Sub-Group\"\r\n            .options=\"${groupsSubgroups.subgroups}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const selectedMaritalStatusID = Number.isNaN(filterNameId_maritalStatusVal) ? 0 : Number(filterNameId_maritalStatusVal),\r\n      selectedOccupationalStatusID = Number.isNaN(filterNameId_occupationalStatusVal) ? 0 : Number(filterNameId_occupationalStatusVal),\r\n      selectedEducationalStatusID = Number.isNaN(filterNameId_educationalStatusVal) ? 0 : Number(filterNameId_educationalStatusVal),\r\n      selectedProfessionStatusID = Number.isNaN(filterNameId_professionStatusVal) ? 0 : Number(filterNameId_professionStatusVal);\r\n    \r\n    const MOPES = this.maritalOccupationalProfessionEducationalStatus(\r\n      selectedMaritalStatusID, selectedOccupationalStatusID, selectedEducationalStatusID, selectedProfessionStatusID\r\n    );\r\n    // console.log({MOPES});\r\n    \r\n    \r\n    const maritalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Marital Status</h4>\r\n          <select-input name=\"maritalStatus\" class=\"w-full\" id=\"maritalStatus\" label=\"Select Marital Status\"\r\n            .options=\"${MOPES.maritalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const occupationalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Occupational Status</h4>\r\n          <select-input name=\"occupationalStatus\" class=\"w-full\" id=\"occupationalStatus\" label=\"Select Occupational Status\"\r\n            .options=\"${MOPES.occupationalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const educationalStatusField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Educational Status</h4>\r\n          <select-input name=\"educationalStatus\" class=\"w-full\" id=\"educationalStatus\" label=\"Select Educational Status\"\r\n            .options=\"${MOPES.educationalStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const professionField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Profession Status</h4>\r\n          <select-input name=\"professionStatus\" class=\"w-full\" id=\"professionStatus\" label=\"Select Profession Status\"\r\n            .options=\"${MOPES.professionStatuses}\" outlined required>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${nameField} ${genderField} ${identifyField} ${memberCategoryField}\r\n              <div class=\"col-md-12 my-2\"><hr/></div>\r\n              ${groupField} ${subGroupField}\r\n              <div class=\"col-md-12 my-2\"><hr/></div>\r\n              ${maritalStatusField} ${occupationalStatusField} ${educationalStatusField} ${professionField}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private groupsSubgroups(selectedGroupID: number, selectedSubGroupID: number) {\r\n    type returnType = { groups: filterSelectType[], subgroups: filterSelectType[] };\r\n    let groups: filterSelectType[] = [{id: 0, name: \"Select Group Status\", isSelected: \"false\", selected: false}];\r\n    let subgroups: filterSelectType[] = [{id: 0, name: \"Select Sub-Group Status\", isSelected: \"false\", selected: false}];\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    \r\n\r\n    this._groups.forEach(_group => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedGroupID === _group.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const group: filterSelectType = {\r\n        id: _group.id, name: _group.group, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!groups.includes(group)) {\r\n        groups.push(group);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._subgroups\": this._subgroups})\r\n    this._subgroups.forEach(_subgroup => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedSubGroupID === _subgroup.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const subgroup: filterSelectType = {\r\n        id: _subgroup.id, name: `${_subgroup.groupID.group} => ${_subgroup.subgroup}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!subgroups.includes(subgroup)) {\r\n        subgroups.push(subgroup);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n    // console.log({\"groups-groups\": groups, \"subgroups-subgroups\": subgroups});\r\n\r\n    const _returnType: returnType = {\r\n      groups: groups, subgroups: subgroups,\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private maritalOccupationalProfessionEducationalStatus(selectedMaritalStatusID: number, selectedOccupationalStatusID: number, selectedEducationalStatusID: number, selectedProfessionStatusID: number, ) {\r\n    type returnType = { maritalStatuses: filterSelectType[], occupationalStatuses: filterSelectType[], educationalStatuses: filterSelectType[], professionStatuses: filterSelectType[] };\r\n    let maritalStatuses: filterSelectType[] = [{id: 0, name: \"Select Marital Status\", isSelected: \"false\", selected: false}];\r\n    let professionStatuses: filterSelectType[] = [{id: 0, name: \"Select Profession Status\", isSelected: \"false\", selected: false}];\r\n    let educationalStatuses: filterSelectType[] = [{id: 0, name: \"Select Education Status\", isSelected: \"false\", selected: false}];\r\n    let occupationalStatuses: filterSelectType[] = [{id: 0, name: \"Select Occupation Status\", isSelected: \"false\", selected: false}];    \r\n\r\n    this.maritalStatusInfo.forEach(_maritalStatus => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedMaritalStatusID === _maritalStatus.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const maritalStatus: filterSelectType = {\r\n        id: _maritalStatus.id, name: _maritalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!maritalStatuses.includes(maritalStatus)) {\r\n        maritalStatuses.push(maritalStatus);\r\n      }\r\n    });\r\n\r\n    this.professionStatusInfo.forEach(_professionStatus => {\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n        if (selectedProfessionStatusID === _professionStatus.id) {\r\n          isSelected = true;\r\n          isSelectedAlt = \"true\";\r\n        }\r\n      const professionStatus: filterSelectType = {\r\n        id: _professionStatus.id, name: _professionStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n  \r\n      if (!professionStatuses.includes(professionStatus)) {\r\n        professionStatuses.push(professionStatus);\r\n      }\r\n    });\r\n\r\n    this.educationStatusInfo.forEach(_educationalStatus => {\r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (selectedEducationalStatusID === _educationalStatus.id) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const educationalStatus: filterSelectType = {\r\n        id: _educationalStatus.id, name: _educationalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n    \r\n      if (!educationalStatuses.includes(educationalStatus)) {\r\n        educationalStatuses.push(educationalStatus);\r\n      }\r\n    });\r\n\r\n    this.occupationStatusInfo.forEach(_occupationalStatus => {\r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (selectedOccupationalStatusID === _occupationalStatus.id) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const occupationalStatus: filterSelectType = {\r\n        id: _occupationalStatus.id, name: _occupationalStatus.name, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n      \r\n      if (!occupationalStatuses.includes(occupationalStatus)) {\r\n        occupationalStatuses.push(occupationalStatus);\r\n      }\r\n    });\r\n\r\n    const _returnType: returnType = {\r\n      maritalStatuses: maritalStatuses, occupationalStatuses: occupationalStatuses,\r\n      educationalStatuses: educationalStatuses, professionStatuses: professionStatuses\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    // const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    // let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user?branchId=\" + branchId + \"&memberType=\" + memberType + \"&order__by=firstname&datatable_plugin\";\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/user?branchId=\" + branchId + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_memberType = \"memberType\",\r\n      filterNameId_groupId = \"groupId\",\r\n      filterNameId_subgroupId = \"subgroupId\",\r\n      filterNameId_maritalStatus = \"maritalStatus\",\r\n      filterNameId_occupationalStatus = \"occupationalStatus\",\r\n      filterNameId_educationalStatus = \"educationalStatus\",\r\n      filterNameId_professionStatus = \"professionStatus\";\r\n\r\n    let newObject:any = {};\r\n    // for (const key in _urlQueryParams) {\r\n    //   let value = Number(_urlQueryParams[key]);\r\n    //   if (!Number.isNaN(value) && (value !== 0)) {\r\n    //     // console.log({value, });\r\n        \r\n    //     newObject[key] = value;\r\n    //   }\r\n    // }\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_gender) || (key === filterNameId_filter_name)\r\n        || (key === filterNameId_filter_identity) || (key === filterNameId_memberType)\r\n        || (key === filterNameId_groupId) || (key === filterNameId_subgroupId)\r\n        || (key === filterNameId_maritalStatus) || (key === filterNameId_occupationalStatus)\r\n        || (key === filterNameId_educationalStatus) || (key === filterNameId_professionStatus)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n\r\n        if ((key === filterNameId_groupId) || (key === filterNameId_subgroupId)\r\n          || (key === filterNameId_maritalStatus) || (key === filterNameId_occupationalStatus)\r\n          || (key === filterNameId_educationalStatus) || (key === filterNameId_professionStatus)) {\r\n          // console.log({value, });\r\n          if (value === \"0\") {\r\n            newObject[key] = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!(filterNameId_memberType in newObject)) {\r\n      newObject[filterNameId_memberType] = \"1\";\r\n    }\r\n\r\n    // console.log({\"newObject-newObject\": newObject});\r\n    \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<any>();\r\n    let __groups: GroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // console.log({\"_networkResponse.response.data\": _networkResponse.response.data});\r\n\r\n        const DATA: GroupModel[] = _networkResponse.response.data.map((group: any) => gmConvert.toGroupModel(JSON.stringify(group)));\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupModel> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n  }\r\n\r\n  private async getSubGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<any>();\r\n    let __subgroups: SubGroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: SubGroupModel[] = _networkResponse.response.data.map((subgroup: any) => sgmConvert.toSubGroupModel(JSON.stringify(subgroup)));\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<SubGroupModel> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n  }\r\n  \r\n  private async getMaritalStatus() {\r\n    const _networkResponse = await GET_MaritalStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _maritalStatusInfo: MaritalStatusModel[] = [\r\n      {name: \"Select Marital Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _maritalStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: MaritalStatusModel[] = data.map(value => {\r\n          return msmConvert.toMaritalStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _maritalStatusInfo = [..._maritalStatusInfo, ...DATA];\r\n      }\r\n    }\r\n    \r\n    const new_data: Array<MaritalStatusModel> = [];\r\n    new_data.push(...this.maritalStatusInfo, ..._maritalStatusInfo);\r\n    this.maritalStatusInfo = new_data;\r\n  }\r\n\r\n  private async getOccupationStatus() {\r\n    const _networkResponse = await GET_OccupationStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _occupationStatusInfo: OccupationStatusModel[] = [\r\n      {name: \"Select Occupation Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _occupationStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: OccupationStatusModel[] = data.map(value => {\r\n          return osmConvert.toOccupationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _occupationStatusInfo = [..._occupationStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<OccupationStatusModel> = [];\r\n    new_data.push(...this.occupationStatusInfo, ..._occupationStatusInfo);\r\n    this.occupationStatusInfo = new_data;\r\n  }\r\n\r\n  private async getProfessionStatus() {\r\n    const _networkResponse = await GET_ProfessionStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _professionStatusInfo: ProfessionStatusModel[] = [\r\n      {name: \"Select Profession Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _professionStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ProfessionStatusModel[] = data.map(value => {\r\n          return psmConvert.toProfessionStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _professionStatusInfo = [..._professionStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ProfessionStatusModel> = [];\r\n    new_data.push(...this.professionStatusInfo, ..._professionStatusInfo);\r\n    this.professionStatusInfo = new_data;\r\n  }\r\n\r\n  private async getEducationStatus() {\r\n    const _networkResponse = await GET_EducationStatus<any>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let _educationStatusInfo: EducationStatusModel[] = [\r\n      {name: \"Select Education Status\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      _educationStatusInfo.push({ id: 0, name: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: EducationStatusModel[] = data.map(value => {\r\n          return esmConvert.toEducationStatusModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        _educationStatusInfo = [..._educationStatusInfo, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<EducationStatusModel> = [];\r\n    new_data.push(...this.educationStatusInfo, ..._educationStatusInfo);\r\n    this.educationStatusInfo = new_data;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            // console.log({ data, type, member });\r\n            const ID = base64Encode(String(member.id), true);\r\n            return `<div class=\"flex items-center whitespace-normal mb-0\">\r\n                <user-profile-photo class=\"w-16 h-16 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${__this.memberProfileBaseUrl}${ID}\" type=\"member\"\r\n                  url=\"${member.profilePicture}\" size=\"16\"></user-profile-photo>\r\n                <p class=\"ml-1 mb-0\">${member.firstname} ${member.middlename} ${member.surname}</p>\r\n              </div>\r\n              <span class=\"whitespace-normal shadow p-1\">\r\n                <i class=\"ml-1\"><b>ID: </b> ${member.identification}</i>\r\n              </span>`;\r\n          },\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'firstname',\r\n          render: function (data: any, type: any, member: MembershipMixedUserModel) {\r\n            member = mmumConvert.toMembershipMixedUserModel(JSON.stringify(member))\r\n            const ID = base64Encode(String(member.id), true);\r\n            // return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n            //   <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n            //     href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            //   <!-- <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n            //     href=\"${__this.memberProfileEditBaseUrl}${ID}\" label=\"Edit\"></link-button> -->\r\n            // </div>`;\r\n            return `<div class=\"flex flex-col md:flex-row items-center whitespace-normal\">\r\n              <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n                href=\"${__this.memberProfileBaseUrl}${ID}\" label=\"Open\"></link-button>\r\n            </div>`;\r\n          },\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n      },\r\n      \"responsive\": true,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async downloadMemberExcel() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n\r\n    let URL = \"?branchId=\" + branchId + \"&order__by=firstname\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    this.downloadingFile = true;\r\n    await GET_MembershipUserDownload<any>(URL);\r\n    this.downloadingFile = false;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http_download } from \"@@addons/functions/https/download\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipUserDownload<Type>(url_params: string = \"\",) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/download-excel' + (url_params),\r\n    HTTP = await http_download(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return HTTP;\r\n    // return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    // console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}"],"names":["root","factory","exports","module","define","amd","self","GenericGenderInfo_S","data","id","Number","name","GET_GenericGender","type","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","GET_EducationStatus","url_params","GET_MaritalStatus","GET_OccupationStatus","GET_ProfessionStatus","PdbMembershipMembers","constructor","super","memberProfileBaseUrl","_genders","_groups","_subgroups","maritalStatusInfo","occupationStatusInfo","professionStatusInfo","educationStatusInfo","_activeBranchId","downloadingFile","_memberType","_hasSetup","__members","_members","value","this","requestUpdate","connectedCallback","then","activeBranchId","filterBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGenders","getGroups","getSubGroups","getMaritalStatus","getEducationStatus","getOccupationStatus","getProfessionStatus","disconnectedCallback","render","expiration_date","expired","pageId","viewType","toggleFilterFields","filterForm","downloadBtns","table","firstUpdated","downloadMemberExcel","returnHtml","_urlQueryParams","filterNameId_filter_gender","filterNameId_filter_name","filterNameId_filter_identity","filterNameId_memberType","filterNameId_filter_genderVal","filterNameId_filter_nameVal","filterNameId_filter_identityVal","filterNameId_memberTypeVal","filterNameId_groupIdVal","filterNameId_subgroupIdVal","filterNameId_maritalStatusVal","filterNameId_occupationalStatusVal","filterNameId_educationalStatusVal","filterNameId_professionStatusVal","key","String","nameField","genderField","map","item","identifyField","memberCategoryField","selectedGroupID","isNaN","selectedSubGroupID","groupsSubgroups","groupField","groups","subGroupField","subgroups","selectedMaritalStatusID","selectedOccupationalStatusID","selectedEducationalStatusID","selectedProfessionStatusID","MOPES","maritalOccupationalProfessionEducationalStatus","maritalStatusField","maritalStatuses","occupationalStatusField","occupationalStatuses","educationalStatusField","educationalStatuses","professionField","professionStatuses","clear_filter","submit","isSelected","selected","forEach","_group","isSelectedAlt","group","includes","push","_subgroup","subgroup","groupID","_maritalStatus","maritalStatus","_professionStatus","professionStatus","_educationalStatus","educationalStatus","_occupationalStatus","occupationalStatus","__tableHeaders","title","__tableBody","__tableFoot","branchId","URL","urlQueryString","__dataTable","ajaxHeader","filterNameId_groupId","filterNameId_subgroupId","filterNameId_maritalStatus","filterNameId_occupationalStatus","filterNameId_educationalStatus","filterNameId_professionStatus","newObject","_urlQueryParamsJoin","length","_networkResponse","__genders","response","success","new_data","__groups","date","Date","DATA","JSON","stringify","__subgroups","_maritalStatusInfo","_occupationStatusInfo","_professionStatusInfo","_educationStatusInfo","e","__this","dataSrc","apiType","member","ID","base64","profilePicture","firstname","middlename","surname","identification","orderable","targets","className","checkboxes","selectRow","aoData","buttons","select","GET_MembershipUserDownload","createRenderRoot","styles","Element","HTMLFormElement","Array","Boolean"],"sourceRoot":""}