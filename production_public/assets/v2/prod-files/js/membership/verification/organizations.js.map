{"version":3,"file":"../../production_public/assets/v2/prod-files/js/membership/verification/organizations.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/members/user/organization_model/index.ts","webpack://webpackNumbers/./src/view/membership/verification/organizations/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","// To parse this data:\n//\n//   import { Convert, MembershipOrganizationUserModel } from \"./file\";\n//\n//   const membershipOrganizationUserModel = Convert.toMembershipOrganizationUserModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface MembershipOrganizationUserModel {\n    id?:                  number;\n    clientID?:            number;\n    organizationName?:    string;\n    contactPersonName?:   string;\n    organizationType?:    OrganizationType;\n    businessRegistered?:  boolean;\n    organizationPhone?:   string;\n    organizationEmail?:   string;\n    contactPersonGender?: number;\n    contactPersonPhoto?:  string;\n    dateOfIncorporation?: Date;\n    logo?:                string;\n    contactPersonPhone?:  string;\n    contactPersonEmail?:  string;\n    countryOfBusiness?:   string;\n    stateProvince?:       string;\n    region?:              number;\n    district?:            number;\n    constituency?:        number;\n    electoralArea?:       number;\n    community?:           string;\n    digitalAddress?:      string;\n    level?:               number;\n    status?:              number;\n    accountType?:         number;\n    memberType?:          number;\n    date?:                Date;\n    lastLogin?:           Date;\n    referenceID?:         string;\n    branchID?:            number;\n    certificates?:        null | Certificate[];\n}\n\nexport interface Certificate {\n    id?:         number;\n    memberID?:   number;\n    attachment?: Attachment;\n    date?:       Date;\n}\n\nexport interface Attachment {\n    id?:              number;\n    clientID?:        number;\n    attachment?:      string;\n    filename?:        string;\n    source?:          string;\n    size?:            string;\n    folderID?:        FolderID;\n    fileDescription?: string;\n    createdBy?:       number;\n    updatedBy?:       number;\n    updateDate?:      Date;\n    archived?:        boolean;\n    archivedBy?:      number;\n    archivedDate?:    Date;\n    date?:            Date;\n}\n\nexport interface FolderID {\n    id?:           number;\n    parentFolder?: number;\n    clientID?:     number;\n    branchID?:     number;\n    folder?:       string;\n    folderType?:   number;\n    createdBy?:    number;\n    updatedBy?:    number;\n    updateDate?:   Date;\n    date?:         Date;\n}\n\nexport interface OrganizationType {\n    id?:         number;\n    memberID?:   number;\n    clientID?:   number;\n    type?:       string;\n    createdBy?:  number;\n    updatedBy?:  number;\n    updateDate?: Date;\n    date?:       Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toMembershipOrganizationUserModel(json: string): MembershipOrganizationUserModel {\n        // console.log({\"json\": json})\n        return cast(JSON.parse(json), r(\"MembershipOrganizationUserModel\"));\n    }\n\n    public static membershipOrganizationUserModelToJson(value: MembershipOrganizationUserModel): string {\n        return JSON.stringify(uncast(value, r(\"MembershipOrganizationUserModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        m(\"\")\n        console.log(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    console.log(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    // console.log({\"jsonToJSProps(typ\": typ})\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    // console.log({\"val\": val, \"typ\": typ, \"getProps\": getProps, \"key\": key})\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    // console.log({\"val\": val, \"typ\": typ})\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"MembershipOrganizationUserModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"organizationName\", js: \"organizationName\", typ: u(null, \"\") },\n        { json: \"contactPersonName\", js: \"contactPersonName\", typ: u(null, \"\") },\n        { json: \"organizationType\", js: \"organizationType\", typ: u(null, r(\"OrganizationType\")) },\n        { json: \"businessRegistered\", js: \"businessRegistered\", typ: u(null, true) },\n        { json: \"organizationPhone\", js: \"organizationPhone\", typ: u(null, \"\") },\n        { json: \"organizationEmail\", js: \"organizationEmail\", typ: u(null, \"\") },\n        { json: \"contactPersonGender\", js: \"contactPersonGender\", typ: u(null, 0) },\n        { json: \"contactPersonPhoto\", js: \"contactPersonPhoto\", typ: u(null, \"\") },\n        { json: \"dateOfIncorporation\", js: \"dateOfIncorporation\", typ: u(null, Date) },\n        { json: \"logo\", js: \"logo\", typ: u(null, \"\") },\n        { json: \"contactPersonPhone\", js: \"contactPersonPhone\", typ: u(null, \"\") },\n        { json: \"contactPersonEmail\", js: \"contactPersonEmail\", typ: u(null, \"\") },\n        { json: \"countryOfBusiness\", js: \"countryOfBusiness\", typ: u(null, \"\") },\n        { json: \"stateProvince\", js: \"stateProvince\", typ: u(null, \"\") },\n        { json: \"region\", js: \"region\", typ: u(null, 0) },\n        { json: \"district\", js: \"district\", typ: u(null, 0) },\n        { json: \"constituency\", js: \"constituency\", typ: u(null, 0) },\n        { json: \"electoralArea\", js: \"electoralArea\", typ: u(null, 0) },\n        { json: \"community\", js: \"community\", typ: u(null, \"\") },\n        { json: \"digitalAddress\", js: \"digitalAddress\", typ: u(null, \"\") },\n        { json: \"level\", js: \"level\", typ: u(null, 0) },\n        { json: \"status\", js: \"status\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n        { json: \"memberType\", js: \"memberType\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"last_login\", js: \"lastLogin\", typ: u(null, Date) },\n        { json: \"referenceId\", js: \"referenceID\", typ: u(null, \"\") },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"certificates\", js: \"certificates\", typ: u(null, a(r(\"Certificate\"))) },\n    ], false),\n    \"Certificate\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"memberId\", js: \"memberID\", typ: u(null, 0) },\n        { json: \"attachment\", js: \"attachment\", typ: u(null, r(\"Attachment\")) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n    \"Attachment\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"attachment\", js: \"attachment\", typ: u(null, \"\") },\n        { json: \"filename\", js: \"filename\", typ: u(null, \"\") },\n        { json: \"source\", js: \"source\", typ: u(null, \"\") },\n        { json: \"size\", js: \"size\", typ: u(null, \"\") },\n        { json: \"folderId\", js: \"folderID\", typ: u(null, r(\"FolderID\")) },\n        { json: \"fileDescription\", js: \"fileDescription\", typ: u(null, \"\") },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n        { json: \"archived\", js: \"archived\", typ: u(null, true) },\n        { json: \"archivedBy\", js: \"archivedBy\", typ: u(null, 0) },\n        { json: \"archivedDate\", js: \"archivedDate\", typ: u(null, Date) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n    \"FolderID\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"parentFolder\", js: \"parentFolder\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"folder\", js: \"folder\", typ: u(null, \"\") },\n        { json: \"folderType\", js: \"folderType\", typ: u(null, 0) },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n    \"OrganizationType\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"memberId\", js: \"memberID\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"type\", js: \"type\", typ: u(null, \"\") },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n};\n","import '@@assets/styles/views/branch/main.scss';\r\nimport \"@@assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/select';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsGetAll, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport '../../members/select-member-type';\r\nimport '../../../no_access/account_expired';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport '../../../no_access/no_page_entry';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../page__id';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { GroupModel, Convert as gmConvert } from '@@addons/interfaces/members/groupings/group/models';\r\nimport { SubGroupModel, Convert as sgmConvert } from '@@addons/interfaces/members/groupings/subgroup/models';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport { ClientBranchModel, Convert as cbmConvert } from '@@addons/interfaces/clients/branches/model';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { QueryOptions } from 'select2';\r\nimport { MembershipOrganizationUserModel, Convert as MouMconvert } from '@@addons/interfaces/members/user/organization_model';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { MembershipVerificationModel, Convert as mvmConvert } from '@@addons/interfaces/members/verification';\r\nimport { getDate } from '@@addons/functions/date_time/date';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { POST_MemberVerification } from '@@addons/network/members/membership/verification/post';\r\nimport { POST_MemberVerificationBulk } from '@@addons/network/members/membership/verification/post_bulk';\r\nimport { DELETE_MemberVerification } from '@@addons/network/members/membership/verification/delete';\r\nimport { DELETE_MemberVerificationBulk } from '@@addons/network/members/membership/verification/delete_bulk';\r\nimport { GET_MembershipUserIds } from '@@addons/network/members/membership/users/members';\r\nimport { MembershipMixedUserModel, Convert as mmumConvert } from '@@addons/interfaces/members/user/mixed';\r\nimport { until } from 'lit/directives/until.js';\r\n\r\n\r\ntype filterSelectType = { id: number | \"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-organization-verification\")\r\nexport class PdbMembershipOrganizationVerification extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  // @property({ type: String })\r\n  // private memberProfileEditBaseUrl: string = \"/member/update-profile?edit=\";\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: SubGroupModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public _branches: ClientBranchModel[] = [];\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _selectedMembersCalled: boolean = false;\r\n\r\n  @property({ type: Array })\r\n  private _selectedMembersNames: TemplateResult<1>[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 2;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });        \r\n      }\r\n    }\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getBranches();\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({ pageId: PAGE__IDS.access, viewType: \"View\" }, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\" filter-section-context=\"btn\"\r\n          @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      },\r\n    });\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_branchId = \"filter_branchId\",\r\n      filterNameId_filter_search = \"filter_search\",\r\n      filterNameId_filter_memberCategoryId = \"filter_memberCategoryId\",\r\n      filterNameId_filter_groupIds = \"filter_groupIds\",\r\n      filterNameId_filter_subGroupIds = \"filter_subGroupIds\",\r\n      filterNameId_filter_memberIds = \"filter_memberIds\",\r\n      // filterNameId_filter_verificationIds = \"filter_verificationIds\",\r\n      filterNameId_filter_verification = \"filter_verification\";\r\n    // filter_accountType:2\r\n    // filter_verification:true\r\n\r\n    let filterNameId_filter_branchIdVal: string[] = null,\r\n      filterNameId_filter_searchVal: string = null,\r\n      filterNameId_filter_memberCategoryIdVal: string[] = null,\r\n      filterNameId_filter_groupIdsVal: string[] = null,\r\n      filterNameId_filter_subGroupIdsVal: string[] = null,\r\n      filterNameId_filter_memberIdsVal: string[] = null,\r\n      // filterNameId_filter_verificationIdsVal: string = null,\r\n      filterNameId_filter_verificationVal: string = null;\r\n    // console.log({_urlQueryParams, \"urlQueryParamsGetAll('groupId[]')\": urlQueryParamsGetAll('groupId[]')});\r\n\r\n    for (const key in _urlQueryParams) {\r\n      // console.log({\"`--------${key}--------`\": `--------${key}--------`});\r\n\r\n      let value = String(_urlQueryParams[key]);\r\n      value = value === \"\" ? null : value;\r\n      if (key === `${filterNameId_filter_branchId}[]`) {\r\n        // filterNameId_filter_branchIdVal = value;\r\n        filterNameId_filter_branchIdVal = urlQueryParamsGetAll(`${filterNameId_filter_branchId}[]`);\r\n      }\r\n      if (key === filterNameId_filter_search) {\r\n        filterNameId_filter_searchVal = value;\r\n      }\r\n      if (key === `${filterNameId_filter_memberCategoryId}[]`) {\r\n        // filterNameId_filter_memberCategoryIdVal = value;\r\n        // console.log({filterNameId_filter_memberCategoryId});\r\n\r\n        filterNameId_filter_memberCategoryIdVal = urlQueryParamsGetAll(`${filterNameId_filter_memberCategoryId}[]`);\r\n      }\r\n      if (key === `${filterNameId_filter_groupIds}[]`) {\r\n        // filterNameId_filter_groupIdsVal = value;\r\n        filterNameId_filter_groupIdsVal = urlQueryParamsGetAll(`${filterNameId_filter_groupIds}[]`);\r\n      }\r\n      if (key === `${filterNameId_filter_subGroupIds}[]`) {\r\n        // filterNameId_filter_subGroupIdsVal = value;\r\n        filterNameId_filter_subGroupIdsVal = urlQueryParamsGetAll(`${filterNameId_filter_subGroupIds}[]`);\r\n      }\r\n      if (key === `${filterNameId_filter_memberIds}[]`) {\r\n        // filterNameId_filter_memberIdsVal = value;\r\n        filterNameId_filter_memberIdsVal = urlQueryParamsGetAll(`${filterNameId_filter_memberIds}[]`);\r\n        // console.log({filterNameId_filter_memberIdsVal});\r\n\r\n      }\r\n      // if (key === filterNameId_filter_verificationIds) {\r\n      //   filterNameId_filter_verificationIdsVal = value;\r\n      // }\r\n      if (key === filterNameId_filter_verification) {\r\n        filterNameId_filter_verificationVal = value;\r\n      }\r\n    }\r\n\r\n    const searchField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search By Name/ E-mail/ Phone Number</h4>\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_search}\" id=\"${filterNameId_filter_search}\"\r\n            label=\"Search By Name/ E-mail/ Phone Number\"\r\n            value=\"${filterNameId_filter_searchVal === null ? \"\" : filterNameId_filter_searchVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n\r\n    const selectedGroupIDs = Array.isArray(filterNameId_filter_groupIdsVal) ? filterNameId_filter_groupIdsVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [],\r\n      selectedSubGroupIDs = Array.isArray(filterNameId_filter_subGroupIdsVal) ? filterNameId_filter_subGroupIdsVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [],\r\n      selectedBranchIDs = Array.isArray(filterNameId_filter_branchIdVal) ? filterNameId_filter_branchIdVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [];\r\n    const groupsSubgroupsBranches = this.groupsSubgroupsBranches(selectedGroupIDs, selectedSubGroupIDs, selectedBranchIDs);\r\n\r\n    const branchField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Branches</h4>\r\n          <select-input name=\"${filterNameId_filter_branchId}\" class=\"w-full\" id=\"${filterNameId_filter_branchId}\"\r\n            label=\"Select Branches\" .options=\"${groupsSubgroupsBranches.branches}\" outlined required multiple>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n    const verificationField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Verification Status</h4>\r\n          <mwc-select name=\"${filterNameId_filter_verification}\" id=\"${filterNameId_filter_verification}\"\r\n            label=\"Select Verification Status\" outlined required>\r\n            <mwc-list-item value=\"\">Select Verification Status</mwc-list-item>\r\n            <mwc-list-item value=\"1\"\r\n              ?selected=\"${Number.isNaN(filterNameId_filter_verificationVal) ? false : Number(filterNameId_filter_verificationVal) === 1}\">\r\n              Verified</mwc-list-item>\r\n            <mwc-list-item value=\"2\"\r\n              ?selected=\"${Number.isNaN(filterNameId_filter_verificationVal) ? false : Number(filterNameId_filter_verificationVal) === 2}\">\r\n              Un-Verified</mwc-list-item>\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryIDs = Array.isArray(filterNameId_filter_memberCategoryIdVal) ? filterNameId_filter_memberCategoryIdVal.map(item => Number.isNaN(item) ? 0 : Number(item)) : [];\r\n    // console.log({memberCategoryIDs, filterNameId_filter_memberCategoryIdVal});\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Member Categories</h4>\r\n          <pdb-membership-select-member-type .defaultValues=\"${memberCategoryIDs}\"\r\n            name=\"${filterNameId_filter_memberCategoryId}\" id=\"${filterNameId_filter_memberCategoryId}\"\r\n            label=\"Select Member Category\" outlined required multiple material=\"false\">\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n    // console.log({groupsSubgroupsBranches});\r\n\r\n    const groupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Groups</h4>\r\n          <select-input name=\"${filterNameId_filter_groupIds}\" class=\"w-full\" id=\"${filterNameId_filter_groupIds}\"\r\n            label=\"Select Groups\" .options=\"${groupsSubgroupsBranches.groups}\" outlined required multiple>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n    const subGroupField = html`\r\n      <div class=\"col-xl-6 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Groups</h4>\r\n          <select-input name=\"${filterNameId_filter_subGroupIds}\" class=\"w-full\" id=\"${filterNameId_filter_subGroupIds}\"\r\n            label=\"Select Sub-Groups\" .options=\"${groupsSubgroupsBranches.subgroups}\" outlined required multiple>\r\n          </select-input>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberListField = html`\r\n      <div class=\"col-xl-12 col-md-12\">\r\n        <div class=\"form-input-container !block\">\r\n          ${this.memberListField}\r\n          <div class=\"flex flex-wrap gap-2 p-1 my-2 shadow\">\r\n            ${until(this.getMembersByIds(filterNameId_filter_memberIdsVal?.map(memberId => Number.isNaN(memberId) ? 0 :\r\n      Number(memberId))), html`<span>Loading...</span>`)}\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n    returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      ${searchField} ${verificationField} ${memberCategoryField} ${branchField}\r\n      <div class=\"col-md-12 my-2\">\r\n        <hr />\r\n      </div>\r\n      ${groupField} ${subGroupField} ${memberListField}\r\n      <div class=\"col-xl-12 col-md-10\">\r\n        <div class=\"form-input-container mt-1\">\r\n          <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n          <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  async getMembersByIds(memberIds: Array<Number>) {\r\n    memberIds = memberIds === null ? [] : memberIds;\r\n    // console.log({memberIds, \"this._selectedMembersCalled\": this._selectedMembersCalled});\r\n\r\n    let _members: MembershipMixedUserModel[] = [];\r\n\r\n    if (this._selectedMembersCalled === false) {\r\n      this._selectedMembersCalled = true;\r\n      const _networkResponse = await GET_MembershipUserIds<any>(memberIds);\r\n\r\n      if (_networkResponse !== null) {\r\n        // @ts-ignore\r\n        // console.log({\"_networkResponse.data.paginResponse\": _networkResponse.data});\r\n\r\n        if ((_networkResponse.response.success === true)) {\r\n          const _DATAS = _networkResponse.response.data;\r\n          // console.log({_DATAS});\r\n\r\n          const DATA: MembershipMixedUserModel[] = _DATAS.results?.map((member: any) => mmumConvert.toMembershipMixedUserModel(JSON.stringify(member)));\r\n          // console.log({DATA});\r\n          _members = DATA;\r\n        }\r\n      }\r\n      const _selectedMembersNames = _members?.map(member => {\r\n        return html`\r\n          <span\r\n            class=\"flex h-fit items-center gap-1 font-semibold bg-blue-100 text-blue-800 dark:bg-blue-200 dark:text-blue-800 group-hover:bg-blue-200 dark:group-hover:bg-blue-300 rounded-full p-1.5 text-xs\">\r\n            <span>${member.organizationName}</span>\r\n          </span>\r\n        `;\r\n      });\r\n      this._selectedMembersNames = _selectedMembersNames;\r\n    }\r\n    return this._selectedMembersNames;\r\n  }\r\n\r\n  branchChange(e: Event) {\r\n    const accountType = this.accountType;\r\n    this.accountType = 2;\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value) ? 0 : Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n  }\r\n\r\n  private groupsSubgroupsBranches(selectedGroupIDs: Array<number>, selectedSubGroupIDs: Array<number>, selectedBranchIDs: Array<number>) {\r\n    type returnType = { groups: filterSelectType[], subgroups: filterSelectType[], branches: filterSelectType[] };\r\n    let groups: filterSelectType[] = [{ id: 0, name: \"Select Groups\", isSelected: \"false\", selected: false }];\r\n    let subgroups: filterSelectType[] = [{ id: 0, name: \"Select Sub-Groups\", isSelected: \"false\", selected: false }];\r\n    let branches: filterSelectType[] = [{ id: 0, name: \"Select Branches\", isSelected: \"false\", selected: false }];\r\n\r\n    // console.log({\"this._groups\": this._groups, \"this.memberGroups\": this.memberGroups});\r\n    // console.log({\"this._subgroups\": this._subgroups, \"this.memberSubGroups\": this.memberSubGroups});\r\n\r\n\r\n    this._groups.forEach(_group => {\r\n      let thisIsSelected = false;\r\n      selectedGroupIDs.forEach(selectedGroupID => {\r\n        if (selectedGroupID === _group.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const group: filterSelectType = {\r\n        id: _group.id, name: _group.group, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!groups.includes(group)) {\r\n        groups.push(group);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._subgroups\": this._subgroups})\r\n    this._subgroups.forEach(_subgroup => {\r\n      let thisIsSelected = false;\r\n      selectedSubGroupIDs.forEach(selectedSubGroupID => {\r\n        if (selectedSubGroupID === _subgroup.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const subgroup: filterSelectType = {\r\n        id: _subgroup.id, name: `${_subgroup.groupID.group} => ${_subgroup.subgroup}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!subgroups.includes(subgroup)) {\r\n        subgroups.push(subgroup);\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._branches\": this._branches, selectedBranchIDs})\r\n    this._branches.forEach(_branch => {\r\n      let thisIsSelected = false;\r\n      selectedBranchIDs.forEach(selectedBranchID => {\r\n        if (selectedBranchID === _branch.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n\r\n      let isSelected: boolean = false,\r\n        isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const branch: filterSelectType = {\r\n        id: _branch.id, name: `${_branch.name}`,\r\n        isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n\r\n      if (!branches.includes(branch)) {\r\n        branches.push(branch);\r\n      }\r\n    });\r\n\r\n    const _returnType: returnType = {\r\n      groups: groups, subgroups: subgroups, branches\r\n    }\r\n    return _returnType;\r\n  }\r\n\r\n  get memberListField() {\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n    if (Number(this.accountType) === 2) {\r\n      return this.organizationMemberList;\r\n    } else {\r\n      return this.organizationMemberList;\r\n    }\r\n  }\r\n\r\n  get organizationMemberList() {\r\n    this.startSearchPage = 0;\r\n\r\n    function processClientUserSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n      params.page = params.page || 0;\r\n      const TOTAL = data.count,\r\n        RESULTS = data.results,\r\n        SELECTOR = document.querySelector('[id=\"filter_memberIds\"]');\r\n      // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n      let processedData: { id: number; text: string; }[] = [];\r\n      if (TOTAL > 0) {\r\n        var _data = RESULTS;\r\n        // console.log({ \"smbfl-_data\": _data });\r\n        for (let i = 0; i < _data.length; i++) {\r\n          const item = _data[i];\r\n          // console.log({\"typeof\": typeof item, \"item-item\": item });\r\n          const member: MembershipOrganizationUserModel = MouMconvert.toMembershipOrganizationUserModel(JSON.stringify(item));\r\n          // console.log({ \"member-member\": member });\r\n\r\n          const id = member.id;\r\n          const organizationName = `${member.organizationName}`;\r\n          const _new = {\r\n            id: id,\r\n            text: organizationName,\r\n          }\r\n          if (!processedData.includes(_new)) {\r\n            processedData.push(_new)\r\n          }\r\n        }\r\n      }\r\n      // console.log({ processedData });\r\n\r\n      return {\r\n        results: processedData,\r\n        total: TOTAL,\r\n        // @ts-ignore\r\n        totalShowing: SELECTOR.totalShowing,\r\n      };\r\n    }\r\n\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    // console.log({\"this.selectedBranch\": this.selectedBranch});\r\n\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <h4 class=\"font-semibold my-2\">Select Organization</h4>\r\n      <select-input class=\"w-100\" id=\"filter_memberIds\" name=\"filter_memberIds\" label=\"Select Organization\" multiple\r\n        .ajaxFetchProcessResponse=\"${processClientUserSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n        .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n        ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user-organization/search\"></select-input>\r\n    `;\r\n  }\r\n\r\n  private get table_header() {\r\n    return html`\r\n      <div class=\"flex flex-col p-2 mb-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4 pb-5\">\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <label class=\"flex justify-between items-center\">\r\n            <b>CHECK ALL: </b>\r\n            <input id=\"verification_info_all\" name=\"verification_info_all\" type=\"checkbox\"\r\n              class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n              @change=\"${this.check_all_verification}\" />\r\n          </label>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"success\" raised verification_info_all=\"activate\" @click=\"${this.activateMultipleMemberAction}\">\r\n            Activate All Selected</mwc-button>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"danger\" raised verification_info_all=\"deactivate\"\r\n            @click=\"${this.deactivateMultipleMemberAction}\">Deactivate All Selected</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get ajaxFetchUrlParams(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"branchId\", value: String(this.selectedBranch) }\r\n    ]\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member(s)', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    // const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"members/member-verification/members?branchId=\" + branchId + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n\r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      ${this.table_header}\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_branchId = \"filter_branchId\",\r\n      filterNameId_filter_search = \"filter_search\",\r\n      filterNameId_filter_memberCategoryId = \"filter_memberCategoryId\",\r\n      filterNameId_filter_groupIds = \"filter_groupIds\",\r\n      filterNameId_filter_subGroupIds = \"filter_subGroupIds\",\r\n      filterNameId_filter_memberIds = \"filter_memberIds\",\r\n      // filterNameId_filter_verificationIds = \"filter_verificationIds\",\r\n      filterNameId_filter_verification = \"filter_verification\";\r\n\r\n    let newObject: any = {};\r\n    // for (const key in _urlQueryParams) {\r\n    //   let value = Number(_urlQueryParams[key]);\r\n    //   if (!Number.isNaN(value) && (value !== 0)) {\r\n    //     // console.log({value, });\r\n\r\n    //     newObject[key] = value;\r\n    //   }\r\n    // }\r\n    let _branchIds: Array<string> = [],\r\n      _memberCategoryIds: Array<string> = [],\r\n      _groupIds: Array<string> = [],\r\n      _subGroupIds: Array<string> = [],\r\n      _memberIds: Array<string> = [];\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]),\r\n        branchId = `${filterNameId_filter_branchId}[]`,\r\n        memberCategoryId = `${filterNameId_filter_memberCategoryId}[]`,\r\n        groupIds = `${filterNameId_filter_groupIds}[]`,\r\n        subGroupIds = `${filterNameId_filter_subGroupIds}[]`,\r\n        memberIds = `${filterNameId_filter_memberIds}[]`;\r\n\r\n      if ((key === branchId) || (key === filterNameId_filter_search)\r\n        || (key === memberCategoryId) || (key === groupIds)\r\n        || (key === subGroupIds) || (key === memberIds)\r\n        || (key === filterNameId_filter_verification)) {\r\n        // console.log({value, });\r\n\r\n        newObject[key] = value;\r\n\r\n        if ((key === branchId) || (key === memberCategoryId)\r\n          || (key === groupIds) || (key === subGroupIds)\r\n          || (key === memberIds)) {\r\n          // console.log({value, });\r\n          _branchIds = urlQueryParamsGetAll(branchId),\r\n            _memberCategoryIds = urlQueryParamsGetAll(memberCategoryId),\r\n            _groupIds = urlQueryParamsGetAll(groupIds),\r\n            _subGroupIds = urlQueryParamsGetAll(subGroupIds),\r\n            _memberIds = urlQueryParamsGetAll(memberIds);\r\n        }\r\n\r\n        if (key === filterNameId_filter_verification) {\r\n          if (value !== \"1\" && value !== \"2\" && value !== \"true\" && value !== \"false\") {\r\n            delete newObject[key]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    newObject[\"filter_accountType\"] = 2;\r\n\r\n\r\n    // console.log({\"newObject-newObject\": newObject});\r\n    let new_params = ``;\r\n    _branchIds.forEach(_branchId => new_params += `&${filterNameId_filter_branchId}=${_branchId}`);\r\n    _memberCategoryIds.forEach(_memberCategoryId => new_params += `&${filterNameId_filter_memberCategoryId}=${_memberCategoryId}`);\r\n    _groupIds.forEach(_groupId => new_params += `&${filterNameId_filter_groupIds}=${_groupId}`);\r\n    _subGroupIds.forEach(_subGroupId => new_params += `&${filterNameId_filter_subGroupIds}=${_subGroupId}`);\r\n    _memberIds.forEach(_memberId => new_params += `&${filterNameId_filter_memberIds}=${_memberId}`);\r\n    \r\n\r\n    // console.log({new_params});\r\n    \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin + new_params;\r\n  }\r\n\r\n  private rowOneRender(verification: MembershipVerificationModel) {\r\n    verification = mvmConvert.toMembershipVerificationModel(JSON.stringify(verification));\r\n    const member = verification.member;\r\n    const vInfo = verification.verificationInfo;\r\n    // console.log({ data, type, member });\r\n\r\n    let country = '-', region_state_name = \"-\", region_state = \"-\";\r\n    member.countryInfo.forEach(_country => {\r\n      country = _country.name;\r\n\r\n      if (_country.id === 76) {\r\n        region_state_name = \"Region\";\r\n\r\n        region_state = member.regionInfo.location;\r\n      } else {\r\n        region_state_name = \"State/ Province\";\r\n\r\n        region_state = member.stateProvince;\r\n      }\r\n    });\r\n\r\n    // console.log({vInfo});\r\n\r\n    const verification_info_id = verification.verification ? vInfo.memberId : member.id;\r\n\r\n    const ID = base64Encode(String(member.id), true);\r\n    return `<div class=\"flex items-center whitespace-normal mb-0\">\r\n      <input id=\"verification_info\" name=\"verification_info\" type=\"checkbox\" value=\"${verification_info_id}\"\r\n        class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n      <div>\r\n        <user-profile-photo class=\"w-16 h-16 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${this.memberProfileBaseUrl}${ID}\" type=\"member\"\r\n          url=\"${member.logo}\" size=\"16\"></user-profile-photo>\r\n        <p class=\"ml-1 mb-2\">\r\n          <b>${member.organizationName}</b>\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          Country: ${country}\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          ${region_state_name}: ${region_state}\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          Branch: ${member.branchInfo.name}\r\n        </p>\r\n        <p class=\"ml-1 mb-2\">\r\n          Contact: <a href=\"tel:${member.organizationPhone}\" type=\"tel\">${member.organizationPhone}</a>\r\n        </p>\r\n        <p class=\"ml-1 mt-3 mb-0\">\r\n          <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n            href=\"${this.memberProfileBaseUrl}${ID}\" label=\"View Profile\"></link-button>\r\n        </p>\r\n      </div>\r\n    </div>`;\r\n\r\n  }\r\n\r\n  private rowTwoRender(verification: MembershipVerificationModel) {\r\n    verification = mvmConvert.toMembershipVerificationModel(JSON.stringify(verification));\r\n    const member = verification.member;\r\n    const vInfo = verification.verificationInfo;\r\n\r\n    const name = vInfo === null ? \"-\" : `${vInfo.verifiedBy?.firstname} ${vInfo.verifiedBy?.surname}`,\r\n      date = vInfo === null ? \"-\" : getDate(vInfo.verifiedBy?.date, { dateStyle: \"medium\" }),\r\n      time = vInfo === null ? \"-\" : getLocalTime(vInfo.verifiedBy?.date, { timeStyle: \"short\" });\r\n    return `<div class=\"flex flex-col md:flex-row whitespace-normal\">\r\n      <p class=\"ml-1 mb-2\">\r\n        <b>Verified By: ${name}</b>\r\n      </p>\r\n    </div>\r\n    <div class=\"flex flex-col md:flex-row whitespace-normal\">\r\n      <p class=\"ml-1 mb-2\">\r\n        On: ${date}/ \r\n      </p>\r\n      <p class=\"ml-1 mb-2\">\r\n        At: ${time}\r\n      </p>\r\n    </div>\r\n    <div class=\"flex flex-col md:flex-row whitespace-normal\">\r\n      ${verification.verification ? `<p class=\"ml-1 mb-2\">\r\n        <mwc-button class=\"danger\" raised unverify-member=\"${vInfo.id}\">Deactivate</mwc-button>\r\n      </p>`: `<p class=\"ml-1 mb-2\">\r\n        <mwc-button class=\"success\" raised verify-member=\"${member.id}\">Activate</mwc-button>\r\n      </p>`}\r\n    </div>`;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'member',\r\n          render: (data: any, type: any, member: MembershipVerificationModel) => __this.rowOneRender(member),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'verification',\r\n          render: (data: any, type: any, member: MembershipVerificationModel) => __this.rowTwoRender(member),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.verifyMemberBtns();\r\n        __this.unVerifyMemberBtns();\r\n      },\r\n      \"responsive\": true,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranchModel>();\r\n    let __branches: ClientBranchModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // @ts-ignore\r\n        const DATA: ClientBranchModel[] = _networkResponse.response.data.map((data: any) => {\r\n          return cbmConvert.toClientBranchModel(JSON.stringify(data));\r\n        });\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranchModel> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<any>();\r\n    let __groups: GroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        // console.log({\"_networkResponse.response.data\": _networkResponse.response.data});\r\n\r\n        const DATA: GroupModel[] = _networkResponse.response.data.map((group: any) => gmConvert.toGroupModel(JSON.stringify(group)));\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupModel> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n  }\r\n\r\n  private async getSubGroups() {\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<any>();\r\n    let __subgroups: SubGroupModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: SubGroupModel[] = _networkResponse.response.data.map((subgroup: any) => sgmConvert.toSubGroupModel(JSON.stringify(subgroup)));\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<SubGroupModel> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n  }\r\n\r\n  private verifyMemberBtns() {\r\n    const selectorString = 'verify-member';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(verify_member => {\r\n      verify_member.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.verifyMemberAction(verify_member, selectorString, e);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  private async verifyMemberAction(element: Element, selectorString: string, e: any) {\r\n    e.preventDefault();\r\n\r\n    const memberID = element.getAttribute(selectorString);\r\n\r\n    if (!Number.isNaN(memberID) && Number(memberID) !== 0) {\r\n      await POST_MemberVerification(Number(memberID));\r\n    }\r\n  }\r\n\r\n  private async check_all_verification(e: any) {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('[id=\"verification_info_all\"][name=\"verification_info_all\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = true;\r\n        })\r\n      } else {\r\n        document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private async activateMultipleMemberAction(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    await POST_MemberVerificationBulk(ids);\r\n  }\r\n\r\n  private unVerifyMemberBtns() {\r\n    const selectorString = 'unverify-member';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(unverify_member => {\r\n      unverify_member.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.unVerifyMemberAction(unverify_member, selectorString, e);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  private async unVerifyMemberAction(element: Element, selectorString: string, e: any) {\r\n    e.preventDefault();\r\n\r\n    const memberID = element.getAttribute(selectorString);\r\n\r\n    if (!Number.isNaN(memberID) && Number(memberID) !== 0) {\r\n      await DELETE_MemberVerification(Number(memberID));\r\n    }\r\n  }\r\n\r\n  private async deactivateMultipleMemberAction(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"verification_info\"][name=\"verification_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    await DELETE_MemberVerificationBulk(ids);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","invalidValue","typ","val","key","console","log","undefined","jsonToJS","map","props","forEach","p","js","jsToJSON","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","o","name","PdbMembershipOrganizationVerification","constructor","super","memberProfileBaseUrl","_groups","_subgroups","_branches","startSearchPage","accountType","selectedBranch","_activeBranchId","_memberType","_hasSetup","_selectedMembersCalled","_selectedMembersNames","_userLoginInfo","connectedCallback","then","this","activeBranchId","user","branchId","filterBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getBranches","getGroups","getSubGroups","disconnectedCallback","render","expiration_date","expired","pageId","viewType","toggleFilterFields","filterForm","table","firstUpdated","returnHtml","_urlQueryParams","filterNameId_filter_branchId","filterNameId_filter_search","filterNameId_filter_memberCategoryId","filterNameId_filter_groupIds","filterNameId_filter_subGroupIds","filterNameId_filter_memberIds","filterNameId_filter_verification","filterNameId_filter_branchIdVal","filterNameId_filter_searchVal","filterNameId_filter_memberCategoryIdVal","filterNameId_filter_groupIdsVal","filterNameId_filter_subGroupIdsVal","filterNameId_filter_memberIdsVal","filterNameId_filter_verificationVal","String","searchField","userBranch","selectedGroupIDs","item","Number","selectedSubGroupIDs","selectedBranchIDs","groupsSubgroupsBranches","branchField","branches","verificationField","memberCategoryIDs","memberCategoryField","groupField","groups","subGroupField","subgroups","memberListField","getMembersByIds","memberId","clear_filter","submit","memberIds","_members","_networkResponse","response","success","_DATAS","data","results","member","organizationName","branchChange","e","currentTarget","id","isSelected","selected","_group","thisIsSelected","selectedGroupID","isSelectedAlt","group","includes","push","_subgroup","selectedSubGroupID","subgroup","groupID","_branch","selectedBranchID","branch","organizationMemberList","ajaxHeader","_get_cookie","Authorization","token","params","page","TOTAL","count","RESULTS","SELECTOR","document","querySelector","processedData","_data","_new","text","total","totalShowing","ajaxFetchUrlParams","table_header","check_all_verification","activateMultipleMemberAction","deactivateMultipleMemberAction","param","__tableHeaders","title","__tableBody","__tableFoot","URL","urlQueryString","__dataTable","newObject","_branchIds","_memberCategoryIds","_groupIds","_subGroupIds","_memberIds","memberCategoryId","groupIds","subGroupIds","new_params","_branchId","_memberCategoryId","_groupId","_subGroupId","_memberId","_urlQueryParamsJoin","rowOneRender","verification","vInfo","verificationInfo","country","region_state_name","region_state","countryInfo","_country","regionInfo","location","stateProvince","verification_info_id","ID","logo","branchInfo","organizationPhone","rowTwoRender","verifiedBy","firstname","surname","date","dateStyle","timeStyle","url","__this","dataSrc","apiType","type","orderable","targets","className","checkboxes","selectRow","aoData","verifyMemberBtns","unVerifyMemberBtns","buttons","select","__branches","new_data","__groups","__subgroups","selectorString","querySelectorAll","verify_member","addEventListener","preventDefault","verifyMemberAction","element","memberID","getAttribute","input","checked","_input_","ids","P","unverify_member","unVerifyMemberAction","createRenderRoot","styles","Element","HTMLFormElement","Boolean"],"sourceRoot":""}