{"version":3,"file":"../../production_public/assets/v2/prod-files/js/membership/groupings/group_subgroup/subgroups.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/subgroup/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/view/membership/groupings/group_subgroup/subgroups/view.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/subgroup/subgroup/delete.ts","webpack://webpackNumbers/./src/view/membership/groupings/page__id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export interface GroupingsMemberCategories_I {\r\n  id: number,\r\n  category: string,\r\n  clientId?: number,\r\n  createdBy?: number,\r\n  date?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\nexport function GroupingsMemberCategories_S(data: any): GroupingsMemberCategories_I {\r\n  // console.log({data});\r\n\r\n  const groupingsMemberCategories_S: GroupingsMemberCategories_I = {\r\n    id: typeof data == \"number\" ? data: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    category: String(data['category']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsMemberCategories_S;\r\n}","import { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { GroupingsGroup_I } from \"../group\";\r\nimport { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsSubGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  groupId?: number,\r\n  groupName?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  subgroup?: string,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsSubGroup_S(data: any): GroupingsSubGroup_I {\r\n  // console.log({data});\r\n  const groupId = data['groupId'];\r\n  const groupingsSubGroup_S: GroupingsSubGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    groupId: Number(groupId['id']),\r\n    groupName: String(groupId['group']),\r\n    subgroup: String(data['subgroup']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsSubGroup_S;\r\n}\r\n\r\n\r\nasync function getGroup(ID: number) {\r\n  const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n  if (_networkResponse === null) {\r\n    return \"???\";\r\n  } else {\r\n    if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n      \r\n      const group: GroupingsGroup_I = _networkResponse.response.data;\r\n      return group.group;\r\n    } else {\r\n      let message = \"\";\r\n      let _message = _networkResponse.response.message;\r\n      if (Array.isArray(_message)) {\r\n        message = \"Unknown Error!\";\r\n      } else {\r\n        message = _message;\r\n      }\r\n      return message;\r\n    }\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { urlQueryParams, urlQueryParamsGet, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { GroupingsGroup_I } from '@@addons/interfaces/members/groupings/group';\r\nimport { GroupingsSubGroup_I, GroupingsSubGroup_S } from '@@addons/interfaces/members/groupings/subgroup';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { DELETE_GroupingsSubgroup } from '@@addons/network/members/groupings/subgroup/subgroup/delete';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../../page__id';\r\n\r\n\r\ntype groupSubgroupType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\nlet _branchGroups: { [branch: string]: GroupingsGroup_I[] } = {};\r\n@customElement(\"membership-groupings-group_subgroup-subgroup-view\")\r\nexport class MembershipGroupingsGroupSubgroupSubgroupGroupView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private selectedCategory: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: GroupingsSubGroup_I[] = [];\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"members/groupings/sub-group/table\";\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: Boolean })\r\n  private filterBoxStarted?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n    \r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.grouping, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n        <div class=\"block my-1\">\r\n          <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n            filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n          </mwc-button>\r\n        </div>\r\n        <div class=\"block my-1\">\r\n          ${this.filterForm}<br />\r\n        </div>\r\n        <div class=\"block my-1\">\r\n          ${this.table}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderColOne(data: any, type: any, subGroupInfo: GroupingsSubGroup_I) {\r\n    // console.log({subGroupInfo});\r\n    subGroupInfo = GroupingsSubGroup_S(subGroupInfo)\r\n    return `\r\n      <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <small class=\"p-2 shadow-sm my-1 w-full font-bold\"><i>Group: ${subGroupInfo.groupName}</i></small>\r\n        <p class=\"p-2 shadow-sm my-1 w-full\">${subGroupInfo.subgroup}</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderColTwo(data: any, type: any, subGroupInfo: GroupingsSubGroup_I) {\r\n    // console.log({subGroupInfo});\r\n    const SUB_GROUP_ID = subGroupInfo.id,\r\n      SUB_GROUP_CODE = base64Encode(String(SUB_GROUP_ID), true);\r\n    return `\r\n      <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <mwc-button class=\"button danger\" outlined delete-this-item=\"${SUB_GROUP_ID}\">\r\n          <mwc-icon class=\"mr-1\">delete_forever</mwc-icon> Delete\r\n        </mwc-button>\r\n        <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\" href=\"${CONSTANTS.URLS.PDB_CLIENT}groupings/subgroup/edit-subgroup?view-subgroup=${SUB_GROUP_CODE}\"\r\n          label=\"Update\">\r\n        </link-button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n    filterNameId_branchId = \"branchId\",\r\n    filterNameId_memberType = \"memberCategoryId\",\r\n    filterNameId_group = \"groupId\";\r\n\r\n    let newObject:any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_branchId) || (key === filterNameId_memberType) || (key === filterNameId_group)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n      }\r\n    } \r\n\r\n    if (!(filterNameId_branchId in newObject)) {\r\n      let userBranch = 0;\r\n      if (this._userLoginInfo !== null) {\r\n        if (this._userLoginInfo.length > 0) {\r\n          userBranch = this._userLoginInfo[0].user.branchId;\r\n        }\r\n      }\r\n      newObject[filterNameId_branchId] = userBranch;\r\n    }\r\n\r\n    // if (!(filterNameId_memberType in newObject)) {\r\n    //   newObject[filterNameId_memberType] = \"1\";\r\n    // }\r\n\r\n    // if (!(filterNameId_group in newObject)) {\r\n    //   if (this._groups.length > 0) {\r\n    //     newObject[filterNameId_group] = this._groups[0].id;\r\n    //   } else {\r\n    //     newObject[filterNameId_group] = \"0\";\r\n    //   }\r\n    // }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private get filterForm() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_branchId = \"branchId\",\r\n      filterNameId_memberType = \"memberCategoryId\",\r\n      filterNameId_group = \"groupId\";\r\n\r\n    let filterNameId_memberTypeVal: number = 1,\r\n      filterNameId_branchIdVal: number = userBranch,\r\n      filterNameId_groupVal: number = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_memberType) {\r\n          filterNameId_memberTypeVal = Number(value);\r\n        }\r\n        if (key === filterNameId_branchId) {\r\n          filterNameId_branchIdVal = Number(value);\r\n        }\r\n        if (key === filterNameId_group) {\r\n          filterNameId_groupVal = Number(value);\r\n        }\r\n    }\r\n    \r\n    const branchField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n          <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n            name=\"${filterNameId_branchId}\" id=\"${filterNameId_branchId}\"\r\n            outlined required @change=\"${this.branchChange}\">\r\n            ${userBranch === 1 ? html`\r\n              <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n              ${this._branches.map((value) => {\r\n                if (filterNameId_branchIdVal === value.id) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                }\r\n              })}\r\n            `: html`\r\n              ${this._branches.map((value) => {\r\n                if (value.id === userBranch) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                }\r\n              })}\r\n            `}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Member Category</h4>\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_memberTypeVal}\" \r\n            name=\"${filterNameId_memberType}\" id=\"${filterNameId_memberType}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const groups = this._groups.map(_group => {\r\n      const group: groupSubgroupType = {\r\n        id: _group.id, name: _group.group,\r\n        isSelected: _group.id === filterNameId_groupVal\r\n          ? \"true\" : \"false\",\r\n        selected: _group.id === filterNameId_groupVal ? true : false,\r\n      };\r\n      // console.log({\"_group.id\": _group.id, \"filterNameId_groupVal\": filterNameId_groupVal, group});\r\n      \r\n      return group\r\n    });\r\n\r\n    const groupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <mwc-select class=\"w-full\" setSelectedGroupId label=\"Select Group\"\r\n            name=\"${filterNameId_group}\" id=\"${filterNameId_group}\"\r\n            outlined required >\r\n            <mwc-list-item value=\"0\">Select Group</mwc-list-item>\r\n            ${groups.map((value) => {\r\n              if (filterNameId_groupVal === value.id) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${branchField} ${memberCategoryField} ${groupField}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private categoryValueChanged() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"memberCategoryId\"]').forEach((_select) => {\r\n      _select.addEventListener(\"change\", async (evt) => {\r\n        // @ts-ignore \r\n        _this.selectedCategory = _select.selectedCategory;\r\n        // console.log({ \"this.selectedCategory\": this.selectedCategory });\r\n        \r\n        if (!Number.isNaN(this.selectedCategory) && this.selectedBranch !== 0) {\r\n          await this.getGroups(\r\n            `?branchId=${this.selectedBranch}&memberCategoryId=${this.selectedCategory}`,\r\n            this.selectedBranch, this.selectedCategory\r\n          );\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async branchChange(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        \r\n    if (!Number.isNaN(this.selectedCategory) && this.selectedCategory !== 0 && this.selectedBranch !== 0) {\r\n      await this.getGroups(\r\n        `?branchId=${this.selectedBranch}&memberCategoryId=${this.selectedCategory}`,\r\n        this.selectedBranch, this.selectedCategory\r\n      );\r\n    }\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Sub-Group', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Sub-Group', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    setInterval(() => {\r\n      if (this.filterSectionContextContainer !== null) {\r\n        if (!this.filterBoxStarted) {\r\n          // let branchId = 0;\r\n          // if (this._activeBranchId !== null) {\r\n          //   branchId = this._activeBranchId[0].id;\r\n          // }\r\n          this.filterBox = new FilterFieldBox({\r\n            selectors: {\r\n              container: this.filterSectionContextContainer,\r\n              form: this.filterSectionContextForm,\r\n              filterSectionContextBtn: this.filterSectionContextBtn,\r\n            }, unmutableInputNames: [\r\n              // { name: 'branchId', value: String(branchId) },\r\n            ],\r\n          }); \r\n          this.filterBoxStarted = true;\r\n          this.dialog();\r\n        }\r\n      }\r\n    });  \r\n    this.categoryValueChanged(); \r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"url-url\": url });\r\n    \r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, subGroupInfo: GroupingsSubGroup_I) => __this.renderColOne(data, type, subGroupInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'groupId',\r\n          render: (data: any, type: any, subGroupInfo: GroupingsSubGroup_I) => __this.renderColTwo(data, type, subGroupInfo),\r\n          orderable: true\r\n        },\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteMemberFx();\r\n      },\r\n      \"responsive\": true,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        // 'pdf',\r\n        // 'excel',\r\n        // 'copy',\r\n        // 'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private deleteMemberFx() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteItemFromList(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async deleteItemFromList(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    // @ts-ignore\r\n    const _itemId = e.currentTarget.getAttribute('delete-this-item'),\r\n      itemId = Number.isNaN(_itemId) ? 0 : Number(_itemId);\r\n\r\n    await DELETE_GroupingsSubgroup(itemId);\r\n  }\r\n\r\n  private dialog() {\r\n    document.querySelectorAll('[open-dialog-btn]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.showDialog(e);\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  private showDialog(event: any) {\r\n    // event.preventDefault();\r\n    // console.log({event})\r\n\r\n    const dialogId: number = (event.currentTarget.getAttribute('open-dialog-btn'));\r\n    const dialog = this.querySelector('[open-this-dialog=\"' + dialogId + '\"]');\r\n    dialog.setAttribute('open', \"true\");\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  private async getGroups(url_params: string = \"\", branchID: number = null, categoryID: number = null) {\r\n    const KEY_1 = (branchID === null) || branchID < 1 ? \"__\" : String(branchID),\r\n      KEY_2 = (categoryID === null) || categoryID < 1 ? \"__\" : String(categoryID),\r\n      KEY = `${KEY_1}-${KEY_2}`;\r\n    // console.log({\"_branchGroups\": _branchGroups});\r\n    \r\n    this._groups = [];\r\n    if (KEY in _branchGroups) {\r\n      setTimeout(() => {\r\n        this._groups = _branchGroups[KEY];\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(null, url_params);\r\n    let __groups: GroupingsGroup_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsGroup_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsGroup_I> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n    _branchGroups[KEY] = this._groups;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_GroupingsSubgroup(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/sub-group/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Sub-Group?',\r\n    text: \"You may have members assigned to this sub-group. Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","export const PAGE__IDS = {\r\n  \"grouping\": 33,\r\n  \"assignment\": 34,\r\n};"],"names":["root","factory","exports","module","define","amd","self","GroupingsMemberCategories_S","data","id","Number","clientId","category","String","createdBy","updatedBy","date","Date","updateDate","GroupingsSubGroup_S","groupId","groupName","subgroup","branchId","memberCategoryId","GET_MemberGroupingsGroups","type","url_params","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","_branchGroups","MembershipGroupingsGroupSubgroupSubgroupGroupView","constructor","super","_memberCategories","_activeBranchId","_memberType","selectedBranch","selectedCategory","_branches","_userLoginInfo","_groups","_subgroups","datatablePathUrl","filterBoxStarted","_hasSetup","connectedCallback","then","this","activeBranchId","filterBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getBranches","getClientMemberCategories","disconnectedCallback","render","expiration_date","expired","pageId","viewType","toggleFilterFields","filterForm","table","renderColOne","subGroupInfo","renderColTwo","SUB_GROUP_ID","SUB_GROUP_CODE","base64","urlQueryString","_urlQueryParams","filterNameId_branchId","newObject","key","value","userBranch","length","user","_urlQueryParamsJoin","returnHtml","filterNameId_memberType","filterNameId_group","filterNameId_memberTypeVal","filterNameId_branchIdVal","filterNameId_groupVal","branchField","branchChange","map","name","memberCategoryField","groups","_group","group","isSelected","selected","groupField","clear_filter","submit","categoryValueChanged","_this","document","querySelectorAll","forEach","_select","addEventListener","evt","isNaN","getGroups","e","currentTarget","__tableHeaders","title","__tableBody","__tableFoot","URL","__dataTable","ajaxHeader","firstUpdated","setInterval","unmutableInputNames","dialog","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","deleteMemberFx","buttons","select","btn","deleteItemFromList","preventDefault","_itemId","getAttribute","itemId","ID","formData","text","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","JSON","stringify","networkCallRes","_RESPONSE","response","unknownError","errors","err","push","res","https_swal_error_format","postForm","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","Object","VALUE","message","success","setTimeout","window","location","reload","DELETE_GroupingsSubgroup","showDialog","event","dialogId","querySelector","setAttribute","_networkResponse","__branches","new_data","__memberCategories","branchID","categoryID","KEY","__groups","createRenderRoot","styles","Element","HTMLFormElement","Array","Boolean","PAGE__IDS"],"sourceRoot":""}