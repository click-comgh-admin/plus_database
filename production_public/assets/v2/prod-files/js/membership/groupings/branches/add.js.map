{"version":3,"file":"../../production_public/assets/v2/prod-files/js/membership/groupings/branches/add.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/login/main.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/view/membership/groupings/branches/forms/add.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/post.ts","webpack://webpackNumbers/./src/view/membership/groupings/branches/add.ts","webpack://webpackNumbers/./src/view/membership/groupings/page__id.ts","webpack://webpackNumbers/./node_modules/lit-html/directive-helpers.js","webpack://webpackNumbers/./node_modules/lit-html/directives/live.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { get_cookie, set_cookies, set_cookies_minutes } from \"@@addons/functions/cookies\";\r\nimport { LoginTokenType_I, } from '@@addons/interfaces/network_calls/login/login_token';\r\n\r\nconst get_differences = (date: Date) => {\r\n  const now = new Date();\r\n  const msBetweenDates = Math.abs(date.getTime() - now.getTime());\r\n  const hoursBetweenDated = msBetweenDates / (60 * 60 * 1000);\r\n  // console.log({ msBetweenDates, hoursBetweenDated, });\r\n  if (hoursBetweenDated < 24) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport const verifyToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/verify-token',\r\n    cookieName = type,\r\n    token = get_cookie(cookieName),\r\n    userInfo = JSON.stringify({ \"token\": base64Decode(token) }),\r\n    formData = userInfo;\r\n  const cookieDate = new Date(get_cookie(cookieName + \"_date\"));\r\n  // console.log({ \"force_check, now\": get_differences(cookieDate) });\r\n  const force_check = get_differences(cookieDate);\r\n\r\n  if (!force_check) {\r\n    await http(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }, true).then(async (response) => {\r\n      // console.log({ response: response });\r\n      if (response.jsonData.token & response.jsonData.user & response.jsonData.expiry) {\r\n        // console.log({\"valid token\": true, \"response.jsonData.token\": response.jsonData.token})\r\n        const token = base64Encode(String(response.jsonData.token));\r\n        set_cookies(cookieName, token, 10);\r\n        set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n        // console.log({ \"response.token\": response.token });\r\n      } else {\r\n        // console.log({\"valid token\": false, \"response.jsonData.token\": response.jsonData.token})\r\n        await generateNewToken(email, _id_, type);\r\n      }\r\n    });\r\n  } else {\r\n    return token;\r\n  }\r\n}\r\n\r\nconst generateNewToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/login-id',\r\n    cookieName = type,\r\n    userInfo = JSON.stringify({ \"email\": email, \"id\": _id_ }),\r\n    formData = userInfo;\r\n\r\n  await http(url, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  }, true).then((response) => {\r\n    // console.log({ response: response });\r\n    if (response.jsonData.token) {\r\n      const token = base64Encode(String(response.jsonData.token));\r\n      set_cookies(cookieName, token, 10);\r\n      set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n      // console.log({ \"response.token\": response.token });\r\n    }\r\n\r\n  });\r\n}\r\nexport const tokenLogin = async (email: string, id: Number, type: LoginTokenType_I) => {\r\n  const _id_ = base64Encode(String(id)),\r\n    cookieName = type;\r\n  // console.log({\"_id__id__id_\": _id_});\r\n  // console.log({ email, id });\r\n  // @ts-ignore\r\n  window['supersecret'] = { unknowable: { ops: { email: email, id: _id_, cookieName: cookieName } } };\r\n  const _get_cookie = get_cookie(cookieName);\r\n  // console.log({ _get_cookie });\r\n\r\n  if (_get_cookie == '') {\r\n    await generateNewToken(email, _id_, type);\r\n  } else {\r\n    await verifyToken(email, _id_, type);\r\n  }\r\n};","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\nexport const urlQueryParamsGetAll = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = urlSearchParams.getAll(query);\r\n  return params;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { POST_ClientBranch } from '@@addons/network/clients/branches/post';\r\n\r\n\r\n@customElement(\"membership-groupings-branches-add-branch\")\r\nexport class MembershipGroupingsBranchesAddBranch extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  @property({ type: Object })\r\n  private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    this.urlQueryParams = urlQueryParams();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      ${this.form}\r\n    `;\r\n  }\r\n\r\n  private get form(): TemplateResult {\r\n    return html`\r\n      <div class=\"form-container\">\r\n        <div class=\" !px-0\">\r\n          <div class=\"-row !px-0\">\r\n            <div class=\"-col-md-12\">\r\n              <header class=\"header warning -col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Groupings: Branch</h1>\r\n                  <h3 class=\"h3\">Add Branch</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"client-branch\">\r\n                <div class=\"p-0 m-0\" show-attachmentField=\"all\">\r\n                  ${this.branchField}\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${this.CLIENT_ID}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Add\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get branchField() {\r\n    return html`\r\n      <div class=\"container my-4\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"col-md-6 col-lg-6\">\r\n            <h4 class=\"font-semibold my-2\">Enter Branch</h4>\r\n            <mwc-textfield name=\"name\" type=\"text\" class=\"w-full\" id=\"name\" value=\"\" label=\"Enter branch Name\" outlined required>\r\n            </mwc-textfield>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    await POST_ClientBranch();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_ClientBranch(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-branch\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Branch?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { tokenLogin } from \"@@addons/functions/login/main\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport './forms/add';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../page__id';\r\n\r\n\r\n@customElement(\"membership-groupings-branches-add\")\r\nexport class MembershipGroupingsBranchesAdd extends LitElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  @property({ type: String })\r\n  public email?: string;\r\n\r\n  @property({ type: Number })\r\n  public mId?: number;\r\n\r\n  @property({ type: Number })\r\n  public clientId?: number;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n    await tokenLogin(this.email, this.mId, \"client_tokenLogin\");\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.grouping, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\" >\r\n        <membership-groupings-branches-add-branch CLIENT_ID=\"${this.clientId}\"></membership-groupings-branches-add-branch>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n","export const PAGE__IDS = {\r\n  \"grouping\": 33,\r\n  \"assignment\": 34,\r\n};","import{_$LH as o}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{I:l}=o,t=o=>null===o||\"object\"!=typeof o&&\"function\"!=typeof o,i={HTML:1,SVG:2},n=(o,l)=>void 0===l?void 0!==(null==o?void 0:o._$litType$):(null==o?void 0:o._$litType$)===l,d=o=>void 0!==(null==o?void 0:o._$litDirective$),v=o=>null==o?void 0:o._$litDirective$,e=o=>void 0===o.strings,c=()=>document.createComment(\"\"),r=(o,t,i)=>{var n;const d=o._$AA.parentNode,v=void 0===t?o._$AB:t._$AA;if(void 0===i){const t=d.insertBefore(c(),v),n=d.insertBefore(c(),v);i=new l(t,n,o,o.options)}else{const l=i._$AB.nextSibling,t=i._$AM,e=t!==o;if(e){let l;null===(n=i._$AQ)||void 0===n||n.call(i,o),i._$AM=o,void 0!==i._$AP&&(l=o._$AU)!==t._$AU&&i._$AP(l)}if(l!==v||e){let o=i._$AA;for(;o!==l;){const l=o.nextSibling;d.insertBefore(o,v),o=l}}}return i},u=(o,l,t=o)=>(o._$AI(l,t),o),f={},s=(o,l=f)=>o._$AH=l,m=o=>o._$AH,p=o=>{var l;null===(l=o._$AP)||void 0===l||l.call(o,!1,!0);let t=o._$AA;const i=o._$AB.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},a=o=>{o._$AR()};export{i as TemplateResultType,a as clearPart,m as getCommittedValue,v as getDirectiveClass,r as insertPart,d as isDirectiveResult,t as isPrimitive,e as isSingleExpression,n as isTemplateResult,p as removePart,u as setChildPartValue,s as setCommittedValue};\n//# sourceMappingURL=directive-helpers.js.map\n","import{noChange as r,nothing as e}from\"../lit-html.js\";import{directive as i,Directive as t,PartType as n}from\"../directive.js\";import{isSingleExpression as o,setCommittedValue as s}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=i(class extends t{constructor(r){if(super(r),r.type!==n.PROPERTY&&r.type!==n.ATTRIBUTE&&r.type!==n.BOOLEAN_ATTRIBUTE)throw Error(\"The `live` directive is not allowed on child or event bindings\");if(!o(r))throw Error(\"`live` bindings can only contain a single expression\")}render(r){return r}update(i,[t]){if(t===r||t===e)return t;const o=i.element,l=i.name;if(i.type===n.PROPERTY){if(t===o[l])return r}else if(i.type===n.BOOLEAN_ATTRIBUTE){if(!!t===o.hasAttribute(l))return r}else if(i.type===n.ATTRIBUTE&&o.getAttribute(l)===t+\"\")return r;return s(i),t}});export{l as live};\n//# sourceMappingURL=live.js.map\n"],"names":["root","factory","exports","module","define","amd","self","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","generateNewToken","email","_id_","type","url","cookieName","formData","JSON","stringify","method","body","then","response","jsonData","token","String","Date","toUTCString","tokenLogin","id","window","unknowable","ops","date","now","Math","abs","getTime","get_differences","user","expiry","verifyToken","urlQueryParams","urlSearchParams","URLSearchParams","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsGetAll","getAll","urlQueryParamsJoin","object","urlStr","index","MembershipGroupingsBranchesAddBranch","constructor","super","CLIENT_ID","_data","undefined","connectedCallback","this","disconnectedCallback","render","form","branchField","submitForm","firstUpdated","e","preventDefault","_get_cookie","formContainer","document","querySelector","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","headers","Authorization","HTTP","networkCallRes","_RESPONSE","unknownError","length","errors","err","errormsg","push","res","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","reload","POST_ClientBranch","createRenderRoot","styles","Number","MembershipGroupingsBranchesAdd","_hasSetup","mId","expiration_date","expired","pageId","viewType","clientId","Boolean","PAGE__IDS","I","l","t","o","strings","f","s","_$AH","r","update","i","element","name","hasAttribute","getAttribute"],"sourceRoot":""}