{"version":3,"file":"../../production_public/assets/v2/prod-files/js/membership/registration/excel.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/view/membership/registration/excel/form/instructions.ts","webpack://webpackNumbers/./src/view/membership/registration/excel/form/create.ts","webpack://webpackNumbers/./src/addons/network/members/membership/registration/excel/post.ts","webpack://webpackNumbers/./src/view/membership/registration/excel/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport './location';\r\nimport \"@@addons/widgets/accordion/main\"\r\n\r\n@customElement('membership-registration-excel-instruction')\r\nexport class MembershipRegistrationExcelInstruction extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n    :host { display: block; }\r\n    input[type=\"text\"], input[type=\"password\"], \r\n    input[type=\"email\"], input[type=\"phone\"], \r\n    select, span.select2.select2-container, \r\n    span.select2-selection.select2-selection--single.form-control.p-0, \r\n    textarea {\r\n      background: none!important;\r\n      padding: unset!important;\r\n    }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const contents: Array<TemplateResult> = [\r\n      html`<app-accordion-item accordion_class_name=\"excel-instructions\" class=\"mb-1\"\r\n        .buttonHtml=\"${html`<b>Location Data</b>`}\"\r\n        .contentHtml=${html`<membership-registration-excel-location></membership-registration-excel-location>`}>\r\n        </app-accordion-item>\r\n      `,\r\n    ];\r\n    // console.log({contents});\r\n    \r\n    // accordion_class_name\r\n    // buttonHtml\r\n    // contentHtml\r\n    return html`\r\n      <div class=\"shadow-sm border bg-white p-2 m-2\">\r\n        <h1 class=\"text-[#ca8a04] text-[1.5rem] font-bold\">Instructions</h1>\r\n        <app-accordion accordionName=\"excel-instructions\" .contents=${contents}></app-accordion>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { POST_MembershipRegisterExcel } from '@@addons/network/members/membership/registration/excel/post';\r\nimport './instructions';\r\n\r\n@customElement(\"membership-registration-excel-create\")\r\nexport class MembershipRegistrationExcelCreate extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  //  @query(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  //  @queryAll(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  @property({ type: Object })\r\n  private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    this.urlQueryParams = urlQueryParams();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    return html`\r\n      <membership-registration-excel-instruction></membership-registration-excel-instruction>\r\n      ${this.form}\r\n    `;\r\n  }\r\n\r\n  private get form() {\r\n    return html`\r\n      <div class=\"form-container\">\r\n        <div class=\" !px-0\">\r\n          <div class=\"-row !px-0\">\r\n            <div class=\"-col-md-12\">\r\n              <header class=\"header warning -col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Member Registration</h1>\r\n                  <h3 class=\"h3\">Excel Member Registration</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"register-excel\" enctype=\"multipart/form-data\">\r\n                <div class=\"p-0 m-0\" show-attachmentField=\"all\">\r\n                  ${this.attachmentField}\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${this.CLIENT_ID}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Register\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get attachmentField() {\r\n    return html`\r\n      <div class=\"container my-4\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"col-md-6 col-lg-6\">\r\n            <h4 class=\"font-semibold my-2\">Select Attachment</h4>\r\n            <file-input id=\"excel\" name=\"excel\" hasLabel label=\"Add Attachment\" required>\r\n            </file-input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    await POST_MembershipRegisterExcel();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_MembershipRegisterExcel(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/excel',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"register-excel\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Proceed with excel registration?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              // console.log({ \"_errors-1\": _errors });\r\n              if (Array.isArray(_errors)) {\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n  \r\n                  errors.push(errormsg);\r\n                });\r\n              } else if (typeof _errors === \"string\") {\r\n                // console.log({ \"_errors-3\": _errors });\r\n                errors.push(_errors);\r\n                // console.log({ \"errors-3\": errors });\r\n              } else {\r\n                const __errors: any = _errors;\r\n                // console.log({ \"_errors-2\": _errors });\r\n                for (const key in __errors) {\r\n                  if (Object.prototype.hasOwnProperty.call(__errors, key)) {\r\n                    const error = __errors[key];\r\n                    let errormsg = { error: key + \": \" + error };\r\n                    errors.push(errormsg);\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { tokenLogin } from \"@@addons/functions/login/main\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport './form/create';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport '../../../no_access/account_expired';\r\nimport '../../../no_access/no_page_entry';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '../page__id';\r\n\r\n\r\n@customElement(\"membership-registration-excel\")\r\nexport class MembershipRegistrationExcel extends LitElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  @property({ type: String })\r\n  public email?: string;\r\n\r\n  @property({ type: Number })\r\n  public mId?: number;\r\n\r\n  @property({ type: Number })\r\n  public clientId?: number;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    await tokenLogin(this.email, this.mId, \"client_tokenLogin\");\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.create, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <a href=\"${CONSTANTS.URLS.PDB_CLIENT}assets/v2/samples/new_excel_registration.xlsx\">\r\n        <mwc-button icon=\"download\" label=\"Download Template\" class=\"success\" raised></mwc-button>\r\n      </a>\r\n      <membership-registration-excel-create CLIENT_ID=\"${this.clientId}\"></membership-registration-excel-create>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n"],"names":["root","factory","exports","module","define","amd","self","MembershipRegistrationExcelInstruction","constructor","super","connectedCallback","disconnectedCallback","render","contents","firstUpdated","createRenderRoot","this","styles","MembershipRegistrationExcelCreate","CLIENT_ID","_data","urlQueryParams","undefined","form","attachmentField","submitForm","e","preventDefault","_get_cookie","url","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","_errors","Array","isArray","err","errormsg","error","id","push","__errors","key","Object","prototype","hasOwnProperty","call","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","VALUE","message","success","setTimeout","window","location","reload","POST_MembershipRegisterExcel","type","Number","MembershipRegistrationExcel","_hasSetup","email","mId","expiration_date","expired","pageId","viewType","clientId","Boolean"],"sourceRoot":""}