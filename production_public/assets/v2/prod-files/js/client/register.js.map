{"version":3,"file":"../../production_public/assets/v2/prod-files/js/client/register.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/network_status.ts","webpack://webpackNumbers/./src/addons/functions/toggle_pswd_visibility/index.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/view/admin/client/index.ts","webpack://webpackNumbers/./src/addons/network/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/addons/network/clients/account_category/index.ts","webpack://webpackNumbers/./src/addons/network/clients/register/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const GetNetworkStatus = (\r\n  online: (status: string) => void,\r\n  offline: (status: string) => void) => {\r\n  if (navigator.onLine === true) {\r\n    return online(\"online\");\r\n  } else {\r\n    return offline(\"offline\");\r\n  }\r\n}\r\n\r\nexport const GetNetworkStatusEvent = (self: { dispatchEvent: (arg0: CustomEvent<{ onlineStatus: boolean; }>) => void; }) => {\r\n  let newMessage = new CustomEvent('get-online-status', {\r\n    cancelable: true,\r\n    detail: { onlineStatus: navigator.onLine }\r\n  });\r\n\r\n  // dispatchEvent(newMessage);\r\n  self.dispatchEvent(newMessage);\r\n}","import '@material/mwc-icon-button';\r\nimport { TextField } from '@material/mwc-textfield';\r\n\r\nlet showingCheckBoxes: { id: string, showing: boolean, elem: HTMLInputElement | TextField, span: HTMLSpanElement }[] = [];\r\nconst labelTextShow = \"Show Password\", labelTextHide = \"Hide Password\";\r\n\r\nexport const togglePswdVisibility = (type: \"mwc-textfield\" | \"input\" = \"input\") => {\r\n  const PSWDs = document.querySelectorAll(type + '[type=\"password\"]');\r\n  // console.log({ PSWDs });\r\n\r\n  PSWDs.forEach((PSWD: HTMLInputElement | TextField, i) => {\r\n    // console.log({ PSWD });\r\n    const parentElement = PSWD.parentElement;\r\n    parentElement.setAttribute('style', parentElement.getAttribute('style') + \"; flex-direction: column !important;\")\r\n    const label = document.createElement('label');\r\n    label.setAttribute('style', label.getAttribute('style') + \"; display: inline-flex;\" +\r\n      \"width: 100%; cursor: pointer; align-items: center; margin-top: 10px; margin-bottom: 0;\"\r\n    );\r\n\r\n    const span = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n    span.innerText = labelTextShow;\r\n\r\n    const spanDummy = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.id = \"pswd-visibility-btn--\" + i;\r\n    checkbox.setAttribute('style', checkbox.getAttribute('style') + \"; -moz-appearance: auto !important;\" +\r\n      \"-webkit-appearance: auto !important; -ms-appearance: auto !important; appearance: auto !important;\" +\r\n      \"opacity: 1; margin-right: 0; z-index: 10;\"\r\n    );\r\n\r\n    label.appendChild(spanDummy);\r\n    label.appendChild(checkbox);\r\n    label.appendChild(span);\r\n\r\n    PSWD.after(label);\r\n\r\n    const showingCheckBox = { id: checkbox.id, showing: false, elem: PSWD, span: span };\r\n    if (!showingCheckBoxes.includes(showingCheckBox)) {\r\n      showingCheckBoxes.push(showingCheckBox);\r\n    }\r\n    checkbox.addEventListener('change', __toggleVisibility)\r\n  });\r\n}\r\n\r\nconst __toggleVisibility = (e: { preventDefault: () => void; currentTarget: any; }) => {\r\n  e.preventDefault();\r\n  const checkbox: HTMLInputElement = e.currentTarget;\r\n  // console.log({ checkbox, e })\r\n  checkbox.checked\r\n  showingCheckBoxes.forEach(showingCheckBox => {\r\n    if (checkbox.id === showingCheckBox.id) {\r\n      if (showingCheckBox.showing === false) {\r\n        showingCheckBox.elem.type = \"text\";\r\n        showingCheckBox.span.innerText = labelTextHide;\r\n        showingCheckBox.showing = true;\r\n      } else {\r\n        showingCheckBox.elem.type = \"password\";\r\n        showingCheckBox.span.innerText = labelTextShow;\r\n        showingCheckBox.showing = false;\r\n      }\r\n      // console.log({ showingCheckBox, button });\r\n    }\r\n  });\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","// To parse this data:\n//\n//   import { Convert, ClientSubscriptionMembershipSizeModel } from \"./file\";\n//\n//   const clientSubscriptionMembershipSizeModel = Convert.toClientSubscriptionMembershipSizeModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientSubscriptionMembershipSizeModel {\n    id?:          number;\n    info?:        string;\n    cost?:        string;\n    type?:        number;\n    client?:      number;\n    accountType?: number;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toClientSubscriptionMembershipSizeModel(json: string): ClientSubscriptionMembershipSizeModel {\n        return cast(JSON.parse(json), r(\"ClientSubscriptionMembershipSizeModel\"));\n    }\n\n    public static clientSubscriptionMembershipSizeModelToJson(value: ClientSubscriptionMembershipSizeModel): string {\n        return JSON.stringify(uncast(value, r(\"ClientSubscriptionMembershipSizeModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"ClientSubscriptionMembershipSizeModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"info\", js: \"info\", typ: u(null, \"\") },\n        { json: \"cost\", js: \"cost\", typ: u(null, \"\") },\n        { json: \"type\", js: \"type\", typ: u(null, 0) },\n        { json: \"client\", js: \"client\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n    ], false),\n};\n","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { togglePswdVisibility } from '@@addons/functions/toggle_pswd_visibility';\r\nimport { POST_ClientRegister } from '@@addons/network/clients/register';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from \"@@addons/interfaces/generic/gender\";\r\nimport { GET_GenericGender } from \"@@addons/network/generic/gender\";\r\nimport { GET_ClientSubsciptionMembershipSize } from \"@@addons/network/clients/subscription/membership_size\";\r\nimport { ClientSubscriptionMembershipSizeModel, Convert as csmsmConvert } from \"@@addons/interfaces/clients/subscription/membership_size\";\r\nimport { LocationCountryModel, Convert as lcmConvert } from \"@@addons/interfaces/location/country_model\";\r\nimport { LocationRegionModel, Convert as lrmConvert } from \"@@addons/interfaces/location/region_model\";\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from \"@@addons/interfaces/location/constituency_model\";\r\nimport { LocationDistrictModel, Convert as ldmConvert } from \"@@addons/interfaces/location/district_model\";\r\nimport { GET_LocationCountry } from \"@@addons/network/location/country\";\r\nimport { GET_LocationRegion } from \"@@addons/network/location/region\";\r\nimport { GET_LocationDistrictFilter } from \"@@addons/network/location/district/filter\";\r\nimport { GET_LocationConstituencyFilter } from \"@@addons/network/location/constituency/filter\";\r\nimport { ClientAccountCategoryModel, Convert as cacmConvert } from \"@@addons/interfaces/clients/account_category\";\r\nimport { GET_ClientAccountCategory } from \"@@addons/network/clients/account_category\";\r\n\r\n@customElement('pdb-register-form')\r\nexport class PdbRegisterForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private showLeadersForm: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _accountCategories: ClientAccountCategoryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private _constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private _districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n\r\n  @property({ type: Array })\r\n  private _membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await this.getGenders();\r\n    await this.getLocationCountry();\r\n    await this.getClientAccountCategory();\r\n    await this.getClientSubscriptionMembershipSize();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n    :host { display: block; }\r\n    input[type=\"text\"], input[type=\"password\"], \r\n    input[type=\"email\"], input[type=\"phone\"], \r\n    select, span.select2.select2-container, \r\n    span.select2-selection.select2-selection--single.form-control.p-0, \r\n    textarea {\r\n      background: none!important;\r\n      padding: unset!important;\r\n    }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const countries: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._countries.map((country) => {\r\n      return {\r\n        id: country.id, name: country.name,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const regions: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._regions.map((region) => {\r\n      return {\r\n        id: region.id, name: region.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const districts: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._districts.map((district) => {\r\n      return {\r\n        id: district.id, name: district.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    const constituencies: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._constituencies.map((constituency) => {\r\n      return {\r\n        id: constituency.id, name: constituency.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._accountCategories\": this._accountCategories});\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">New Client Account</h1>\r\n                  <h3 class=\"h3\">Create New Client Account!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-register\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Name</h4>\r\n                    <mwc-textfield name=\"name\" type=\"text\" class=\"w-full\" id=\"name\" value=\"\" label=\"Enter Organization Name\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Account Category</h4>\r\n                    <mwc-select name=\"accountCategory\" id=\"accountCategory\" label=\"Select Account Category\" outlined required>\r\n                      ${this._accountCategories.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.category}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_other_account_category>\r\n                    <h4 class=\"font-semibold my-2\">Enter Other Account Category</h4>\r\n                    <mwc-textfield name=\"accountCategoryOther\" type=\"text\" class=\"w-full\" id=\"accountCategoryOther\" value=\"\" label=\"Enter Other Account Category\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Membership Size</h4>\r\n                    <mwc-select name=\"membership_size\" id=\"membership_size\" label=\"Select Membership Size\" outlined required>\r\n                      ${this._membershipSizes.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.info}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Add Organization Logo <span class=\"text-yellow-600\">(optional)</span></h4>\r\n                    <file-input id=\"logo\" name=\"logo\" label=\"Add Organization Logo\" ></file-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Website <span class=\"text-yellow-600\">(Optional)</span></h4>\r\n                    <mwc-textfield name=\"website\" type=\"url\" class=\"w-full\" id=\"website\" value=\"\" label=\"Enter Organization Website (Optional)\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n                    <!--<mwc-select name=\"country\" id=\"country\" label=\"Select Country\" outlined required>\r\n                      ${this._countries.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select> -->\r\n                    <select-input name=\"country\" id=\"country\" label=\"Select Country\" .options=\"${countries}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_state_province>\r\n                    <h4 class=\"font-semibold my-2\">Enter State/ Province</h4>\r\n                    <mwc-textfield name=\"stateProvince\" type=\"text\" class=\"w-full\" id=\"stateProvince\" value=\"\" label=\"Enter State/ Province\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n                    <select-input name=\"region\" id=\"region\" label=\"Select Region\" .options=\"${regions}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select District</h4>\r\n                    <select-input name=\"district\" id=\"district\" label=\"Select District\" .options=\"${districts}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n                    <select-input name=\"constituency\" id=\"constituency\" label=\"Select Constituency\" .options=\"${constituencies}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Enter Community</h4>\r\n                    <mwc-textfield name=\"community\" type=\"text\" class=\"w-full\" id=\"community\" value=\"\" label=\"Enter Community\" outlined>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Applicant Info\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Firstname</h4>\r\n                    <mwc-textfield name=\"firstname\" type=\"text\" class=\"w-full\" id=\"firstname\" value=\"\" label=\"Enter Applicant Firstname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Surname</h4>\r\n                    <mwc-textfield name=\"surname\" type=\"text\" class=\"w-full\" id=\"surname\" value=\"\" label=\"Enter Applicant Surname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n                    <mwc-select name=\"gender\" id=\"gender\" label=\"Select Gender\" outlined required>\r\n                      ${this._genders.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter E-mail Address</h4>\r\n                    <mwc-textfield name=\"email\" type=\"email\" class=\"w-full\" id=\"email\" value=\"\" label=\"Enter E-mail Address\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Phone Number</h4>\r\n                    <mwc-textfield name=\"phone\" type=\"tel\" class=\"w-full\" id=\"phone\" value=\"\" label=\"Enter Phone Number\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Leaders\")}\r\n                    <h4 class=\"font-semibold my-2\">Add Leaders?</h4> \r\n                    <switch-input name=\"addLeaders\" class=\"w-full\" id=\"addLeaders\" ?isSelected=\"${this.showLeadersForm}\" label=\"Add Leaders?\" outlined>\r\n                    </switch-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_1_name\" id=\"leader_1_name\" label=\"Leader 1 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Contact</h4>\r\n                    <mwc-textfield name=\"leader_1_contact\" id=\"leader_1_contact\" label=\"Leader 1 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_1_email\" id=\"leader_1_email\" label=\"Leader 1 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_2_name\" id=\"leader_2_name\" label=\"Leader 2 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Contact</h4>\r\n                    <mwc-textfield name=\"leader_2_contact\" id=\"leader_2_contact\" label=\"Leader 2 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_2_email\" id=\"leader_2_email\" label=\"Leader 2 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                    <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_3_name\" id=\"leader_3_name\" label=\"Leader 3 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Contact</h4>\r\n                    <mwc-textfield name=\"leader_3_contact\" id=\"leader_3_contact\" label=\"Leader 3 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_3_email\" id=\"leader_3_email\" label=\"Leader 3 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Set Password\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Password</h4>\r\n                    <mwc-textfield name=\"password\" id=\"password\" label=\"Enter Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Confirm Password</h4>\r\n                    <mwc-textfield name=\"confirm_password\" id=\"confirm_password\" label=\"Confirm Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n      \r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Register\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private sectionSeparater(text: string) {\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n        <div class=\"flex form-input-container items-center text-center\">\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n          <label class=\"block font-bold text-sm text-gray-600 w-full my-0\">\r\n            ${text}\r\n          </label>\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private addLeadersAction() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"addLeaders\"]').forEach((_switch) => {\r\n      _switch.addEventListener(\"click\", (evt) => {\r\n        // @ts-ignore \r\n        _this.showLeadersForm = _switch.isSelected;\r\n        const show_leaders = this.querySelectorAll('[show_leaders]'),\r\n          show_hide_class = \"hidden\";\r\n        if (_this.showLeadersForm) {\r\n          show_leaders.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_leaders.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    togglePswdVisibility();\r\n    togglePswdVisibility(\"mwc-textfield\");\r\n    document.onreadystatechange = (event)=> {\r\n      // console.log({ \"document.readyState\": document.readyState })\r\n      if (document.readyState == \"complete\") this.countryChanged(event);\r\n      if (document.readyState == \"complete\") this.regionChanged(event);\r\n      if (document.readyState == \"complete\") this.districtChanged(event);\r\n      if (document.readyState == \"complete\") this.constituencyChanged(event);\r\n      if (document.readyState == \"complete\") this.accountCategoryChanged(event);\r\n    }  \r\n    this.addLeadersAction();  \r\n  }\r\n\r\n  private accountCategoryChanged(e: any) {\r\n    // console.log(e)\r\n    const accountCategoryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-select[name=\"accountCategory\"]');\r\n    // console.log({ \"accountCategoryNodes\": accountCategoryNodes })\r\n    accountCategoryNodes.forEach(accountCategoryNode => {\r\n      // console.log({ \"accountCategoryNode\": accountCategoryNode })\r\n      // console.log({ \"accountCategoryNodes.currentValue\": accountCategoryNodes.getAttribute(\"currentValue\") })\r\n      accountCategoryNode.onchange = async (event) => {\r\n        // console.log({ event, })\r\n        const show_other_account_category = this.querySelectorAll('[show_other_account_category]'),\r\n          show_hide_class = \"hidden\";\r\n        if (accountCategoryNode.value === \"-1000\") {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private countryChanged(e: any) {\r\n    // console.log(e)\r\n    const countryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"country\"]');\r\n    countryNodes.forEach(countryNode => {\r\n      // console.log({ \"countryNode\": countryNode })\r\n      // console.log({ \"countryNode.currentValue\": countryNode.getAttribute(\"currentValue\") })\r\n      countryNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": countryNode, \"counrtyValue.value\": countryNode.value, })\r\n        const show_ghana_locations = this.querySelectorAll('[show_ghana_locations]'),\r\n          show_state_province = this.querySelectorAll('[show_state_province]'),\r\n          show_hide_class = \"hidden\";\r\n        if (countryNode.value === \"76\") {\r\n          if (this.regionCalled === false) await this.getLocationRegion();\r\n          this.regionCalled = true;\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        } else {\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    const regionNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"region\"]');\r\n    regionNodes.forEach(regionNode => {\r\n      // console.log({ \"regionNode\": regionNode })\r\n      // console.log({ \"regionNode.currentValue\": regionNode.getAttribute(\"currentValue\") })\r\n      regionNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": regionNode, \"counrtyValue.value\": regionNode.value, })\r\n        const regionID = regionNode.value;\r\n        this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n        // console.log({regionID, \"this.selectedRegion\": this.selectedRegion})\r\n        this.getLocationDistrict(this.selectedRegion);\r\n      };\r\n    });\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    const districtNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"district\"]');\r\n    districtNodes.forEach(districtNode => {\r\n      // console.log({ \"districtNode\": districtNode })\r\n      // console.log({ \"districtNode.currentValue\": districtNode.getAttribute(\"currentValue\") })\r\n      districtNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": districtNode, \"counrtyValue.value\": districtNode.value, })\r\n        const districtID = districtNode.value;\r\n        this.selectedDistrict = Number.isNaN(districtID)? 0: Number(districtID);\r\n        this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n      };\r\n    });\r\n  }\r\n\r\n  private constituencyChanged(e: Event) {\r\n    // this.selectedRegion, this.selectedDistrict\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getClientSubscriptionMembershipSize() {\r\n    const _networkResponse = await GET_ClientSubsciptionMembershipSize<ClientSubscriptionMembershipSizeModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __membershipSizes.push({ id: 0, info: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientSubscriptionMembershipSizeModel[] = data.map(value => {\r\n          return csmsmConvert.toClientSubscriptionMembershipSizeModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __membershipSizes = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ClientSubscriptionMembershipSizeModel> = [];\r\n    new_data.push(...this._membershipSizes, ...__membershipSizes);\r\n    this._membershipSizes = new_data;\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationCountryModel> = [];\r\n    new_data.push(...this._countries, ...__countries);\r\n    this._countries = new_data;\r\n  }\r\n\r\n  private async getClientAccountCategory() {\r\n    const _networkResponse = await GET_ClientAccountCategory<ClientAccountCategoryModel>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __accountCategories: ClientAccountCategoryModel[] = [\r\n      {category: \"Select Account Type\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __accountCategories.push({ id: 0, category: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientAccountCategoryModel[] = data.map(value => {\r\n          return cacmConvert.toClientAccountCategoryModel(JSON.stringify(value))\r\n        });\r\n        DATA.push({ category: \"Other\", id: -1000 });\r\n        // console.log({DATA});\r\n        __accountCategories = [...__accountCategories, ...DATA];\r\n        // console.log({DATA, __accountCategories});\r\n      }\r\n    }\r\n    const new_data: Array<ClientAccountCategoryModel> = [];\r\n    new_data.push(...this._accountCategories, ...__accountCategories);\r\n    this._accountCategories = new_data;\r\n    // console.log({ \"this._accountCategories\": this._accountCategories });\r\n    // this._accountCategories = __accountCategories\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __regions = [...__regions, ...DATA];\r\n      }\r\n    }\r\n    const new_data: Array<LocationRegionModel> = [];\r\n    new_data.push(...this._regions, ...__regions);\r\n    this._regions = new_data;\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this._districts = [];\r\n    const identity = String(regionID),\r\n      _districtsMemo = this._districtsMemo;\r\n    // console.log({identity, _districtsMemo,})\r\n    if (identity in _districtsMemo) { // implementing memoization\r\n      // console.log({ \"_districtsMemo[identity]\": _districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationDistrictModel> = [];\r\n        new_data.push(...this._districts, ..._districtsMemo[identity]);\r\n        this._districts = new_data;\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __districts = [...__districts, ...DATA];\r\n          this._districtsMemo[identity] = __districts;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationDistrictModel> = [];\r\n      new_data.push(...this._districts, ...__districts);\r\n      this._districts = new_data;\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this._constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      _constituenciesMemo = this._constituenciesMemo;\r\n    if (identity in _constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationConstituencyModel> = [];\r\n        new_data.push(...this._constituencies, ..._constituenciesMemo[identity]);\r\n        this._constituencies = new_data;\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __constituencies = [...__constituencies, ...DATA];\r\n          this._constituenciesMemo[identity] = __constituencies;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationConstituencyModel> = [];\r\n      new_data.push(...this._constituencies, ...__constituencies);\r\n      this._constituencies = new_data;\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_ClientRegister();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_ClientSubsciptionMembershipSize<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/subscription/membership-size'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientAccountCategory<Type>(ID: Number = null,\r\n  url_params: string = \"\", anonymousAuth: boolean = false,) {\r\n  // anonymousAuth is for when user isn't logged in\r\n  const _get_cookie = anonymousAuth ? null : getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/account-category'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: anonymousAuth ? {} : {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { GetNetworkStatus } from \"@@addons/functions/https/network_status\";\r\nimport { setUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { userLoginInfo_S } from \"@@addons/interfaces/network_calls/login\";\r\nimport { removeActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport async function POST_ClientRegister(): Promise<any> {\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/register',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-register\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  GetNetworkStatus(online => {\r\n    // console.log({ \"networkStatus\": online });\r\n    // console.log({ \"networkStatus\": \"we are online\" });\r\n    return Swal.fire({\r\n      title: 'Create Client Account?',\r\n      // text: \"You won't be able to revert this!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      confirmButtonColor: '#f97817',\r\n      cancelButtonColor: '#ddd',\r\n      reverseButtons: true,\r\n      showLoaderOnConfirm: true,\r\n      backdrop: true,\r\n      preConfirm: async (register) => {\r\n        return await http(url, {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }, false).then((HTTP) => {\r\n\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n          const _RESPONSE = networkCallRes.response;\r\n          // console.log({\"_RESPONSE\": _RESPONSE});\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n\r\n                  errors.push(errormsg);\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        }).catch(error => {\r\n          Swal.showValidationMessage(\r\n            `${String(error)}`\r\n          );\r\n        });\r\n      },\r\n      allowOutsideClick: () => !Swal.isLoading()\r\n    }).then((result) => {\r\n      // console.log({result})\r\n      if (result.isConfirmed) {\r\n        let successMsg = \"Success\",\r\n          isSuccess = false,\r\n          data: any;\r\n        const _VALUE = result.value;\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          successMsg = \"Registration Successful\";\r\n\r\n          data = VALUE.data;\r\n          isSuccess = _VALUE.response.success;\r\n        }\r\n        isSuccess ? Swal.fire({\r\n          title: successMsg,\r\n          icon: isSuccess ? 'success' : 'error',\r\n          iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n          confirmButtonColor: '#f97817',\r\n        }) : null;\r\n        isSuccess ? setTimeout(() => {\r\n          const userLoginInfo = userLoginInfo_S(data);\r\n          setUserLoginInfoCookie(userLoginInfo);\r\n          removeActiveBranchIdCookie();\r\n          window.location.href = CONSTANTS.URLS.LOGIN_PAGE_BASE_URL;\r\n        }, 500) : null;\r\n      }\r\n    });\r\n  }, offline => {\r\n    // console.log({ \"networkStatus\": \"we are offline\" });\r\n    Swal.fire({\r\n      title: \"Looks like you're offline\",\r\n      text: \"Try again later!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      confirmButtonColor: '#f97817',\r\n    });\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","GetNetworkStatus","online","offline","navigator","onLine","showingCheckBoxes","labelTextShow","togglePswdVisibility","type","document","querySelectorAll","forEach","PSWD","i","parentElement","setAttribute","getAttribute","label","createElement","span","innerText","spanDummy","checkbox","id","appendChild","after","showingCheckBox","showing","elem","includes","push","addEventListener","__toggleVisibility","e","preventDefault","currentTarget","checked","userLoginInfo","setActiveBranchIdCookie","data","stringData","JSON","stringify","base64","removeActiveBranchIdCookie","getActiveBranchIdCookie","_cookie","parse","Number","name","String","accountId","GenericGenderInfo_S","GET_GenericGender","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","SwitchInput","selected","value","isSelected","this","render","switch","switchAction","switchActionEvent","target","input","createRenderRoot","styles","Boolean","Convert","static","json","transform","r","jsonToJSProps","jsToJSONProps","typ","undefined","jsonToJS","map","props","p","key","js","jsToJSON","val","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","PdbRegisterForm","constructor","super","showLeadersForm","regionCalled","selectedRegion","selectedDistrict","_genders","_countries","_accountCategories","_regions","_districts","_constituencies","_constituenciesMemo","_districtsMemo","_membershipSizes","connectedCallback","getGenders","getLocationCountry","getClientAccountCategory","getClientSubscriptionMembershipSize","disconnectedCallback","countries","country","regions","region","location","districts","district","constituencies","constituency","item","category","info","sectionSeparater","submitForm","text","addLeadersAction","_this","_switch","evt","show_leaders","show_hide_class","node","classList","remove","add","firstUpdated","onreadystatechange","event","readyState","countryChanged","regionChanged","districtChanged","constituencyChanged","accountCategoryChanged","accountCategoryNode","onchange","show_other_account_category","countryNode","show_ghana_locations","show_state_province","getLocationRegion","regionNode","regionID","getLocationDistrict","districtNode","districtID","getLocationConstituency","_networkResponse","__genders","response","success","new_data","ID","url_params","http","GET_ClientSubsciptionMembershipSize","__membershipSizes","__countries","code","short","DATA","anonymousAuth","GET_ClientAccountCategory","__accountCategories","__regions","identity","setTimeout","__districts","regionId","__constituencies","formContainer","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","register","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","window","href","POST_ClientRegister"],"sourceRoot":""}