{"version":3,"file":"../../production_public/assets/v2/prod-files/js/client/register.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/https/network_status.ts","webpack://webpackNumbers/./src/addons/functions/toggle_pswd_visibility/index.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/file-select.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/view/admin/client/index.ts","webpack://webpackNumbers/./src/addons/network/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/addons/network/clients/account_category/index.ts","webpack://webpackNumbers/./src/addons/network/clients/register/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const GetNetworkStatus = (\r\n  online: (status: string) => void,\r\n  offline: (status: string) => void) => {\r\n  if (navigator.onLine === true) {\r\n    return online(\"online\");\r\n  } else {\r\n    return offline(\"offline\");\r\n  }\r\n}\r\n\r\nexport const GetNetworkStatusEvent = (self: { dispatchEvent: (arg0: CustomEvent<{ onlineStatus: boolean; }>) => void; }) => {\r\n  let newMessage = new CustomEvent('get-online-status', {\r\n    cancelable: true,\r\n    detail: { onlineStatus: navigator.onLine }\r\n  });\r\n\r\n  // dispatchEvent(newMessage);\r\n  self.dispatchEvent(newMessage);\r\n}","import '@material/mwc-icon-button';\r\nimport { TextField } from '@material/mwc-textfield';\r\n\r\nlet showingCheckBoxes: { id: string, showing: boolean, elem: HTMLInputElement | TextField, span: HTMLSpanElement }[] = [];\r\nconst labelTextShow = \"Show Password\", labelTextHide = \"Hide Password\";\r\n\r\nexport const togglePswdVisibility = (type: \"mwc-textfield\" | \"input\" = \"input\") => {\r\n  const PSWDs = document.querySelectorAll(type + '[type=\"password\"]');\r\n  // console.log({ PSWDs });\r\n\r\n  PSWDs.forEach((PSWD: HTMLInputElement | TextField, i) => {\r\n    // console.log({ PSWD });\r\n    const parentElement = PSWD.parentElement;\r\n    parentElement.setAttribute('style', parentElement.getAttribute('style') + \"; flex-direction: column !important;\")\r\n    const label = document.createElement('label');\r\n    label.setAttribute('style', label.getAttribute('style') + \"; display: inline-flex;\" +\r\n      \"width: 100%; cursor: pointer; align-items: center; margin-top: 10px; margin-bottom: 0;\"\r\n    );\r\n\r\n    const span = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n    span.innerText = labelTextShow;\r\n\r\n    const spanDummy = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.id = \"pswd-visibility-btn--\" + i;\r\n    checkbox.setAttribute('style', checkbox.getAttribute('style') + \"; -moz-appearance: auto !important;\" +\r\n      \"-webkit-appearance: auto !important; -ms-appearance: auto !important; appearance: auto !important;\" +\r\n      \"opacity: 1; margin-right: 0; z-index: 10;\"\r\n    );\r\n\r\n    label.appendChild(spanDummy);\r\n    label.appendChild(checkbox);\r\n    label.appendChild(span);\r\n\r\n    PSWD.after(label);\r\n\r\n    const showingCheckBox = { id: checkbox.id, showing: false, elem: PSWD, span: span };\r\n    if (!showingCheckBoxes.includes(showingCheckBox)) {\r\n      showingCheckBoxes.push(showingCheckBox);\r\n    }\r\n    checkbox.addEventListener('change', __toggleVisibility)\r\n  });\r\n}\r\n\r\nconst __toggleVisibility = (e: { preventDefault: () => void; currentTarget: any; }) => {\r\n  e.preventDefault();\r\n  const checkbox: HTMLInputElement = e.currentTarget;\r\n  // console.log({ checkbox, e })\r\n  checkbox.checked\r\n  showingCheckBoxes.forEach(showingCheckBox => {\r\n    if (checkbox.id === showingCheckBox.id) {\r\n      if (showingCheckBox.showing === false) {\r\n        showingCheckBox.elem.type = \"text\";\r\n        showingCheckBox.span.innerText = labelTextHide;\r\n        showingCheckBox.showing = true;\r\n      } else {\r\n        showingCheckBox.elem.type = \"password\";\r\n        showingCheckBox.span.innerText = labelTextShow;\r\n        showingCheckBox.showing = false;\r\n      }\r\n      // console.log({ showingCheckBox, button });\r\n    }\r\n  });\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-button';\r\nimport '../../../../assets/styles/views/widget/file_input/file_input.scss';\r\n\r\n\r\n@customElement('file-input')\r\nexport class FileInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: String })\r\n  public accept: string = \"*\";\r\n\r\n  @property({ type: Number })\r\n  private randomID: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: String })\r\n  public id: string = this.id + \"_\" + this.randomID;\r\n\r\n  @property({ type: Boolean })\r\n  public required?: boolean;\r\n\r\n  @property({ type: Boolean })\r\n  public hasLabel?: boolean;\r\n\r\n  @property({ type: Boolean })\r\n  /** For multiple image selection */\r\n  public multiple?: boolean;\r\n\r\n  private fileSelector: HTMLInputElement;\r\n\r\n  @property({ type: Number })\r\n  public startNumber: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public rowsPerPage: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public totalShowing: number = 10;\r\n\r\n  @property({ type: Boolean })\r\n  private showSelectorLoaded?: boolean = false;\r\n\r\n  styles() {\r\n    return [\r\n      css`\r\n      #${Number(this.id)} {\r\n        width: 1px !important;\r\n        height: 1px !important;\r\n        position: absolute !important;\r\n      }\r\n      `\r\n    ];\r\n  }\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    setInterval(() => {\r\n      if (this.fileSelector === undefined) {\r\n        // console.log({ \"this.fileSelector\": this.fileSelector });\r\n        this.fileSelector = this.querySelector(`[type=\"file\"][name=\"${this.name}\"][id=\"${this.id}\"]`);\r\n      } else {\r\n        this.showFileSelector();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.required) {\r\n      if (this.multiple) {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}*</label>`: nothing}\r\n            <input accept=\"${this.accept}\" class=\"form-input\" type=\"file\" name=\"${this.name}[]\" id=\"${this.id}\" multiple required />\r\n          </div>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}*</label>`: nothing}\r\n            <input accept=\"${this.accept}\" class=\"form-input\" type=\"file\" name=\"${this.name}\" id=\"${this.id}\" required />\r\n          </div>\r\n        `;\r\n      }\r\n    } else {\r\n      if (this.multiple) {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}</label>`: nothing}\r\n            <input accept=\"${this.accept}\" type=\"file\" name=\"${this.name}[]\" id=\"${this.id}\" multiple />\r\n          </div>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <div class=\"form-input border\">\r\n            ${this.hasLabel? html`<label for=\"${this.id}\" class=\"w-full text-sm pb-2 text-gray-500\">${this.label}</label>`: nothing}\r\n            <input accept=\"${this.accept}\" type=\"file\" name=\"${this.name}\" id=\"${this.id}\" />\r\n          </div>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n  }\r\n\r\n  private showFileSelector() {\r\n    if (this.showSelectorLoaded === false) {\r\n      this.showSelectorLoaded = true;\r\n\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","// To parse this data:\n//\n//   import { Convert, ClientSubscriptionMembershipSizeModel } from \"./file\";\n//\n//   const clientSubscriptionMembershipSizeModel = Convert.toClientSubscriptionMembershipSizeModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientSubscriptionMembershipSizeModel {\n    id?:          number;\n    info?:        string;\n    cost?:        string;\n    type?:        number;\n    client?:      number;\n    accountType?: number;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toClientSubscriptionMembershipSizeModel(json: string): ClientSubscriptionMembershipSizeModel {\n        return cast(JSON.parse(json), r(\"ClientSubscriptionMembershipSizeModel\"));\n    }\n\n    public static clientSubscriptionMembershipSizeModelToJson(value: ClientSubscriptionMembershipSizeModel): string {\n        return JSON.stringify(uncast(value, r(\"ClientSubscriptionMembershipSizeModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"ClientSubscriptionMembershipSizeModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"info\", js: \"info\", typ: u(null, \"\") },\n        { json: \"cost\", js: \"cost\", typ: u(null, \"\") },\n        { json: \"type\", js: \"type\", typ: u(null, 0) },\n        { json: \"client\", js: \"client\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n    ], false),\n};\n","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { togglePswdVisibility } from '@@addons/functions/toggle_pswd_visibility';\r\nimport { POST_ClientRegister } from '@@addons/network/clients/register';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from \"@@addons/interfaces/generic/gender\";\r\nimport { GET_GenericGender } from \"@@addons/network/generic/gender\";\r\nimport { GET_ClientSubsciptionMembershipSize } from \"@@addons/network/clients/subscription/membership_size\";\r\nimport { ClientSubscriptionMembershipSizeModel, Convert as csmsmConvert } from \"@@addons/interfaces/clients/subscription/membership_size\";\r\nimport { LocationCountryModel, Convert as lcmConvert } from \"@@addons/interfaces/location/country_model\";\r\nimport { LocationRegionModel, Convert as lrmConvert } from \"@@addons/interfaces/location/region_model\";\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from \"@@addons/interfaces/location/constituency_model\";\r\nimport { LocationDistrictModel, Convert as ldmConvert } from \"@@addons/interfaces/location/district_model\";\r\nimport { GET_LocationCountry } from \"@@addons/network/location/country\";\r\nimport { GET_LocationRegion } from \"@@addons/network/location/region\";\r\nimport { GET_LocationDistrictFilter } from \"@@addons/network/location/district/filter\";\r\nimport { GET_LocationConstituencyFilter } from \"@@addons/network/location/constituency/filter\";\r\nimport { ClientAccountCategoryModel, Convert as cacmConvert } from \"@@addons/interfaces/clients/account_category\";\r\nimport { GET_ClientAccountCategory } from \"@@addons/network/clients/account_category\";\r\n\r\n@customElement('pdb-register-form')\r\nexport class PdbRegisterForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private showLeadersForm: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _accountCategories: ClientAccountCategoryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private _constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private _districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n\r\n  @property({ type: Array })\r\n  private _membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await this.getGenders();\r\n    await this.getLocationCountry();\r\n    await this.getClientAccountCategory();\r\n    await this.getClientSubscriptionMembershipSize();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n    :host { display: block; }\r\n    input[type=\"text\"], input[type=\"password\"], \r\n    input[type=\"email\"], input[type=\"phone\"], \r\n    select, span.select2.select2-container, \r\n    span.select2-selection.select2-selection--single.form-control.p-0, \r\n    textarea {\r\n      background: none!important;\r\n      padding: unset!important;\r\n    }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const countries: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._countries.map((country) => {\r\n      return {\r\n        id: country.id, name: country.name,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const regions: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._regions.map((region) => {\r\n      return {\r\n        id: region.id, name: region.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const districts: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._districts.map((district) => {\r\n      return {\r\n        id: district.id, name: district.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    const constituencies: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._constituencies.map((constituency) => {\r\n      return {\r\n        id: constituency.id, name: constituency.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    // console.log({\"this._accountCategories\": this._accountCategories});\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">New Client Account</h1>\r\n                  <h3 class=\"h3\">Create New Client Account!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-register\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Name</h4>\r\n                    <mwc-textfield name=\"name\" type=\"text\" class=\"w-full\" id=\"name\" value=\"\" label=\"Enter Organization Name\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Account Category</h4>\r\n                    <mwc-select name=\"accountCategory\" id=\"accountCategory\" label=\"Select Account Category\" outlined required>\r\n                      ${this._accountCategories.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.category}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_other_account_category>\r\n                    <h4 class=\"font-semibold my-2\">Enter Other Account Category</h4>\r\n                    <mwc-textfield name=\"accountCategoryOther\" type=\"text\" class=\"w-full\" id=\"accountCategoryOther\" value=\"\" label=\"Enter Other Account Category\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Membership Size</h4>\r\n                    <mwc-select name=\"membership_size\" id=\"membership_size\" label=\"Select Membership Size\" outlined required>\r\n                      ${this._membershipSizes.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.info}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Add Organization Logo <span class=\"text-yellow-600\">(optional)</span></h4>\r\n                    <file-input id=\"logo\" name=\"logo\" label=\"Add Organization Logo\" ></file-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Website <span class=\"text-yellow-600\">(Optional)</span></h4>\r\n                    <mwc-textfield name=\"website\" type=\"url\" class=\"w-full\" id=\"website\" value=\"\" label=\"Enter Organization Website (Optional)\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n                    <!--<mwc-select name=\"country\" id=\"country\" label=\"Select Country\" outlined required>\r\n                      ${this._countries.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select> -->\r\n                    <select-input name=\"country\" id=\"country\" label=\"Select Country\" .options=\"${countries}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_state_province>\r\n                    <h4 class=\"font-semibold my-2\">Enter State/ Province</h4>\r\n                    <mwc-textfield name=\"stateProvince\" type=\"text\" class=\"w-full\" id=\"stateProvince\" value=\"\" label=\"Enter State/ Province\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n                    <select-input name=\"region\" id=\"region\" label=\"Select Region\" .options=\"${regions}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select District</h4>\r\n                    <select-input name=\"district\" id=\"district\" label=\"Select District\" .options=\"${districts}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n                    <select-input name=\"constituency\" id=\"constituency\" label=\"Select Constituency\" .options=\"${constituencies}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Enter Community</h4>\r\n                    <mwc-textfield name=\"community\" type=\"text\" class=\"w-full\" id=\"community\" value=\"\" label=\"Enter Community\" outlined>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Applicant Info\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Firstname</h4>\r\n                    <mwc-textfield name=\"firstname\" type=\"text\" class=\"w-full\" id=\"firstname\" value=\"\" label=\"Enter Applicant Firstname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Surname</h4>\r\n                    <mwc-textfield name=\"surname\" type=\"text\" class=\"w-full\" id=\"surname\" value=\"\" label=\"Enter Applicant Surname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n                    <mwc-select name=\"gender\" id=\"gender\" label=\"Select Gender\" outlined required>\r\n                      ${this._genders.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter E-mail Address</h4>\r\n                    <mwc-textfield name=\"email\" type=\"email\" class=\"w-full\" id=\"email\" value=\"\" label=\"Enter E-mail Address\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Phone Number</h4>\r\n                    <mwc-textfield name=\"phone\" type=\"tel\" class=\"w-full\" id=\"phone\" value=\"\" label=\"Enter Phone Number\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Leaders\")}\r\n                    <h4 class=\"font-semibold my-2\">Add Leaders?</h4> \r\n                    <switch-input name=\"addLeaders\" class=\"w-full\" id=\"addLeaders\" ?isSelected=\"${this.showLeadersForm}\" label=\"Add Leaders?\" outlined>\r\n                    </switch-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_1_name\" id=\"leader_1_name\" label=\"Leader 1 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Contact</h4>\r\n                    <mwc-textfield name=\"leader_1_contact\" id=\"leader_1_contact\" label=\"Leader 1 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_1_email\" id=\"leader_1_email\" label=\"Leader 1 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_2_name\" id=\"leader_2_name\" label=\"Leader 2 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Contact</h4>\r\n                    <mwc-textfield name=\"leader_2_contact\" id=\"leader_2_contact\" label=\"Leader 2 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_2_email\" id=\"leader_2_email\" label=\"Leader 2 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                    <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_3_name\" id=\"leader_3_name\" label=\"Leader 3 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Contact</h4>\r\n                    <mwc-textfield name=\"leader_3_contact\" id=\"leader_3_contact\" label=\"Leader 3 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_3_email\" id=\"leader_3_email\" label=\"Leader 3 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Set Password\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Password</h4>\r\n                    <mwc-textfield name=\"password\" id=\"password\" label=\"Enter Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Confirm Password</h4>\r\n                    <mwc-textfield name=\"confirm_password\" id=\"confirm_password\" label=\"Confirm Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n      \r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Register\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private sectionSeparater(text: string) {\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n        <div class=\"flex form-input-container items-center text-center\">\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n          <label class=\"block font-bold text-sm text-gray-600 w-full my-0\">\r\n            ${text}\r\n          </label>\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private addLeadersAction() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"addLeaders\"]').forEach((_switch) => {\r\n      _switch.addEventListener(\"click\", (evt) => {\r\n        // @ts-ignore \r\n        _this.showLeadersForm = _switch.isSelected;\r\n        const show_leaders = this.querySelectorAll('[show_leaders]'),\r\n          show_hide_class = \"hidden\";\r\n        if (_this.showLeadersForm) {\r\n          show_leaders.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_leaders.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    togglePswdVisibility();\r\n    togglePswdVisibility(\"mwc-textfield\");\r\n    document.onreadystatechange = (event)=> {\r\n      // console.log({ \"document.readyState\": document.readyState })\r\n      if (document.readyState == \"complete\") this.countryChanged(event);\r\n      if (document.readyState == \"complete\") this.regionChanged(event);\r\n      if (document.readyState == \"complete\") this.districtChanged(event);\r\n      if (document.readyState == \"complete\") this.constituencyChanged(event);\r\n      if (document.readyState == \"complete\") this.accountCategoryChanged(event);\r\n    }  \r\n    this.addLeadersAction();  \r\n  }\r\n\r\n  private accountCategoryChanged(e: any) {\r\n    // console.log(e)\r\n    const accountCategoryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-select[name=\"accountCategory\"]');\r\n    // console.log({ \"accountCategoryNodes\": accountCategoryNodes })\r\n    accountCategoryNodes.forEach(accountCategoryNode => {\r\n      // console.log({ \"accountCategoryNode\": accountCategoryNode })\r\n      // console.log({ \"accountCategoryNodes.currentValue\": accountCategoryNodes.getAttribute(\"currentValue\") })\r\n      accountCategoryNode.onchange = async (event) => {\r\n        // console.log({ event, })\r\n        const show_other_account_category = this.querySelectorAll('[show_other_account_category]'),\r\n          show_hide_class = \"hidden\";\r\n        if (accountCategoryNode.value === \"-1000\") {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private countryChanged(e: any) {\r\n    // console.log(e)\r\n    const countryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"country\"]');\r\n    countryNodes.forEach(countryNode => {\r\n      // console.log({ \"countryNode\": countryNode })\r\n      // console.log({ \"countryNode.currentValue\": countryNode.getAttribute(\"currentValue\") })\r\n      countryNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": countryNode, \"counrtyValue.value\": countryNode.value, })\r\n        const show_ghana_locations = this.querySelectorAll('[show_ghana_locations]'),\r\n          show_state_province = this.querySelectorAll('[show_state_province]'),\r\n          show_hide_class = \"hidden\";\r\n        if (countryNode.value === \"76\") {\r\n          if (this.regionCalled === false) await this.getLocationRegion();\r\n          this.regionCalled = true;\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        } else {\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    const regionNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"region\"]');\r\n    regionNodes.forEach(regionNode => {\r\n      // console.log({ \"regionNode\": regionNode })\r\n      // console.log({ \"regionNode.currentValue\": regionNode.getAttribute(\"currentValue\") })\r\n      regionNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": regionNode, \"counrtyValue.value\": regionNode.value, })\r\n        const regionID = regionNode.value;\r\n        this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n        // console.log({regionID, \"this.selectedRegion\": this.selectedRegion})\r\n        this.getLocationDistrict(this.selectedRegion);\r\n      };\r\n    });\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    const districtNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"district\"]');\r\n    districtNodes.forEach(districtNode => {\r\n      // console.log({ \"districtNode\": districtNode })\r\n      // console.log({ \"districtNode.currentValue\": districtNode.getAttribute(\"currentValue\") })\r\n      districtNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": districtNode, \"counrtyValue.value\": districtNode.value, })\r\n        const districtID = districtNode.value;\r\n        this.selectedDistrict = Number.isNaN(districtID)? 0: Number(districtID);\r\n        this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n      };\r\n    });\r\n  }\r\n\r\n  private constituencyChanged(e: Event) {\r\n    // this.selectedRegion, this.selectedDistrict\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getClientSubscriptionMembershipSize() {\r\n    const _networkResponse = await GET_ClientSubsciptionMembershipSize<ClientSubscriptionMembershipSizeModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __membershipSizes.push({ id: 0, info: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientSubscriptionMembershipSizeModel[] = data.map(value => {\r\n          return csmsmConvert.toClientSubscriptionMembershipSizeModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __membershipSizes = DATA;\r\n      }\r\n    }\r\n\r\n    const new_data: Array<ClientSubscriptionMembershipSizeModel> = [];\r\n    new_data.push(...this._membershipSizes, ...__membershipSizes);\r\n    this._membershipSizes = new_data;\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n\r\n    const new_data: Array<LocationCountryModel> = [];\r\n    new_data.push(...this._countries, ...__countries);\r\n    this._countries = new_data;\r\n  }\r\n\r\n  private async getClientAccountCategory() {\r\n    const _networkResponse = await GET_ClientAccountCategory<ClientAccountCategoryModel>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __accountCategories: ClientAccountCategoryModel[] = [\r\n      {category: \"Select Account Type\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __accountCategories.push({ id: 0, category: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientAccountCategoryModel[] = data.map(value => {\r\n          return cacmConvert.toClientAccountCategoryModel(JSON.stringify(value))\r\n        });\r\n        DATA.push({ category: \"Other\", id: -1000 });\r\n        // console.log({DATA});\r\n        __accountCategories = [...__accountCategories, ...DATA];\r\n        // console.log({DATA, __accountCategories});\r\n      }\r\n    }\r\n    const new_data: Array<ClientAccountCategoryModel> = [];\r\n    new_data.push(...this._accountCategories, ...__accountCategories);\r\n    this._accountCategories = new_data;\r\n    // console.log({ \"this._accountCategories\": this._accountCategories });\r\n    // this._accountCategories = __accountCategories\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __regions = [...__regions, ...DATA];\r\n      }\r\n    }\r\n    const new_data: Array<LocationRegionModel> = [];\r\n    new_data.push(...this._regions, ...__regions);\r\n    this._regions = new_data;\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this._districts = [];\r\n    const identity = String(regionID),\r\n      _districtsMemo = this._districtsMemo;\r\n    // console.log({identity, _districtsMemo,})\r\n    if (identity in _districtsMemo) { // implementing memoization\r\n      // console.log({ \"_districtsMemo[identity]\": _districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationDistrictModel> = [];\r\n        new_data.push(...this._districts, ..._districtsMemo[identity]);\r\n        this._districts = new_data;\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __districts = [...__districts, ...DATA];\r\n          this._districtsMemo[identity] = __districts;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationDistrictModel> = [];\r\n      new_data.push(...this._districts, ...__districts);\r\n      this._districts = new_data;\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this._constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      _constituenciesMemo = this._constituenciesMemo;\r\n    if (identity in _constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        const new_data: Array<LocationConstituencyModel> = [];\r\n        new_data.push(...this._constituencies, ..._constituenciesMemo[identity]);\r\n        this._constituencies = new_data;\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __constituencies = [...__constituencies, ...DATA];\r\n          this._constituenciesMemo[identity] = __constituencies;\r\n        }\r\n      }\r\n\r\n      const new_data: Array<LocationConstituencyModel> = [];\r\n      new_data.push(...this._constituencies, ...__constituencies);\r\n      this._constituencies = new_data;\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_ClientRegister();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_ClientSubsciptionMembershipSize<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/subscription/membership-size'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientAccountCategory<Type>(ID: Number = null,\r\n  url_params: string = \"\", anonymousAuth: boolean = false,) {\r\n  // anonymousAuth is for when user isn't logged in\r\n  const _get_cookie = anonymousAuth ? null : getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/account-category'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: anonymousAuth ? {} : {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { GetNetworkStatus } from \"@@addons/functions/https/network_status\";\r\nimport { setUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { userLoginInfo_S } from \"@@addons/interfaces/network_calls/login\";\r\nimport { removeActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport async function POST_ClientRegister(): Promise<any> {\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/register',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-register\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  GetNetworkStatus(online => {\r\n    // console.log({ \"networkStatus\": online });\r\n    // console.log({ \"networkStatus\": \"we are online\" });\r\n    return Swal.fire({\r\n      title: 'Create Client Account?',\r\n      // text: \"You won't be able to revert this!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      confirmButtonColor: '#f97817',\r\n      cancelButtonColor: '#ddd',\r\n      reverseButtons: true,\r\n      showLoaderOnConfirm: true,\r\n      backdrop: true,\r\n      preConfirm: async (register) => {\r\n        return await http(url, {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }, false).then((HTTP) => {\r\n\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n          const _RESPONSE = networkCallRes.response;\r\n          // console.log({\"_RESPONSE\": _RESPONSE});\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n\r\n                  errors.push(errormsg);\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        }).catch(error => {\r\n          Swal.showValidationMessage(\r\n            `${String(error)}`\r\n          );\r\n        });\r\n      },\r\n      allowOutsideClick: () => !Swal.isLoading()\r\n    }).then((result) => {\r\n      // console.log({result})\r\n      if (result.isConfirmed) {\r\n        let successMsg = \"Success\",\r\n          isSuccess = false,\r\n          data: any;\r\n        const _VALUE = result.value;\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          successMsg = \"Registration Successful\";\r\n\r\n          data = VALUE.data;\r\n          isSuccess = _VALUE.response.success;\r\n        }\r\n        isSuccess ? Swal.fire({\r\n          title: successMsg,\r\n          icon: isSuccess ? 'success' : 'error',\r\n          iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n          confirmButtonColor: '#f97817',\r\n        }) : null;\r\n        isSuccess ? setTimeout(() => {\r\n          const userLoginInfo = userLoginInfo_S(data);\r\n          setUserLoginInfoCookie(userLoginInfo);\r\n          removeActiveBranchIdCookie();\r\n          window.location.href = CONSTANTS.URLS.LOGIN_PAGE_BASE_URL;\r\n        }, 500) : null;\r\n      }\r\n    });\r\n  }, offline => {\r\n    // console.log({ \"networkStatus\": \"we are offline\" });\r\n    Swal.fire({\r\n      title: \"Looks like you're offline\",\r\n      text: \"Try again later!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      confirmButtonColor: '#f97817',\r\n    });\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","GetNetworkStatus","online","offline","navigator","onLine","showingCheckBoxes","labelTextShow","togglePswdVisibility","type","document","querySelectorAll","PSWD","i","parentElement","setAttribute","getAttribute","label","createElement","span","innerText","spanDummy","checkbox","id","appendChild","after","showingCheckBox","showing","elem","includes","push","addEventListener","__toggleVisibility","e","preventDefault","currentTarget","checked","userLoginInfo","setActiveBranchIdCookie","stringData","JSON","stringify","base64","removeActiveBranchIdCookie","getActiveBranchIdCookie","_cookie","parse","Number","name","String","accountId","GenericGenderInfo_S","GET_GenericGender","_get_cookie","url","HTTP","method","headers","Authorization","token","console","errorHttp","FileInput","value","accept","randomID","Math","floor","random","this","startNumber","rowsPerPage","totalShowing","showSelectorLoaded","styles","connectedCallback","super","setInterval","undefined","fileSelector","querySelector","showFileSelector","render","required","multiple","hasLabel","firstUpdated","createRenderRoot","Boolean","SwitchInput","selected","isSelected","switch","switchAction","switchActionEvent","target","input","Convert","static","json","transform","r","jsonToJSProps","jsToJSONProps","typ","jsonToJS","map","props","p","key","js","jsToJSON","val","getProps","ref","typeMap","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","PdbRegisterForm","constructor","showLeadersForm","regionCalled","selectedRegion","selectedDistrict","_genders","_countries","_accountCategories","_regions","_districts","_constituencies","_constituenciesMemo","_districtsMemo","_membershipSizes","getGenders","getLocationCountry","getClientAccountCategory","getClientSubscriptionMembershipSize","disconnectedCallback","countries","country","regions","region","location","districts","district","constituencies","constituency","item","category","info","sectionSeparater","submitForm","text","addLeadersAction","_this","_switch","evt","show_leaders","show_hide_class","node","classList","remove","add","onreadystatechange","event","readyState","countryChanged","regionChanged","districtChanged","constituencyChanged","accountCategoryChanged","accountCategoryNode","onchange","show_other_account_category","countryNode","show_ghana_locations","show_state_province","getLocationRegion","regionNode","regionID","getLocationDistrict","districtNode","districtID","getLocationConstituency","_networkResponse","__genders","response","success","new_data","ID","url_params","http","GET_ClientSubsciptionMembershipSize","__membershipSizes","__countries","code","short","DATA","anonymousAuth","GET_ClientAccountCategory","__accountCategories","__regions","identity","setTimeout","__districts","regionId","__constituencies","formContainer","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","register","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","catch","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","window","href","POST_ClientRegister"],"sourceRoot":""}